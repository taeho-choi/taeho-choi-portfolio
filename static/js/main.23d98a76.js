/*! For license information please see main.23d98a76.js.LICENSE.txt */
!(function () {
  var e = {
      7757: function (e, t, n) {
        e.exports = n(9727);
      },
      1694: function (e, t) {
        var n;
        !(function () {
          "use strict";
          var r = {}.hasOwnProperty;
          function i() {
            for (var e = [], t = 0; t < arguments.length; t++) {
              var n = arguments[t];
              if (n) {
                var a = typeof n;
                if ("string" === a || "number" === a) e.push(n);
                else if (Array.isArray(n)) {
                  if (n.length) {
                    var o = i.apply(null, n);
                    o && e.push(o);
                  }
                } else if ("object" === a)
                  if (n.toString === Object.prototype.toString)
                    for (var s in n) r.call(n, s) && n[s] && e.push(s);
                  else e.push(n.toString());
              }
            }
            return e.join(" ");
          }
          e.exports
            ? ((i.default = i), (e.exports = i))
            : void 0 ===
                (n = function () {
                  return i;
                }.apply(t, [])) || (e.exports = n);
        })();
      },
      7494: function (e) {
        function t(e, t, n) {
          var r, i, a, o, s;
          function l() {
            var u = Date.now() - o;
            u < t && u >= 0
              ? (r = setTimeout(l, t - u))
              : ((r = null), n || ((s = e.apply(a, i)), (a = i = null)));
          }
          null == t && (t = 100);
          var u = function () {
            (a = this), (i = arguments), (o = Date.now());
            var u = n && !r;
            return (
              r || (r = setTimeout(l, t)),
              u && ((s = e.apply(a, i)), (a = i = null)),
              s
            );
          };
          return (
            (u.clear = function () {
              r && (clearTimeout(r), (r = null));
            }),
            (u.flush = function () {
              r &&
                ((s = e.apply(a, i)),
                (a = i = null),
                clearTimeout(r),
                (r = null));
            }),
            u
          );
        }
        (t.debounce = t), (e.exports = t);
      },
      2244: function (e, t, n) {
        var r = n(7447),
          i = n(8051).each;
        function a(e, t) {
          (this.query = e),
            (this.isUnconditional = t),
            (this.handlers = []),
            (this.mql = window.matchMedia(e));
          var n = this;
          (this.listener = function (e) {
            (n.mql = e.currentTarget || e), n.assess();
          }),
            this.mql.addListener(this.listener);
        }
        (a.prototype = {
          constuctor: a,
          addHandler: function (e) {
            var t = new r(e);
            this.handlers.push(t), this.matches() && t.on();
          },
          removeHandler: function (e) {
            var t = this.handlers;
            i(t, function (n, r) {
              if (n.equals(e)) return n.destroy(), !t.splice(r, 1);
            });
          },
          matches: function () {
            return this.mql.matches || this.isUnconditional;
          },
          clear: function () {
            i(this.handlers, function (e) {
              e.destroy();
            }),
              this.mql.removeListener(this.listener),
              (this.handlers.length = 0);
          },
          assess: function () {
            var e = this.matches() ? "on" : "off";
            i(this.handlers, function (t) {
              t[e]();
            });
          },
        }),
          (e.exports = a);
      },
      4e3: function (e, t, n) {
        var r = n(2244),
          i = n(8051),
          a = i.each,
          o = i.isFunction,
          s = i.isArray;
        function l() {
          if (!window.matchMedia)
            throw new Error(
              "matchMedia not present, legacy browsers require a polyfill"
            );
          (this.queries = {}),
            (this.browserIsIncapable = !window.matchMedia("only all").matches);
        }
        (l.prototype = {
          constructor: l,
          register: function (e, t, n) {
            var i = this.queries,
              l = n && this.browserIsIncapable;
            return (
              i[e] || (i[e] = new r(e, l)),
              o(t) && (t = { match: t }),
              s(t) || (t = [t]),
              a(t, function (t) {
                o(t) && (t = { match: t }), i[e].addHandler(t);
              }),
              this
            );
          },
          unregister: function (e, t) {
            var n = this.queries[e];
            return (
              n &&
                (t ? n.removeHandler(t) : (n.clear(), delete this.queries[e])),
              this
            );
          },
        }),
          (e.exports = l);
      },
      7447: function (e) {
        function t(e) {
          (this.options = e), !e.deferSetup && this.setup();
        }
        (t.prototype = {
          constructor: t,
          setup: function () {
            this.options.setup && this.options.setup(), (this.initialised = !0);
          },
          on: function () {
            !this.initialised && this.setup(),
              this.options.match && this.options.match();
          },
          off: function () {
            this.options.unmatch && this.options.unmatch();
          },
          destroy: function () {
            this.options.destroy ? this.options.destroy() : this.off();
          },
          equals: function (e) {
            return this.options === e || this.options.match === e;
          },
        }),
          (e.exports = t);
      },
      8051: function (e) {
        e.exports = {
          isFunction: function (e) {
            return "function" === typeof e;
          },
          isArray: function (e) {
            return "[object Array]" === Object.prototype.toString.apply(e);
          },
          each: function (e, t) {
            for (var n = 0, r = e.length; n < r && !1 !== t(e[n], n); n++);
          },
        };
      },
      8153: function (e, t, n) {
        var r = n(4e3);
        e.exports = new r();
      },
      2110: function (e, t, n) {
        "use strict";
        var r = n(8309),
          i = {
            childContextTypes: !0,
            contextType: !0,
            contextTypes: !0,
            defaultProps: !0,
            displayName: !0,
            getDefaultProps: !0,
            getDerivedStateFromError: !0,
            getDerivedStateFromProps: !0,
            mixins: !0,
            propTypes: !0,
            type: !0,
          },
          a = {
            name: !0,
            length: !0,
            prototype: !0,
            caller: !0,
            callee: !0,
            arguments: !0,
            arity: !0,
          },
          o = {
            $$typeof: !0,
            compare: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0,
            type: !0,
          },
          s = {};
        function l(e) {
          return r.isMemo(e) ? o : s[e.$$typeof] || i;
        }
        (s[r.ForwardRef] = {
          $$typeof: !0,
          render: !0,
          defaultProps: !0,
          displayName: !0,
          propTypes: !0,
        }),
          (s[r.Memo] = o);
        var u = Object.defineProperty,
          c = Object.getOwnPropertyNames,
          f = Object.getOwnPropertySymbols,
          d = Object.getOwnPropertyDescriptor,
          h = Object.getPrototypeOf,
          p = Object.prototype;
        e.exports = function e(t, n, r) {
          if ("string" !== typeof n) {
            if (p) {
              var i = h(n);
              i && i !== p && e(t, i, r);
            }
            var o = c(n);
            f && (o = o.concat(f(n)));
            for (var s = l(t), v = l(n), m = 0; m < o.length; ++m) {
              var g = o[m];
              if (!a[g] && (!r || !r[g]) && (!v || !v[g]) && (!s || !s[g])) {
                var y = d(n, g);
                try {
                  u(t, g, y);
                } catch (b) {}
              }
            }
          }
          return t;
        };
      },
      746: function (e, t) {
        "use strict";
        var n = "function" === typeof Symbol && Symbol.for,
          r = n ? Symbol.for("react.element") : 60103,
          i = n ? Symbol.for("react.portal") : 60106,
          a = n ? Symbol.for("react.fragment") : 60107,
          o = n ? Symbol.for("react.strict_mode") : 60108,
          s = n ? Symbol.for("react.profiler") : 60114,
          l = n ? Symbol.for("react.provider") : 60109,
          u = n ? Symbol.for("react.context") : 60110,
          c = n ? Symbol.for("react.async_mode") : 60111,
          f = n ? Symbol.for("react.concurrent_mode") : 60111,
          d = n ? Symbol.for("react.forward_ref") : 60112,
          h = n ? Symbol.for("react.suspense") : 60113,
          p = n ? Symbol.for("react.suspense_list") : 60120,
          v = n ? Symbol.for("react.memo") : 60115,
          m = n ? Symbol.for("react.lazy") : 60116,
          g = n ? Symbol.for("react.block") : 60121,
          y = n ? Symbol.for("react.fundamental") : 60117,
          b = n ? Symbol.for("react.responder") : 60118,
          x = n ? Symbol.for("react.scope") : 60119;
        function w(e) {
          if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
              case r:
                switch ((e = e.type)) {
                  case c:
                  case f:
                  case a:
                  case s:
                  case o:
                  case h:
                    return e;
                  default:
                    switch ((e = e && e.$$typeof)) {
                      case u:
                      case d:
                      case m:
                      case v:
                      case l:
                        return e;
                      default:
                        return t;
                    }
                }
              case i:
                return t;
            }
          }
        }
        function _(e) {
          return w(e) === f;
        }
        (t.AsyncMode = c),
          (t.ConcurrentMode = f),
          (t.ContextConsumer = u),
          (t.ContextProvider = l),
          (t.Element = r),
          (t.ForwardRef = d),
          (t.Fragment = a),
          (t.Lazy = m),
          (t.Memo = v),
          (t.Portal = i),
          (t.Profiler = s),
          (t.StrictMode = o),
          (t.Suspense = h),
          (t.isAsyncMode = function (e) {
            return _(e) || w(e) === c;
          }),
          (t.isConcurrentMode = _),
          (t.isContextConsumer = function (e) {
            return w(e) === u;
          }),
          (t.isContextProvider = function (e) {
            return w(e) === l;
          }),
          (t.isElement = function (e) {
            return "object" === typeof e && null !== e && e.$$typeof === r;
          }),
          (t.isForwardRef = function (e) {
            return w(e) === d;
          }),
          (t.isFragment = function (e) {
            return w(e) === a;
          }),
          (t.isLazy = function (e) {
            return w(e) === m;
          }),
          (t.isMemo = function (e) {
            return w(e) === v;
          }),
          (t.isPortal = function (e) {
            return w(e) === i;
          }),
          (t.isProfiler = function (e) {
            return w(e) === s;
          }),
          (t.isStrictMode = function (e) {
            return w(e) === o;
          }),
          (t.isSuspense = function (e) {
            return w(e) === h;
          }),
          (t.isValidElementType = function (e) {
            return (
              "string" === typeof e ||
              "function" === typeof e ||
              e === a ||
              e === f ||
              e === s ||
              e === o ||
              e === h ||
              e === p ||
              ("object" === typeof e &&
                null !== e &&
                (e.$$typeof === m ||
                  e.$$typeof === v ||
                  e.$$typeof === l ||
                  e.$$typeof === u ||
                  e.$$typeof === d ||
                  e.$$typeof === y ||
                  e.$$typeof === b ||
                  e.$$typeof === x ||
                  e.$$typeof === g))
            );
          }),
          (t.typeOf = w);
      },
      8309: function (e, t, n) {
        "use strict";
        e.exports = n(746);
      },
      5477: function (e, t, n) {
        var r = n(2806),
          i = function (e) {
            var t = "",
              n = Object.keys(e);
            return (
              n.forEach(function (i, a) {
                var o = e[i];
                (function (e) {
                  return /[height|width]$/.test(e);
                })((i = r(i))) &&
                  "number" === typeof o &&
                  (o += "px"),
                  (t +=
                    !0 === o
                      ? i
                      : !1 === o
                      ? "not " + i
                      : "(" + i + ": " + o + ")"),
                  a < n.length - 1 && (t += " and ");
              }),
              t
            );
          };
        e.exports = function (e) {
          var t = "";
          return "string" === typeof e
            ? e
            : e instanceof Array
            ? (e.forEach(function (n, r) {
                (t += i(n)), r < e.length - 1 && (t += ", ");
              }),
              t)
            : i(e);
        };
      },
      5095: function (e, t, n) {
        var r = /^\s+|\s+$/g,
          i = /^[-+]0x[0-9a-f]+$/i,
          a = /^0b[01]+$/i,
          o = /^0o[0-7]+$/i,
          s = parseInt,
          l = "object" == typeof n.g && n.g && n.g.Object === Object && n.g,
          u = "object" == typeof self && self && self.Object === Object && self,
          c = l || u || Function("return this")(),
          f = Object.prototype.toString,
          d = Math.max,
          h = Math.min,
          p = function () {
            return c.Date.now();
          };
        function v(e) {
          var t = typeof e;
          return !!e && ("object" == t || "function" == t);
        }
        function m(e) {
          if ("number" == typeof e) return e;
          if (
            (function (e) {
              return (
                "symbol" == typeof e ||
                ((function (e) {
                  return !!e && "object" == typeof e;
                })(e) &&
                  "[object Symbol]" == f.call(e))
              );
            })(e)
          )
            return NaN;
          if (v(e)) {
            var t = "function" == typeof e.valueOf ? e.valueOf() : e;
            e = v(t) ? t + "" : t;
          }
          if ("string" != typeof e) return 0 === e ? e : +e;
          e = e.replace(r, "");
          var n = a.test(e);
          return n || o.test(e)
            ? s(e.slice(2), n ? 2 : 8)
            : i.test(e)
            ? NaN
            : +e;
        }
        e.exports = function (e, t, n) {
          var r,
            i,
            a,
            o,
            s,
            l,
            u = 0,
            c = !1,
            f = !1,
            g = !0;
          if ("function" != typeof e)
            throw new TypeError("Expected a function");
          function y(t) {
            var n = r,
              a = i;
            return (r = i = void 0), (u = t), (o = e.apply(a, n));
          }
          function b(e) {
            return (u = e), (s = setTimeout(w, t)), c ? y(e) : o;
          }
          function x(e) {
            var n = e - l;
            return void 0 === l || n >= t || n < 0 || (f && e - u >= a);
          }
          function w() {
            var e = p();
            if (x(e)) return _(e);
            s = setTimeout(
              w,
              (function (e) {
                var n = t - (e - l);
                return f ? h(n, a - (e - u)) : n;
              })(e)
            );
          }
          function _(e) {
            return (s = void 0), g && r ? y(e) : ((r = i = void 0), o);
          }
          function S() {
            var e = p(),
              n = x(e);
            if (((r = arguments), (i = this), (l = e), n)) {
              if (void 0 === s) return b(l);
              if (f) return (s = setTimeout(w, t)), y(l);
            }
            return void 0 === s && (s = setTimeout(w, t)), o;
          }
          return (
            (t = m(t) || 0),
            v(n) &&
              ((c = !!n.leading),
              (a = (f = "maxWait" in n) ? d(m(n.maxWait) || 0, t) : a),
              (g = "trailing" in n ? !!n.trailing : g)),
            (S.cancel = function () {
              void 0 !== s && clearTimeout(s),
                (u = 0),
                (r = l = i = s = void 0);
            }),
            (S.flush = function () {
              return void 0 === s ? o : _(p());
            }),
            S
          );
        };
      },
      3881: function (e, t, n) {
        var r = "Expected a function",
          i = /^\s+|\s+$/g,
          a = /^[-+]0x[0-9a-f]+$/i,
          o = /^0b[01]+$/i,
          s = /^0o[0-7]+$/i,
          l = parseInt,
          u = "object" == typeof n.g && n.g && n.g.Object === Object && n.g,
          c = "object" == typeof self && self && self.Object === Object && self,
          f = u || c || Function("return this")(),
          d = Object.prototype.toString,
          h = Math.max,
          p = Math.min,
          v = function () {
            return f.Date.now();
          };
        function m(e, t, n) {
          var i,
            a,
            o,
            s,
            l,
            u,
            c = 0,
            f = !1,
            d = !1,
            m = !0;
          if ("function" != typeof e) throw new TypeError(r);
          function b(t) {
            var n = i,
              r = a;
            return (i = a = void 0), (c = t), (s = e.apply(r, n));
          }
          function x(e) {
            return (c = e), (l = setTimeout(_, t)), f ? b(e) : s;
          }
          function w(e) {
            var n = e - u;
            return void 0 === u || n >= t || n < 0 || (d && e - c >= o);
          }
          function _() {
            var e = v();
            if (w(e)) return S(e);
            l = setTimeout(
              _,
              (function (e) {
                var n = t - (e - u);
                return d ? p(n, o - (e - c)) : n;
              })(e)
            );
          }
          function S(e) {
            return (l = void 0), m && i ? b(e) : ((i = a = void 0), s);
          }
          function M() {
            var e = v(),
              n = w(e);
            if (((i = arguments), (a = this), (u = e), n)) {
              if (void 0 === l) return x(u);
              if (d) return (l = setTimeout(_, t)), b(u);
            }
            return void 0 === l && (l = setTimeout(_, t)), s;
          }
          return (
            (t = y(t) || 0),
            g(n) &&
              ((f = !!n.leading),
              (o = (d = "maxWait" in n) ? h(y(n.maxWait) || 0, t) : o),
              (m = "trailing" in n ? !!n.trailing : m)),
            (M.cancel = function () {
              void 0 !== l && clearTimeout(l),
                (c = 0),
                (i = u = a = l = void 0);
            }),
            (M.flush = function () {
              return void 0 === l ? s : S(v());
            }),
            M
          );
        }
        function g(e) {
          var t = typeof e;
          return !!e && ("object" == t || "function" == t);
        }
        function y(e) {
          if ("number" == typeof e) return e;
          if (
            (function (e) {
              return (
                "symbol" == typeof e ||
                ((function (e) {
                  return !!e && "object" == typeof e;
                })(e) &&
                  "[object Symbol]" == d.call(e))
              );
            })(e)
          )
            return NaN;
          if (g(e)) {
            var t = "function" == typeof e.valueOf ? e.valueOf() : e;
            e = g(t) ? t + "" : t;
          }
          if ("string" != typeof e) return 0 === e ? e : +e;
          e = e.replace(i, "");
          var n = o.test(e);
          return n || s.test(e)
            ? l(e.slice(2), n ? 2 : 8)
            : a.test(e)
            ? NaN
            : +e;
        }
        e.exports = function (e, t, n) {
          var i = !0,
            a = !0;
          if ("function" != typeof e) throw new TypeError(r);
          return (
            g(n) &&
              ((i = "leading" in n ? !!n.leading : i),
              (a = "trailing" in n ? !!n.trailing : a)),
            m(e, t, { leading: i, maxWait: t, trailing: a })
          );
        };
      },
      888: function (e, t, n) {
        "use strict";
        var r = n(9047);
        function i() {}
        function a() {}
        (a.resetWarningCache = i),
          (e.exports = function () {
            function e(e, t, n, i, a, o) {
              if (o !== r) {
                var s = new Error(
                  "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
                );
                throw ((s.name = "Invariant Violation"), s);
              }
            }
            function t() {
              return e;
            }
            e.isRequired = e;
            var n = {
              array: e,
              bigint: e,
              bool: e,
              func: e,
              number: e,
              object: e,
              string: e,
              symbol: e,
              any: e,
              arrayOf: t,
              element: e,
              elementType: e,
              instanceOf: t,
              node: e,
              objectOf: t,
              oneOf: t,
              oneOfType: t,
              shape: t,
              exact: t,
              checkPropTypes: a,
              resetWarningCache: i,
            };
            return (n.PropTypes = n), n;
          });
      },
      2007: function (e, t, n) {
        e.exports = n(888)();
      },
      9047: function (e) {
        "use strict";
        e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
      },
      4463: function (e, t, n) {
        "use strict";
        var r = n(2791),
          i = n(5296);
        function a(e) {
          for (
            var t =
                "https://reactjs.org/docs/error-decoder.html?invariant=" + e,
              n = 1;
            n < arguments.length;
            n++
          )
            t += "&args[]=" + encodeURIComponent(arguments[n]);
          return (
            "Minified React error #" +
            e +
            "; visit " +
            t +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
          );
        }
        var o = new Set(),
          s = {};
        function l(e, t) {
          u(e, t), u(e + "Capture", t);
        }
        function u(e, t) {
          for (s[e] = t, e = 0; e < t.length; e++) o.add(t[e]);
        }
        var c = !(
            "undefined" === typeof window ||
            "undefined" === typeof window.document ||
            "undefined" === typeof window.document.createElement
          ),
          f = Object.prototype.hasOwnProperty,
          d =
            /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
          h = {},
          p = {};
        function v(e, t, n, r, i, a, o) {
          (this.acceptsBooleans = 2 === t || 3 === t || 4 === t),
            (this.attributeName = r),
            (this.attributeNamespace = i),
            (this.mustUseProperty = n),
            (this.propertyName = e),
            (this.type = t),
            (this.sanitizeURL = a),
            (this.removeEmptyString = o);
        }
        var m = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
          .split(" ")
          .forEach(function (e) {
            m[e] = new v(e, 0, !1, e, null, !1, !1);
          }),
          [
            ["acceptCharset", "accept-charset"],
            ["className", "class"],
            ["htmlFor", "for"],
            ["httpEquiv", "http-equiv"],
          ].forEach(function (e) {
            var t = e[0];
            m[t] = new v(t, 1, !1, e[1], null, !1, !1);
          }),
          ["contentEditable", "draggable", "spellCheck", "value"].forEach(
            function (e) {
              m[e] = new v(e, 2, !1, e.toLowerCase(), null, !1, !1);
            }
          ),
          [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha",
          ].forEach(function (e) {
            m[e] = new v(e, 2, !1, e, null, !1, !1);
          }),
          "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
            .split(" ")
            .forEach(function (e) {
              m[e] = new v(e, 3, !1, e.toLowerCase(), null, !1, !1);
            }),
          ["checked", "multiple", "muted", "selected"].forEach(function (e) {
            m[e] = new v(e, 3, !0, e, null, !1, !1);
          }),
          ["capture", "download"].forEach(function (e) {
            m[e] = new v(e, 4, !1, e, null, !1, !1);
          }),
          ["cols", "rows", "size", "span"].forEach(function (e) {
            m[e] = new v(e, 6, !1, e, null, !1, !1);
          }),
          ["rowSpan", "start"].forEach(function (e) {
            m[e] = new v(e, 5, !1, e.toLowerCase(), null, !1, !1);
          });
        var g = /[\-:]([a-z])/g;
        function y(e) {
          return e[1].toUpperCase();
        }
        function b(e, t, n, r) {
          var i = m.hasOwnProperty(t) ? m[t] : null;
          (null !== i
            ? 0 !== i.type
            : r ||
              !(2 < t.length) ||
              ("o" !== t[0] && "O" !== t[0]) ||
              ("n" !== t[1] && "N" !== t[1])) &&
            ((function (e, t, n, r) {
              if (
                null === t ||
                "undefined" === typeof t ||
                (function (e, t, n, r) {
                  if (null !== n && 0 === n.type) return !1;
                  switch (typeof t) {
                    case "function":
                    case "symbol":
                      return !0;
                    case "boolean":
                      return (
                        !r &&
                        (null !== n
                          ? !n.acceptsBooleans
                          : "data-" !== (e = e.toLowerCase().slice(0, 5)) &&
                            "aria-" !== e)
                      );
                    default:
                      return !1;
                  }
                })(e, t, n, r)
              )
                return !0;
              if (r) return !1;
              if (null !== n)
                switch (n.type) {
                  case 3:
                    return !t;
                  case 4:
                    return !1 === t;
                  case 5:
                    return isNaN(t);
                  case 6:
                    return isNaN(t) || 1 > t;
                }
              return !1;
            })(t, n, i, r) && (n = null),
            r || null === i
              ? (function (e) {
                  return (
                    !!f.call(p, e) ||
                    (!f.call(h, e) &&
                      (d.test(e) ? (p[e] = !0) : ((h[e] = !0), !1)))
                  );
                })(t) &&
                (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n))
              : i.mustUseProperty
              ? (e[i.propertyName] = null === n ? 3 !== i.type && "" : n)
              : ((t = i.attributeName),
                (r = i.attributeNamespace),
                null === n
                  ? e.removeAttribute(t)
                  : ((n =
                      3 === (i = i.type) || (4 === i && !0 === n)
                        ? ""
                        : "" + n),
                    r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
          .split(" ")
          .forEach(function (e) {
            var t = e.replace(g, y);
            m[t] = new v(t, 1, !1, e, null, !1, !1);
          }),
          "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
            .split(" ")
            .forEach(function (e) {
              var t = e.replace(g, y);
              m[t] = new v(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
            }),
          ["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
            var t = e.replace(g, y);
            m[t] = new v(
              t,
              1,
              !1,
              e,
              "http://www.w3.org/XML/1998/namespace",
              !1,
              !1
            );
          }),
          ["tabIndex", "crossOrigin"].forEach(function (e) {
            m[e] = new v(e, 1, !1, e.toLowerCase(), null, !1, !1);
          }),
          (m.xlinkHref = new v(
            "xlinkHref",
            1,
            !1,
            "xlink:href",
            "http://www.w3.org/1999/xlink",
            !0,
            !1
          )),
          ["src", "href", "action", "formAction"].forEach(function (e) {
            m[e] = new v(e, 1, !1, e.toLowerCase(), null, !0, !0);
          });
        var x = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
          w = Symbol.for("react.element"),
          _ = Symbol.for("react.portal"),
          S = Symbol.for("react.fragment"),
          M = Symbol.for("react.strict_mode"),
          E = Symbol.for("react.profiler"),
          k = Symbol.for("react.provider"),
          T = Symbol.for("react.context"),
          C = Symbol.for("react.forward_ref"),
          A = Symbol.for("react.suspense"),
          P = Symbol.for("react.suspense_list"),
          L = Symbol.for("react.memo"),
          R = Symbol.for("react.lazy");
        Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
        var O = Symbol.for("react.offscreen");
        Symbol.for("react.legacy_hidden"),
          Symbol.for("react.cache"),
          Symbol.for("react.tracing_marker");
        var z = Symbol.iterator;
        function D(e) {
          return null === e || "object" !== typeof e
            ? null
            : "function" === typeof (e = (z && e[z]) || e["@@iterator"])
            ? e
            : null;
        }
        var I,
          N = Object.assign;
        function F(e) {
          if (void 0 === I)
            try {
              throw Error();
            } catch (n) {
              var t = n.stack.trim().match(/\n( *(at )?)/);
              I = (t && t[1]) || "";
            }
          return "\n" + I + e;
        }
        var B = !1;
        function H(e, t) {
          if (!e || B) return "";
          B = !0;
          var n = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          try {
            if (t)
              if (
                ((t = function () {
                  throw Error();
                }),
                Object.defineProperty(t.prototype, "props", {
                  set: function () {
                    throw Error();
                  },
                }),
                "object" === typeof Reflect && Reflect.construct)
              ) {
                try {
                  Reflect.construct(t, []);
                } catch (u) {
                  var r = u;
                }
                Reflect.construct(e, [], t);
              } else {
                try {
                  t.call();
                } catch (u) {
                  r = u;
                }
                e.call(t.prototype);
              }
            else {
              try {
                throw Error();
              } catch (u) {
                r = u;
              }
              e();
            }
          } catch (u) {
            if (u && r && "string" === typeof u.stack) {
              for (
                var i = u.stack.split("\n"),
                  a = r.stack.split("\n"),
                  o = i.length - 1,
                  s = a.length - 1;
                1 <= o && 0 <= s && i[o] !== a[s];

              )
                s--;
              for (; 1 <= o && 0 <= s; o--, s--)
                if (i[o] !== a[s]) {
                  if (1 !== o || 1 !== s)
                    do {
                      if ((o--, 0 > --s || i[o] !== a[s])) {
                        var l = "\n" + i[o].replace(" at new ", " at ");
                        return (
                          e.displayName &&
                            l.includes("<anonymous>") &&
                            (l = l.replace("<anonymous>", e.displayName)),
                          l
                        );
                      }
                    } while (1 <= o && 0 <= s);
                  break;
                }
            }
          } finally {
            (B = !1), (Error.prepareStackTrace = n);
          }
          return (e = e ? e.displayName || e.name : "") ? F(e) : "";
        }
        function U(e) {
          switch (e.tag) {
            case 5:
              return F(e.type);
            case 16:
              return F("Lazy");
            case 13:
              return F("Suspense");
            case 19:
              return F("SuspenseList");
            case 0:
            case 2:
            case 15:
              return (e = H(e.type, !1));
            case 11:
              return (e = H(e.type.render, !1));
            case 1:
              return (e = H(e.type, !0));
            default:
              return "";
          }
        }
        function j(e) {
          if (null == e) return null;
          if ("function" === typeof e) return e.displayName || e.name || null;
          if ("string" === typeof e) return e;
          switch (e) {
            case S:
              return "Fragment";
            case _:
              return "Portal";
            case E:
              return "Profiler";
            case M:
              return "StrictMode";
            case A:
              return "Suspense";
            case P:
              return "SuspenseList";
          }
          if ("object" === typeof e)
            switch (e.$$typeof) {
              case T:
                return (e.displayName || "Context") + ".Consumer";
              case k:
                return (e._context.displayName || "Context") + ".Provider";
              case C:
                var t = e.render;
                return (
                  (e = e.displayName) ||
                    (e =
                      "" !== (e = t.displayName || t.name || "")
                        ? "ForwardRef(" + e + ")"
                        : "ForwardRef"),
                  e
                );
              case L:
                return null !== (t = e.displayName || null)
                  ? t
                  : j(e.type) || "Memo";
              case R:
                (t = e._payload), (e = e._init);
                try {
                  return j(e(t));
                } catch (n) {}
            }
          return null;
        }
        function G(e) {
          var t = e.type;
          switch (e.tag) {
            case 24:
              return "Cache";
            case 9:
              return (t.displayName || "Context") + ".Consumer";
            case 10:
              return (t._context.displayName || "Context") + ".Provider";
            case 18:
              return "DehydratedFragment";
            case 11:
              return (
                (e = (e = t.render).displayName || e.name || ""),
                t.displayName ||
                  ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef")
              );
            case 7:
              return "Fragment";
            case 5:
              return t;
            case 4:
              return "Portal";
            case 3:
              return "Root";
            case 6:
              return "Text";
            case 16:
              return j(t);
            case 8:
              return t === M ? "StrictMode" : "Mode";
            case 22:
              return "Offscreen";
            case 12:
              return "Profiler";
            case 21:
              return "Scope";
            case 13:
              return "Suspense";
            case 19:
              return "SuspenseList";
            case 25:
              return "TracingMarker";
            case 1:
            case 0:
            case 17:
            case 2:
            case 14:
            case 15:
              if ("function" === typeof t)
                return t.displayName || t.name || null;
              if ("string" === typeof t) return t;
          }
          return null;
        }
        function W(e) {
          switch (typeof e) {
            case "boolean":
            case "number":
            case "string":
            case "undefined":
            case "object":
              return e;
            default:
              return "";
          }
        }
        function V(e) {
          var t = e.type;
          return (
            (e = e.nodeName) &&
            "input" === e.toLowerCase() &&
            ("checkbox" === t || "radio" === t)
          );
        }
        function q(e) {
          e._valueTracker ||
            (e._valueTracker = (function (e) {
              var t = V(e) ? "checked" : "value",
                n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                r = "" + e[t];
              if (
                !e.hasOwnProperty(t) &&
                "undefined" !== typeof n &&
                "function" === typeof n.get &&
                "function" === typeof n.set
              ) {
                var i = n.get,
                  a = n.set;
                return (
                  Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function () {
                      return i.call(this);
                    },
                    set: function (e) {
                      (r = "" + e), a.call(this, e);
                    },
                  }),
                  Object.defineProperty(e, t, { enumerable: n.enumerable }),
                  {
                    getValue: function () {
                      return r;
                    },
                    setValue: function (e) {
                      r = "" + e;
                    },
                    stopTracking: function () {
                      (e._valueTracker = null), delete e[t];
                    },
                  }
                );
              }
            })(e));
        }
        function X(e) {
          if (!e) return !1;
          var t = e._valueTracker;
          if (!t) return !0;
          var n = t.getValue(),
            r = "";
          return (
            e && (r = V(e) ? (e.checked ? "true" : "false") : e.value),
            (e = r) !== n && (t.setValue(e), !0)
          );
        }
        function Y(e) {
          if (
            "undefined" ===
            typeof (e =
              e || ("undefined" !== typeof document ? document : void 0))
          )
            return null;
          try {
            return e.activeElement || e.body;
          } catch (t) {
            return e.body;
          }
        }
        function J(e, t) {
          var n = t.checked;
          return N({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != n ? n : e._wrapperState.initialChecked,
          });
        }
        function $(e, t) {
          var n = null == t.defaultValue ? "" : t.defaultValue,
            r = null != t.checked ? t.checked : t.defaultChecked;
          (n = W(null != t.value ? t.value : n)),
            (e._wrapperState = {
              initialChecked: r,
              initialValue: n,
              controlled:
                "checkbox" === t.type || "radio" === t.type
                  ? null != t.checked
                  : null != t.value,
            });
        }
        function Q(e, t) {
          null != (t = t.checked) && b(e, "checked", t, !1);
        }
        function Z(e, t) {
          Q(e, t);
          var n = W(t.value),
            r = t.type;
          if (null != n)
            "number" === r
              ? ((0 === n && "" === e.value) || e.value != n) &&
                (e.value = "" + n)
              : e.value !== "" + n && (e.value = "" + n);
          else if ("submit" === r || "reset" === r)
            return void e.removeAttribute("value");
          t.hasOwnProperty("value")
            ? ee(e, t.type, n)
            : t.hasOwnProperty("defaultValue") &&
              ee(e, t.type, W(t.defaultValue)),
            null == t.checked &&
              null != t.defaultChecked &&
              (e.defaultChecked = !!t.defaultChecked);
        }
        function K(e, t, n) {
          if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
            var r = t.type;
            if (
              !(
                ("submit" !== r && "reset" !== r) ||
                (void 0 !== t.value && null !== t.value)
              )
            )
              return;
            (t = "" + e._wrapperState.initialValue),
              n || t === e.value || (e.value = t),
              (e.defaultValue = t);
          }
          "" !== (n = e.name) && (e.name = ""),
            (e.defaultChecked = !!e._wrapperState.initialChecked),
            "" !== n && (e.name = n);
        }
        function ee(e, t, n) {
          ("number" === t && Y(e.ownerDocument) === e) ||
            (null == n
              ? (e.defaultValue = "" + e._wrapperState.initialValue)
              : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
        }
        var te = Array.isArray;
        function ne(e, t, n, r) {
          if (((e = e.options), t)) {
            t = {};
            for (var i = 0; i < n.length; i++) t["$" + n[i]] = !0;
            for (n = 0; n < e.length; n++)
              (i = t.hasOwnProperty("$" + e[n].value)),
                e[n].selected !== i && (e[n].selected = i),
                i && r && (e[n].defaultSelected = !0);
          } else {
            for (n = "" + W(n), t = null, i = 0; i < e.length; i++) {
              if (e[i].value === n)
                return (
                  (e[i].selected = !0), void (r && (e[i].defaultSelected = !0))
                );
              null !== t || e[i].disabled || (t = e[i]);
            }
            null !== t && (t.selected = !0);
          }
        }
        function re(e, t) {
          if (null != t.dangerouslySetInnerHTML) throw Error(a(91));
          return N({}, t, {
            value: void 0,
            defaultValue: void 0,
            children: "" + e._wrapperState.initialValue,
          });
        }
        function ie(e, t) {
          var n = t.value;
          if (null == n) {
            if (((n = t.children), (t = t.defaultValue), null != n)) {
              if (null != t) throw Error(a(92));
              if (te(n)) {
                if (1 < n.length) throw Error(a(93));
                n = n[0];
              }
              t = n;
            }
            null == t && (t = ""), (n = t);
          }
          e._wrapperState = { initialValue: W(n) };
        }
        function ae(e, t) {
          var n = W(t.value),
            r = W(t.defaultValue);
          null != n &&
            ((n = "" + n) !== e.value && (e.value = n),
            null == t.defaultValue &&
              e.defaultValue !== n &&
              (e.defaultValue = n)),
            null != r && (e.defaultValue = "" + r);
        }
        function oe(e) {
          var t = e.textContent;
          t === e._wrapperState.initialValue &&
            "" !== t &&
            null !== t &&
            (e.value = t);
        }
        function se(e) {
          switch (e) {
            case "svg":
              return "http://www.w3.org/2000/svg";
            case "math":
              return "http://www.w3.org/1998/Math/MathML";
            default:
              return "http://www.w3.org/1999/xhtml";
          }
        }
        function le(e, t) {
          return null == e || "http://www.w3.org/1999/xhtml" === e
            ? se(t)
            : "http://www.w3.org/2000/svg" === e && "foreignObject" === t
            ? "http://www.w3.org/1999/xhtml"
            : e;
        }
        var ue,
          ce,
          fe =
            ((ce = function (e, t) {
              if (
                "http://www.w3.org/2000/svg" !== e.namespaceURI ||
                "innerHTML" in e
              )
                e.innerHTML = t;
              else {
                for (
                  (ue = ue || document.createElement("div")).innerHTML =
                    "<svg>" + t.valueOf().toString() + "</svg>",
                    t = ue.firstChild;
                  e.firstChild;

                )
                  e.removeChild(e.firstChild);
                for (; t.firstChild; ) e.appendChild(t.firstChild);
              }
            }),
            "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction
              ? function (e, t, n, r) {
                  MSApp.execUnsafeLocalFunction(function () {
                    return ce(e, t);
                  });
                }
              : ce);
        function de(e, t) {
          if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && 3 === n.nodeType)
              return void (n.nodeValue = t);
          }
          e.textContent = t;
        }
        var he = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
          },
          pe = ["Webkit", "ms", "Moz", "O"];
        function ve(e, t, n) {
          return null == t || "boolean" === typeof t || "" === t
            ? ""
            : n ||
              "number" !== typeof t ||
              0 === t ||
              (he.hasOwnProperty(e) && he[e])
            ? ("" + t).trim()
            : t + "px";
        }
        function me(e, t) {
          for (var n in ((e = e.style), t))
            if (t.hasOwnProperty(n)) {
              var r = 0 === n.indexOf("--"),
                i = ve(n, t[n], r);
              "float" === n && (n = "cssFloat"),
                r ? e.setProperty(n, i) : (e[n] = i);
            }
        }
        Object.keys(he).forEach(function (e) {
          pe.forEach(function (t) {
            (t = t + e.charAt(0).toUpperCase() + e.substring(1)),
              (he[t] = he[e]);
          });
        });
        var ge = N(
          { menuitem: !0 },
          {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
          }
        );
        function ye(e, t) {
          if (t) {
            if (
              ge[e] &&
              (null != t.children || null != t.dangerouslySetInnerHTML)
            )
              throw Error(a(137, e));
            if (null != t.dangerouslySetInnerHTML) {
              if (null != t.children) throw Error(a(60));
              if (
                "object" !== typeof t.dangerouslySetInnerHTML ||
                !("__html" in t.dangerouslySetInnerHTML)
              )
                throw Error(a(61));
            }
            if (null != t.style && "object" !== typeof t.style)
              throw Error(a(62));
          }
        }
        function be(e, t) {
          if (-1 === e.indexOf("-")) return "string" === typeof t.is;
          switch (e) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return !1;
            default:
              return !0;
          }
        }
        var xe = null;
        function we(e) {
          return (
            (e = e.target || e.srcElement || window).correspondingUseElement &&
              (e = e.correspondingUseElement),
            3 === e.nodeType ? e.parentNode : e
          );
        }
        var _e = null,
          Se = null,
          Me = null;
        function Ee(e) {
          if ((e = mi(e))) {
            if ("function" !== typeof _e) throw Error(a(280));
            var t = e.stateNode;
            t && ((t = yi(t)), _e(e.stateNode, e.type, t));
          }
        }
        function ke(e) {
          Se ? (Me ? Me.push(e) : (Me = [e])) : (Se = e);
        }
        function Te() {
          if (Se) {
            var e = Se,
              t = Me;
            if (((Me = Se = null), Ee(e), t))
              for (e = 0; e < t.length; e++) Ee(t[e]);
          }
        }
        function Ce(e, t) {
          return e(t);
        }
        function Ae() {}
        var Pe = !1;
        function Le(e, t, n) {
          if (Pe) return e(t, n);
          Pe = !0;
          try {
            return Ce(e, t, n);
          } finally {
            (Pe = !1), (null !== Se || null !== Me) && (Ae(), Te());
          }
        }
        function Re(e, t) {
          var n = e.stateNode;
          if (null === n) return null;
          var r = yi(n);
          if (null === r) return null;
          n = r[t];
          e: switch (t) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              (r = !r.disabled) ||
                (r = !(
                  "button" === (e = e.type) ||
                  "input" === e ||
                  "select" === e ||
                  "textarea" === e
                )),
                (e = !r);
              break e;
            default:
              e = !1;
          }
          if (e) return null;
          if (n && "function" !== typeof n) throw Error(a(231, t, typeof n));
          return n;
        }
        var Oe = !1;
        if (c)
          try {
            var ze = {};
            Object.defineProperty(ze, "passive", {
              get: function () {
                Oe = !0;
              },
            }),
              window.addEventListener("test", ze, ze),
              window.removeEventListener("test", ze, ze);
          } catch (ce) {
            Oe = !1;
          }
        function De(e, t, n, r, i, a, o, s, l) {
          var u = Array.prototype.slice.call(arguments, 3);
          try {
            t.apply(n, u);
          } catch (c) {
            this.onError(c);
          }
        }
        var Ie = !1,
          Ne = null,
          Fe = !1,
          Be = null,
          He = {
            onError: function (e) {
              (Ie = !0), (Ne = e);
            },
          };
        function Ue(e, t, n, r, i, a, o, s, l) {
          (Ie = !1), (Ne = null), De.apply(He, arguments);
        }
        function je(e) {
          var t = e,
            n = e;
          if (e.alternate) for (; t.return; ) t = t.return;
          else {
            e = t;
            do {
              0 !== (4098 & (t = e).flags) && (n = t.return), (e = t.return);
            } while (e);
          }
          return 3 === t.tag ? n : null;
        }
        function Ge(e) {
          if (13 === e.tag) {
            var t = e.memoizedState;
            if (
              (null === t &&
                null !== (e = e.alternate) &&
                (t = e.memoizedState),
              null !== t)
            )
              return t.dehydrated;
          }
          return null;
        }
        function We(e) {
          if (je(e) !== e) throw Error(a(188));
        }
        function Ve(e) {
          return null !==
            (e = (function (e) {
              var t = e.alternate;
              if (!t) {
                if (null === (t = je(e))) throw Error(a(188));
                return t !== e ? null : e;
              }
              for (var n = e, r = t; ; ) {
                var i = n.return;
                if (null === i) break;
                var o = i.alternate;
                if (null === o) {
                  if (null !== (r = i.return)) {
                    n = r;
                    continue;
                  }
                  break;
                }
                if (i.child === o.child) {
                  for (o = i.child; o; ) {
                    if (o === n) return We(i), e;
                    if (o === r) return We(i), t;
                    o = o.sibling;
                  }
                  throw Error(a(188));
                }
                if (n.return !== r.return) (n = i), (r = o);
                else {
                  for (var s = !1, l = i.child; l; ) {
                    if (l === n) {
                      (s = !0), (n = i), (r = o);
                      break;
                    }
                    if (l === r) {
                      (s = !0), (r = i), (n = o);
                      break;
                    }
                    l = l.sibling;
                  }
                  if (!s) {
                    for (l = o.child; l; ) {
                      if (l === n) {
                        (s = !0), (n = o), (r = i);
                        break;
                      }
                      if (l === r) {
                        (s = !0), (r = o), (n = i);
                        break;
                      }
                      l = l.sibling;
                    }
                    if (!s) throw Error(a(189));
                  }
                }
                if (n.alternate !== r) throw Error(a(190));
              }
              if (3 !== n.tag) throw Error(a(188));
              return n.stateNode.current === n ? e : t;
            })(e))
            ? qe(e)
            : null;
        }
        function qe(e) {
          if (5 === e.tag || 6 === e.tag) return e;
          for (e = e.child; null !== e; ) {
            var t = qe(e);
            if (null !== t) return t;
            e = e.sibling;
          }
          return null;
        }
        var Xe = i.unstable_scheduleCallback,
          Ye = i.unstable_cancelCallback,
          Je = i.unstable_shouldYield,
          $e = i.unstable_requestPaint,
          Qe = i.unstable_now,
          Ze = i.unstable_getCurrentPriorityLevel,
          Ke = i.unstable_ImmediatePriority,
          et = i.unstable_UserBlockingPriority,
          tt = i.unstable_NormalPriority,
          nt = i.unstable_LowPriority,
          rt = i.unstable_IdlePriority,
          it = null,
          at = null;
        var ot = Math.clz32
            ? Math.clz32
            : function (e) {
                return 0 === (e >>>= 0) ? 32 : (31 - ((st(e) / lt) | 0)) | 0;
              },
          st = Math.log,
          lt = Math.LN2;
        var ut = 64,
          ct = 4194304;
        function ft(e) {
          switch (e & -e) {
            case 1:
              return 1;
            case 2:
              return 2;
            case 4:
              return 4;
            case 8:
              return 8;
            case 16:
              return 16;
            case 32:
              return 32;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return 4194240 & e;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              return 130023424 & e;
            case 134217728:
              return 134217728;
            case 268435456:
              return 268435456;
            case 536870912:
              return 536870912;
            case 1073741824:
              return 1073741824;
            default:
              return e;
          }
        }
        function dt(e, t) {
          var n = e.pendingLanes;
          if (0 === n) return 0;
          var r = 0,
            i = e.suspendedLanes,
            a = e.pingedLanes,
            o = 268435455 & n;
          if (0 !== o) {
            var s = o & ~i;
            0 !== s ? (r = ft(s)) : 0 !== (a &= o) && (r = ft(a));
          } else 0 !== (o = n & ~i) ? (r = ft(o)) : 0 !== a && (r = ft(a));
          if (0 === r) return 0;
          if (
            0 !== t &&
            t !== r &&
            0 === (t & i) &&
            ((i = r & -r) >= (a = t & -t) || (16 === i && 0 !== (4194240 & a)))
          )
            return t;
          if ((0 !== (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes)))
            for (e = e.entanglements, t &= r; 0 < t; )
              (i = 1 << (n = 31 - ot(t))), (r |= e[n]), (t &= ~i);
          return r;
        }
        function ht(e, t) {
          switch (e) {
            case 1:
            case 2:
            case 4:
              return t + 250;
            case 8:
            case 16:
            case 32:
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return t + 5e3;
            default:
              return -1;
          }
        }
        function pt(e) {
          return 0 !== (e = -1073741825 & e.pendingLanes)
            ? e
            : 1073741824 & e
            ? 1073741824
            : 0;
        }
        function vt(e) {
          for (var t = [], n = 0; 31 > n; n++) t.push(e);
          return t;
        }
        function mt(e, t, n) {
          (e.pendingLanes |= t),
            536870912 !== t && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
            ((e = e.eventTimes)[(t = 31 - ot(t))] = n);
        }
        function gt(e, t) {
          var n = (e.entangledLanes |= t);
          for (e = e.entanglements; n; ) {
            var r = 31 - ot(n),
              i = 1 << r;
            (i & t) | (e[r] & t) && (e[r] |= t), (n &= ~i);
          }
        }
        var yt = 0;
        function bt(e) {
          return 1 < (e &= -e)
            ? 4 < e
              ? 0 !== (268435455 & e)
                ? 16
                : 536870912
              : 4
            : 1;
        }
        var xt,
          wt,
          _t,
          St,
          Mt,
          Et = !1,
          kt = [],
          Tt = null,
          Ct = null,
          At = null,
          Pt = new Map(),
          Lt = new Map(),
          Rt = [],
          Ot =
            "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
              " "
            );
        function zt(e, t) {
          switch (e) {
            case "focusin":
            case "focusout":
              Tt = null;
              break;
            case "dragenter":
            case "dragleave":
              Ct = null;
              break;
            case "mouseover":
            case "mouseout":
              At = null;
              break;
            case "pointerover":
            case "pointerout":
              Pt.delete(t.pointerId);
              break;
            case "gotpointercapture":
            case "lostpointercapture":
              Lt.delete(t.pointerId);
          }
        }
        function Dt(e, t, n, r, i, a) {
          return null === e || e.nativeEvent !== a
            ? ((e = {
                blockedOn: t,
                domEventName: n,
                eventSystemFlags: r,
                nativeEvent: a,
                targetContainers: [i],
              }),
              null !== t && null !== (t = mi(t)) && wt(t),
              e)
            : ((e.eventSystemFlags |= r),
              (t = e.targetContainers),
              null !== i && -1 === t.indexOf(i) && t.push(i),
              e);
        }
        function It(e) {
          var t = vi(e.target);
          if (null !== t) {
            var n = je(t);
            if (null !== n)
              if (13 === (t = n.tag)) {
                if (null !== (t = Ge(n)))
                  return (
                    (e.blockedOn = t),
                    void Mt(e.priority, function () {
                      _t(n);
                    })
                  );
              } else if (
                3 === t &&
                n.stateNode.current.memoizedState.isDehydrated
              )
                return void (e.blockedOn =
                  3 === n.tag ? n.stateNode.containerInfo : null);
          }
          e.blockedOn = null;
        }
        function Nt(e) {
          if (null !== e.blockedOn) return !1;
          for (var t = e.targetContainers; 0 < t.length; ) {
            var n = Xt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
            if (null !== n)
              return null !== (t = mi(n)) && wt(t), (e.blockedOn = n), !1;
            var r = new (n = e.nativeEvent).constructor(n.type, n);
            (xe = r), n.target.dispatchEvent(r), (xe = null), t.shift();
          }
          return !0;
        }
        function Ft(e, t, n) {
          Nt(e) && n.delete(t);
        }
        function Bt() {
          (Et = !1),
            null !== Tt && Nt(Tt) && (Tt = null),
            null !== Ct && Nt(Ct) && (Ct = null),
            null !== At && Nt(At) && (At = null),
            Pt.forEach(Ft),
            Lt.forEach(Ft);
        }
        function Ht(e, t) {
          e.blockedOn === t &&
            ((e.blockedOn = null),
            Et ||
              ((Et = !0),
              i.unstable_scheduleCallback(i.unstable_NormalPriority, Bt)));
        }
        function Ut(e) {
          function t(t) {
            return Ht(t, e);
          }
          if (0 < kt.length) {
            Ht(kt[0], e);
            for (var n = 1; n < kt.length; n++) {
              var r = kt[n];
              r.blockedOn === e && (r.blockedOn = null);
            }
          }
          for (
            null !== Tt && Ht(Tt, e),
              null !== Ct && Ht(Ct, e),
              null !== At && Ht(At, e),
              Pt.forEach(t),
              Lt.forEach(t),
              n = 0;
            n < Rt.length;
            n++
          )
            (r = Rt[n]).blockedOn === e && (r.blockedOn = null);
          for (; 0 < Rt.length && null === (n = Rt[0]).blockedOn; )
            It(n), null === n.blockedOn && Rt.shift();
        }
        var jt = x.ReactCurrentBatchConfig;
        function Gt(e, t, n, r) {
          var i = yt,
            a = jt.transition;
          jt.transition = null;
          try {
            (yt = 1), Vt(e, t, n, r);
          } finally {
            (yt = i), (jt.transition = a);
          }
        }
        function Wt(e, t, n, r) {
          var i = yt,
            a = jt.transition;
          jt.transition = null;
          try {
            (yt = 4), Vt(e, t, n, r);
          } finally {
            (yt = i), (jt.transition = a);
          }
        }
        function Vt(e, t, n, r) {
          var i = Xt(e, t, n, r);
          if (null === i) jr(e, t, r, qt, n), zt(e, r);
          else if (
            (function (e, t, n, r, i) {
              switch (t) {
                case "focusin":
                  return (Tt = Dt(Tt, e, t, n, r, i)), !0;
                case "dragenter":
                  return (Ct = Dt(Ct, e, t, n, r, i)), !0;
                case "mouseover":
                  return (At = Dt(At, e, t, n, r, i)), !0;
                case "pointerover":
                  var a = i.pointerId;
                  return Pt.set(a, Dt(Pt.get(a) || null, e, t, n, r, i)), !0;
                case "gotpointercapture":
                  return (
                    (a = i.pointerId),
                    Lt.set(a, Dt(Lt.get(a) || null, e, t, n, r, i)),
                    !0
                  );
              }
              return !1;
            })(i, e, t, n, r)
          )
            r.stopPropagation();
          else if ((zt(e, r), 4 & t && -1 < Ot.indexOf(e))) {
            for (; null !== i; ) {
              var a = mi(i);
              if (
                (null !== a && xt(a),
                null === (a = Xt(e, t, n, r)) && jr(e, t, r, qt, n),
                a === i)
              )
                break;
              i = a;
            }
            null !== i && r.stopPropagation();
          } else jr(e, t, r, null, n);
        }
        var qt = null;
        function Xt(e, t, n, r) {
          if (((qt = null), null !== (e = vi((e = we(r))))))
            if (null === (t = je(e))) e = null;
            else if (13 === (n = t.tag)) {
              if (null !== (e = Ge(t))) return e;
              e = null;
            } else if (3 === n) {
              if (t.stateNode.current.memoizedState.isDehydrated)
                return 3 === t.tag ? t.stateNode.containerInfo : null;
              e = null;
            } else t !== e && (e = null);
          return (qt = e), null;
        }
        function Yt(e) {
          switch (e) {
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
              return 1;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
              return 4;
            case "message":
              switch (Ze()) {
                case Ke:
                  return 1;
                case et:
                  return 4;
                case tt:
                case nt:
                  return 16;
                case rt:
                  return 536870912;
                default:
                  return 16;
              }
            default:
              return 16;
          }
        }
        var Jt = null,
          $t = null,
          Qt = null;
        function Zt() {
          if (Qt) return Qt;
          var e,
            t,
            n = $t,
            r = n.length,
            i = "value" in Jt ? Jt.value : Jt.textContent,
            a = i.length;
          for (e = 0; e < r && n[e] === i[e]; e++);
          var o = r - e;
          for (t = 1; t <= o && n[r - t] === i[a - t]; t++);
          return (Qt = i.slice(e, 1 < t ? 1 - t : void 0));
        }
        function Kt(e) {
          var t = e.keyCode;
          return (
            "charCode" in e
              ? 0 === (e = e.charCode) && 13 === t && (e = 13)
              : (e = t),
            10 === e && (e = 13),
            32 <= e || 13 === e ? e : 0
          );
        }
        function en() {
          return !0;
        }
        function tn() {
          return !1;
        }
        function nn(e) {
          function t(t, n, r, i, a) {
            for (var o in ((this._reactName = t),
            (this._targetInst = r),
            (this.type = n),
            (this.nativeEvent = i),
            (this.target = a),
            (this.currentTarget = null),
            e))
              e.hasOwnProperty(o) && ((t = e[o]), (this[o] = t ? t(i) : i[o]));
            return (
              (this.isDefaultPrevented = (
                null != i.defaultPrevented
                  ? i.defaultPrevented
                  : !1 === i.returnValue
              )
                ? en
                : tn),
              (this.isPropagationStopped = tn),
              this
            );
          }
          return (
            N(t.prototype, {
              preventDefault: function () {
                this.defaultPrevented = !0;
                var e = this.nativeEvent;
                e &&
                  (e.preventDefault
                    ? e.preventDefault()
                    : "unknown" !== typeof e.returnValue &&
                      (e.returnValue = !1),
                  (this.isDefaultPrevented = en));
              },
              stopPropagation: function () {
                var e = this.nativeEvent;
                e &&
                  (e.stopPropagation
                    ? e.stopPropagation()
                    : "unknown" !== typeof e.cancelBubble &&
                      (e.cancelBubble = !0),
                  (this.isPropagationStopped = en));
              },
              persist: function () {},
              isPersistent: en,
            }),
            t
          );
        }
        var rn,
          an,
          on,
          sn = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function (e) {
              return e.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0,
          },
          ln = nn(sn),
          un = N({}, sn, { view: 0, detail: 0 }),
          cn = nn(un),
          fn = N({}, un, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: Sn,
            button: 0,
            buttons: 0,
            relatedTarget: function (e) {
              return void 0 === e.relatedTarget
                ? e.fromElement === e.srcElement
                  ? e.toElement
                  : e.fromElement
                : e.relatedTarget;
            },
            movementX: function (e) {
              return "movementX" in e
                ? e.movementX
                : (e !== on &&
                    (on && "mousemove" === e.type
                      ? ((rn = e.screenX - on.screenX),
                        (an = e.screenY - on.screenY))
                      : (an = rn = 0),
                    (on = e)),
                  rn);
            },
            movementY: function (e) {
              return "movementY" in e ? e.movementY : an;
            },
          }),
          dn = nn(fn),
          hn = nn(N({}, fn, { dataTransfer: 0 })),
          pn = nn(N({}, un, { relatedTarget: 0 })),
          vn = nn(
            N({}, sn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          mn = N({}, sn, {
            clipboardData: function (e) {
              return "clipboardData" in e
                ? e.clipboardData
                : window.clipboardData;
            },
          }),
          gn = nn(mn),
          yn = nn(N({}, sn, { data: 0 })),
          bn = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified",
          },
          xn = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta",
          },
          wn = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey",
          };
        function _n(e) {
          var t = this.nativeEvent;
          return t.getModifierState
            ? t.getModifierState(e)
            : !!(e = wn[e]) && !!t[e];
        }
        function Sn() {
          return _n;
        }
        var Mn = N({}, un, {
            key: function (e) {
              if (e.key) {
                var t = bn[e.key] || e.key;
                if ("Unidentified" !== t) return t;
              }
              return "keypress" === e.type
                ? 13 === (e = Kt(e))
                  ? "Enter"
                  : String.fromCharCode(e)
                : "keydown" === e.type || "keyup" === e.type
                ? xn[e.keyCode] || "Unidentified"
                : "";
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: Sn,
            charCode: function (e) {
              return "keypress" === e.type ? Kt(e) : 0;
            },
            keyCode: function (e) {
              return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0;
            },
            which: function (e) {
              return "keypress" === e.type
                ? Kt(e)
                : "keydown" === e.type || "keyup" === e.type
                ? e.keyCode
                : 0;
            },
          }),
          En = nn(Mn),
          kn = nn(
            N({}, fn, {
              pointerId: 0,
              width: 0,
              height: 0,
              pressure: 0,
              tangentialPressure: 0,
              tiltX: 0,
              tiltY: 0,
              twist: 0,
              pointerType: 0,
              isPrimary: 0,
            })
          ),
          Tn = nn(
            N({}, un, {
              touches: 0,
              targetTouches: 0,
              changedTouches: 0,
              altKey: 0,
              metaKey: 0,
              ctrlKey: 0,
              shiftKey: 0,
              getModifierState: Sn,
            })
          ),
          Cn = nn(
            N({}, sn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          An = N({}, fn, {
            deltaX: function (e) {
              return "deltaX" in e
                ? e.deltaX
                : "wheelDeltaX" in e
                ? -e.wheelDeltaX
                : 0;
            },
            deltaY: function (e) {
              return "deltaY" in e
                ? e.deltaY
                : "wheelDeltaY" in e
                ? -e.wheelDeltaY
                : "wheelDelta" in e
                ? -e.wheelDelta
                : 0;
            },
            deltaZ: 0,
            deltaMode: 0,
          }),
          Pn = nn(An),
          Ln = [9, 13, 27, 32],
          Rn = c && "CompositionEvent" in window,
          On = null;
        c && "documentMode" in document && (On = document.documentMode);
        var zn = c && "TextEvent" in window && !On,
          Dn = c && (!Rn || (On && 8 < On && 11 >= On)),
          In = String.fromCharCode(32),
          Nn = !1;
        function Fn(e, t) {
          switch (e) {
            case "keyup":
              return -1 !== Ln.indexOf(t.keyCode);
            case "keydown":
              return 229 !== t.keyCode;
            case "keypress":
            case "mousedown":
            case "focusout":
              return !0;
            default:
              return !1;
          }
        }
        function Bn(e) {
          return "object" === typeof (e = e.detail) && "data" in e
            ? e.data
            : null;
        }
        var Hn = !1;
        var Un = {
          color: !0,
          date: !0,
          datetime: !0,
          "datetime-local": !0,
          email: !0,
          month: !0,
          number: !0,
          password: !0,
          range: !0,
          search: !0,
          tel: !0,
          text: !0,
          time: !0,
          url: !0,
          week: !0,
        };
        function jn(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return "input" === t ? !!Un[e.type] : "textarea" === t;
        }
        function Gn(e, t, n, r) {
          ke(r),
            0 < (t = Wr(t, "onChange")).length &&
              ((n = new ln("onChange", "change", null, n, r)),
              e.push({ event: n, listeners: t }));
        }
        var Wn = null,
          Vn = null;
        function qn(e) {
          Ir(e, 0);
        }
        function Xn(e) {
          if (X(gi(e))) return e;
        }
        function Yn(e, t) {
          if ("change" === e) return t;
        }
        var Jn = !1;
        if (c) {
          var $n;
          if (c) {
            var Qn = "oninput" in document;
            if (!Qn) {
              var Zn = document.createElement("div");
              Zn.setAttribute("oninput", "return;"),
                (Qn = "function" === typeof Zn.oninput);
            }
            $n = Qn;
          } else $n = !1;
          Jn = $n && (!document.documentMode || 9 < document.documentMode);
        }
        function Kn() {
          Wn && (Wn.detachEvent("onpropertychange", er), (Vn = Wn = null));
        }
        function er(e) {
          if ("value" === e.propertyName && Xn(Vn)) {
            var t = [];
            Gn(t, Vn, e, we(e)), Le(qn, t);
          }
        }
        function tr(e, t, n) {
          "focusin" === e
            ? (Kn(), (Vn = n), (Wn = t).attachEvent("onpropertychange", er))
            : "focusout" === e && Kn();
        }
        function nr(e) {
          if ("selectionchange" === e || "keyup" === e || "keydown" === e)
            return Xn(Vn);
        }
        function rr(e, t) {
          if ("click" === e) return Xn(t);
        }
        function ir(e, t) {
          if ("input" === e || "change" === e) return Xn(t);
        }
        var ar =
          "function" === typeof Object.is
            ? Object.is
            : function (e, t) {
                return (
                  (e === t && (0 !== e || 1 / e === 1 / t)) ||
                  (e !== e && t !== t)
                );
              };
        function or(e, t) {
          if (ar(e, t)) return !0;
          if (
            "object" !== typeof e ||
            null === e ||
            "object" !== typeof t ||
            null === t
          )
            return !1;
          var n = Object.keys(e),
            r = Object.keys(t);
          if (n.length !== r.length) return !1;
          for (r = 0; r < n.length; r++) {
            var i = n[r];
            if (!f.call(t, i) || !ar(e[i], t[i])) return !1;
          }
          return !0;
        }
        function sr(e) {
          for (; e && e.firstChild; ) e = e.firstChild;
          return e;
        }
        function lr(e, t) {
          var n,
            r = sr(e);
          for (e = 0; r; ) {
            if (3 === r.nodeType) {
              if (((n = e + r.textContent.length), e <= t && n >= t))
                return { node: r, offset: t - e };
              e = n;
            }
            e: {
              for (; r; ) {
                if (r.nextSibling) {
                  r = r.nextSibling;
                  break e;
                }
                r = r.parentNode;
              }
              r = void 0;
            }
            r = sr(r);
          }
        }
        function ur(e, t) {
          return (
            !(!e || !t) &&
            (e === t ||
              ((!e || 3 !== e.nodeType) &&
                (t && 3 === t.nodeType
                  ? ur(e, t.parentNode)
                  : "contains" in e
                  ? e.contains(t)
                  : !!e.compareDocumentPosition &&
                    !!(16 & e.compareDocumentPosition(t)))))
          );
        }
        function cr() {
          for (var e = window, t = Y(); t instanceof e.HTMLIFrameElement; ) {
            try {
              var n = "string" === typeof t.contentWindow.location.href;
            } catch (r) {
              n = !1;
            }
            if (!n) break;
            t = Y((e = t.contentWindow).document);
          }
          return t;
        }
        function fr(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return (
            t &&
            (("input" === t &&
              ("text" === e.type ||
                "search" === e.type ||
                "tel" === e.type ||
                "url" === e.type ||
                "password" === e.type)) ||
              "textarea" === t ||
              "true" === e.contentEditable)
          );
        }
        function dr(e) {
          var t = cr(),
            n = e.focusedElem,
            r = e.selectionRange;
          if (
            t !== n &&
            n &&
            n.ownerDocument &&
            ur(n.ownerDocument.documentElement, n)
          ) {
            if (null !== r && fr(n))
              if (
                ((t = r.start),
                void 0 === (e = r.end) && (e = t),
                "selectionStart" in n)
              )
                (n.selectionStart = t),
                  (n.selectionEnd = Math.min(e, n.value.length));
              else if (
                (e =
                  ((t = n.ownerDocument || document) && t.defaultView) ||
                  window).getSelection
              ) {
                e = e.getSelection();
                var i = n.textContent.length,
                  a = Math.min(r.start, i);
                (r = void 0 === r.end ? a : Math.min(r.end, i)),
                  !e.extend && a > r && ((i = r), (r = a), (a = i)),
                  (i = lr(n, a));
                var o = lr(n, r);
                i &&
                  o &&
                  (1 !== e.rangeCount ||
                    e.anchorNode !== i.node ||
                    e.anchorOffset !== i.offset ||
                    e.focusNode !== o.node ||
                    e.focusOffset !== o.offset) &&
                  ((t = t.createRange()).setStart(i.node, i.offset),
                  e.removeAllRanges(),
                  a > r
                    ? (e.addRange(t), e.extend(o.node, o.offset))
                    : (t.setEnd(o.node, o.offset), e.addRange(t)));
              }
            for (t = [], e = n; (e = e.parentNode); )
              1 === e.nodeType &&
                t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
            for (
              "function" === typeof n.focus && n.focus(), n = 0;
              n < t.length;
              n++
            )
              ((e = t[n]).element.scrollLeft = e.left),
                (e.element.scrollTop = e.top);
          }
        }
        var hr = c && "documentMode" in document && 11 >= document.documentMode,
          pr = null,
          vr = null,
          mr = null,
          gr = !1;
        function yr(e, t, n) {
          var r =
            n.window === n
              ? n.document
              : 9 === n.nodeType
              ? n
              : n.ownerDocument;
          gr ||
            null == pr ||
            pr !== Y(r) ||
            ("selectionStart" in (r = pr) && fr(r)
              ? (r = { start: r.selectionStart, end: r.selectionEnd })
              : (r = {
                  anchorNode: (r = (
                    (r.ownerDocument && r.ownerDocument.defaultView) ||
                    window
                  ).getSelection()).anchorNode,
                  anchorOffset: r.anchorOffset,
                  focusNode: r.focusNode,
                  focusOffset: r.focusOffset,
                }),
            (mr && or(mr, r)) ||
              ((mr = r),
              0 < (r = Wr(vr, "onSelect")).length &&
                ((t = new ln("onSelect", "select", null, t, n)),
                e.push({ event: t, listeners: r }),
                (t.target = pr))));
        }
        function br(e, t) {
          var n = {};
          return (
            (n[e.toLowerCase()] = t.toLowerCase()),
            (n["Webkit" + e] = "webkit" + t),
            (n["Moz" + e] = "moz" + t),
            n
          );
        }
        var xr = {
            animationend: br("Animation", "AnimationEnd"),
            animationiteration: br("Animation", "AnimationIteration"),
            animationstart: br("Animation", "AnimationStart"),
            transitionend: br("Transition", "TransitionEnd"),
          },
          wr = {},
          _r = {};
        function Sr(e) {
          if (wr[e]) return wr[e];
          if (!xr[e]) return e;
          var t,
            n = xr[e];
          for (t in n)
            if (n.hasOwnProperty(t) && t in _r) return (wr[e] = n[t]);
          return e;
        }
        c &&
          ((_r = document.createElement("div").style),
          "AnimationEvent" in window ||
            (delete xr.animationend.animation,
            delete xr.animationiteration.animation,
            delete xr.animationstart.animation),
          "TransitionEvent" in window || delete xr.transitionend.transition);
        var Mr = Sr("animationend"),
          Er = Sr("animationiteration"),
          kr = Sr("animationstart"),
          Tr = Sr("transitionend"),
          Cr = new Map(),
          Ar =
            "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
              " "
            );
        function Pr(e, t) {
          Cr.set(e, t), l(t, [e]);
        }
        for (var Lr = 0; Lr < Ar.length; Lr++) {
          var Rr = Ar[Lr];
          Pr(Rr.toLowerCase(), "on" + (Rr[0].toUpperCase() + Rr.slice(1)));
        }
        Pr(Mr, "onAnimationEnd"),
          Pr(Er, "onAnimationIteration"),
          Pr(kr, "onAnimationStart"),
          Pr("dblclick", "onDoubleClick"),
          Pr("focusin", "onFocus"),
          Pr("focusout", "onBlur"),
          Pr(Tr, "onTransitionEnd"),
          u("onMouseEnter", ["mouseout", "mouseover"]),
          u("onMouseLeave", ["mouseout", "mouseover"]),
          u("onPointerEnter", ["pointerout", "pointerover"]),
          u("onPointerLeave", ["pointerout", "pointerover"]),
          l(
            "onChange",
            "change click focusin focusout input keydown keyup selectionchange".split(
              " "
            )
          ),
          l(
            "onSelect",
            "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
              " "
            )
          ),
          l("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste",
          ]),
          l(
            "onCompositionEnd",
            "compositionend focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          l(
            "onCompositionStart",
            "compositionstart focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          l(
            "onCompositionUpdate",
            "compositionupdate focusout keydown keypress keyup mousedown".split(
              " "
            )
          );
        var Or =
            "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
              " "
            ),
          zr = new Set(
            "cancel close invalid load scroll toggle".split(" ").concat(Or)
          );
        function Dr(e, t, n) {
          var r = e.type || "unknown-event";
          (e.currentTarget = n),
            (function (e, t, n, r, i, o, s, l, u) {
              if ((Ue.apply(this, arguments), Ie)) {
                if (!Ie) throw Error(a(198));
                var c = Ne;
                (Ie = !1), (Ne = null), Fe || ((Fe = !0), (Be = c));
              }
            })(r, t, void 0, e),
            (e.currentTarget = null);
        }
        function Ir(e, t) {
          t = 0 !== (4 & t);
          for (var n = 0; n < e.length; n++) {
            var r = e[n],
              i = r.event;
            r = r.listeners;
            e: {
              var a = void 0;
              if (t)
                for (var o = r.length - 1; 0 <= o; o--) {
                  var s = r[o],
                    l = s.instance,
                    u = s.currentTarget;
                  if (((s = s.listener), l !== a && i.isPropagationStopped()))
                    break e;
                  Dr(i, s, u), (a = l);
                }
              else
                for (o = 0; o < r.length; o++) {
                  if (
                    ((l = (s = r[o]).instance),
                    (u = s.currentTarget),
                    (s = s.listener),
                    l !== a && i.isPropagationStopped())
                  )
                    break e;
                  Dr(i, s, u), (a = l);
                }
            }
          }
          if (Fe) throw ((e = Be), (Fe = !1), (Be = null), e);
        }
        function Nr(e, t) {
          var n = t[di];
          void 0 === n && (n = t[di] = new Set());
          var r = e + "__bubble";
          n.has(r) || (Ur(t, e, 2, !1), n.add(r));
        }
        function Fr(e, t, n) {
          var r = 0;
          t && (r |= 4), Ur(n, e, r, t);
        }
        var Br = "_reactListening" + Math.random().toString(36).slice(2);
        function Hr(e) {
          if (!e[Br]) {
            (e[Br] = !0),
              o.forEach(function (t) {
                "selectionchange" !== t &&
                  (zr.has(t) || Fr(t, !1, e), Fr(t, !0, e));
              });
            var t = 9 === e.nodeType ? e : e.ownerDocument;
            null === t || t[Br] || ((t[Br] = !0), Fr("selectionchange", !1, t));
          }
        }
        function Ur(e, t, n, r) {
          switch (Yt(t)) {
            case 1:
              var i = Gt;
              break;
            case 4:
              i = Wt;
              break;
            default:
              i = Vt;
          }
          (n = i.bind(null, t, n, e)),
            (i = void 0),
            !Oe ||
              ("touchstart" !== t && "touchmove" !== t && "wheel" !== t) ||
              (i = !0),
            r
              ? void 0 !== i
                ? e.addEventListener(t, n, { capture: !0, passive: i })
                : e.addEventListener(t, n, !0)
              : void 0 !== i
              ? e.addEventListener(t, n, { passive: i })
              : e.addEventListener(t, n, !1);
        }
        function jr(e, t, n, r, i) {
          var a = r;
          if (0 === (1 & t) && 0 === (2 & t) && null !== r)
            e: for (;;) {
              if (null === r) return;
              var o = r.tag;
              if (3 === o || 4 === o) {
                var s = r.stateNode.containerInfo;
                if (s === i || (8 === s.nodeType && s.parentNode === i)) break;
                if (4 === o)
                  for (o = r.return; null !== o; ) {
                    var l = o.tag;
                    if (
                      (3 === l || 4 === l) &&
                      ((l = o.stateNode.containerInfo) === i ||
                        (8 === l.nodeType && l.parentNode === i))
                    )
                      return;
                    o = o.return;
                  }
                for (; null !== s; ) {
                  if (null === (o = vi(s))) return;
                  if (5 === (l = o.tag) || 6 === l) {
                    r = a = o;
                    continue e;
                  }
                  s = s.parentNode;
                }
              }
              r = r.return;
            }
          Le(function () {
            var r = a,
              i = we(n),
              o = [];
            e: {
              var s = Cr.get(e);
              if (void 0 !== s) {
                var l = ln,
                  u = e;
                switch (e) {
                  case "keypress":
                    if (0 === Kt(n)) break e;
                  case "keydown":
                  case "keyup":
                    l = En;
                    break;
                  case "focusin":
                    (u = "focus"), (l = pn);
                    break;
                  case "focusout":
                    (u = "blur"), (l = pn);
                    break;
                  case "beforeblur":
                  case "afterblur":
                    l = pn;
                    break;
                  case "click":
                    if (2 === n.button) break e;
                  case "auxclick":
                  case "dblclick":
                  case "mousedown":
                  case "mousemove":
                  case "mouseup":
                  case "mouseout":
                  case "mouseover":
                  case "contextmenu":
                    l = dn;
                    break;
                  case "drag":
                  case "dragend":
                  case "dragenter":
                  case "dragexit":
                  case "dragleave":
                  case "dragover":
                  case "dragstart":
                  case "drop":
                    l = hn;
                    break;
                  case "touchcancel":
                  case "touchend":
                  case "touchmove":
                  case "touchstart":
                    l = Tn;
                    break;
                  case Mr:
                  case Er:
                  case kr:
                    l = vn;
                    break;
                  case Tr:
                    l = Cn;
                    break;
                  case "scroll":
                    l = cn;
                    break;
                  case "wheel":
                    l = Pn;
                    break;
                  case "copy":
                  case "cut":
                  case "paste":
                    l = gn;
                    break;
                  case "gotpointercapture":
                  case "lostpointercapture":
                  case "pointercancel":
                  case "pointerdown":
                  case "pointermove":
                  case "pointerout":
                  case "pointerover":
                  case "pointerup":
                    l = kn;
                }
                var c = 0 !== (4 & t),
                  f = !c && "scroll" === e,
                  d = c ? (null !== s ? s + "Capture" : null) : s;
                c = [];
                for (var h, p = r; null !== p; ) {
                  var v = (h = p).stateNode;
                  if (
                    (5 === h.tag &&
                      null !== v &&
                      ((h = v),
                      null !== d &&
                        null != (v = Re(p, d)) &&
                        c.push(Gr(p, v, h))),
                    f)
                  )
                    break;
                  p = p.return;
                }
                0 < c.length &&
                  ((s = new l(s, u, null, n, i)),
                  o.push({ event: s, listeners: c }));
              }
            }
            if (0 === (7 & t)) {
              if (
                ((l = "mouseout" === e || "pointerout" === e),
                (!(s = "mouseover" === e || "pointerover" === e) ||
                  n === xe ||
                  !(u = n.relatedTarget || n.fromElement) ||
                  (!vi(u) && !u[fi])) &&
                  (l || s) &&
                  ((s =
                    i.window === i
                      ? i
                      : (s = i.ownerDocument)
                      ? s.defaultView || s.parentWindow
                      : window),
                  l
                    ? ((l = r),
                      null !==
                        (u = (u = n.relatedTarget || n.toElement)
                          ? vi(u)
                          : null) &&
                        (u !== (f = je(u)) || (5 !== u.tag && 6 !== u.tag)) &&
                        (u = null))
                    : ((l = null), (u = r)),
                  l !== u))
              ) {
                if (
                  ((c = dn),
                  (v = "onMouseLeave"),
                  (d = "onMouseEnter"),
                  (p = "mouse"),
                  ("pointerout" !== e && "pointerover" !== e) ||
                    ((c = kn),
                    (v = "onPointerLeave"),
                    (d = "onPointerEnter"),
                    (p = "pointer")),
                  (f = null == l ? s : gi(l)),
                  (h = null == u ? s : gi(u)),
                  ((s = new c(v, p + "leave", l, n, i)).target = f),
                  (s.relatedTarget = h),
                  (v = null),
                  vi(i) === r &&
                    (((c = new c(d, p + "enter", u, n, i)).target = h),
                    (c.relatedTarget = f),
                    (v = c)),
                  (f = v),
                  l && u)
                )
                  e: {
                    for (d = u, p = 0, h = c = l; h; h = Vr(h)) p++;
                    for (h = 0, v = d; v; v = Vr(v)) h++;
                    for (; 0 < p - h; ) (c = Vr(c)), p--;
                    for (; 0 < h - p; ) (d = Vr(d)), h--;
                    for (; p--; ) {
                      if (c === d || (null !== d && c === d.alternate)) break e;
                      (c = Vr(c)), (d = Vr(d));
                    }
                    c = null;
                  }
                else c = null;
                null !== l && qr(o, s, l, c, !1),
                  null !== u && null !== f && qr(o, f, u, c, !0);
              }
              if (
                "select" ===
                  (l =
                    (s = r ? gi(r) : window).nodeName &&
                    s.nodeName.toLowerCase()) ||
                ("input" === l && "file" === s.type)
              )
                var m = Yn;
              else if (jn(s))
                if (Jn) m = ir;
                else {
                  m = nr;
                  var g = tr;
                }
              else
                (l = s.nodeName) &&
                  "input" === l.toLowerCase() &&
                  ("checkbox" === s.type || "radio" === s.type) &&
                  (m = rr);
              switch (
                (m && (m = m(e, r))
                  ? Gn(o, m, n, i)
                  : (g && g(e, s, r),
                    "focusout" === e &&
                      (g = s._wrapperState) &&
                      g.controlled &&
                      "number" === s.type &&
                      ee(s, "number", s.value)),
                (g = r ? gi(r) : window),
                e)
              ) {
                case "focusin":
                  (jn(g) || "true" === g.contentEditable) &&
                    ((pr = g), (vr = r), (mr = null));
                  break;
                case "focusout":
                  mr = vr = pr = null;
                  break;
                case "mousedown":
                  gr = !0;
                  break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                  (gr = !1), yr(o, n, i);
                  break;
                case "selectionchange":
                  if (hr) break;
                case "keydown":
                case "keyup":
                  yr(o, n, i);
              }
              var y;
              if (Rn)
                e: {
                  switch (e) {
                    case "compositionstart":
                      var b = "onCompositionStart";
                      break e;
                    case "compositionend":
                      b = "onCompositionEnd";
                      break e;
                    case "compositionupdate":
                      b = "onCompositionUpdate";
                      break e;
                  }
                  b = void 0;
                }
              else
                Hn
                  ? Fn(e, n) && (b = "onCompositionEnd")
                  : "keydown" === e &&
                    229 === n.keyCode &&
                    (b = "onCompositionStart");
              b &&
                (Dn &&
                  "ko" !== n.locale &&
                  (Hn || "onCompositionStart" !== b
                    ? "onCompositionEnd" === b && Hn && (y = Zt())
                    : (($t = "value" in (Jt = i) ? Jt.value : Jt.textContent),
                      (Hn = !0))),
                0 < (g = Wr(r, b)).length &&
                  ((b = new yn(b, e, null, n, i)),
                  o.push({ event: b, listeners: g }),
                  y ? (b.data = y) : null !== (y = Bn(n)) && (b.data = y))),
                (y = zn
                  ? (function (e, t) {
                      switch (e) {
                        case "compositionend":
                          return Bn(t);
                        case "keypress":
                          return 32 !== t.which ? null : ((Nn = !0), In);
                        case "textInput":
                          return (e = t.data) === In && Nn ? null : e;
                        default:
                          return null;
                      }
                    })(e, n)
                  : (function (e, t) {
                      if (Hn)
                        return "compositionend" === e || (!Rn && Fn(e, t))
                          ? ((e = Zt()), (Qt = $t = Jt = null), (Hn = !1), e)
                          : null;
                      switch (e) {
                        case "paste":
                        default:
                          return null;
                        case "keypress":
                          if (
                            !(t.ctrlKey || t.altKey || t.metaKey) ||
                            (t.ctrlKey && t.altKey)
                          ) {
                            if (t.char && 1 < t.char.length) return t.char;
                            if (t.which) return String.fromCharCode(t.which);
                          }
                          return null;
                        case "compositionend":
                          return Dn && "ko" !== t.locale ? null : t.data;
                      }
                    })(e, n)) &&
                  0 < (r = Wr(r, "onBeforeInput")).length &&
                  ((i = new yn("onBeforeInput", "beforeinput", null, n, i)),
                  o.push({ event: i, listeners: r }),
                  (i.data = y));
            }
            Ir(o, t);
          });
        }
        function Gr(e, t, n) {
          return { instance: e, listener: t, currentTarget: n };
        }
        function Wr(e, t) {
          for (var n = t + "Capture", r = []; null !== e; ) {
            var i = e,
              a = i.stateNode;
            5 === i.tag &&
              null !== a &&
              ((i = a),
              null != (a = Re(e, n)) && r.unshift(Gr(e, a, i)),
              null != (a = Re(e, t)) && r.push(Gr(e, a, i))),
              (e = e.return);
          }
          return r;
        }
        function Vr(e) {
          if (null === e) return null;
          do {
            e = e.return;
          } while (e && 5 !== e.tag);
          return e || null;
        }
        function qr(e, t, n, r, i) {
          for (var a = t._reactName, o = []; null !== n && n !== r; ) {
            var s = n,
              l = s.alternate,
              u = s.stateNode;
            if (null !== l && l === r) break;
            5 === s.tag &&
              null !== u &&
              ((s = u),
              i
                ? null != (l = Re(n, a)) && o.unshift(Gr(n, l, s))
                : i || (null != (l = Re(n, a)) && o.push(Gr(n, l, s)))),
              (n = n.return);
          }
          0 !== o.length && e.push({ event: t, listeners: o });
        }
        var Xr = /\r\n?/g,
          Yr = /\u0000|\uFFFD/g;
        function Jr(e) {
          return ("string" === typeof e ? e : "" + e)
            .replace(Xr, "\n")
            .replace(Yr, "");
        }
        function $r(e, t, n) {
          if (((t = Jr(t)), Jr(e) !== t && n)) throw Error(a(425));
        }
        function Qr() {}
        var Zr = null;
        function Kr(e, t) {
          return (
            "textarea" === e ||
            "noscript" === e ||
            "string" === typeof t.children ||
            "number" === typeof t.children ||
            ("object" === typeof t.dangerouslySetInnerHTML &&
              null !== t.dangerouslySetInnerHTML &&
              null != t.dangerouslySetInnerHTML.__html)
          );
        }
        var ei = "function" === typeof setTimeout ? setTimeout : void 0,
          ti = "function" === typeof clearTimeout ? clearTimeout : void 0,
          ni = "function" === typeof Promise ? Promise : void 0,
          ri =
            "function" === typeof queueMicrotask
              ? queueMicrotask
              : "undefined" !== typeof ni
              ? function (e) {
                  return ni.resolve(null).then(e).catch(ii);
                }
              : ei;
        function ii(e) {
          setTimeout(function () {
            throw e;
          });
        }
        function ai(e, t) {
          var n = t,
            r = 0;
          do {
            var i = n.nextSibling;
            if ((e.removeChild(n), i && 8 === i.nodeType))
              if ("/$" === (n = i.data)) {
                if (0 === r) return e.removeChild(i), void Ut(t);
                r--;
              } else ("$" !== n && "$?" !== n && "$!" !== n) || r++;
            n = i;
          } while (n);
          Ut(t);
        }
        function oi(e) {
          for (; null != e; e = e.nextSibling) {
            var t = e.nodeType;
            if (1 === t || 3 === t) break;
            if (8 === t) {
              if ("$" === (t = e.data) || "$!" === t || "$?" === t) break;
              if ("/$" === t) return null;
            }
          }
          return e;
        }
        function si(e) {
          e = e.previousSibling;
          for (var t = 0; e; ) {
            if (8 === e.nodeType) {
              var n = e.data;
              if ("$" === n || "$!" === n || "$?" === n) {
                if (0 === t) return e;
                t--;
              } else "/$" === n && t++;
            }
            e = e.previousSibling;
          }
          return null;
        }
        var li = Math.random().toString(36).slice(2),
          ui = "__reactFiber$" + li,
          ci = "__reactProps$" + li,
          fi = "__reactContainer$" + li,
          di = "__reactEvents$" + li,
          hi = "__reactListeners$" + li,
          pi = "__reactHandles$" + li;
        function vi(e) {
          var t = e[ui];
          if (t) return t;
          for (var n = e.parentNode; n; ) {
            if ((t = n[fi] || n[ui])) {
              if (
                ((n = t.alternate),
                null !== t.child || (null !== n && null !== n.child))
              )
                for (e = si(e); null !== e; ) {
                  if ((n = e[ui])) return n;
                  e = si(e);
                }
              return t;
            }
            n = (e = n).parentNode;
          }
          return null;
        }
        function mi(e) {
          return !(e = e[ui] || e[fi]) ||
            (5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag)
            ? null
            : e;
        }
        function gi(e) {
          if (5 === e.tag || 6 === e.tag) return e.stateNode;
          throw Error(a(33));
        }
        function yi(e) {
          return e[ci] || null;
        }
        var bi = [],
          xi = -1;
        function wi(e) {
          return { current: e };
        }
        function _i(e) {
          0 > xi || ((e.current = bi[xi]), (bi[xi] = null), xi--);
        }
        function Si(e, t) {
          xi++, (bi[xi] = e.current), (e.current = t);
        }
        var Mi = {},
          Ei = wi(Mi),
          ki = wi(!1),
          Ti = Mi;
        function Ci(e, t) {
          var n = e.type.contextTypes;
          if (!n) return Mi;
          var r = e.stateNode;
          if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
            return r.__reactInternalMemoizedMaskedChildContext;
          var i,
            a = {};
          for (i in n) a[i] = t[i];
          return (
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                t),
              (e.__reactInternalMemoizedMaskedChildContext = a)),
            a
          );
        }
        function Ai(e) {
          return null !== (e = e.childContextTypes) && void 0 !== e;
        }
        function Pi() {
          _i(ki), _i(Ei);
        }
        function Li(e, t, n) {
          if (Ei.current !== Mi) throw Error(a(168));
          Si(Ei, t), Si(ki, n);
        }
        function Ri(e, t, n) {
          var r = e.stateNode;
          if (
            ((t = t.childContextTypes), "function" !== typeof r.getChildContext)
          )
            return n;
          for (var i in (r = r.getChildContext()))
            if (!(i in t)) throw Error(a(108, G(e) || "Unknown", i));
          return N({}, n, r);
        }
        function Oi(e) {
          return (
            (e =
              ((e = e.stateNode) &&
                e.__reactInternalMemoizedMergedChildContext) ||
              Mi),
            (Ti = Ei.current),
            Si(Ei, e),
            Si(ki, ki.current),
            !0
          );
        }
        function zi(e, t, n) {
          var r = e.stateNode;
          if (!r) throw Error(a(169));
          n
            ? ((e = Ri(e, t, Ti)),
              (r.__reactInternalMemoizedMergedChildContext = e),
              _i(ki),
              _i(Ei),
              Si(Ei, e))
            : _i(ki),
            Si(ki, n);
        }
        var Di = null,
          Ii = !1,
          Ni = !1;
        function Fi(e) {
          null === Di ? (Di = [e]) : Di.push(e);
        }
        function Bi() {
          if (!Ni && null !== Di) {
            Ni = !0;
            var e = 0,
              t = yt;
            try {
              var n = Di;
              for (yt = 1; e < n.length; e++) {
                var r = n[e];
                do {
                  r = r(!0);
                } while (null !== r);
              }
              (Di = null), (Ii = !1);
            } catch (i) {
              throw (null !== Di && (Di = Di.slice(e + 1)), Xe(Ke, Bi), i);
            } finally {
              (yt = t), (Ni = !1);
            }
          }
          return null;
        }
        var Hi = x.ReactCurrentBatchConfig;
        function Ui(e, t) {
          if (e && e.defaultProps) {
            for (var n in ((t = N({}, t)), (e = e.defaultProps)))
              void 0 === t[n] && (t[n] = e[n]);
            return t;
          }
          return t;
        }
        var ji = wi(null),
          Gi = null,
          Wi = null,
          Vi = null;
        function qi() {
          Vi = Wi = Gi = null;
        }
        function Xi(e) {
          var t = ji.current;
          _i(ji), (e._currentValue = t);
        }
        function Yi(e, t, n) {
          for (; null !== e; ) {
            var r = e.alternate;
            if (
              ((e.childLanes & t) !== t
                ? ((e.childLanes |= t), null !== r && (r.childLanes |= t))
                : null !== r && (r.childLanes & t) !== t && (r.childLanes |= t),
              e === n)
            )
              break;
            e = e.return;
          }
        }
        function Ji(e, t) {
          (Gi = e),
            (Vi = Wi = null),
            null !== (e = e.dependencies) &&
              null !== e.firstContext &&
              (0 !== (e.lanes & t) && (gs = !0), (e.firstContext = null));
        }
        function $i(e) {
          var t = e._currentValue;
          if (Vi !== e)
            if (
              ((e = { context: e, memoizedValue: t, next: null }), null === Wi)
            ) {
              if (null === Gi) throw Error(a(308));
              (Wi = e), (Gi.dependencies = { lanes: 0, firstContext: e });
            } else Wi = Wi.next = e;
          return t;
        }
        var Qi = null,
          Zi = !1;
        function Ki(e) {
          e.updateQueue = {
            baseState: e.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: { pending: null, interleaved: null, lanes: 0 },
            effects: null,
          };
        }
        function ea(e, t) {
          (e = e.updateQueue),
            t.updateQueue === e &&
              (t.updateQueue = {
                baseState: e.baseState,
                firstBaseUpdate: e.firstBaseUpdate,
                lastBaseUpdate: e.lastBaseUpdate,
                shared: e.shared,
                effects: e.effects,
              });
        }
        function ta(e, t) {
          return {
            eventTime: e,
            lane: t,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
          };
        }
        function na(e, t) {
          var n = e.updateQueue;
          null !== n &&
            ((n = n.shared),
            null !== yl && 0 !== (1 & e.mode) && 0 === (2 & gl)
              ? (null === (e = n.interleaved)
                  ? ((t.next = t), null === Qi ? (Qi = [n]) : Qi.push(n))
                  : ((t.next = e.next), (e.next = t)),
                (n.interleaved = t))
              : (null === (e = n.pending)
                  ? (t.next = t)
                  : ((t.next = e.next), (e.next = t)),
                (n.pending = t)));
        }
        function ra(e, t, n) {
          if (
            null !== (t = t.updateQueue) &&
            ((t = t.shared), 0 !== (4194240 & n))
          ) {
            var r = t.lanes;
            (n |= r &= e.pendingLanes), (t.lanes = n), gt(e, n);
          }
        }
        function ia(e, t) {
          var n = e.updateQueue,
            r = e.alternate;
          if (null !== r && n === (r = r.updateQueue)) {
            var i = null,
              a = null;
            if (null !== (n = n.firstBaseUpdate)) {
              do {
                var o = {
                  eventTime: n.eventTime,
                  lane: n.lane,
                  tag: n.tag,
                  payload: n.payload,
                  callback: n.callback,
                  next: null,
                };
                null === a ? (i = a = o) : (a = a.next = o), (n = n.next);
              } while (null !== n);
              null === a ? (i = a = t) : (a = a.next = t);
            } else i = a = t;
            return (
              (n = {
                baseState: r.baseState,
                firstBaseUpdate: i,
                lastBaseUpdate: a,
                shared: r.shared,
                effects: r.effects,
              }),
              void (e.updateQueue = n)
            );
          }
          null === (e = n.lastBaseUpdate)
            ? (n.firstBaseUpdate = t)
            : (e.next = t),
            (n.lastBaseUpdate = t);
        }
        function aa(e, t, n, r) {
          var i = e.updateQueue;
          Zi = !1;
          var a = i.firstBaseUpdate,
            o = i.lastBaseUpdate,
            s = i.shared.pending;
          if (null !== s) {
            i.shared.pending = null;
            var l = s,
              u = l.next;
            (l.next = null), null === o ? (a = u) : (o.next = u), (o = l);
            var c = e.alternate;
            null !== c &&
              (s = (c = c.updateQueue).lastBaseUpdate) !== o &&
              (null === s ? (c.firstBaseUpdate = u) : (s.next = u),
              (c.lastBaseUpdate = l));
          }
          if (null !== a) {
            var f = i.baseState;
            for (o = 0, c = u = l = null, s = a; ; ) {
              var d = s.lane,
                h = s.eventTime;
              if ((r & d) === d) {
                null !== c &&
                  (c = c.next =
                    {
                      eventTime: h,
                      lane: 0,
                      tag: s.tag,
                      payload: s.payload,
                      callback: s.callback,
                      next: null,
                    });
                e: {
                  var p = e,
                    v = s;
                  switch (((d = t), (h = n), v.tag)) {
                    case 1:
                      if ("function" === typeof (p = v.payload)) {
                        f = p.call(h, f, d);
                        break e;
                      }
                      f = p;
                      break e;
                    case 3:
                      p.flags = (-65537 & p.flags) | 128;
                    case 0:
                      if (
                        null ===
                          (d =
                            "function" === typeof (p = v.payload)
                              ? p.call(h, f, d)
                              : p) ||
                        void 0 === d
                      )
                        break e;
                      f = N({}, f, d);
                      break e;
                    case 2:
                      Zi = !0;
                  }
                }
                null !== s.callback &&
                  0 !== s.lane &&
                  ((e.flags |= 64),
                  null === (d = i.effects) ? (i.effects = [s]) : d.push(s));
              } else
                (h = {
                  eventTime: h,
                  lane: d,
                  tag: s.tag,
                  payload: s.payload,
                  callback: s.callback,
                  next: null,
                }),
                  null === c ? ((u = c = h), (l = f)) : (c = c.next = h),
                  (o |= d);
              if (null === (s = s.next)) {
                if (null === (s = i.shared.pending)) break;
                (s = (d = s).next),
                  (d.next = null),
                  (i.lastBaseUpdate = d),
                  (i.shared.pending = null);
              }
            }
            if (
              (null === c && (l = f),
              (i.baseState = l),
              (i.firstBaseUpdate = u),
              (i.lastBaseUpdate = c),
              null !== (t = i.shared.interleaved))
            ) {
              i = t;
              do {
                (o |= i.lane), (i = i.next);
              } while (i !== t);
            } else null === a && (i.shared.lanes = 0);
            (El |= o), (e.lanes = o), (e.memoizedState = f);
          }
        }
        function oa(e, t, n) {
          if (((e = t.effects), (t.effects = null), null !== e))
            for (t = 0; t < e.length; t++) {
              var r = e[t],
                i = r.callback;
              if (null !== i) {
                if (((r.callback = null), (r = n), "function" !== typeof i))
                  throw Error(a(191, i));
                i.call(r);
              }
            }
        }
        var sa = new r.Component().refs;
        function la(e, t, n, r) {
          (n =
            null === (n = n(r, (t = e.memoizedState))) || void 0 === n
              ? t
              : N({}, t, n)),
            (e.memoizedState = n),
            0 === e.lanes && (e.updateQueue.baseState = n);
        }
        var ua = {
          isMounted: function (e) {
            return !!(e = e._reactInternals) && je(e) === e;
          },
          enqueueSetState: function (e, t, n) {
            e = e._reactInternals;
            var r = jl(),
              i = Gl(e),
              a = ta(r, i);
            (a.payload = t),
              void 0 !== n && null !== n && (a.callback = n),
              na(e, a),
              null !== (t = Wl(e, i, r)) && ra(t, e, i);
          },
          enqueueReplaceState: function (e, t, n) {
            e = e._reactInternals;
            var r = jl(),
              i = Gl(e),
              a = ta(r, i);
            (a.tag = 1),
              (a.payload = t),
              void 0 !== n && null !== n && (a.callback = n),
              na(e, a),
              null !== (t = Wl(e, i, r)) && ra(t, e, i);
          },
          enqueueForceUpdate: function (e, t) {
            e = e._reactInternals;
            var n = jl(),
              r = Gl(e),
              i = ta(n, r);
            (i.tag = 2),
              void 0 !== t && null !== t && (i.callback = t),
              na(e, i),
              null !== (t = Wl(e, r, n)) && ra(t, e, r);
          },
        };
        function ca(e, t, n, r, i, a, o) {
          return "function" === typeof (e = e.stateNode).shouldComponentUpdate
            ? e.shouldComponentUpdate(r, a, o)
            : !t.prototype ||
                !t.prototype.isPureReactComponent ||
                !or(n, r) ||
                !or(i, a);
        }
        function fa(e, t, n) {
          var r = !1,
            i = Mi,
            a = t.contextType;
          return (
            "object" === typeof a && null !== a
              ? (a = $i(a))
              : ((i = Ai(t) ? Ti : Ei.current),
                (a = (r = null !== (r = t.contextTypes) && void 0 !== r)
                  ? Ci(e, i)
                  : Mi)),
            (t = new t(n, a)),
            (e.memoizedState =
              null !== t.state && void 0 !== t.state ? t.state : null),
            (t.updater = ua),
            (e.stateNode = t),
            (t._reactInternals = e),
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                i),
              (e.__reactInternalMemoizedMaskedChildContext = a)),
            t
          );
        }
        function da(e, t, n, r) {
          (e = t.state),
            "function" === typeof t.componentWillReceiveProps &&
              t.componentWillReceiveProps(n, r),
            "function" === typeof t.UNSAFE_componentWillReceiveProps &&
              t.UNSAFE_componentWillReceiveProps(n, r),
            t.state !== e && ua.enqueueReplaceState(t, t.state, null);
        }
        function ha(e, t, n, r) {
          var i = e.stateNode;
          (i.props = n), (i.state = e.memoizedState), (i.refs = sa), Ki(e);
          var a = t.contextType;
          "object" === typeof a && null !== a
            ? (i.context = $i(a))
            : ((a = Ai(t) ? Ti : Ei.current), (i.context = Ci(e, a))),
            (i.state = e.memoizedState),
            "function" === typeof (a = t.getDerivedStateFromProps) &&
              (la(e, t, a, n), (i.state = e.memoizedState)),
            "function" === typeof t.getDerivedStateFromProps ||
              "function" === typeof i.getSnapshotBeforeUpdate ||
              ("function" !== typeof i.UNSAFE_componentWillMount &&
                "function" !== typeof i.componentWillMount) ||
              ((t = i.state),
              "function" === typeof i.componentWillMount &&
                i.componentWillMount(),
              "function" === typeof i.UNSAFE_componentWillMount &&
                i.UNSAFE_componentWillMount(),
              t !== i.state && ua.enqueueReplaceState(i, i.state, null),
              aa(e, n, i, r),
              (i.state = e.memoizedState)),
            "function" === typeof i.componentDidMount && (e.flags |= 4194308);
        }
        var pa = [],
          va = 0,
          ma = null,
          ga = 0,
          ya = [],
          ba = 0,
          xa = null,
          wa = 1,
          _a = "";
        function Sa(e, t) {
          (pa[va++] = ga), (pa[va++] = ma), (ma = e), (ga = t);
        }
        function Ma(e, t, n) {
          (ya[ba++] = wa), (ya[ba++] = _a), (ya[ba++] = xa), (xa = e);
          var r = wa;
          e = _a;
          var i = 32 - ot(r) - 1;
          (r &= ~(1 << i)), (n += 1);
          var a = 32 - ot(t) + i;
          if (30 < a) {
            var o = i - (i % 5);
            (a = (r & ((1 << o) - 1)).toString(32)),
              (r >>= o),
              (i -= o),
              (wa = (1 << (32 - ot(t) + i)) | (n << i) | r),
              (_a = a + e);
          } else (wa = (1 << a) | (n << i) | r), (_a = e);
        }
        function Ea(e) {
          null !== e.return && (Sa(e, 1), Ma(e, 1, 0));
        }
        function ka(e) {
          for (; e === ma; )
            (ma = pa[--va]), (pa[va] = null), (ga = pa[--va]), (pa[va] = null);
          for (; e === xa; )
            (xa = ya[--ba]),
              (ya[ba] = null),
              (_a = ya[--ba]),
              (ya[ba] = null),
              (wa = ya[--ba]),
              (ya[ba] = null);
        }
        var Ta = null,
          Ca = null,
          Aa = !1,
          Pa = null;
        function La(e, t) {
          var n = xu(5, null, null, 0);
          (n.elementType = "DELETED"),
            (n.stateNode = t),
            (n.return = e),
            null === (t = e.deletions)
              ? ((e.deletions = [n]), (e.flags |= 16))
              : t.push(n);
        }
        function Ra(e, t) {
          switch (e.tag) {
            case 5:
              var n = e.type;
              return (
                null !==
                  (t =
                    1 !== t.nodeType ||
                    n.toLowerCase() !== t.nodeName.toLowerCase()
                      ? null
                      : t) &&
                ((e.stateNode = t), (Ta = e), (Ca = oi(t.firstChild)), !0)
              );
            case 6:
              return (
                null !==
                  (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) &&
                ((e.stateNode = t), (Ta = e), (Ca = null), !0)
              );
            case 13:
              return (
                null !== (t = 8 !== t.nodeType ? null : t) &&
                ((n = null !== xa ? { id: wa, overflow: _a } : null),
                (e.memoizedState = {
                  dehydrated: t,
                  treeContext: n,
                  retryLane: 1073741824,
                }),
                ((n = xu(18, null, null, 0)).stateNode = t),
                (n.return = e),
                (e.child = n),
                (Ta = e),
                (Ca = null),
                !0)
              );
            default:
              return !1;
          }
        }
        function Oa(e) {
          return 0 !== (1 & e.mode) && 0 === (128 & e.flags);
        }
        function za(e) {
          if (Aa) {
            var t = Ca;
            if (t) {
              var n = t;
              if (!Ra(e, t)) {
                if (Oa(e)) throw Error(a(418));
                t = oi(n.nextSibling);
                var r = Ta;
                t && Ra(e, t)
                  ? La(r, n)
                  : ((e.flags = (-4097 & e.flags) | 2), (Aa = !1), (Ta = e));
              }
            } else {
              if (Oa(e)) throw Error(a(418));
              (e.flags = (-4097 & e.flags) | 2), (Aa = !1), (Ta = e);
            }
          }
        }
        function Da(e) {
          for (
            e = e.return;
            null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;

          )
            e = e.return;
          Ta = e;
        }
        function Ia(e) {
          if (e !== Ta) return !1;
          if (!Aa) return Da(e), (Aa = !0), !1;
          var t;
          if (
            ((t = 3 !== e.tag) &&
              !(t = 5 !== e.tag) &&
              (t =
                "head" !== (t = e.type) &&
                "body" !== t &&
                !Kr(e.type, e.memoizedProps)),
            t && (t = Ca))
          ) {
            if (Oa(e)) {
              for (e = Ca; e; ) e = oi(e.nextSibling);
              throw Error(a(418));
            }
            for (; t; ) La(e, t), (t = oi(t.nextSibling));
          }
          if ((Da(e), 13 === e.tag)) {
            if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
              throw Error(a(317));
            e: {
              for (e = e.nextSibling, t = 0; e; ) {
                if (8 === e.nodeType) {
                  var n = e.data;
                  if ("/$" === n) {
                    if (0 === t) {
                      Ca = oi(e.nextSibling);
                      break e;
                    }
                    t--;
                  } else ("$" !== n && "$!" !== n && "$?" !== n) || t++;
                }
                e = e.nextSibling;
              }
              Ca = null;
            }
          } else Ca = Ta ? oi(e.stateNode.nextSibling) : null;
          return !0;
        }
        function Na() {
          (Ca = Ta = null), (Aa = !1);
        }
        function Fa(e) {
          null === Pa ? (Pa = [e]) : Pa.push(e);
        }
        function Ba(e, t, n) {
          if (
            null !== (e = n.ref) &&
            "function" !== typeof e &&
            "object" !== typeof e
          ) {
            if (n._owner) {
              if ((n = n._owner)) {
                if (1 !== n.tag) throw Error(a(309));
                var r = n.stateNode;
              }
              if (!r) throw Error(a(147, e));
              var i = r,
                o = "" + e;
              return null !== t &&
                null !== t.ref &&
                "function" === typeof t.ref &&
                t.ref._stringRef === o
                ? t.ref
                : ((t = function (e) {
                    var t = i.refs;
                    t === sa && (t = i.refs = {}),
                      null === e ? delete t[o] : (t[o] = e);
                  }),
                  (t._stringRef = o),
                  t);
            }
            if ("string" !== typeof e) throw Error(a(284));
            if (!n._owner) throw Error(a(290, e));
          }
          return e;
        }
        function Ha(e, t) {
          throw (
            ((e = Object.prototype.toString.call(t)),
            Error(
              a(
                31,
                "[object Object]" === e
                  ? "object with keys {" + Object.keys(t).join(", ") + "}"
                  : e
              )
            ))
          );
        }
        function Ua(e) {
          return (0, e._init)(e._payload);
        }
        function ja(e) {
          function t(t, n) {
            if (e) {
              var r = t.deletions;
              null === r ? ((t.deletions = [n]), (t.flags |= 16)) : r.push(n);
            }
          }
          function n(n, r) {
            if (!e) return null;
            for (; null !== r; ) t(n, r), (r = r.sibling);
            return null;
          }
          function r(e, t) {
            for (e = new Map(); null !== t; )
              null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                (t = t.sibling);
            return e;
          }
          function i(e, t) {
            return ((e = _u(e, t)).index = 0), (e.sibling = null), e;
          }
          function o(t, n, r) {
            return (
              (t.index = r),
              e
                ? null !== (r = t.alternate)
                  ? (r = r.index) < n
                    ? ((t.flags |= 2), n)
                    : r
                  : ((t.flags |= 2), n)
                : ((t.flags |= 1048576), n)
            );
          }
          function s(t) {
            return e && null === t.alternate && (t.flags |= 2), t;
          }
          function l(e, t, n, r) {
            return null === t || 6 !== t.tag
              ? (((t = ku(n, e.mode, r)).return = e), t)
              : (((t = i(t, n)).return = e), t);
          }
          function u(e, t, n, r) {
            var a = n.type;
            return a === S
              ? f(e, t, n.props.children, r, n.key)
              : null !== t &&
                (t.elementType === a ||
                  ("object" === typeof a &&
                    null !== a &&
                    a.$$typeof === R &&
                    Ua(a) === t.type))
              ? (((r = i(t, n.props)).ref = Ba(e, t, n)), (r.return = e), r)
              : (((r = Su(n.type, n.key, n.props, null, e.mode, r)).ref = Ba(
                  e,
                  t,
                  n
                )),
                (r.return = e),
                r);
          }
          function c(e, t, n, r) {
            return null === t ||
              4 !== t.tag ||
              t.stateNode.containerInfo !== n.containerInfo ||
              t.stateNode.implementation !== n.implementation
              ? (((t = Tu(n, e.mode, r)).return = e), t)
              : (((t = i(t, n.children || [])).return = e), t);
          }
          function f(e, t, n, r, a) {
            return null === t || 7 !== t.tag
              ? (((t = Mu(n, e.mode, r, a)).return = e), t)
              : (((t = i(t, n)).return = e), t);
          }
          function d(e, t, n) {
            if (("string" === typeof t && "" !== t) || "number" === typeof t)
              return ((t = ku("" + t, e.mode, n)).return = e), t;
            if ("object" === typeof t && null !== t) {
              switch (t.$$typeof) {
                case w:
                  return (
                    ((n = Su(t.type, t.key, t.props, null, e.mode, n)).ref = Ba(
                      e,
                      null,
                      t
                    )),
                    (n.return = e),
                    n
                  );
                case _:
                  return ((t = Tu(t, e.mode, n)).return = e), t;
                case R:
                  return d(e, (0, t._init)(t._payload), n);
              }
              if (te(t) || D(t))
                return ((t = Mu(t, e.mode, n, null)).return = e), t;
              Ha(e, t);
            }
            return null;
          }
          function h(e, t, n, r) {
            var i = null !== t ? t.key : null;
            if (("string" === typeof n && "" !== n) || "number" === typeof n)
              return null !== i ? null : l(e, t, "" + n, r);
            if ("object" === typeof n && null !== n) {
              switch (n.$$typeof) {
                case w:
                  return n.key === i ? u(e, t, n, r) : null;
                case _:
                  return n.key === i ? c(e, t, n, r) : null;
                case R:
                  return h(e, t, (i = n._init)(n._payload), r);
              }
              if (te(n) || D(n)) return null !== i ? null : f(e, t, n, r, null);
              Ha(e, n);
            }
            return null;
          }
          function p(e, t, n, r, i) {
            if (("string" === typeof r && "" !== r) || "number" === typeof r)
              return l(t, (e = e.get(n) || null), "" + r, i);
            if ("object" === typeof r && null !== r) {
              switch (r.$$typeof) {
                case w:
                  return u(
                    t,
                    (e = e.get(null === r.key ? n : r.key) || null),
                    r,
                    i
                  );
                case _:
                  return c(
                    t,
                    (e = e.get(null === r.key ? n : r.key) || null),
                    r,
                    i
                  );
                case R:
                  return p(e, t, n, (0, r._init)(r._payload), i);
              }
              if (te(r) || D(r))
                return f(t, (e = e.get(n) || null), r, i, null);
              Ha(t, r);
            }
            return null;
          }
          function v(i, a, s, l) {
            for (
              var u = null, c = null, f = a, v = (a = 0), m = null;
              null !== f && v < s.length;
              v++
            ) {
              f.index > v ? ((m = f), (f = null)) : (m = f.sibling);
              var g = h(i, f, s[v], l);
              if (null === g) {
                null === f && (f = m);
                break;
              }
              e && f && null === g.alternate && t(i, f),
                (a = o(g, a, v)),
                null === c ? (u = g) : (c.sibling = g),
                (c = g),
                (f = m);
            }
            if (v === s.length) return n(i, f), Aa && Sa(i, v), u;
            if (null === f) {
              for (; v < s.length; v++)
                null !== (f = d(i, s[v], l)) &&
                  ((a = o(f, a, v)),
                  null === c ? (u = f) : (c.sibling = f),
                  (c = f));
              return Aa && Sa(i, v), u;
            }
            for (f = r(i, f); v < s.length; v++)
              null !== (m = p(f, i, v, s[v], l)) &&
                (e &&
                  null !== m.alternate &&
                  f.delete(null === m.key ? v : m.key),
                (a = o(m, a, v)),
                null === c ? (u = m) : (c.sibling = m),
                (c = m));
            return (
              e &&
                f.forEach(function (e) {
                  return t(i, e);
                }),
              Aa && Sa(i, v),
              u
            );
          }
          function m(i, s, l, u) {
            var c = D(l);
            if ("function" !== typeof c) throw Error(a(150));
            if (null == (l = c.call(l))) throw Error(a(151));
            for (
              var f = (c = null), v = s, m = (s = 0), g = null, y = l.next();
              null !== v && !y.done;
              m++, y = l.next()
            ) {
              v.index > m ? ((g = v), (v = null)) : (g = v.sibling);
              var b = h(i, v, y.value, u);
              if (null === b) {
                null === v && (v = g);
                break;
              }
              e && v && null === b.alternate && t(i, v),
                (s = o(b, s, m)),
                null === f ? (c = b) : (f.sibling = b),
                (f = b),
                (v = g);
            }
            if (y.done) return n(i, v), Aa && Sa(i, m), c;
            if (null === v) {
              for (; !y.done; m++, y = l.next())
                null !== (y = d(i, y.value, u)) &&
                  ((s = o(y, s, m)),
                  null === f ? (c = y) : (f.sibling = y),
                  (f = y));
              return Aa && Sa(i, m), c;
            }
            for (v = r(i, v); !y.done; m++, y = l.next())
              null !== (y = p(v, i, m, y.value, u)) &&
                (e &&
                  null !== y.alternate &&
                  v.delete(null === y.key ? m : y.key),
                (s = o(y, s, m)),
                null === f ? (c = y) : (f.sibling = y),
                (f = y));
            return (
              e &&
                v.forEach(function (e) {
                  return t(i, e);
                }),
              Aa && Sa(i, m),
              c
            );
          }
          return function e(r, a, o, l) {
            if (
              ("object" === typeof o &&
                null !== o &&
                o.type === S &&
                null === o.key &&
                (o = o.props.children),
              "object" === typeof o && null !== o)
            ) {
              switch (o.$$typeof) {
                case w:
                  e: {
                    for (var u = o.key, c = a; null !== c; ) {
                      if (c.key === u) {
                        if ((u = o.type) === S) {
                          if (7 === c.tag) {
                            n(r, c.sibling),
                              ((a = i(c, o.props.children)).return = r),
                              (r = a);
                            break e;
                          }
                        } else if (
                          c.elementType === u ||
                          ("object" === typeof u &&
                            null !== u &&
                            u.$$typeof === R &&
                            Ua(u) === c.type)
                        ) {
                          n(r, c.sibling),
                            ((a = i(c, o.props)).ref = Ba(r, c, o)),
                            (a.return = r),
                            (r = a);
                          break e;
                        }
                        n(r, c);
                        break;
                      }
                      t(r, c), (c = c.sibling);
                    }
                    o.type === S
                      ? (((a = Mu(o.props.children, r.mode, l, o.key)).return =
                          r),
                        (r = a))
                      : (((l = Su(
                          o.type,
                          o.key,
                          o.props,
                          null,
                          r.mode,
                          l
                        )).ref = Ba(r, a, o)),
                        (l.return = r),
                        (r = l));
                  }
                  return s(r);
                case _:
                  e: {
                    for (c = o.key; null !== a; ) {
                      if (a.key === c) {
                        if (
                          4 === a.tag &&
                          a.stateNode.containerInfo === o.containerInfo &&
                          a.stateNode.implementation === o.implementation
                        ) {
                          n(r, a.sibling),
                            ((a = i(a, o.children || [])).return = r),
                            (r = a);
                          break e;
                        }
                        n(r, a);
                        break;
                      }
                      t(r, a), (a = a.sibling);
                    }
                    ((a = Tu(o, r.mode, l)).return = r), (r = a);
                  }
                  return s(r);
                case R:
                  return e(r, a, (c = o._init)(o._payload), l);
              }
              if (te(o)) return v(r, a, o, l);
              if (D(o)) return m(r, a, o, l);
              Ha(r, o);
            }
            return ("string" === typeof o && "" !== o) || "number" === typeof o
              ? ((o = "" + o),
                null !== a && 6 === a.tag
                  ? (n(r, a.sibling), ((a = i(a, o)).return = r), (r = a))
                  : (n(r, a), ((a = ku(o, r.mode, l)).return = r), (r = a)),
                s(r))
              : n(r, a);
          };
        }
        var Ga = ja(!0),
          Wa = ja(!1),
          Va = {},
          qa = wi(Va),
          Xa = wi(Va),
          Ya = wi(Va);
        function Ja(e) {
          if (e === Va) throw Error(a(174));
          return e;
        }
        function $a(e, t) {
          switch ((Si(Ya, t), Si(Xa, e), Si(qa, Va), (e = t.nodeType))) {
            case 9:
            case 11:
              t = (t = t.documentElement) ? t.namespaceURI : le(null, "");
              break;
            default:
              t = le(
                (t = (e = 8 === e ? t.parentNode : t).namespaceURI || null),
                (e = e.tagName)
              );
          }
          _i(qa), Si(qa, t);
        }
        function Qa() {
          _i(qa), _i(Xa), _i(Ya);
        }
        function Za(e) {
          Ja(Ya.current);
          var t = Ja(qa.current),
            n = le(t, e.type);
          t !== n && (Si(Xa, e), Si(qa, n));
        }
        function Ka(e) {
          Xa.current === e && (_i(qa), _i(Xa));
        }
        var eo = wi(0);
        function to(e) {
          for (var t = e; null !== t; ) {
            if (13 === t.tag) {
              var n = t.memoizedState;
              if (
                null !== n &&
                (null === (n = n.dehydrated) ||
                  "$?" === n.data ||
                  "$!" === n.data)
              )
                return t;
            } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
              if (0 !== (128 & t.flags)) return t;
            } else if (null !== t.child) {
              (t.child.return = t), (t = t.child);
              continue;
            }
            if (t === e) break;
            for (; null === t.sibling; ) {
              if (null === t.return || t.return === e) return null;
              t = t.return;
            }
            (t.sibling.return = t.return), (t = t.sibling);
          }
          return null;
        }
        var no = [];
        function ro() {
          for (var e = 0; e < no.length; e++)
            no[e]._workInProgressVersionPrimary = null;
          no.length = 0;
        }
        var io = x.ReactCurrentDispatcher,
          ao = x.ReactCurrentBatchConfig,
          oo = 0,
          so = null,
          lo = null,
          uo = null,
          co = !1,
          fo = !1,
          ho = 0,
          po = 0;
        function vo() {
          throw Error(a(321));
        }
        function mo(e, t) {
          if (null === t) return !1;
          for (var n = 0; n < t.length && n < e.length; n++)
            if (!ar(e[n], t[n])) return !1;
          return !0;
        }
        function go(e, t, n, r, i, o) {
          if (
            ((oo = o),
            (so = t),
            (t.memoizedState = null),
            (t.updateQueue = null),
            (t.lanes = 0),
            (io.current = null === e || null === e.memoizedState ? Ko : es),
            (e = n(r, i)),
            fo)
          ) {
            o = 0;
            do {
              if (((fo = !1), (ho = 0), 25 <= o)) throw Error(a(301));
              (o += 1),
                (uo = lo = null),
                (t.updateQueue = null),
                (io.current = ts),
                (e = n(r, i));
            } while (fo);
          }
          if (
            ((io.current = Zo),
            (t = null !== lo && null !== lo.next),
            (oo = 0),
            (uo = lo = so = null),
            (co = !1),
            t)
          )
            throw Error(a(300));
          return e;
        }
        function yo() {
          var e = 0 !== ho;
          return (ho = 0), e;
        }
        function bo() {
          var e = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null,
          };
          return (
            null === uo ? (so.memoizedState = uo = e) : (uo = uo.next = e), uo
          );
        }
        function xo() {
          if (null === lo) {
            var e = so.alternate;
            e = null !== e ? e.memoizedState : null;
          } else e = lo.next;
          var t = null === uo ? so.memoizedState : uo.next;
          if (null !== t) (uo = t), (lo = e);
          else {
            if (null === e) throw Error(a(310));
            (e = {
              memoizedState: (lo = e).memoizedState,
              baseState: lo.baseState,
              baseQueue: lo.baseQueue,
              queue: lo.queue,
              next: null,
            }),
              null === uo ? (so.memoizedState = uo = e) : (uo = uo.next = e);
          }
          return uo;
        }
        function wo(e, t) {
          return "function" === typeof t ? t(e) : t;
        }
        function _o(e) {
          var t = xo(),
            n = t.queue;
          if (null === n) throw Error(a(311));
          n.lastRenderedReducer = e;
          var r = lo,
            i = r.baseQueue,
            o = n.pending;
          if (null !== o) {
            if (null !== i) {
              var s = i.next;
              (i.next = o.next), (o.next = s);
            }
            (r.baseQueue = i = o), (n.pending = null);
          }
          if (null !== i) {
            (o = i.next), (r = r.baseState);
            var l = (s = null),
              u = null,
              c = o;
            do {
              var f = c.lane;
              if ((oo & f) === f)
                null !== u &&
                  (u = u.next =
                    {
                      lane: 0,
                      action: c.action,
                      hasEagerState: c.hasEagerState,
                      eagerState: c.eagerState,
                      next: null,
                    }),
                  (r = c.hasEagerState ? c.eagerState : e(r, c.action));
              else {
                var d = {
                  lane: f,
                  action: c.action,
                  hasEagerState: c.hasEagerState,
                  eagerState: c.eagerState,
                  next: null,
                };
                null === u ? ((l = u = d), (s = r)) : (u = u.next = d),
                  (so.lanes |= f),
                  (El |= f);
              }
              c = c.next;
            } while (null !== c && c !== o);
            null === u ? (s = r) : (u.next = l),
              ar(r, t.memoizedState) || (gs = !0),
              (t.memoizedState = r),
              (t.baseState = s),
              (t.baseQueue = u),
              (n.lastRenderedState = r);
          }
          if (null !== (e = n.interleaved)) {
            i = e;
            do {
              (o = i.lane), (so.lanes |= o), (El |= o), (i = i.next);
            } while (i !== e);
          } else null === i && (n.lanes = 0);
          return [t.memoizedState, n.dispatch];
        }
        function So(e) {
          var t = xo(),
            n = t.queue;
          if (null === n) throw Error(a(311));
          n.lastRenderedReducer = e;
          var r = n.dispatch,
            i = n.pending,
            o = t.memoizedState;
          if (null !== i) {
            n.pending = null;
            var s = (i = i.next);
            do {
              (o = e(o, s.action)), (s = s.next);
            } while (s !== i);
            ar(o, t.memoizedState) || (gs = !0),
              (t.memoizedState = o),
              null === t.baseQueue && (t.baseState = o),
              (n.lastRenderedState = o);
          }
          return [o, r];
        }
        function Mo() {}
        function Eo(e, t) {
          var n = so,
            r = xo(),
            i = t(),
            o = !ar(r.memoizedState, i);
          if (
            (o && ((r.memoizedState = i), (gs = !0)),
            (r = r.queue),
            Io(Co.bind(null, n, r, e), [e]),
            r.getSnapshot !== t ||
              o ||
              (null !== uo && 1 & uo.memoizedState.tag))
          ) {
            if (
              ((n.flags |= 2048),
              Lo(9, To.bind(null, n, r, i, t), void 0, null),
              null === yl)
            )
              throw Error(a(349));
            0 !== (30 & oo) || ko(n, t, i);
          }
          return i;
        }
        function ko(e, t, n) {
          (e.flags |= 16384),
            (e = { getSnapshot: t, value: n }),
            null === (t = so.updateQueue)
              ? ((t = { lastEffect: null, stores: null }),
                (so.updateQueue = t),
                (t.stores = [e]))
              : null === (n = t.stores)
              ? (t.stores = [e])
              : n.push(e);
        }
        function To(e, t, n, r) {
          (t.value = n), (t.getSnapshot = r), Ao(t) && Wl(e, 1, -1);
        }
        function Co(e, t, n) {
          return n(function () {
            Ao(t) && Wl(e, 1, -1);
          });
        }
        function Ao(e) {
          var t = e.getSnapshot;
          e = e.value;
          try {
            var n = t();
            return !ar(e, n);
          } catch (r) {
            return !0;
          }
        }
        function Po(e) {
          var t = bo();
          return (
            "function" === typeof e && (e = e()),
            (t.memoizedState = t.baseState = e),
            (e = {
              pending: null,
              interleaved: null,
              lanes: 0,
              dispatch: null,
              lastRenderedReducer: wo,
              lastRenderedState: e,
            }),
            (t.queue = e),
            (e = e.dispatch = Xo.bind(null, so, e)),
            [t.memoizedState, e]
          );
        }
        function Lo(e, t, n, r) {
          return (
            (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
            null === (t = so.updateQueue)
              ? ((t = { lastEffect: null, stores: null }),
                (so.updateQueue = t),
                (t.lastEffect = e.next = e))
              : null === (n = t.lastEffect)
              ? (t.lastEffect = e.next = e)
              : ((r = n.next), (n.next = e), (e.next = r), (t.lastEffect = e)),
            e
          );
        }
        function Ro() {
          return xo().memoizedState;
        }
        function Oo(e, t, n, r) {
          var i = bo();
          (so.flags |= e),
            (i.memoizedState = Lo(1 | t, n, void 0, void 0 === r ? null : r));
        }
        function zo(e, t, n, r) {
          var i = xo();
          r = void 0 === r ? null : r;
          var a = void 0;
          if (null !== lo) {
            var o = lo.memoizedState;
            if (((a = o.destroy), null !== r && mo(r, o.deps)))
              return void (i.memoizedState = Lo(t, n, a, r));
          }
          (so.flags |= e), (i.memoizedState = Lo(1 | t, n, a, r));
        }
        function Do(e, t) {
          return Oo(8390656, 8, e, t);
        }
        function Io(e, t) {
          return zo(2048, 8, e, t);
        }
        function No(e, t) {
          return zo(4, 2, e, t);
        }
        function Fo(e, t) {
          return zo(4, 4, e, t);
        }
        function Bo(e, t) {
          return "function" === typeof t
            ? ((e = e()),
              t(e),
              function () {
                t(null);
              })
            : null !== t && void 0 !== t
            ? ((e = e()),
              (t.current = e),
              function () {
                t.current = null;
              })
            : void 0;
        }
        function Ho(e, t, n) {
          return (
            (n = null !== n && void 0 !== n ? n.concat([e]) : null),
            zo(4, 4, Bo.bind(null, t, e), n)
          );
        }
        function Uo() {}
        function jo(e, t) {
          var n = xo();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && mo(t, r[1])
            ? r[0]
            : ((n.memoizedState = [e, t]), e);
        }
        function Go(e, t) {
          var n = xo();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && mo(t, r[1])
            ? r[0]
            : ((e = e()), (n.memoizedState = [e, t]), e);
        }
        function Wo(e, t) {
          var n = yt;
          (yt = 0 !== n && 4 > n ? n : 4), e(!0);
          var r = ao.transition;
          ao.transition = {};
          try {
            e(!1), t();
          } finally {
            (yt = n), (ao.transition = r);
          }
        }
        function Vo() {
          return xo().memoizedState;
        }
        function qo(e, t, n) {
          var r = Gl(e);
          (n = {
            lane: r,
            action: n,
            hasEagerState: !1,
            eagerState: null,
            next: null,
          }),
            Yo(e)
              ? Jo(t, n)
              : ($o(e, t, n),
                null !== (e = Wl(e, r, (n = jl()))) && Qo(e, t, r));
        }
        function Xo(e, t, n) {
          var r = Gl(e),
            i = {
              lane: r,
              action: n,
              hasEagerState: !1,
              eagerState: null,
              next: null,
            };
          if (Yo(e)) Jo(t, i);
          else {
            $o(e, t, i);
            var a = e.alternate;
            if (
              0 === e.lanes &&
              (null === a || 0 === a.lanes) &&
              null !== (a = t.lastRenderedReducer)
            )
              try {
                var o = t.lastRenderedState,
                  s = a(o, n);
                if (((i.hasEagerState = !0), (i.eagerState = s), ar(s, o)))
                  return;
              } catch (l) {}
            null !== (e = Wl(e, r, (n = jl()))) && Qo(e, t, r);
          }
        }
        function Yo(e) {
          var t = e.alternate;
          return e === so || (null !== t && t === so);
        }
        function Jo(e, t) {
          fo = co = !0;
          var n = e.pending;
          null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)),
            (e.pending = t);
        }
        function $o(e, t, n) {
          null !== yl && 0 !== (1 & e.mode) && 0 === (2 & gl)
            ? (null === (e = t.interleaved)
                ? ((n.next = n), null === Qi ? (Qi = [t]) : Qi.push(t))
                : ((n.next = e.next), (e.next = n)),
              (t.interleaved = n))
            : (null === (e = t.pending)
                ? (n.next = n)
                : ((n.next = e.next), (e.next = n)),
              (t.pending = n));
        }
        function Qo(e, t, n) {
          if (0 !== (4194240 & n)) {
            var r = t.lanes;
            (n |= r &= e.pendingLanes), (t.lanes = n), gt(e, n);
          }
        }
        var Zo = {
            readContext: $i,
            useCallback: vo,
            useContext: vo,
            useEffect: vo,
            useImperativeHandle: vo,
            useInsertionEffect: vo,
            useLayoutEffect: vo,
            useMemo: vo,
            useReducer: vo,
            useRef: vo,
            useState: vo,
            useDebugValue: vo,
            useDeferredValue: vo,
            useTransition: vo,
            useMutableSource: vo,
            useSyncExternalStore: vo,
            useId: vo,
            unstable_isNewReconciler: !1,
          },
          Ko = {
            readContext: $i,
            useCallback: function (e, t) {
              return (bo().memoizedState = [e, void 0 === t ? null : t]), e;
            },
            useContext: $i,
            useEffect: Do,
            useImperativeHandle: function (e, t, n) {
              return (
                (n = null !== n && void 0 !== n ? n.concat([e]) : null),
                Oo(4194308, 4, Bo.bind(null, t, e), n)
              );
            },
            useLayoutEffect: function (e, t) {
              return Oo(4194308, 4, e, t);
            },
            useInsertionEffect: function (e, t) {
              return Oo(4, 2, e, t);
            },
            useMemo: function (e, t) {
              var n = bo();
              return (
                (t = void 0 === t ? null : t),
                (e = e()),
                (n.memoizedState = [e, t]),
                e
              );
            },
            useReducer: function (e, t, n) {
              var r = bo();
              return (
                (t = void 0 !== n ? n(t) : t),
                (r.memoizedState = r.baseState = t),
                (e = {
                  pending: null,
                  interleaved: null,
                  lanes: 0,
                  dispatch: null,
                  lastRenderedReducer: e,
                  lastRenderedState: t,
                }),
                (r.queue = e),
                (e = e.dispatch = qo.bind(null, so, e)),
                [r.memoizedState, e]
              );
            },
            useRef: function (e) {
              return (e = { current: e }), (bo().memoizedState = e);
            },
            useState: Po,
            useDebugValue: Uo,
            useDeferredValue: function (e) {
              var t = Po(e),
                n = t[0],
                r = t[1];
              return (
                Do(
                  function () {
                    var t = ao.transition;
                    ao.transition = {};
                    try {
                      r(e);
                    } finally {
                      ao.transition = t;
                    }
                  },
                  [e]
                ),
                n
              );
            },
            useTransition: function () {
              var e = Po(!1),
                t = e[0];
              return (
                (e = Wo.bind(null, e[1])), (bo().memoizedState = e), [t, e]
              );
            },
            useMutableSource: function () {},
            useSyncExternalStore: function (e, t, n) {
              var r = so,
                i = bo();
              if (Aa) {
                if (void 0 === n) throw Error(a(407));
                n = n();
              } else {
                if (((n = t()), null === yl)) throw Error(a(349));
                0 !== (30 & oo) || ko(r, t, n);
              }
              i.memoizedState = n;
              var o = { value: n, getSnapshot: t };
              return (
                (i.queue = o),
                Do(Co.bind(null, r, o, e), [e]),
                (r.flags |= 2048),
                Lo(9, To.bind(null, r, o, n, t), void 0, null),
                n
              );
            },
            useId: function () {
              var e = bo(),
                t = yl.identifierPrefix;
              if (Aa) {
                var n = _a;
                (t =
                  ":" +
                  t +
                  "R" +
                  (n = (wa & ~(1 << (32 - ot(wa) - 1))).toString(32) + n)),
                  0 < (n = ho++) && (t += "H" + n.toString(32)),
                  (t += ":");
              } else t = ":" + t + "r" + (n = po++).toString(32) + ":";
              return (e.memoizedState = t);
            },
            unstable_isNewReconciler: !1,
          },
          es = {
            readContext: $i,
            useCallback: jo,
            useContext: $i,
            useEffect: Io,
            useImperativeHandle: Ho,
            useInsertionEffect: No,
            useLayoutEffect: Fo,
            useMemo: Go,
            useReducer: _o,
            useRef: Ro,
            useState: function () {
              return _o(wo);
            },
            useDebugValue: Uo,
            useDeferredValue: function (e) {
              var t = _o(wo),
                n = t[0],
                r = t[1];
              return (
                Io(
                  function () {
                    var t = ao.transition;
                    ao.transition = {};
                    try {
                      r(e);
                    } finally {
                      ao.transition = t;
                    }
                  },
                  [e]
                ),
                n
              );
            },
            useTransition: function () {
              return [_o(wo)[0], xo().memoizedState];
            },
            useMutableSource: Mo,
            useSyncExternalStore: Eo,
            useId: Vo,
            unstable_isNewReconciler: !1,
          },
          ts = {
            readContext: $i,
            useCallback: jo,
            useContext: $i,
            useEffect: Io,
            useImperativeHandle: Ho,
            useInsertionEffect: No,
            useLayoutEffect: Fo,
            useMemo: Go,
            useReducer: So,
            useRef: Ro,
            useState: function () {
              return So(wo);
            },
            useDebugValue: Uo,
            useDeferredValue: function (e) {
              var t = So(wo),
                n = t[0],
                r = t[1];
              return (
                Io(
                  function () {
                    var t = ao.transition;
                    ao.transition = {};
                    try {
                      r(e);
                    } finally {
                      ao.transition = t;
                    }
                  },
                  [e]
                ),
                n
              );
            },
            useTransition: function () {
              return [So(wo)[0], xo().memoizedState];
            },
            useMutableSource: Mo,
            useSyncExternalStore: Eo,
            useId: Vo,
            unstable_isNewReconciler: !1,
          };
        function ns(e, t) {
          try {
            var n = "",
              r = t;
            do {
              (n += U(r)), (r = r.return);
            } while (r);
            var i = n;
          } catch (a) {
            i = "\nError generating stack: " + a.message + "\n" + a.stack;
          }
          return { value: e, source: t, stack: i };
        }
        function rs(e, t) {
          try {
            console.error(t.value);
          } catch (n) {
            setTimeout(function () {
              throw n;
            });
          }
        }
        var is,
          as,
          os,
          ss = "function" === typeof WeakMap ? WeakMap : Map;
        function ls(e, t, n) {
          ((n = ta(-1, n)).tag = 3), (n.payload = { element: null });
          var r = t.value;
          return (
            (n.callback = function () {
              Rl || ((Rl = !0), (Ol = r)), rs(0, t);
            }),
            n
          );
        }
        function us(e, t, n) {
          (n = ta(-1, n)).tag = 3;
          var r = e.type.getDerivedStateFromError;
          if ("function" === typeof r) {
            var i = t.value;
            (n.payload = function () {
              return r(i);
            }),
              (n.callback = function () {
                rs(0, t);
              });
          }
          var a = e.stateNode;
          return (
            null !== a &&
              "function" === typeof a.componentDidCatch &&
              (n.callback = function () {
                rs(0, t),
                  "function" !== typeof r &&
                    (null === zl ? (zl = new Set([this])) : zl.add(this));
                var e = t.stack;
                this.componentDidCatch(t.value, {
                  componentStack: null !== e ? e : "",
                });
              }),
            n
          );
        }
        function cs(e, t, n) {
          var r = e.pingCache;
          if (null === r) {
            r = e.pingCache = new ss();
            var i = new Set();
            r.set(t, i);
          } else void 0 === (i = r.get(t)) && ((i = new Set()), r.set(t, i));
          i.has(n) || (i.add(n), (e = pu.bind(null, e, t, n)), t.then(e, e));
        }
        function fs(e) {
          do {
            var t;
            if (
              ((t = 13 === e.tag) &&
                (t = null === (t = e.memoizedState) || null !== t.dehydrated),
              t)
            )
              return e;
            e = e.return;
          } while (null !== e);
          return null;
        }
        function ds(e, t, n, r, i) {
          return 0 === (1 & e.mode)
            ? (e === t
                ? (e.flags |= 65536)
                : ((e.flags |= 128),
                  (n.flags |= 131072),
                  (n.flags &= -52805),
                  1 === n.tag &&
                    (null === n.alternate
                      ? (n.tag = 17)
                      : (((t = ta(-1, 1)).tag = 2), na(n, t))),
                  (n.lanes |= 1)),
              e)
            : ((e.flags |= 65536), (e.lanes = i), e);
        }
        function hs(e, t) {
          if (!Aa)
            switch (e.tailMode) {
              case "hidden":
                t = e.tail;
                for (var n = null; null !== t; )
                  null !== t.alternate && (n = t), (t = t.sibling);
                null === n ? (e.tail = null) : (n.sibling = null);
                break;
              case "collapsed":
                n = e.tail;
                for (var r = null; null !== n; )
                  null !== n.alternate && (r = n), (n = n.sibling);
                null === r
                  ? t || null === e.tail
                    ? (e.tail = null)
                    : (e.tail.sibling = null)
                  : (r.sibling = null);
            }
        }
        function ps(e) {
          var t = null !== e.alternate && e.alternate.child === e.child,
            n = 0,
            r = 0;
          if (t)
            for (var i = e.child; null !== i; )
              (n |= i.lanes | i.childLanes),
                (r |= 14680064 & i.subtreeFlags),
                (r |= 14680064 & i.flags),
                (i.return = e),
                (i = i.sibling);
          else
            for (i = e.child; null !== i; )
              (n |= i.lanes | i.childLanes),
                (r |= i.subtreeFlags),
                (r |= i.flags),
                (i.return = e),
                (i = i.sibling);
          return (e.subtreeFlags |= r), (e.childLanes = n), t;
        }
        function vs(e, t, n) {
          var r = t.pendingProps;
          switch ((ka(t), t.tag)) {
            case 2:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
              return ps(t), null;
            case 1:
            case 17:
              return Ai(t.type) && Pi(), ps(t), null;
            case 3:
              return (
                (r = t.stateNode),
                Qa(),
                _i(ki),
                _i(Ei),
                ro(),
                r.pendingContext &&
                  ((r.context = r.pendingContext), (r.pendingContext = null)),
                (null !== e && null !== e.child) ||
                  (Ia(t)
                    ? (t.flags |= 4)
                    : null === e ||
                      (e.memoizedState.isDehydrated && 0 === (256 & t.flags)) ||
                      ((t.flags |= 1024),
                      null !== Pa && (Jl(Pa), (Pa = null)))),
                ps(t),
                null
              );
            case 5:
              Ka(t);
              var i = Ja(Ya.current);
              if (((n = t.type), null !== e && null != t.stateNode))
                as(e, t, n, r),
                  e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              else {
                if (!r) {
                  if (null === t.stateNode) throw Error(a(166));
                  return ps(t), null;
                }
                if (((e = Ja(qa.current)), Ia(t))) {
                  (r = t.stateNode), (n = t.type);
                  var o = t.memoizedProps;
                  switch (
                    ((r[ui] = t), (r[ci] = o), (e = 0 !== (1 & t.mode)), n)
                  ) {
                    case "dialog":
                      Nr("cancel", r), Nr("close", r);
                      break;
                    case "iframe":
                    case "object":
                    case "embed":
                      Nr("load", r);
                      break;
                    case "video":
                    case "audio":
                      for (i = 0; i < Or.length; i++) Nr(Or[i], r);
                      break;
                    case "source":
                      Nr("error", r);
                      break;
                    case "img":
                    case "image":
                    case "link":
                      Nr("error", r), Nr("load", r);
                      break;
                    case "details":
                      Nr("toggle", r);
                      break;
                    case "input":
                      $(r, o), Nr("invalid", r);
                      break;
                    case "select":
                      (r._wrapperState = { wasMultiple: !!o.multiple }),
                        Nr("invalid", r);
                      break;
                    case "textarea":
                      ie(r, o), Nr("invalid", r);
                  }
                  for (var l in (ye(n, o), (i = null), o))
                    if (o.hasOwnProperty(l)) {
                      var u = o[l];
                      "children" === l
                        ? "string" === typeof u
                          ? r.textContent !== u &&
                            ($r(r.textContent, u, e), (i = ["children", u]))
                          : "number" === typeof u &&
                            r.textContent !== "" + u &&
                            ($r(r.textContent, u, e),
                            (i = ["children", "" + u]))
                        : s.hasOwnProperty(l) &&
                          null != u &&
                          "onScroll" === l &&
                          Nr("scroll", r);
                    }
                  switch (n) {
                    case "input":
                      q(r), K(r, o, !0);
                      break;
                    case "textarea":
                      q(r), oe(r);
                      break;
                    case "select":
                    case "option":
                      break;
                    default:
                      "function" === typeof o.onClick && (r.onclick = Qr);
                  }
                  (r = i), (t.updateQueue = r), null !== r && (t.flags |= 4);
                } else {
                  (l = 9 === i.nodeType ? i : i.ownerDocument),
                    "http://www.w3.org/1999/xhtml" === e && (e = se(n)),
                    "http://www.w3.org/1999/xhtml" === e
                      ? "script" === n
                        ? (((e = l.createElement("div")).innerHTML =
                            "<script></script>"),
                          (e = e.removeChild(e.firstChild)))
                        : "string" === typeof r.is
                        ? (e = l.createElement(n, { is: r.is }))
                        : ((e = l.createElement(n)),
                          "select" === n &&
                            ((l = e),
                            r.multiple
                              ? (l.multiple = !0)
                              : r.size && (l.size = r.size)))
                      : (e = l.createElementNS(e, n)),
                    (e[ui] = t),
                    (e[ci] = r),
                    is(e, t),
                    (t.stateNode = e);
                  e: {
                    switch (((l = be(n, r)), n)) {
                      case "dialog":
                        Nr("cancel", e), Nr("close", e), (i = r);
                        break;
                      case "iframe":
                      case "object":
                      case "embed":
                        Nr("load", e), (i = r);
                        break;
                      case "video":
                      case "audio":
                        for (i = 0; i < Or.length; i++) Nr(Or[i], e);
                        i = r;
                        break;
                      case "source":
                        Nr("error", e), (i = r);
                        break;
                      case "img":
                      case "image":
                      case "link":
                        Nr("error", e), Nr("load", e), (i = r);
                        break;
                      case "details":
                        Nr("toggle", e), (i = r);
                        break;
                      case "input":
                        $(e, r), (i = J(e, r)), Nr("invalid", e);
                        break;
                      case "option":
                      default:
                        i = r;
                        break;
                      case "select":
                        (e._wrapperState = { wasMultiple: !!r.multiple }),
                          (i = N({}, r, { value: void 0 })),
                          Nr("invalid", e);
                        break;
                      case "textarea":
                        ie(e, r), (i = re(e, r)), Nr("invalid", e);
                    }
                    for (o in (ye(n, i), (u = i)))
                      if (u.hasOwnProperty(o)) {
                        var c = u[o];
                        "style" === o
                          ? me(e, c)
                          : "dangerouslySetInnerHTML" === o
                          ? null != (c = c ? c.__html : void 0) && fe(e, c)
                          : "children" === o
                          ? "string" === typeof c
                            ? ("textarea" !== n || "" !== c) && de(e, c)
                            : "number" === typeof c && de(e, "" + c)
                          : "suppressContentEditableWarning" !== o &&
                            "suppressHydrationWarning" !== o &&
                            "autoFocus" !== o &&
                            (s.hasOwnProperty(o)
                              ? null != c && "onScroll" === o && Nr("scroll", e)
                              : null != c && b(e, o, c, l));
                      }
                    switch (n) {
                      case "input":
                        q(e), K(e, r, !1);
                        break;
                      case "textarea":
                        q(e), oe(e);
                        break;
                      case "option":
                        null != r.value &&
                          e.setAttribute("value", "" + W(r.value));
                        break;
                      case "select":
                        (e.multiple = !!r.multiple),
                          null != (o = r.value)
                            ? ne(e, !!r.multiple, o, !1)
                            : null != r.defaultValue &&
                              ne(e, !!r.multiple, r.defaultValue, !0);
                        break;
                      default:
                        "function" === typeof i.onClick && (e.onclick = Qr);
                    }
                    switch (n) {
                      case "button":
                      case "input":
                      case "select":
                      case "textarea":
                        r = !!r.autoFocus;
                        break e;
                      case "img":
                        r = !0;
                        break e;
                      default:
                        r = !1;
                    }
                  }
                  r && (t.flags |= 4);
                }
                null !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              }
              return ps(t), null;
            case 6:
              if (e && null != t.stateNode) os(0, t, e.memoizedProps, r);
              else {
                if ("string" !== typeof r && null === t.stateNode)
                  throw Error(a(166));
                if (((n = Ja(Ya.current)), Ja(qa.current), Ia(t))) {
                  if (
                    ((r = t.stateNode),
                    (n = t.memoizedProps),
                    (r[ui] = t),
                    (o = r.nodeValue !== n) && null !== (e = Ta))
                  )
                    switch (((l = 0 !== (1 & e.mode)), e.tag)) {
                      case 3:
                        $r(r.nodeValue, n, l);
                        break;
                      case 5:
                        !0 !== e.memoizedProps[void 0] && $r(r.nodeValue, n, l);
                    }
                  o && (t.flags |= 4);
                } else
                  ((r = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(
                    r
                  ))[ui] = t),
                    (t.stateNode = r);
              }
              return ps(t), null;
            case 13:
              if (
                (_i(eo),
                (r = t.memoizedState),
                Aa &&
                  null !== Ca &&
                  0 !== (1 & t.mode) &&
                  0 === (128 & t.flags))
              ) {
                for (r = Ca; r; ) r = oi(r.nextSibling);
                return Na(), (t.flags |= 98560), t;
              }
              if (null !== r && null !== r.dehydrated) {
                if (((r = Ia(t)), null === e)) {
                  if (!r) throw Error(a(318));
                  if (
                    !(r = null !== (r = t.memoizedState) ? r.dehydrated : null)
                  )
                    throw Error(a(317));
                  r[ui] = t;
                } else
                  Na(),
                    0 === (128 & t.flags) && (t.memoizedState = null),
                    (t.flags |= 4);
                return ps(t), null;
              }
              return (
                null !== Pa && (Jl(Pa), (Pa = null)),
                0 !== (128 & t.flags)
                  ? ((t.lanes = n), t)
                  : ((r = null !== r),
                    (n = !1),
                    null === e ? Ia(t) : (n = null !== e.memoizedState),
                    r &&
                      !n &&
                      ((t.child.flags |= 8192),
                      0 !== (1 & t.mode) &&
                        (null === e || 0 !== (1 & eo.current)
                          ? 0 === Sl && (Sl = 3)
                          : iu())),
                    null !== t.updateQueue && (t.flags |= 4),
                    ps(t),
                    null)
              );
            case 4:
              return (
                Qa(), null === e && Hr(t.stateNode.containerInfo), ps(t), null
              );
            case 10:
              return Xi(t.type._context), ps(t), null;
            case 19:
              if ((_i(eo), null === (o = t.memoizedState))) return ps(t), null;
              if (((r = 0 !== (128 & t.flags)), null === (l = o.rendering)))
                if (r) hs(o, !1);
                else {
                  if (0 !== Sl || (null !== e && 0 !== (128 & e.flags)))
                    for (e = t.child; null !== e; ) {
                      if (null !== (l = to(e))) {
                        for (
                          t.flags |= 128,
                            hs(o, !1),
                            null !== (r = l.updateQueue) &&
                              ((t.updateQueue = r), (t.flags |= 4)),
                            t.subtreeFlags = 0,
                            r = n,
                            n = t.child;
                          null !== n;

                        )
                          (e = r),
                            ((o = n).flags &= 14680066),
                            null === (l = o.alternate)
                              ? ((o.childLanes = 0),
                                (o.lanes = e),
                                (o.child = null),
                                (o.subtreeFlags = 0),
                                (o.memoizedProps = null),
                                (o.memoizedState = null),
                                (o.updateQueue = null),
                                (o.dependencies = null),
                                (o.stateNode = null))
                              : ((o.childLanes = l.childLanes),
                                (o.lanes = l.lanes),
                                (o.child = l.child),
                                (o.subtreeFlags = 0),
                                (o.deletions = null),
                                (o.memoizedProps = l.memoizedProps),
                                (o.memoizedState = l.memoizedState),
                                (o.updateQueue = l.updateQueue),
                                (o.type = l.type),
                                (e = l.dependencies),
                                (o.dependencies =
                                  null === e
                                    ? null
                                    : {
                                        lanes: e.lanes,
                                        firstContext: e.firstContext,
                                      })),
                            (n = n.sibling);
                        return Si(eo, (1 & eo.current) | 2), t.child;
                      }
                      e = e.sibling;
                    }
                  null !== o.tail &&
                    Qe() > Ll &&
                    ((t.flags |= 128),
                    (r = !0),
                    hs(o, !1),
                    (t.lanes = 4194304));
                }
              else {
                if (!r)
                  if (null !== (e = to(l))) {
                    if (
                      ((t.flags |= 128),
                      (r = !0),
                      null !== (n = e.updateQueue) &&
                        ((t.updateQueue = n), (t.flags |= 4)),
                      hs(o, !0),
                      null === o.tail &&
                        "hidden" === o.tailMode &&
                        !l.alternate &&
                        !Aa)
                    )
                      return ps(t), null;
                  } else
                    2 * Qe() - o.renderingStartTime > Ll &&
                      1073741824 !== n &&
                      ((t.flags |= 128),
                      (r = !0),
                      hs(o, !1),
                      (t.lanes = 4194304));
                o.isBackwards
                  ? ((l.sibling = t.child), (t.child = l))
                  : (null !== (n = o.last) ? (n.sibling = l) : (t.child = l),
                    (o.last = l));
              }
              return null !== o.tail
                ? ((t = o.tail),
                  (o.rendering = t),
                  (o.tail = t.sibling),
                  (o.renderingStartTime = Qe()),
                  (t.sibling = null),
                  (n = eo.current),
                  Si(eo, r ? (1 & n) | 2 : 1 & n),
                  t)
                : (ps(t), null);
            case 22:
            case 23:
              return (
                eu(),
                (r = null !== t.memoizedState),
                null !== e &&
                  (null !== e.memoizedState) !== r &&
                  (t.flags |= 8192),
                r && 0 !== (1 & t.mode)
                  ? 0 !== (1073741824 & wl) &&
                    (ps(t), 6 & t.subtreeFlags && (t.flags |= 8192))
                  : ps(t),
                null
              );
            case 24:
            case 25:
              return null;
          }
          throw Error(a(156, t.tag));
        }
        (is = function (e, t) {
          for (var n = t.child; null !== n; ) {
            if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
            else if (4 !== n.tag && null !== n.child) {
              (n.child.return = n), (n = n.child);
              continue;
            }
            if (n === t) break;
            for (; null === n.sibling; ) {
              if (null === n.return || n.return === t) return;
              n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
          }
        }),
          (as = function (e, t, n, r) {
            var i = e.memoizedProps;
            if (i !== r) {
              (e = t.stateNode), Ja(qa.current);
              var a,
                o = null;
              switch (n) {
                case "input":
                  (i = J(e, i)), (r = J(e, r)), (o = []);
                  break;
                case "select":
                  (i = N({}, i, { value: void 0 })),
                    (r = N({}, r, { value: void 0 })),
                    (o = []);
                  break;
                case "textarea":
                  (i = re(e, i)), (r = re(e, r)), (o = []);
                  break;
                default:
                  "function" !== typeof i.onClick &&
                    "function" === typeof r.onClick &&
                    (e.onclick = Qr);
              }
              for (c in (ye(n, r), (n = null), i))
                if (!r.hasOwnProperty(c) && i.hasOwnProperty(c) && null != i[c])
                  if ("style" === c) {
                    var l = i[c];
                    for (a in l)
                      l.hasOwnProperty(a) && (n || (n = {}), (n[a] = ""));
                  } else
                    "dangerouslySetInnerHTML" !== c &&
                      "children" !== c &&
                      "suppressContentEditableWarning" !== c &&
                      "suppressHydrationWarning" !== c &&
                      "autoFocus" !== c &&
                      (s.hasOwnProperty(c)
                        ? o || (o = [])
                        : (o = o || []).push(c, null));
              for (c in r) {
                var u = r[c];
                if (
                  ((l = null != i ? i[c] : void 0),
                  r.hasOwnProperty(c) && u !== l && (null != u || null != l))
                )
                  if ("style" === c)
                    if (l) {
                      for (a in l)
                        !l.hasOwnProperty(a) ||
                          (u && u.hasOwnProperty(a)) ||
                          (n || (n = {}), (n[a] = ""));
                      for (a in u)
                        u.hasOwnProperty(a) &&
                          l[a] !== u[a] &&
                          (n || (n = {}), (n[a] = u[a]));
                    } else n || (o || (o = []), o.push(c, n)), (n = u);
                  else
                    "dangerouslySetInnerHTML" === c
                      ? ((u = u ? u.__html : void 0),
                        (l = l ? l.__html : void 0),
                        null != u && l !== u && (o = o || []).push(c, u))
                      : "children" === c
                      ? ("string" !== typeof u && "number" !== typeof u) ||
                        (o = o || []).push(c, "" + u)
                      : "suppressContentEditableWarning" !== c &&
                        "suppressHydrationWarning" !== c &&
                        (s.hasOwnProperty(c)
                          ? (null != u && "onScroll" === c && Nr("scroll", e),
                            o || l === u || (o = []))
                          : (o = o || []).push(c, u));
              }
              n && (o = o || []).push("style", n);
              var c = o;
              (t.updateQueue = c) && (t.flags |= 4);
            }
          }),
          (os = function (e, t, n, r) {
            n !== r && (t.flags |= 4);
          });
        var ms = x.ReactCurrentOwner,
          gs = !1;
        function ys(e, t, n, r) {
          t.child = null === e ? Wa(t, null, n, r) : Ga(t, e.child, n, r);
        }
        function bs(e, t, n, r, i) {
          n = n.render;
          var a = t.ref;
          return (
            Ji(t, i),
            (r = go(e, t, n, r, a, i)),
            (n = yo()),
            null === e || gs
              ? (Aa && n && Ea(t), (t.flags |= 1), ys(e, t, r, i), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -2053),
                (e.lanes &= ~i),
                Bs(e, t, i))
          );
        }
        function xs(e, t, n, r, i) {
          if (null === e) {
            var a = n.type;
            return "function" !== typeof a ||
              wu(a) ||
              void 0 !== a.defaultProps ||
              null !== n.compare ||
              void 0 !== n.defaultProps
              ? (((e = Su(n.type, null, r, t, t.mode, i)).ref = t.ref),
                (e.return = t),
                (t.child = e))
              : ((t.tag = 15), (t.type = a), ws(e, t, a, r, i));
          }
          if (((a = e.child), 0 === (e.lanes & i))) {
            var o = a.memoizedProps;
            if (
              (n = null !== (n = n.compare) ? n : or)(o, r) &&
              e.ref === t.ref
            )
              return Bs(e, t, i);
          }
          return (
            (t.flags |= 1),
            ((e = _u(a, r)).ref = t.ref),
            (e.return = t),
            (t.child = e)
          );
        }
        function ws(e, t, n, r, i) {
          if (null !== e && or(e.memoizedProps, r) && e.ref === t.ref) {
            if (((gs = !1), 0 === (e.lanes & i)))
              return (t.lanes = e.lanes), Bs(e, t, i);
            0 !== (131072 & e.flags) && (gs = !0);
          }
          return Ms(e, t, n, r, i);
        }
        function _s(e, t, n) {
          var r = t.pendingProps,
            i = r.children,
            a = null !== e ? e.memoizedState : null;
          if ("hidden" === r.mode)
            if (0 === (1 & t.mode))
              (t.memoizedState = { baseLanes: 0, cachePool: null }),
                Si(_l, wl),
                (wl |= n);
            else {
              if (0 === (1073741824 & n))
                return (
                  (e = null !== a ? a.baseLanes | n : n),
                  (t.lanes = t.childLanes = 1073741824),
                  (t.memoizedState = { baseLanes: e, cachePool: null }),
                  (t.updateQueue = null),
                  Si(_l, wl),
                  (wl |= e),
                  null
                );
              (t.memoizedState = { baseLanes: 0, cachePool: null }),
                (r = null !== a ? a.baseLanes : n),
                Si(_l, wl),
                (wl |= r);
            }
          else
            null !== a
              ? ((r = a.baseLanes | n), (t.memoizedState = null))
              : (r = n),
              Si(_l, wl),
              (wl |= r);
          return ys(e, t, i, n), t.child;
        }
        function Ss(e, t) {
          var n = t.ref;
          ((null === e && null !== n) || (null !== e && e.ref !== n)) &&
            ((t.flags |= 512), (t.flags |= 2097152));
        }
        function Ms(e, t, n, r, i) {
          var a = Ai(n) ? Ti : Ei.current;
          return (
            (a = Ci(t, a)),
            Ji(t, i),
            (n = go(e, t, n, r, a, i)),
            (r = yo()),
            null === e || gs
              ? (Aa && r && Ea(t), (t.flags |= 1), ys(e, t, n, i), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -2053),
                (e.lanes &= ~i),
                Bs(e, t, i))
          );
        }
        function Es(e, t, n, r, i) {
          if (Ai(n)) {
            var a = !0;
            Oi(t);
          } else a = !1;
          if ((Ji(t, i), null === t.stateNode))
            null !== e &&
              ((e.alternate = null), (t.alternate = null), (t.flags |= 2)),
              fa(t, n, r),
              ha(t, n, r, i),
              (r = !0);
          else if (null === e) {
            var o = t.stateNode,
              s = t.memoizedProps;
            o.props = s;
            var l = o.context,
              u = n.contextType;
            "object" === typeof u && null !== u
              ? (u = $i(u))
              : (u = Ci(t, (u = Ai(n) ? Ti : Ei.current)));
            var c = n.getDerivedStateFromProps,
              f =
                "function" === typeof c ||
                "function" === typeof o.getSnapshotBeforeUpdate;
            f ||
              ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof o.componentWillReceiveProps) ||
              ((s !== r || l !== u) && da(t, o, r, u)),
              (Zi = !1);
            var d = t.memoizedState;
            (o.state = d),
              aa(t, r, o, i),
              (l = t.memoizedState),
              s !== r || d !== l || ki.current || Zi
                ? ("function" === typeof c &&
                    (la(t, n, c, r), (l = t.memoizedState)),
                  (s = Zi || ca(t, n, s, r, d, l, u))
                    ? (f ||
                        ("function" !== typeof o.UNSAFE_componentWillMount &&
                          "function" !== typeof o.componentWillMount) ||
                        ("function" === typeof o.componentWillMount &&
                          o.componentWillMount(),
                        "function" === typeof o.UNSAFE_componentWillMount &&
                          o.UNSAFE_componentWillMount()),
                      "function" === typeof o.componentDidMount &&
                        (t.flags |= 4194308))
                    : ("function" === typeof o.componentDidMount &&
                        (t.flags |= 4194308),
                      (t.memoizedProps = r),
                      (t.memoizedState = l)),
                  (o.props = r),
                  (o.state = l),
                  (o.context = u),
                  (r = s))
                : ("function" === typeof o.componentDidMount &&
                    (t.flags |= 4194308),
                  (r = !1));
          } else {
            (o = t.stateNode),
              ea(e, t),
              (s = t.memoizedProps),
              (u = t.type === t.elementType ? s : Ui(t.type, s)),
              (o.props = u),
              (f = t.pendingProps),
              (d = o.context),
              "object" === typeof (l = n.contextType) && null !== l
                ? (l = $i(l))
                : (l = Ci(t, (l = Ai(n) ? Ti : Ei.current)));
            var h = n.getDerivedStateFromProps;
            (c =
              "function" === typeof h ||
              "function" === typeof o.getSnapshotBeforeUpdate) ||
              ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof o.componentWillReceiveProps) ||
              ((s !== f || d !== l) && da(t, o, r, l)),
              (Zi = !1),
              (d = t.memoizedState),
              (o.state = d),
              aa(t, r, o, i);
            var p = t.memoizedState;
            s !== f || d !== p || ki.current || Zi
              ? ("function" === typeof h &&
                  (la(t, n, h, r), (p = t.memoizedState)),
                (u = Zi || ca(t, n, u, r, d, p, l) || !1)
                  ? (c ||
                      ("function" !== typeof o.UNSAFE_componentWillUpdate &&
                        "function" !== typeof o.componentWillUpdate) ||
                      ("function" === typeof o.componentWillUpdate &&
                        o.componentWillUpdate(r, p, l),
                      "function" === typeof o.UNSAFE_componentWillUpdate &&
                        o.UNSAFE_componentWillUpdate(r, p, l)),
                    "function" === typeof o.componentDidUpdate &&
                      (t.flags |= 4),
                    "function" === typeof o.getSnapshotBeforeUpdate &&
                      (t.flags |= 1024))
                  : ("function" !== typeof o.componentDidUpdate ||
                      (s === e.memoizedProps && d === e.memoizedState) ||
                      (t.flags |= 4),
                    "function" !== typeof o.getSnapshotBeforeUpdate ||
                      (s === e.memoizedProps && d === e.memoizedState) ||
                      (t.flags |= 1024),
                    (t.memoizedProps = r),
                    (t.memoizedState = p)),
                (o.props = r),
                (o.state = p),
                (o.context = l),
                (r = u))
              : ("function" !== typeof o.componentDidUpdate ||
                  (s === e.memoizedProps && d === e.memoizedState) ||
                  (t.flags |= 4),
                "function" !== typeof o.getSnapshotBeforeUpdate ||
                  (s === e.memoizedProps && d === e.memoizedState) ||
                  (t.flags |= 1024),
                (r = !1));
          }
          return ks(e, t, n, r, a, i);
        }
        function ks(e, t, n, r, i, a) {
          Ss(e, t);
          var o = 0 !== (128 & t.flags);
          if (!r && !o) return i && zi(t, n, !1), Bs(e, t, a);
          (r = t.stateNode), (ms.current = t);
          var s =
            o && "function" !== typeof n.getDerivedStateFromError
              ? null
              : r.render();
          return (
            (t.flags |= 1),
            null !== e && o
              ? ((t.child = Ga(t, e.child, null, a)),
                (t.child = Ga(t, null, s, a)))
              : ys(e, t, s, a),
            (t.memoizedState = r.state),
            i && zi(t, n, !0),
            t.child
          );
        }
        function Ts(e) {
          var t = e.stateNode;
          t.pendingContext
            ? Li(0, t.pendingContext, t.pendingContext !== t.context)
            : t.context && Li(0, t.context, !1),
            $a(e, t.containerInfo);
        }
        function Cs(e, t, n, r, i) {
          return Na(), Fa(i), (t.flags |= 256), ys(e, t, n, r), t.child;
        }
        var As = { dehydrated: null, treeContext: null, retryLane: 0 };
        function Ps(e) {
          return { baseLanes: e, cachePool: null };
        }
        function Ls(e, t, n) {
          var r,
            i = t.pendingProps,
            o = eo.current,
            s = !1,
            l = 0 !== (128 & t.flags);
          if (
            ((r = l) ||
              (r = (null === e || null !== e.memoizedState) && 0 !== (2 & o)),
            r
              ? ((s = !0), (t.flags &= -129))
              : (null !== e && null === e.memoizedState) || (o |= 1),
            Si(eo, 1 & o),
            null === e)
          )
            return (
              za(t),
              null !== (e = t.memoizedState) && null !== (e = e.dehydrated)
                ? (0 === (1 & t.mode)
                    ? (t.lanes = 1)
                    : "$!" === e.data
                    ? (t.lanes = 8)
                    : (t.lanes = 1073741824),
                  null)
                : ((o = i.children),
                  (e = i.fallback),
                  s
                    ? ((i = t.mode),
                      (s = t.child),
                      (o = { mode: "hidden", children: o }),
                      0 === (1 & i) && null !== s
                        ? ((s.childLanes = 0), (s.pendingProps = o))
                        : (s = Eu(o, i, 0, null)),
                      (e = Mu(e, i, n, null)),
                      (s.return = t),
                      (e.return = t),
                      (s.sibling = e),
                      (t.child = s),
                      (t.child.memoizedState = Ps(n)),
                      (t.memoizedState = As),
                      e)
                    : Rs(t, o))
            );
          if (null !== (o = e.memoizedState)) {
            if (null !== (r = o.dehydrated)) {
              if (l)
                return 256 & t.flags
                  ? ((t.flags &= -257), Ds(e, t, n, Error(a(422))))
                  : null !== t.memoizedState
                  ? ((t.child = e.child), (t.flags |= 128), null)
                  : ((s = i.fallback),
                    (o = t.mode),
                    (i = Eu(
                      { mode: "visible", children: i.children },
                      o,
                      0,
                      null
                    )),
                    ((s = Mu(s, o, n, null)).flags |= 2),
                    (i.return = t),
                    (s.return = t),
                    (i.sibling = s),
                    (t.child = i),
                    0 !== (1 & t.mode) && Ga(t, e.child, null, n),
                    (t.child.memoizedState = Ps(n)),
                    (t.memoizedState = As),
                    s);
              if (0 === (1 & t.mode)) t = Ds(e, t, n, null);
              else if ("$!" === r.data) t = Ds(e, t, n, Error(a(419)));
              else if (((i = 0 !== (n & e.childLanes)), gs || i)) {
                if (null !== (i = yl)) {
                  switch (n & -n) {
                    case 4:
                      s = 2;
                      break;
                    case 16:
                      s = 8;
                      break;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                      s = 32;
                      break;
                    case 536870912:
                      s = 268435456;
                      break;
                    default:
                      s = 0;
                  }
                  0 !== (i = 0 !== (s & (i.suspendedLanes | n)) ? 0 : s) &&
                    i !== o.retryLane &&
                    ((o.retryLane = i), Wl(e, i, -1));
                }
                iu(), (t = Ds(e, t, n, Error(a(421))));
              } else
                "$?" === r.data
                  ? ((t.flags |= 128),
                    (t.child = e.child),
                    (t = mu.bind(null, e)),
                    (r._reactRetry = t),
                    (t = null))
                  : ((n = o.treeContext),
                    (Ca = oi(r.nextSibling)),
                    (Ta = t),
                    (Aa = !0),
                    (Pa = null),
                    null !== n &&
                      ((ya[ba++] = wa),
                      (ya[ba++] = _a),
                      (ya[ba++] = xa),
                      (wa = n.id),
                      (_a = n.overflow),
                      (xa = t)),
                    ((t = Rs(t, t.pendingProps.children)).flags |= 4096));
              return t;
            }
            return s
              ? ((i = zs(e, t, i.children, i.fallback, n)),
                (s = t.child),
                (o = e.child.memoizedState),
                (s.memoizedState =
                  null === o
                    ? Ps(n)
                    : { baseLanes: o.baseLanes | n, cachePool: null }),
                (s.childLanes = e.childLanes & ~n),
                (t.memoizedState = As),
                i)
              : ((n = Os(e, t, i.children, n)), (t.memoizedState = null), n);
          }
          return s
            ? ((i = zs(e, t, i.children, i.fallback, n)),
              (s = t.child),
              (o = e.child.memoizedState),
              (s.memoizedState =
                null === o
                  ? Ps(n)
                  : { baseLanes: o.baseLanes | n, cachePool: null }),
              (s.childLanes = e.childLanes & ~n),
              (t.memoizedState = As),
              i)
            : ((n = Os(e, t, i.children, n)), (t.memoizedState = null), n);
        }
        function Rs(e, t) {
          return (
            ((t = Eu(
              { mode: "visible", children: t },
              e.mode,
              0,
              null
            )).return = e),
            (e.child = t)
          );
        }
        function Os(e, t, n, r) {
          var i = e.child;
          return (
            (e = i.sibling),
            (n = _u(i, { mode: "visible", children: n })),
            0 === (1 & t.mode) && (n.lanes = r),
            (n.return = t),
            (n.sibling = null),
            null !== e &&
              (null === (r = t.deletions)
                ? ((t.deletions = [e]), (t.flags |= 16))
                : r.push(e)),
            (t.child = n)
          );
        }
        function zs(e, t, n, r, i) {
          var a = t.mode,
            o = (e = e.child).sibling,
            s = { mode: "hidden", children: n };
          return (
            0 === (1 & a) && t.child !== e
              ? (((n = t.child).childLanes = 0),
                (n.pendingProps = s),
                (t.deletions = null))
              : ((n = _u(e, s)).subtreeFlags = 14680064 & e.subtreeFlags),
            null !== o ? (r = _u(o, r)) : ((r = Mu(r, a, i, null)).flags |= 2),
            (r.return = t),
            (n.return = t),
            (n.sibling = r),
            (t.child = n),
            r
          );
        }
        function Ds(e, t, n, r) {
          return (
            null !== r && Fa(r),
            Ga(t, e.child, null, n),
            ((e = Rs(t, t.pendingProps.children)).flags |= 2),
            (t.memoizedState = null),
            e
          );
        }
        function Is(e, t, n) {
          e.lanes |= t;
          var r = e.alternate;
          null !== r && (r.lanes |= t), Yi(e.return, t, n);
        }
        function Ns(e, t, n, r, i) {
          var a = e.memoizedState;
          null === a
            ? (e.memoizedState = {
                isBackwards: t,
                rendering: null,
                renderingStartTime: 0,
                last: r,
                tail: n,
                tailMode: i,
              })
            : ((a.isBackwards = t),
              (a.rendering = null),
              (a.renderingStartTime = 0),
              (a.last = r),
              (a.tail = n),
              (a.tailMode = i));
        }
        function Fs(e, t, n) {
          var r = t.pendingProps,
            i = r.revealOrder,
            a = r.tail;
          if ((ys(e, t, r.children, n), 0 !== (2 & (r = eo.current))))
            (r = (1 & r) | 2), (t.flags |= 128);
          else {
            if (null !== e && 0 !== (128 & e.flags))
              e: for (e = t.child; null !== e; ) {
                if (13 === e.tag) null !== e.memoizedState && Is(e, n, t);
                else if (19 === e.tag) Is(e, n, t);
                else if (null !== e.child) {
                  (e.child.return = e), (e = e.child);
                  continue;
                }
                if (e === t) break e;
                for (; null === e.sibling; ) {
                  if (null === e.return || e.return === t) break e;
                  e = e.return;
                }
                (e.sibling.return = e.return), (e = e.sibling);
              }
            r &= 1;
          }
          if ((Si(eo, r), 0 === (1 & t.mode))) t.memoizedState = null;
          else
            switch (i) {
              case "forwards":
                for (n = t.child, i = null; null !== n; )
                  null !== (e = n.alternate) && null === to(e) && (i = n),
                    (n = n.sibling);
                null === (n = i)
                  ? ((i = t.child), (t.child = null))
                  : ((i = n.sibling), (n.sibling = null)),
                  Ns(t, !1, i, n, a);
                break;
              case "backwards":
                for (n = null, i = t.child, t.child = null; null !== i; ) {
                  if (null !== (e = i.alternate) && null === to(e)) {
                    t.child = i;
                    break;
                  }
                  (e = i.sibling), (i.sibling = n), (n = i), (i = e);
                }
                Ns(t, !0, n, null, a);
                break;
              case "together":
                Ns(t, !1, null, null, void 0);
                break;
              default:
                t.memoizedState = null;
            }
          return t.child;
        }
        function Bs(e, t, n) {
          if (
            (null !== e && (t.dependencies = e.dependencies),
            (El |= t.lanes),
            0 === (n & t.childLanes))
          )
            return null;
          if (null !== e && t.child !== e.child) throw Error(a(153));
          if (null !== t.child) {
            for (
              n = _u((e = t.child), e.pendingProps), t.child = n, n.return = t;
              null !== e.sibling;

            )
              (e = e.sibling),
                ((n = n.sibling = _u(e, e.pendingProps)).return = t);
            n.sibling = null;
          }
          return t.child;
        }
        function Hs(e, t) {
          switch ((ka(t), t.tag)) {
            case 1:
              return (
                Ai(t.type) && Pi(),
                65536 & (e = t.flags)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null
              );
            case 3:
              return (
                Qa(),
                _i(ki),
                _i(Ei),
                ro(),
                0 !== (65536 & (e = t.flags)) && 0 === (128 & e)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null
              );
            case 5:
              return Ka(t), null;
            case 13:
              if (
                (_i(eo),
                null !== (e = t.memoizedState) && null !== e.dehydrated)
              ) {
                if (null === t.alternate) throw Error(a(340));
                Na();
              }
              return 65536 & (e = t.flags)
                ? ((t.flags = (-65537 & e) | 128), t)
                : null;
            case 19:
              return _i(eo), null;
            case 4:
              return Qa(), null;
            case 10:
              return Xi(t.type._context), null;
            case 22:
            case 23:
              return eu(), null;
            default:
              return null;
          }
        }
        var Us = !1,
          js = !1,
          Gs = "function" === typeof WeakSet ? WeakSet : Set,
          Ws = null;
        function Vs(e, t) {
          var n = e.ref;
          if (null !== n)
            if ("function" === typeof n)
              try {
                n(null);
              } catch (r) {
                hu(e, t, r);
              }
            else n.current = null;
        }
        function qs(e, t, n) {
          try {
            n();
          } catch (r) {
            hu(e, t, r);
          }
        }
        var Xs = !1;
        function Ys(e, t, n) {
          var r = t.updateQueue;
          if (null !== (r = null !== r ? r.lastEffect : null)) {
            var i = (r = r.next);
            do {
              if ((i.tag & e) === e) {
                var a = i.destroy;
                (i.destroy = void 0), void 0 !== a && qs(t, n, a);
              }
              i = i.next;
            } while (i !== r);
          }
        }
        function Js(e, t) {
          if (
            null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)
          ) {
            var n = (t = t.next);
            do {
              if ((n.tag & e) === e) {
                var r = n.create;
                n.destroy = r();
              }
              n = n.next;
            } while (n !== t);
          }
        }
        function $s(e) {
          var t = e.ref;
          if (null !== t) {
            var n = e.stateNode;
            e.tag, (e = n), "function" === typeof t ? t(e) : (t.current = e);
          }
        }
        function Qs(e, t, n) {
          if (at && "function" === typeof at.onCommitFiberUnmount)
            try {
              at.onCommitFiberUnmount(it, t);
            } catch (o) {}
          switch (t.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
              if (null !== (e = t.updateQueue) && null !== (e = e.lastEffect)) {
                var r = (e = e.next);
                do {
                  var i = r,
                    a = i.destroy;
                  (i = i.tag),
                    void 0 !== a &&
                      (0 !== (2 & i) || 0 !== (4 & i)) &&
                      qs(t, n, a),
                    (r = r.next);
                } while (r !== e);
              }
              break;
            case 1:
              if (
                (Vs(t, n),
                "function" === typeof (e = t.stateNode).componentWillUnmount)
              )
                try {
                  (e.props = t.memoizedProps),
                    (e.state = t.memoizedState),
                    e.componentWillUnmount();
                } catch (o) {
                  hu(t, n, o);
                }
              break;
            case 5:
              Vs(t, n);
              break;
            case 4:
              il(e, t, n);
          }
        }
        function Zs(e) {
          var t = e.alternate;
          null !== t && ((e.alternate = null), Zs(t)),
            (e.child = null),
            (e.deletions = null),
            (e.sibling = null),
            5 === e.tag &&
              null !== (t = e.stateNode) &&
              (delete t[ui],
              delete t[ci],
              delete t[di],
              delete t[hi],
              delete t[pi]),
            (e.stateNode = null),
            (e.return = null),
            (e.dependencies = null),
            (e.memoizedProps = null),
            (e.memoizedState = null),
            (e.pendingProps = null),
            (e.stateNode = null),
            (e.updateQueue = null);
        }
        function Ks(e) {
          return 5 === e.tag || 3 === e.tag || 4 === e.tag;
        }
        function el(e) {
          e: for (;;) {
            for (; null === e.sibling; ) {
              if (null === e.return || Ks(e.return)) return null;
              e = e.return;
            }
            for (
              e.sibling.return = e.return, e = e.sibling;
              5 !== e.tag && 6 !== e.tag && 18 !== e.tag;

            ) {
              if (2 & e.flags) continue e;
              if (null === e.child || 4 === e.tag) continue e;
              (e.child.return = e), (e = e.child);
            }
            if (!(2 & e.flags)) return e.stateNode;
          }
        }
        function tl(e) {
          e: {
            for (var t = e.return; null !== t; ) {
              if (Ks(t)) break e;
              t = t.return;
            }
            throw Error(a(160));
          }
          var n = t;
          switch (n.tag) {
            case 5:
              (t = n.stateNode),
                32 & n.flags && (de(t, ""), (n.flags &= -33)),
                rl(e, (n = el(e)), t);
              break;
            case 3:
            case 4:
              (t = n.stateNode.containerInfo), nl(e, (n = el(e)), t);
              break;
            default:
              throw Error(a(161));
          }
        }
        function nl(e, t, n) {
          var r = e.tag;
          if (5 === r || 6 === r)
            (e = e.stateNode),
              t
                ? 8 === n.nodeType
                  ? n.parentNode.insertBefore(e, t)
                  : n.insertBefore(e, t)
                : (8 === n.nodeType
                    ? (t = n.parentNode).insertBefore(e, n)
                    : (t = n).appendChild(e),
                  (null !== (n = n._reactRootContainer) && void 0 !== n) ||
                    null !== t.onclick ||
                    (t.onclick = Qr));
          else if (4 !== r && null !== (e = e.child))
            for (nl(e, t, n), e = e.sibling; null !== e; )
              nl(e, t, n), (e = e.sibling);
        }
        function rl(e, t, n) {
          var r = e.tag;
          if (5 === r || 6 === r)
            (e = e.stateNode), t ? n.insertBefore(e, t) : n.appendChild(e);
          else if (4 !== r && null !== (e = e.child))
            for (rl(e, t, n), e = e.sibling; null !== e; )
              rl(e, t, n), (e = e.sibling);
        }
        function il(e, t, n) {
          for (var r, i, o = t, s = !1; ; ) {
            if (!s) {
              s = o.return;
              e: for (;;) {
                if (null === s) throw Error(a(160));
                switch (((r = s.stateNode), s.tag)) {
                  case 5:
                    i = !1;
                    break e;
                  case 3:
                  case 4:
                    (r = r.containerInfo), (i = !0);
                    break e;
                }
                s = s.return;
              }
              s = !0;
            }
            if (5 === o.tag || 6 === o.tag) {
              e: for (var l = e, u = o, c = n, f = u; ; )
                if ((Qs(l, f, c), null !== f.child && 4 !== f.tag))
                  (f.child.return = f), (f = f.child);
                else {
                  if (f === u) break e;
                  for (; null === f.sibling; ) {
                    if (null === f.return || f.return === u) break e;
                    f = f.return;
                  }
                  (f.sibling.return = f.return), (f = f.sibling);
                }
              i
                ? ((l = r),
                  (u = o.stateNode),
                  8 === l.nodeType
                    ? l.parentNode.removeChild(u)
                    : l.removeChild(u))
                : r.removeChild(o.stateNode);
            } else if (18 === o.tag)
              i
                ? ((l = r),
                  (u = o.stateNode),
                  8 === l.nodeType
                    ? ai(l.parentNode, u)
                    : 1 === l.nodeType && ai(l, u),
                  Ut(l))
                : ai(r, o.stateNode);
            else if (4 === o.tag) {
              if (null !== o.child) {
                (r = o.stateNode.containerInfo),
                  (i = !0),
                  (o.child.return = o),
                  (o = o.child);
                continue;
              }
            } else if ((Qs(e, o, n), null !== o.child)) {
              (o.child.return = o), (o = o.child);
              continue;
            }
            if (o === t) break;
            for (; null === o.sibling; ) {
              if (null === o.return || o.return === t) return;
              4 === (o = o.return).tag && (s = !1);
            }
            (o.sibling.return = o.return), (o = o.sibling);
          }
        }
        function al(e, t) {
          switch (t.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
              return Ys(3, t, t.return), Js(3, t), void Ys(5, t, t.return);
            case 1:
            case 12:
            case 17:
              return;
            case 5:
              var n = t.stateNode;
              if (null != n) {
                var r = t.memoizedProps,
                  i = null !== e ? e.memoizedProps : r;
                e = t.type;
                var o = t.updateQueue;
                if (((t.updateQueue = null), null !== o)) {
                  for (
                    "input" === e &&
                      "radio" === r.type &&
                      null != r.name &&
                      Q(n, r),
                      be(e, i),
                      t = be(e, r),
                      i = 0;
                    i < o.length;
                    i += 2
                  ) {
                    var s = o[i],
                      l = o[i + 1];
                    "style" === s
                      ? me(n, l)
                      : "dangerouslySetInnerHTML" === s
                      ? fe(n, l)
                      : "children" === s
                      ? de(n, l)
                      : b(n, s, l, t);
                  }
                  switch (e) {
                    case "input":
                      Z(n, r);
                      break;
                    case "textarea":
                      ae(n, r);
                      break;
                    case "select":
                      (e = n._wrapperState.wasMultiple),
                        (n._wrapperState.wasMultiple = !!r.multiple),
                        null != (o = r.value)
                          ? ne(n, !!r.multiple, o, !1)
                          : e !== !!r.multiple &&
                            (null != r.defaultValue
                              ? ne(n, !!r.multiple, r.defaultValue, !0)
                              : ne(n, !!r.multiple, r.multiple ? [] : "", !1));
                  }
                  n[ci] = r;
                }
              }
              return;
            case 6:
              if (null === t.stateNode) throw Error(a(162));
              return void (t.stateNode.nodeValue = t.memoizedProps);
            case 3:
              return void (
                null !== e &&
                e.memoizedState.isDehydrated &&
                Ut(t.stateNode.containerInfo)
              );
            case 13:
            case 19:
              return void ol(t);
          }
          throw Error(a(163));
        }
        function ol(e) {
          var t = e.updateQueue;
          if (null !== t) {
            e.updateQueue = null;
            var n = e.stateNode;
            null === n && (n = e.stateNode = new Gs()),
              t.forEach(function (t) {
                var r = gu.bind(null, e, t);
                n.has(t) || (n.add(t), t.then(r, r));
              });
          }
        }
        function sl(e, t, n) {
          (Ws = e), ll(e, t, n);
        }
        function ll(e, t, n) {
          for (var r = 0 !== (1 & e.mode); null !== Ws; ) {
            var i = Ws,
              a = i.child;
            if (22 === i.tag && r) {
              var o = null !== i.memoizedState || Us;
              if (!o) {
                var s = i.alternate,
                  l = (null !== s && null !== s.memoizedState) || js;
                s = Us;
                var u = js;
                if (((Us = o), (js = l) && !u))
                  for (Ws = i; null !== Ws; )
                    (l = (o = Ws).child),
                      22 === o.tag && null !== o.memoizedState
                        ? fl(i)
                        : null !== l
                        ? ((l.return = o), (Ws = l))
                        : fl(i);
                for (; null !== a; ) (Ws = a), ll(a, t, n), (a = a.sibling);
                (Ws = i), (Us = s), (js = u);
              }
              ul(e);
            } else
              0 !== (8772 & i.subtreeFlags) && null !== a
                ? ((a.return = i), (Ws = a))
                : ul(e);
          }
        }
        function ul(e) {
          for (; null !== Ws; ) {
            var t = Ws;
            if (0 !== (8772 & t.flags)) {
              var n = t.alternate;
              try {
                if (0 !== (8772 & t.flags))
                  switch (t.tag) {
                    case 0:
                    case 11:
                    case 15:
                      js || Js(5, t);
                      break;
                    case 1:
                      var r = t.stateNode;
                      if (4 & t.flags && !js)
                        if (null === n) r.componentDidMount();
                        else {
                          var i =
                            t.elementType === t.type
                              ? n.memoizedProps
                              : Ui(t.type, n.memoizedProps);
                          r.componentDidUpdate(
                            i,
                            n.memoizedState,
                            r.__reactInternalSnapshotBeforeUpdate
                          );
                        }
                      var o = t.updateQueue;
                      null !== o && oa(t, o, r);
                      break;
                    case 3:
                      var s = t.updateQueue;
                      if (null !== s) {
                        if (((n = null), null !== t.child))
                          switch (t.child.tag) {
                            case 5:
                            case 1:
                              n = t.child.stateNode;
                          }
                        oa(t, s, n);
                      }
                      break;
                    case 5:
                      var l = t.stateNode;
                      if (null === n && 4 & t.flags) {
                        n = l;
                        var u = t.memoizedProps;
                        switch (t.type) {
                          case "button":
                          case "input":
                          case "select":
                          case "textarea":
                            u.autoFocus && n.focus();
                            break;
                          case "img":
                            u.src && (n.src = u.src);
                        }
                      }
                      break;
                    case 6:
                    case 4:
                    case 12:
                    case 19:
                    case 17:
                    case 21:
                    case 22:
                    case 23:
                      break;
                    case 13:
                      if (null === t.memoizedState) {
                        var c = t.alternate;
                        if (null !== c) {
                          var f = c.memoizedState;
                          if (null !== f) {
                            var d = f.dehydrated;
                            null !== d && Ut(d);
                          }
                        }
                      }
                      break;
                    default:
                      throw Error(a(163));
                  }
                js || (512 & t.flags && $s(t));
              } catch (h) {
                hu(t, t.return, h);
              }
            }
            if (t === e) {
              Ws = null;
              break;
            }
            if (null !== (n = t.sibling)) {
              (n.return = t.return), (Ws = n);
              break;
            }
            Ws = t.return;
          }
        }
        function cl(e) {
          for (; null !== Ws; ) {
            var t = Ws;
            if (t === e) {
              Ws = null;
              break;
            }
            var n = t.sibling;
            if (null !== n) {
              (n.return = t.return), (Ws = n);
              break;
            }
            Ws = t.return;
          }
        }
        function fl(e) {
          for (; null !== Ws; ) {
            var t = Ws;
            try {
              switch (t.tag) {
                case 0:
                case 11:
                case 15:
                  var n = t.return;
                  try {
                    Js(4, t);
                  } catch (l) {
                    hu(t, n, l);
                  }
                  break;
                case 1:
                  var r = t.stateNode;
                  if ("function" === typeof r.componentDidMount) {
                    var i = t.return;
                    try {
                      r.componentDidMount();
                    } catch (l) {
                      hu(t, i, l);
                    }
                  }
                  var a = t.return;
                  try {
                    $s(t);
                  } catch (l) {
                    hu(t, a, l);
                  }
                  break;
                case 5:
                  var o = t.return;
                  try {
                    $s(t);
                  } catch (l) {
                    hu(t, o, l);
                  }
              }
            } catch (l) {
              hu(t, t.return, l);
            }
            if (t === e) {
              Ws = null;
              break;
            }
            var s = t.sibling;
            if (null !== s) {
              (s.return = t.return), (Ws = s);
              break;
            }
            Ws = t.return;
          }
        }
        var dl,
          hl = Math.ceil,
          pl = x.ReactCurrentDispatcher,
          vl = x.ReactCurrentOwner,
          ml = x.ReactCurrentBatchConfig,
          gl = 0,
          yl = null,
          bl = null,
          xl = 0,
          wl = 0,
          _l = wi(0),
          Sl = 0,
          Ml = null,
          El = 0,
          kl = 0,
          Tl = 0,
          Cl = null,
          Al = null,
          Pl = 0,
          Ll = 1 / 0,
          Rl = !1,
          Ol = null,
          zl = null,
          Dl = !1,
          Il = null,
          Nl = 0,
          Fl = 0,
          Bl = null,
          Hl = -1,
          Ul = 0;
        function jl() {
          return 0 !== (6 & gl) ? Qe() : -1 !== Hl ? Hl : (Hl = Qe());
        }
        function Gl(e) {
          return 0 === (1 & e.mode)
            ? 1
            : 0 !== (2 & gl) && 0 !== xl
            ? xl & -xl
            : null !== Hi.transition
            ? (0 === Ul &&
                ((e = ut), 0 === (4194240 & (ut <<= 1)) && (ut = 64), (Ul = e)),
              Ul)
            : 0 !== (e = yt)
            ? e
            : (e = void 0 === (e = window.event) ? 16 : Yt(e.type));
        }
        function Wl(e, t, n) {
          if (50 < Fl) throw ((Fl = 0), (Bl = null), Error(a(185)));
          var r = Vl(e, t);
          return null === r
            ? null
            : (mt(r, t, n),
              (0 !== (2 & gl) && r === yl) ||
                (r === yl &&
                  (0 === (2 & gl) && (kl |= t), 4 === Sl && $l(r, xl)),
                ql(r, n),
                1 === t &&
                  0 === gl &&
                  0 === (1 & e.mode) &&
                  ((Ll = Qe() + 500), Ii && Bi())),
              r);
        }
        function Vl(e, t) {
          e.lanes |= t;
          var n = e.alternate;
          for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e; )
            (e.childLanes |= t),
              null !== (n = e.alternate) && (n.childLanes |= t),
              (n = e),
              (e = e.return);
          return 3 === n.tag ? n.stateNode : null;
        }
        function ql(e, t) {
          var n = e.callbackNode;
          !(function (e, t) {
            for (
              var n = e.suspendedLanes,
                r = e.pingedLanes,
                i = e.expirationTimes,
                a = e.pendingLanes;
              0 < a;

            ) {
              var o = 31 - ot(a),
                s = 1 << o,
                l = i[o];
              -1 === l
                ? (0 !== (s & n) && 0 === (s & r)) || (i[o] = ht(s, t))
                : l <= t && (e.expiredLanes |= s),
                (a &= ~s);
            }
          })(e, t);
          var r = dt(e, e === yl ? xl : 0);
          if (0 === r)
            null !== n && Ye(n),
              (e.callbackNode = null),
              (e.callbackPriority = 0);
          else if (((t = r & -r), e.callbackPriority !== t)) {
            if ((null != n && Ye(n), 1 === t))
              0 === e.tag
                ? (function (e) {
                    (Ii = !0), Fi(e);
                  })(Ql.bind(null, e))
                : Fi(Ql.bind(null, e)),
                ri(function () {
                  0 === gl && Bi();
                }),
                (n = null);
            else {
              switch (bt(r)) {
                case 1:
                  n = Ke;
                  break;
                case 4:
                  n = et;
                  break;
                case 16:
                default:
                  n = tt;
                  break;
                case 536870912:
                  n = rt;
              }
              n = yu(n, Xl.bind(null, e));
            }
            (e.callbackPriority = t), (e.callbackNode = n);
          }
        }
        function Xl(e, t) {
          if (((Hl = -1), (Ul = 0), 0 !== (6 & gl))) throw Error(a(327));
          var n = e.callbackNode;
          if (fu() && e.callbackNode !== n) return null;
          var r = dt(e, e === yl ? xl : 0);
          if (0 === r) return null;
          if (0 !== (30 & r) || 0 !== (r & e.expiredLanes) || t) t = au(e, r);
          else {
            t = r;
            var i = gl;
            gl |= 2;
            var o = ru();
            for ((yl === e && xl === t) || ((Ll = Qe() + 500), tu(e, t)); ; )
              try {
                su();
                break;
              } catch (l) {
                nu(e, l);
              }
            qi(),
              (pl.current = o),
              (gl = i),
              null !== bl ? (t = 0) : ((yl = null), (xl = 0), (t = Sl));
          }
          if (0 !== t) {
            if (
              (2 === t && 0 !== (i = pt(e)) && ((r = i), (t = Yl(e, i))),
              1 === t)
            )
              throw ((n = Ml), tu(e, 0), $l(e, r), ql(e, Qe()), n);
            if (6 === t) $l(e, r);
            else {
              if (
                ((i = e.current.alternate),
                0 === (30 & r) &&
                  !(function (e) {
                    for (var t = e; ; ) {
                      if (16384 & t.flags) {
                        var n = t.updateQueue;
                        if (null !== n && null !== (n = n.stores))
                          for (var r = 0; r < n.length; r++) {
                            var i = n[r],
                              a = i.getSnapshot;
                            i = i.value;
                            try {
                              if (!ar(a(), i)) return !1;
                            } catch (s) {
                              return !1;
                            }
                          }
                      }
                      if (((n = t.child), 16384 & t.subtreeFlags && null !== n))
                        (n.return = t), (t = n);
                      else {
                        if (t === e) break;
                        for (; null === t.sibling; ) {
                          if (null === t.return || t.return === e) return !0;
                          t = t.return;
                        }
                        (t.sibling.return = t.return), (t = t.sibling);
                      }
                    }
                    return !0;
                  })(i) &&
                  (2 === (t = au(e, r)) &&
                    0 !== (o = pt(e)) &&
                    ((r = o), (t = Yl(e, o))),
                  1 === t))
              )
                throw ((n = Ml), tu(e, 0), $l(e, r), ql(e, Qe()), n);
              switch (((e.finishedWork = i), (e.finishedLanes = r), t)) {
                case 0:
                case 1:
                  throw Error(a(345));
                case 2:
                case 5:
                  cu(e, Al);
                  break;
                case 3:
                  if (
                    ($l(e, r),
                    (130023424 & r) === r && 10 < (t = Pl + 500 - Qe()))
                  ) {
                    if (0 !== dt(e, 0)) break;
                    if (((i = e.suspendedLanes) & r) !== r) {
                      jl(), (e.pingedLanes |= e.suspendedLanes & i);
                      break;
                    }
                    e.timeoutHandle = ei(cu.bind(null, e, Al), t);
                    break;
                  }
                  cu(e, Al);
                  break;
                case 4:
                  if (($l(e, r), (4194240 & r) === r)) break;
                  for (t = e.eventTimes, i = -1; 0 < r; ) {
                    var s = 31 - ot(r);
                    (o = 1 << s), (s = t[s]) > i && (i = s), (r &= ~o);
                  }
                  if (
                    ((r = i),
                    10 <
                      (r =
                        (120 > (r = Qe() - r)
                          ? 120
                          : 480 > r
                          ? 480
                          : 1080 > r
                          ? 1080
                          : 1920 > r
                          ? 1920
                          : 3e3 > r
                          ? 3e3
                          : 4320 > r
                          ? 4320
                          : 1960 * hl(r / 1960)) - r))
                  ) {
                    e.timeoutHandle = ei(cu.bind(null, e, Al), r);
                    break;
                  }
                  cu(e, Al);
                  break;
                default:
                  throw Error(a(329));
              }
            }
          }
          return ql(e, Qe()), e.callbackNode === n ? Xl.bind(null, e) : null;
        }
        function Yl(e, t) {
          var n = Cl;
          return (
            e.current.memoizedState.isDehydrated && (tu(e, t).flags |= 256),
            2 !== (e = au(e, t)) && ((t = Al), (Al = n), null !== t && Jl(t)),
            e
          );
        }
        function Jl(e) {
          null === Al ? (Al = e) : Al.push.apply(Al, e);
        }
        function $l(e, t) {
          for (
            t &= ~Tl,
              t &= ~kl,
              e.suspendedLanes |= t,
              e.pingedLanes &= ~t,
              e = e.expirationTimes;
            0 < t;

          ) {
            var n = 31 - ot(t),
              r = 1 << n;
            (e[n] = -1), (t &= ~r);
          }
        }
        function Ql(e) {
          if (0 !== (6 & gl)) throw Error(a(327));
          fu();
          var t = dt(e, 0);
          if (0 === (1 & t)) return ql(e, Qe()), null;
          var n = au(e, t);
          if (0 !== e.tag && 2 === n) {
            var r = pt(e);
            0 !== r && ((t = r), (n = Yl(e, r)));
          }
          if (1 === n) throw ((n = Ml), tu(e, 0), $l(e, t), ql(e, Qe()), n);
          if (6 === n) throw Error(a(345));
          return (
            (e.finishedWork = e.current.alternate),
            (e.finishedLanes = t),
            cu(e, Al),
            ql(e, Qe()),
            null
          );
        }
        function Zl(e, t) {
          var n = gl;
          gl |= 1;
          try {
            return e(t);
          } finally {
            0 === (gl = n) && ((Ll = Qe() + 500), Ii && Bi());
          }
        }
        function Kl(e) {
          null !== Il && 0 === Il.tag && 0 === (6 & gl) && fu();
          var t = gl;
          gl |= 1;
          var n = ml.transition,
            r = yt;
          try {
            if (((ml.transition = null), (yt = 1), e)) return e();
          } finally {
            (yt = r), (ml.transition = n), 0 === (6 & (gl = t)) && Bi();
          }
        }
        function eu() {
          (wl = _l.current), _i(_l);
        }
        function tu(e, t) {
          (e.finishedWork = null), (e.finishedLanes = 0);
          var n = e.timeoutHandle;
          if ((-1 !== n && ((e.timeoutHandle = -1), ti(n)), null !== bl))
            for (n = bl.return; null !== n; ) {
              var r = n;
              switch ((ka(r), r.tag)) {
                case 1:
                  null !== (r = r.type.childContextTypes) &&
                    void 0 !== r &&
                    Pi();
                  break;
                case 3:
                  Qa(), _i(ki), _i(Ei), ro();
                  break;
                case 5:
                  Ka(r);
                  break;
                case 4:
                  Qa();
                  break;
                case 13:
                case 19:
                  _i(eo);
                  break;
                case 10:
                  Xi(r.type._context);
                  break;
                case 22:
                case 23:
                  eu();
              }
              n = n.return;
            }
          if (
            ((yl = e),
            (bl = e = _u(e.current, null)),
            (xl = wl = t),
            (Sl = 0),
            (Ml = null),
            (Tl = kl = El = 0),
            (Al = Cl = null),
            null !== Qi)
          ) {
            for (t = 0; t < Qi.length; t++)
              if (null !== (r = (n = Qi[t]).interleaved)) {
                n.interleaved = null;
                var i = r.next,
                  a = n.pending;
                if (null !== a) {
                  var o = a.next;
                  (a.next = i), (r.next = o);
                }
                n.pending = r;
              }
            Qi = null;
          }
          return e;
        }
        function nu(e, t) {
          for (;;) {
            var n = bl;
            try {
              if ((qi(), (io.current = Zo), co)) {
                for (var r = so.memoizedState; null !== r; ) {
                  var i = r.queue;
                  null !== i && (i.pending = null), (r = r.next);
                }
                co = !1;
              }
              if (
                ((oo = 0),
                (uo = lo = so = null),
                (fo = !1),
                (ho = 0),
                (vl.current = null),
                null === n || null === n.return)
              ) {
                (Sl = 1), (Ml = t), (bl = null);
                break;
              }
              e: {
                var o = e,
                  s = n.return,
                  l = n,
                  u = t;
                if (
                  ((t = xl),
                  (l.flags |= 32768),
                  null !== u &&
                    "object" === typeof u &&
                    "function" === typeof u.then)
                ) {
                  var c = u,
                    f = l,
                    d = f.tag;
                  if (0 === (1 & f.mode) && (0 === d || 11 === d || 15 === d)) {
                    var h = f.alternate;
                    h
                      ? ((f.updateQueue = h.updateQueue),
                        (f.memoizedState = h.memoizedState),
                        (f.lanes = h.lanes))
                      : ((f.updateQueue = null), (f.memoizedState = null));
                  }
                  var p = fs(s);
                  if (null !== p) {
                    (p.flags &= -257),
                      ds(p, s, l, 0, t),
                      1 & p.mode && cs(o, c, t),
                      (u = c);
                    var v = (t = p).updateQueue;
                    if (null === v) {
                      var m = new Set();
                      m.add(u), (t.updateQueue = m);
                    } else v.add(u);
                    break e;
                  }
                  if (0 === (1 & t)) {
                    cs(o, c, t), iu();
                    break e;
                  }
                  u = Error(a(426));
                } else if (Aa && 1 & l.mode) {
                  var g = fs(s);
                  if (null !== g) {
                    0 === (65536 & g.flags) && (g.flags |= 256),
                      ds(g, s, l, 0, t),
                      Fa(u);
                    break e;
                  }
                }
                (o = u),
                  4 !== Sl && (Sl = 2),
                  null === Cl ? (Cl = [o]) : Cl.push(o),
                  (u = ns(u, l)),
                  (l = s);
                do {
                  switch (l.tag) {
                    case 3:
                      (l.flags |= 65536),
                        (t &= -t),
                        (l.lanes |= t),
                        ia(l, ls(0, u, t));
                      break e;
                    case 1:
                      o = u;
                      var y = l.type,
                        b = l.stateNode;
                      if (
                        0 === (128 & l.flags) &&
                        ("function" === typeof y.getDerivedStateFromError ||
                          (null !== b &&
                            "function" === typeof b.componentDidCatch &&
                            (null === zl || !zl.has(b))))
                      ) {
                        (l.flags |= 65536),
                          (t &= -t),
                          (l.lanes |= t),
                          ia(l, us(l, o, t));
                        break e;
                      }
                  }
                  l = l.return;
                } while (null !== l);
              }
              uu(n);
            } catch (x) {
              (t = x), bl === n && null !== n && (bl = n = n.return);
              continue;
            }
            break;
          }
        }
        function ru() {
          var e = pl.current;
          return (pl.current = Zo), null === e ? Zo : e;
        }
        function iu() {
          (0 !== Sl && 3 !== Sl && 2 !== Sl) || (Sl = 4),
            null === yl ||
              (0 === (268435455 & El) && 0 === (268435455 & kl)) ||
              $l(yl, xl);
        }
        function au(e, t) {
          var n = gl;
          gl |= 2;
          var r = ru();
          for ((yl === e && xl === t) || tu(e, t); ; )
            try {
              ou();
              break;
            } catch (i) {
              nu(e, i);
            }
          if ((qi(), (gl = n), (pl.current = r), null !== bl))
            throw Error(a(261));
          return (yl = null), (xl = 0), Sl;
        }
        function ou() {
          for (; null !== bl; ) lu(bl);
        }
        function su() {
          for (; null !== bl && !Je(); ) lu(bl);
        }
        function lu(e) {
          var t = dl(e.alternate, e, wl);
          (e.memoizedProps = e.pendingProps),
            null === t ? uu(e) : (bl = t),
            (vl.current = null);
        }
        function uu(e) {
          var t = e;
          do {
            var n = t.alternate;
            if (((e = t.return), 0 === (32768 & t.flags))) {
              if (null !== (n = vs(n, t, wl))) return void (bl = n);
            } else {
              if (null !== (n = Hs(n, t)))
                return (n.flags &= 32767), void (bl = n);
              if (null === e) return (Sl = 6), void (bl = null);
              (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
            }
            if (null !== (t = t.sibling)) return void (bl = t);
            bl = t = e;
          } while (null !== t);
          0 === Sl && (Sl = 5);
        }
        function cu(e, t) {
          var n = yt,
            r = ml.transition;
          try {
            (ml.transition = null),
              (yt = 1),
              (function (e, t, n) {
                do {
                  fu();
                } while (null !== Il);
                if (0 !== (6 & gl)) throw Error(a(327));
                var r = e.finishedWork,
                  i = e.finishedLanes;
                if (null === r) return null;
                if (
                  ((e.finishedWork = null),
                  (e.finishedLanes = 0),
                  r === e.current)
                )
                  throw Error(a(177));
                (e.callbackNode = null), (e.callbackPriority = 0);
                var o = r.lanes | r.childLanes;
                if (
                  ((function (e, t) {
                    var n = e.pendingLanes & ~t;
                    (e.pendingLanes = t),
                      (e.suspendedLanes = 0),
                      (e.pingedLanes = 0),
                      (e.expiredLanes &= t),
                      (e.mutableReadLanes &= t),
                      (e.entangledLanes &= t),
                      (t = e.entanglements);
                    var r = e.eventTimes;
                    for (e = e.expirationTimes; 0 < n; ) {
                      var i = 31 - ot(n),
                        a = 1 << i;
                      (t[i] = 0), (r[i] = -1), (e[i] = -1), (n &= ~a);
                    }
                  })(e, o),
                  e === yl && ((bl = yl = null), (xl = 0)),
                  (0 === (2064 & r.subtreeFlags) && 0 === (2064 & r.flags)) ||
                    Dl ||
                    ((Dl = !0),
                    yu(tt, function () {
                      return fu(), null;
                    })),
                  (o = 0 !== (15990 & r.flags)),
                  0 !== (15990 & r.subtreeFlags) || o)
                ) {
                  (o = ml.transition), (ml.transition = null);
                  var s = yt;
                  yt = 1;
                  var l = gl;
                  (gl |= 4),
                    (vl.current = null),
                    (function (e, t) {
                      if (fr((e = cr()))) {
                        if ("selectionStart" in e)
                          var n = {
                            start: e.selectionStart,
                            end: e.selectionEnd,
                          };
                        else
                          e: {
                            var r =
                              (n =
                                ((n = e.ownerDocument) && n.defaultView) ||
                                window).getSelection && n.getSelection();
                            if (r && 0 !== r.rangeCount) {
                              n = r.anchorNode;
                              var i = r.anchorOffset,
                                o = r.focusNode;
                              r = r.focusOffset;
                              try {
                                n.nodeType, o.nodeType;
                              } catch (_) {
                                n = null;
                                break e;
                              }
                              var s = 0,
                                l = -1,
                                u = -1,
                                c = 0,
                                f = 0,
                                d = e,
                                h = null;
                              t: for (;;) {
                                for (
                                  var p;
                                  d !== n ||
                                    (0 !== i && 3 !== d.nodeType) ||
                                    (l = s + i),
                                    d !== o ||
                                      (0 !== r && 3 !== d.nodeType) ||
                                      (u = s + r),
                                    3 === d.nodeType &&
                                      (s += d.nodeValue.length),
                                    null !== (p = d.firstChild);

                                )
                                  (h = d), (d = p);
                                for (;;) {
                                  if (d === e) break t;
                                  if (
                                    (h === n && ++c === i && (l = s),
                                    h === o && ++f === r && (u = s),
                                    null !== (p = d.nextSibling))
                                  )
                                    break;
                                  h = (d = h).parentNode;
                                }
                                d = p;
                              }
                              n =
                                -1 === l || -1 === u
                                  ? null
                                  : { start: l, end: u };
                            } else n = null;
                          }
                        n = n || { start: 0, end: 0 };
                      } else n = null;
                      for (
                        Zr = { focusedElem: e, selectionRange: n }, Ws = t;
                        null !== Ws;

                      )
                        if (
                          ((e = (t = Ws).child),
                          0 !== (1028 & t.subtreeFlags) && null !== e)
                        )
                          (e.return = t), (Ws = e);
                        else
                          for (; null !== Ws; ) {
                            t = Ws;
                            try {
                              var v = t.alternate;
                              if (0 !== (1024 & t.flags))
                                switch (t.tag) {
                                  case 0:
                                  case 11:
                                  case 15:
                                  case 5:
                                  case 6:
                                  case 4:
                                  case 17:
                                    break;
                                  case 1:
                                    if (null !== v) {
                                      var m = v.memoizedProps,
                                        g = v.memoizedState,
                                        y = t.stateNode,
                                        b = y.getSnapshotBeforeUpdate(
                                          t.elementType === t.type
                                            ? m
                                            : Ui(t.type, m),
                                          g
                                        );
                                      y.__reactInternalSnapshotBeforeUpdate = b;
                                    }
                                    break;
                                  case 3:
                                    var x = t.stateNode.containerInfo;
                                    if (1 === x.nodeType) x.textContent = "";
                                    else if (9 === x.nodeType) {
                                      var w = x.body;
                                      null != w && (w.textContent = "");
                                    }
                                    break;
                                  default:
                                    throw Error(a(163));
                                }
                            } catch (_) {
                              hu(t, t.return, _);
                            }
                            if (null !== (e = t.sibling)) {
                              (e.return = t.return), (Ws = e);
                              break;
                            }
                            Ws = t.return;
                          }
                      (v = Xs), (Xs = !1);
                    })(e, r),
                    (function (e, t) {
                      for (Ws = t; null !== Ws; ) {
                        var n = (t = Ws).deletions;
                        if (null !== n)
                          for (var r = 0; r < n.length; r++) {
                            var i = n[r];
                            try {
                              il(e, i, t);
                              var a = i.alternate;
                              null !== a && (a.return = null),
                                (i.return = null);
                            } catch (M) {
                              hu(i, t, M);
                            }
                          }
                        if (
                          ((n = t.child),
                          0 !== (12854 & t.subtreeFlags) && null !== n)
                        )
                          (n.return = t), (Ws = n);
                        else
                          for (; null !== Ws; ) {
                            t = Ws;
                            try {
                              var o = t.flags;
                              if ((32 & o && de(t.stateNode, ""), 512 & o)) {
                                var s = t.alternate;
                                if (null !== s) {
                                  var l = s.ref;
                                  null !== l &&
                                    ("function" === typeof l
                                      ? l(null)
                                      : (l.current = null));
                                }
                              }
                              if (8192 & o)
                                switch (t.tag) {
                                  case 13:
                                    if (null !== t.memoizedState) {
                                      var u = t.alternate;
                                      (null !== u &&
                                        null !== u.memoizedState) ||
                                        (Pl = Qe());
                                    }
                                    break;
                                  case 22:
                                    var c = null !== t.memoizedState,
                                      f = t.alternate,
                                      d =
                                        null !== f && null !== f.memoizedState;
                                    e: {
                                      i = c;
                                      for (var h = null, p = (r = n = t); ; ) {
                                        if (5 === p.tag) {
                                          if (null === h) {
                                            h = p;
                                            var v = p.stateNode;
                                            if (i) {
                                              var m = v.style;
                                              "function" ===
                                              typeof m.setProperty
                                                ? m.setProperty(
                                                    "display",
                                                    "none",
                                                    "important"
                                                  )
                                                : (m.display = "none");
                                            } else {
                                              var g = p.stateNode,
                                                y = p.memoizedProps.style,
                                                b =
                                                  void 0 !== y &&
                                                  null !== y &&
                                                  y.hasOwnProperty("display")
                                                    ? y.display
                                                    : null;
                                              g.style.display = ve(
                                                "display",
                                                b
                                              );
                                            }
                                          }
                                        } else if (6 === p.tag)
                                          null === h &&
                                            (p.stateNode.nodeValue = i
                                              ? ""
                                              : p.memoizedProps);
                                        else if (
                                          ((22 !== p.tag && 23 !== p.tag) ||
                                            null === p.memoizedState ||
                                            p === r) &&
                                          null !== p.child
                                        ) {
                                          (p.child.return = p), (p = p.child);
                                          continue;
                                        }
                                        if (p === r) break;
                                        for (; null === p.sibling; ) {
                                          if (
                                            null === p.return ||
                                            p.return === r
                                          )
                                            break e;
                                          h === p && (h = null), (p = p.return);
                                        }
                                        h === p && (h = null),
                                          (p.sibling.return = p.return),
                                          (p = p.sibling);
                                      }
                                    }
                                    if (c && !d && 0 !== (1 & n.mode)) {
                                      Ws = n;
                                      for (var x = n.child; null !== x; ) {
                                        for (n = Ws = x; null !== Ws; ) {
                                          var w = (r = Ws).child;
                                          switch (r.tag) {
                                            case 0:
                                            case 11:
                                            case 14:
                                            case 15:
                                              Ys(4, r, r.return);
                                              break;
                                            case 1:
                                              Vs(r, r.return);
                                              var _ = r.stateNode;
                                              if (
                                                "function" ===
                                                typeof _.componentWillUnmount
                                              ) {
                                                var S = r.return;
                                                try {
                                                  (_.props = r.memoizedProps),
                                                    (_.state = r.memoizedState),
                                                    _.componentWillUnmount();
                                                } catch (M) {
                                                  hu(r, S, M);
                                                }
                                              }
                                              break;
                                            case 5:
                                              Vs(r, r.return);
                                              break;
                                            case 22:
                                              if (null !== r.memoizedState) {
                                                cl(n);
                                                continue;
                                              }
                                          }
                                          null !== w
                                            ? ((w.return = r), (Ws = w))
                                            : cl(n);
                                        }
                                        x = x.sibling;
                                      }
                                    }
                                }
                              switch (4102 & o) {
                                case 2:
                                  tl(t), (t.flags &= -3);
                                  break;
                                case 6:
                                  tl(t), (t.flags &= -3), al(t.alternate, t);
                                  break;
                                case 4096:
                                  t.flags &= -4097;
                                  break;
                                case 4100:
                                  (t.flags &= -4097), al(t.alternate, t);
                                  break;
                                case 4:
                                  al(t.alternate, t);
                              }
                            } catch (M) {
                              hu(t, t.return, M);
                            }
                            if (null !== (n = t.sibling)) {
                              (n.return = t.return), (Ws = n);
                              break;
                            }
                            Ws = t.return;
                          }
                      }
                    })(e, r),
                    dr(Zr),
                    (Zr = null),
                    (e.current = r),
                    sl(r, e, i),
                    $e(),
                    (gl = l),
                    (yt = s),
                    (ml.transition = o);
                } else e.current = r;
                if (
                  (Dl && ((Dl = !1), (Il = e), (Nl = i)),
                  0 === (o = e.pendingLanes) && (zl = null),
                  (function (e) {
                    if (at && "function" === typeof at.onCommitFiberRoot)
                      try {
                        at.onCommitFiberRoot(
                          it,
                          e,
                          void 0,
                          128 === (128 & e.current.flags)
                        );
                      } catch (t) {}
                  })(r.stateNode),
                  ql(e, Qe()),
                  null !== t)
                )
                  for (n = e.onRecoverableError, r = 0; r < t.length; r++)
                    n(t[r]);
                if (Rl) throw ((Rl = !1), (e = Ol), (Ol = null), e);
                0 !== (1 & Nl) && 0 !== e.tag && fu(),
                  0 !== (1 & (o = e.pendingLanes))
                    ? e === Bl
                      ? Fl++
                      : ((Fl = 0), (Bl = e))
                    : (Fl = 0),
                  Bi();
              })(e, t, n);
          } finally {
            (ml.transition = r), (yt = n);
          }
          return null;
        }
        function fu() {
          if (null !== Il) {
            var e = bt(Nl),
              t = ml.transition,
              n = yt;
            try {
              if (((ml.transition = null), (yt = 16 > e ? 16 : e), null === Il))
                var r = !1;
              else {
                if (((e = Il), (Il = null), (Nl = 0), 0 !== (6 & gl)))
                  throw Error(a(331));
                var i = gl;
                for (gl |= 4, Ws = e.current; null !== Ws; ) {
                  var o = Ws,
                    s = o.child;
                  if (0 !== (16 & Ws.flags)) {
                    var l = o.deletions;
                    if (null !== l) {
                      for (var u = 0; u < l.length; u++) {
                        var c = l[u];
                        for (Ws = c; null !== Ws; ) {
                          var f = Ws;
                          switch (f.tag) {
                            case 0:
                            case 11:
                            case 15:
                              Ys(8, f, o);
                          }
                          var d = f.child;
                          if (null !== d) (d.return = f), (Ws = d);
                          else
                            for (; null !== Ws; ) {
                              var h = (f = Ws).sibling,
                                p = f.return;
                              if ((Zs(f), f === c)) {
                                Ws = null;
                                break;
                              }
                              if (null !== h) {
                                (h.return = p), (Ws = h);
                                break;
                              }
                              Ws = p;
                            }
                        }
                      }
                      var v = o.alternate;
                      if (null !== v) {
                        var m = v.child;
                        if (null !== m) {
                          v.child = null;
                          do {
                            var g = m.sibling;
                            (m.sibling = null), (m = g);
                          } while (null !== m);
                        }
                      }
                      Ws = o;
                    }
                  }
                  if (0 !== (2064 & o.subtreeFlags) && null !== s)
                    (s.return = o), (Ws = s);
                  else
                    e: for (; null !== Ws; ) {
                      if (0 !== (2048 & (o = Ws).flags))
                        switch (o.tag) {
                          case 0:
                          case 11:
                          case 15:
                            Ys(9, o, o.return);
                        }
                      var y = o.sibling;
                      if (null !== y) {
                        (y.return = o.return), (Ws = y);
                        break e;
                      }
                      Ws = o.return;
                    }
                }
                var b = e.current;
                for (Ws = b; null !== Ws; ) {
                  var x = (s = Ws).child;
                  if (0 !== (2064 & s.subtreeFlags) && null !== x)
                    (x.return = s), (Ws = x);
                  else
                    e: for (s = b; null !== Ws; ) {
                      if (0 !== (2048 & (l = Ws).flags))
                        try {
                          switch (l.tag) {
                            case 0:
                            case 11:
                            case 15:
                              Js(9, l);
                          }
                        } catch (_) {
                          hu(l, l.return, _);
                        }
                      if (l === s) {
                        Ws = null;
                        break e;
                      }
                      var w = l.sibling;
                      if (null !== w) {
                        (w.return = l.return), (Ws = w);
                        break e;
                      }
                      Ws = l.return;
                    }
                }
                if (
                  ((gl = i),
                  Bi(),
                  at && "function" === typeof at.onPostCommitFiberRoot)
                )
                  try {
                    at.onPostCommitFiberRoot(it, e);
                  } catch (_) {}
                r = !0;
              }
              return r;
            } finally {
              (yt = n), (ml.transition = t);
            }
          }
          return !1;
        }
        function du(e, t, n) {
          na(e, (t = ls(0, (t = ns(n, t)), 1))),
            (t = jl()),
            null !== (e = Vl(e, 1)) && (mt(e, 1, t), ql(e, t));
        }
        function hu(e, t, n) {
          if (3 === e.tag) du(e, e, n);
          else
            for (; null !== t; ) {
              if (3 === t.tag) {
                du(t, e, n);
                break;
              }
              if (1 === t.tag) {
                var r = t.stateNode;
                if (
                  "function" === typeof t.type.getDerivedStateFromError ||
                  ("function" === typeof r.componentDidCatch &&
                    (null === zl || !zl.has(r)))
                ) {
                  na(t, (e = us(t, (e = ns(n, e)), 1))),
                    (e = jl()),
                    null !== (t = Vl(t, 1)) && (mt(t, 1, e), ql(t, e));
                  break;
                }
              }
              t = t.return;
            }
        }
        function pu(e, t, n) {
          var r = e.pingCache;
          null !== r && r.delete(t),
            (t = jl()),
            (e.pingedLanes |= e.suspendedLanes & n),
            yl === e &&
              (xl & n) === n &&
              (4 === Sl ||
              (3 === Sl && (130023424 & xl) === xl && 500 > Qe() - Pl)
                ? tu(e, 0)
                : (Tl |= n)),
            ql(e, t);
        }
        function vu(e, t) {
          0 === t &&
            (0 === (1 & e.mode)
              ? (t = 1)
              : ((t = ct), 0 === (130023424 & (ct <<= 1)) && (ct = 4194304)));
          var n = jl();
          null !== (e = Vl(e, t)) && (mt(e, t, n), ql(e, n));
        }
        function mu(e) {
          var t = e.memoizedState,
            n = 0;
          null !== t && (n = t.retryLane), vu(e, n);
        }
        function gu(e, t) {
          var n = 0;
          switch (e.tag) {
            case 13:
              var r = e.stateNode,
                i = e.memoizedState;
              null !== i && (n = i.retryLane);
              break;
            case 19:
              r = e.stateNode;
              break;
            default:
              throw Error(a(314));
          }
          null !== r && r.delete(t), vu(e, n);
        }
        function yu(e, t) {
          return Xe(e, t);
        }
        function bu(e, t, n, r) {
          (this.tag = e),
            (this.key = n),
            (this.sibling =
              this.child =
              this.return =
              this.stateNode =
              this.type =
              this.elementType =
                null),
            (this.index = 0),
            (this.ref = null),
            (this.pendingProps = t),
            (this.dependencies =
              this.memoizedState =
              this.updateQueue =
              this.memoizedProps =
                null),
            (this.mode = r),
            (this.subtreeFlags = this.flags = 0),
            (this.deletions = null),
            (this.childLanes = this.lanes = 0),
            (this.alternate = null);
        }
        function xu(e, t, n, r) {
          return new bu(e, t, n, r);
        }
        function wu(e) {
          return !(!(e = e.prototype) || !e.isReactComponent);
        }
        function _u(e, t) {
          var n = e.alternate;
          return (
            null === n
              ? (((n = xu(e.tag, t, e.key, e.mode)).elementType =
                  e.elementType),
                (n.type = e.type),
                (n.stateNode = e.stateNode),
                (n.alternate = e),
                (e.alternate = n))
              : ((n.pendingProps = t),
                (n.type = e.type),
                (n.flags = 0),
                (n.subtreeFlags = 0),
                (n.deletions = null)),
            (n.flags = 14680064 & e.flags),
            (n.childLanes = e.childLanes),
            (n.lanes = e.lanes),
            (n.child = e.child),
            (n.memoizedProps = e.memoizedProps),
            (n.memoizedState = e.memoizedState),
            (n.updateQueue = e.updateQueue),
            (t = e.dependencies),
            (n.dependencies =
              null === t
                ? null
                : { lanes: t.lanes, firstContext: t.firstContext }),
            (n.sibling = e.sibling),
            (n.index = e.index),
            (n.ref = e.ref),
            n
          );
        }
        function Su(e, t, n, r, i, o) {
          var s = 2;
          if (((r = e), "function" === typeof e)) wu(e) && (s = 1);
          else if ("string" === typeof e) s = 5;
          else
            e: switch (e) {
              case S:
                return Mu(n.children, i, o, t);
              case M:
                (s = 8), (i |= 8);
                break;
              case E:
                return (
                  ((e = xu(12, n, t, 2 | i)).elementType = E), (e.lanes = o), e
                );
              case A:
                return (
                  ((e = xu(13, n, t, i)).elementType = A), (e.lanes = o), e
                );
              case P:
                return (
                  ((e = xu(19, n, t, i)).elementType = P), (e.lanes = o), e
                );
              case O:
                return Eu(n, i, o, t);
              default:
                if ("object" === typeof e && null !== e)
                  switch (e.$$typeof) {
                    case k:
                      s = 10;
                      break e;
                    case T:
                      s = 9;
                      break e;
                    case C:
                      s = 11;
                      break e;
                    case L:
                      s = 14;
                      break e;
                    case R:
                      (s = 16), (r = null);
                      break e;
                  }
                throw Error(a(130, null == e ? e : typeof e, ""));
            }
          return (
            ((t = xu(s, n, t, i)).elementType = e),
            (t.type = r),
            (t.lanes = o),
            t
          );
        }
        function Mu(e, t, n, r) {
          return ((e = xu(7, e, r, t)).lanes = n), e;
        }
        function Eu(e, t, n, r) {
          return (
            ((e = xu(22, e, r, t)).elementType = O),
            (e.lanes = n),
            (e.stateNode = {}),
            e
          );
        }
        function ku(e, t, n) {
          return ((e = xu(6, e, null, t)).lanes = n), e;
        }
        function Tu(e, t, n) {
          return (
            ((t = xu(
              4,
              null !== e.children ? e.children : [],
              e.key,
              t
            )).lanes = n),
            (t.stateNode = {
              containerInfo: e.containerInfo,
              pendingChildren: null,
              implementation: e.implementation,
            }),
            t
          );
        }
        function Cu(e, t, n, r, i) {
          (this.tag = t),
            (this.containerInfo = e),
            (this.finishedWork =
              this.pingCache =
              this.current =
              this.pendingChildren =
                null),
            (this.timeoutHandle = -1),
            (this.callbackNode = this.pendingContext = this.context = null),
            (this.callbackPriority = 0),
            (this.eventTimes = vt(0)),
            (this.expirationTimes = vt(-1)),
            (this.entangledLanes =
              this.finishedLanes =
              this.mutableReadLanes =
              this.expiredLanes =
              this.pingedLanes =
              this.suspendedLanes =
              this.pendingLanes =
                0),
            (this.entanglements = vt(0)),
            (this.identifierPrefix = r),
            (this.onRecoverableError = i),
            (this.mutableSourceEagerHydrationData = null);
        }
        function Au(e, t, n, r, i, a, o, s, l) {
          return (
            (e = new Cu(e, t, n, s, l)),
            1 === t ? ((t = 1), !0 === a && (t |= 8)) : (t = 0),
            (a = xu(3, null, null, t)),
            (e.current = a),
            (a.stateNode = e),
            (a.memoizedState = {
              element: r,
              isDehydrated: n,
              cache: null,
              transitions: null,
            }),
            Ki(a),
            e
          );
        }
        function Pu(e, t, n) {
          var r =
            3 < arguments.length && void 0 !== arguments[3]
              ? arguments[3]
              : null;
          return {
            $$typeof: _,
            key: null == r ? null : "" + r,
            children: e,
            containerInfo: t,
            implementation: n,
          };
        }
        function Lu(e) {
          if (!e) return Mi;
          e: {
            if (je((e = e._reactInternals)) !== e || 1 !== e.tag)
              throw Error(a(170));
            var t = e;
            do {
              switch (t.tag) {
                case 3:
                  t = t.stateNode.context;
                  break e;
                case 1:
                  if (Ai(t.type)) {
                    t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                    break e;
                  }
              }
              t = t.return;
            } while (null !== t);
            throw Error(a(171));
          }
          if (1 === e.tag) {
            var n = e.type;
            if (Ai(n)) return Ri(e, n, t);
          }
          return t;
        }
        function Ru(e, t, n, r, i, a, o, s, l) {
          return (
            ((e = Au(n, r, !0, e, 0, a, 0, s, l)).context = Lu(null)),
            (n = e.current),
            ((a = ta((r = jl()), (i = Gl(n)))).callback =
              void 0 !== t && null !== t ? t : null),
            na(n, a),
            (e.current.lanes = i),
            mt(e, i, r),
            ql(e, r),
            e
          );
        }
        function Ou(e, t, n, r) {
          var i = t.current,
            a = jl(),
            o = Gl(i);
          return (
            (n = Lu(n)),
            null === t.context ? (t.context = n) : (t.pendingContext = n),
            ((t = ta(a, o)).payload = { element: e }),
            null !== (r = void 0 === r ? null : r) && (t.callback = r),
            na(i, t),
            null !== (e = Wl(i, o, a)) && ra(e, i, o),
            o
          );
        }
        function zu(e) {
          return (e = e.current).child
            ? (e.child.tag, e.child.stateNode)
            : null;
        }
        function Du(e, t) {
          if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
            var n = e.retryLane;
            e.retryLane = 0 !== n && n < t ? n : t;
          }
        }
        function Iu(e, t) {
          Du(e, t), (e = e.alternate) && Du(e, t);
        }
        dl = function (e, t, n) {
          if (null !== e)
            if (e.memoizedProps !== t.pendingProps || ki.current) gs = !0;
            else {
              if (0 === (e.lanes & n) && 0 === (128 & t.flags))
                return (
                  (gs = !1),
                  (function (e, t, n) {
                    switch (t.tag) {
                      case 3:
                        Ts(t), Na();
                        break;
                      case 5:
                        Za(t);
                        break;
                      case 1:
                        Ai(t.type) && Oi(t);
                        break;
                      case 4:
                        $a(t, t.stateNode.containerInfo);
                        break;
                      case 10:
                        var r = t.type._context,
                          i = t.memoizedProps.value;
                        Si(ji, r._currentValue), (r._currentValue = i);
                        break;
                      case 13:
                        if (null !== (r = t.memoizedState))
                          return null !== r.dehydrated
                            ? (Si(eo, 1 & eo.current), (t.flags |= 128), null)
                            : 0 !== (n & t.child.childLanes)
                            ? Ls(e, t, n)
                            : (Si(eo, 1 & eo.current),
                              null !== (e = Bs(e, t, n)) ? e.sibling : null);
                        Si(eo, 1 & eo.current);
                        break;
                      case 19:
                        if (
                          ((r = 0 !== (n & t.childLanes)),
                          0 !== (128 & e.flags))
                        ) {
                          if (r) return Fs(e, t, n);
                          t.flags |= 128;
                        }
                        if (
                          (null !== (i = t.memoizedState) &&
                            ((i.rendering = null),
                            (i.tail = null),
                            (i.lastEffect = null)),
                          Si(eo, eo.current),
                          r)
                        )
                          break;
                        return null;
                      case 22:
                      case 23:
                        return (t.lanes = 0), _s(e, t, n);
                    }
                    return Bs(e, t, n);
                  })(e, t, n)
                );
              gs = 0 !== (131072 & e.flags);
            }
          else (gs = !1), Aa && 0 !== (1048576 & t.flags) && Ma(t, ga, t.index);
          switch (((t.lanes = 0), t.tag)) {
            case 2:
              var r = t.type;
              null !== e &&
                ((e.alternate = null), (t.alternate = null), (t.flags |= 2)),
                (e = t.pendingProps);
              var i = Ci(t, Ei.current);
              Ji(t, n), (i = go(null, t, r, e, i, n));
              var o = yo();
              return (
                (t.flags |= 1),
                "object" === typeof i &&
                null !== i &&
                "function" === typeof i.render &&
                void 0 === i.$$typeof
                  ? ((t.tag = 1),
                    (t.memoizedState = null),
                    (t.updateQueue = null),
                    Ai(r) ? ((o = !0), Oi(t)) : (o = !1),
                    (t.memoizedState =
                      null !== i.state && void 0 !== i.state ? i.state : null),
                    Ki(t),
                    (i.updater = ua),
                    (t.stateNode = i),
                    (i._reactInternals = t),
                    ha(t, r, e, n),
                    (t = ks(null, t, r, !0, o, n)))
                  : ((t.tag = 0),
                    Aa && o && Ea(t),
                    ys(null, t, i, n),
                    (t = t.child)),
                t
              );
            case 16:
              r = t.elementType;
              e: {
                switch (
                  (null !== e &&
                    ((e.alternate = null),
                    (t.alternate = null),
                    (t.flags |= 2)),
                  (e = t.pendingProps),
                  (r = (i = r._init)(r._payload)),
                  (t.type = r),
                  (i = t.tag =
                    (function (e) {
                      if ("function" === typeof e) return wu(e) ? 1 : 0;
                      if (void 0 !== e && null !== e) {
                        if ((e = e.$$typeof) === C) return 11;
                        if (e === L) return 14;
                      }
                      return 2;
                    })(r)),
                  (e = Ui(r, e)),
                  i)
                ) {
                  case 0:
                    t = Ms(null, t, r, e, n);
                    break e;
                  case 1:
                    t = Es(null, t, r, e, n);
                    break e;
                  case 11:
                    t = bs(null, t, r, e, n);
                    break e;
                  case 14:
                    t = xs(null, t, r, Ui(r.type, e), n);
                    break e;
                }
                throw Error(a(306, r, ""));
              }
              return t;
            case 0:
              return (
                (r = t.type),
                (i = t.pendingProps),
                Ms(e, t, r, (i = t.elementType === r ? i : Ui(r, i)), n)
              );
            case 1:
              return (
                (r = t.type),
                (i = t.pendingProps),
                Es(e, t, r, (i = t.elementType === r ? i : Ui(r, i)), n)
              );
            case 3:
              e: {
                if ((Ts(t), null === e)) throw Error(a(387));
                (r = t.pendingProps),
                  (i = (o = t.memoizedState).element),
                  ea(e, t),
                  aa(t, r, null, n);
                var s = t.memoizedState;
                if (((r = s.element), o.isDehydrated)) {
                  if (
                    ((o = {
                      element: r,
                      isDehydrated: !1,
                      cache: s.cache,
                      transitions: s.transitions,
                    }),
                    (t.updateQueue.baseState = o),
                    (t.memoizedState = o),
                    256 & t.flags)
                  ) {
                    t = Cs(e, t, r, n, (i = Error(a(423))));
                    break e;
                  }
                  if (r !== i) {
                    t = Cs(e, t, r, n, (i = Error(a(424))));
                    break e;
                  }
                  for (
                    Ca = oi(t.stateNode.containerInfo.firstChild),
                      Ta = t,
                      Aa = !0,
                      Pa = null,
                      n = Wa(t, null, r, n),
                      t.child = n;
                    n;

                  )
                    (n.flags = (-3 & n.flags) | 4096), (n = n.sibling);
                } else {
                  if ((Na(), r === i)) {
                    t = Bs(e, t, n);
                    break e;
                  }
                  ys(e, t, r, n);
                }
                t = t.child;
              }
              return t;
            case 5:
              return (
                Za(t),
                null === e && za(t),
                (r = t.type),
                (i = t.pendingProps),
                (o = null !== e ? e.memoizedProps : null),
                (s = i.children),
                Kr(r, i)
                  ? (s = null)
                  : null !== o && Kr(r, o) && (t.flags |= 32),
                Ss(e, t),
                ys(e, t, s, n),
                t.child
              );
            case 6:
              return null === e && za(t), null;
            case 13:
              return Ls(e, t, n);
            case 4:
              return (
                $a(t, t.stateNode.containerInfo),
                (r = t.pendingProps),
                null === e ? (t.child = Ga(t, null, r, n)) : ys(e, t, r, n),
                t.child
              );
            case 11:
              return (
                (r = t.type),
                (i = t.pendingProps),
                bs(e, t, r, (i = t.elementType === r ? i : Ui(r, i)), n)
              );
            case 7:
              return ys(e, t, t.pendingProps, n), t.child;
            case 8:
            case 12:
              return ys(e, t, t.pendingProps.children, n), t.child;
            case 10:
              e: {
                if (
                  ((r = t.type._context),
                  (i = t.pendingProps),
                  (o = t.memoizedProps),
                  (s = i.value),
                  Si(ji, r._currentValue),
                  (r._currentValue = s),
                  null !== o)
                )
                  if (ar(o.value, s)) {
                    if (o.children === i.children && !ki.current) {
                      t = Bs(e, t, n);
                      break e;
                    }
                  } else
                    for (
                      null !== (o = t.child) && (o.return = t);
                      null !== o;

                    ) {
                      var l = o.dependencies;
                      if (null !== l) {
                        s = o.child;
                        for (var u = l.firstContext; null !== u; ) {
                          if (u.context === r) {
                            if (1 === o.tag) {
                              (u = ta(-1, n & -n)).tag = 2;
                              var c = o.updateQueue;
                              if (null !== c) {
                                var f = (c = c.shared).pending;
                                null === f
                                  ? (u.next = u)
                                  : ((u.next = f.next), (f.next = u)),
                                  (c.pending = u);
                              }
                            }
                            (o.lanes |= n),
                              null !== (u = o.alternate) && (u.lanes |= n),
                              Yi(o.return, n, t),
                              (l.lanes |= n);
                            break;
                          }
                          u = u.next;
                        }
                      } else if (10 === o.tag)
                        s = o.type === t.type ? null : o.child;
                      else if (18 === o.tag) {
                        if (null === (s = o.return)) throw Error(a(341));
                        (s.lanes |= n),
                          null !== (l = s.alternate) && (l.lanes |= n),
                          Yi(s, n, t),
                          (s = o.sibling);
                      } else s = o.child;
                      if (null !== s) s.return = o;
                      else
                        for (s = o; null !== s; ) {
                          if (s === t) {
                            s = null;
                            break;
                          }
                          if (null !== (o = s.sibling)) {
                            (o.return = s.return), (s = o);
                            break;
                          }
                          s = s.return;
                        }
                      o = s;
                    }
                ys(e, t, i.children, n), (t = t.child);
              }
              return t;
            case 9:
              return (
                (i = t.type),
                (r = t.pendingProps.children),
                Ji(t, n),
                (r = r((i = $i(i)))),
                (t.flags |= 1),
                ys(e, t, r, n),
                t.child
              );
            case 14:
              return (
                (i = Ui((r = t.type), t.pendingProps)),
                xs(e, t, r, (i = Ui(r.type, i)), n)
              );
            case 15:
              return ws(e, t, t.type, t.pendingProps, n);
            case 17:
              return (
                (r = t.type),
                (i = t.pendingProps),
                (i = t.elementType === r ? i : Ui(r, i)),
                null !== e &&
                  ((e.alternate = null), (t.alternate = null), (t.flags |= 2)),
                (t.tag = 1),
                Ai(r) ? ((e = !0), Oi(t)) : (e = !1),
                Ji(t, n),
                fa(t, r, i),
                ha(t, r, i, n),
                ks(null, t, r, !0, e, n)
              );
            case 19:
              return Fs(e, t, n);
            case 22:
              return _s(e, t, n);
          }
          throw Error(a(156, t.tag));
        };
        var Nu =
          "function" === typeof reportError
            ? reportError
            : function (e) {
                console.error(e);
              };
        function Fu(e) {
          this._internalRoot = e;
        }
        function Bu(e) {
          this._internalRoot = e;
        }
        function Hu(e) {
          return !(
            !e ||
            (1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
          );
        }
        function Uu(e) {
          return !(
            !e ||
            (1 !== e.nodeType &&
              9 !== e.nodeType &&
              11 !== e.nodeType &&
              (8 !== e.nodeType ||
                " react-mount-point-unstable " !== e.nodeValue))
          );
        }
        function ju() {}
        function Gu(e, t, n, r, i) {
          var a = n._reactRootContainer;
          if (a) {
            var o = a;
            if ("function" === typeof i) {
              var s = i;
              i = function () {
                var e = zu(o);
                s.call(e);
              };
            }
            Ou(t, o, e, i);
          } else
            o = (function (e, t, n, r, i) {
              if (i) {
                if ("function" === typeof r) {
                  var a = r;
                  r = function () {
                    var e = zu(o);
                    a.call(e);
                  };
                }
                var o = Ru(t, r, e, 0, null, !1, 0, "", ju);
                return (
                  (e._reactRootContainer = o),
                  (e[fi] = o.current),
                  Hr(8 === e.nodeType ? e.parentNode : e),
                  Kl(),
                  o
                );
              }
              for (; (i = e.lastChild); ) e.removeChild(i);
              if ("function" === typeof r) {
                var s = r;
                r = function () {
                  var e = zu(l);
                  s.call(e);
                };
              }
              var l = Au(e, 0, !1, null, 0, !1, 0, "", ju);
              return (
                (e._reactRootContainer = l),
                (e[fi] = l.current),
                Hr(8 === e.nodeType ? e.parentNode : e),
                Kl(function () {
                  Ou(t, l, n, r);
                }),
                l
              );
            })(n, t, e, i, r);
          return zu(o);
        }
        (Bu.prototype.render = Fu.prototype.render =
          function (e) {
            var t = this._internalRoot;
            if (null === t) throw Error(a(409));
            Ou(e, t, null, null);
          }),
          (Bu.prototype.unmount = Fu.prototype.unmount =
            function () {
              var e = this._internalRoot;
              if (null !== e) {
                this._internalRoot = null;
                var t = e.containerInfo;
                Kl(function () {
                  Ou(null, e, null, null);
                }),
                  (t[fi] = null);
              }
            }),
          (Bu.prototype.unstable_scheduleHydration = function (e) {
            if (e) {
              var t = St();
              e = { blockedOn: null, target: e, priority: t };
              for (
                var n = 0;
                n < Rt.length && 0 !== t && t < Rt[n].priority;
                n++
              );
              Rt.splice(n, 0, e), 0 === n && It(e);
            }
          }),
          (xt = function (e) {
            switch (e.tag) {
              case 3:
                var t = e.stateNode;
                if (t.current.memoizedState.isDehydrated) {
                  var n = ft(t.pendingLanes);
                  0 !== n &&
                    (gt(t, 1 | n),
                    ql(t, Qe()),
                    0 === (6 & gl) && ((Ll = Qe() + 500), Bi()));
                }
                break;
              case 13:
                var r = jl();
                Kl(function () {
                  return Wl(e, 1, r);
                }),
                  Iu(e, 1);
            }
          }),
          (wt = function (e) {
            13 === e.tag && (Wl(e, 134217728, jl()), Iu(e, 134217728));
          }),
          (_t = function (e) {
            if (13 === e.tag) {
              var t = jl(),
                n = Gl(e);
              Wl(e, n, t), Iu(e, n);
            }
          }),
          (St = function () {
            return yt;
          }),
          (Mt = function (e, t) {
            var n = yt;
            try {
              return (yt = e), t();
            } finally {
              yt = n;
            }
          }),
          (_e = function (e, t, n) {
            switch (t) {
              case "input":
                if ((Z(e, n), (t = n.name), "radio" === n.type && null != t)) {
                  for (n = e; n.parentNode; ) n = n.parentNode;
                  for (
                    n = n.querySelectorAll(
                      "input[name=" + JSON.stringify("" + t) + '][type="radio"]'
                    ),
                      t = 0;
                    t < n.length;
                    t++
                  ) {
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                      var i = yi(r);
                      if (!i) throw Error(a(90));
                      X(r), Z(r, i);
                    }
                  }
                }
                break;
              case "textarea":
                ae(e, n);
                break;
              case "select":
                null != (t = n.value) && ne(e, !!n.multiple, t, !1);
            }
          }),
          (Ce = Zl),
          (Ae = Kl);
        var Wu = {
            usingClientEntryPoint: !1,
            Events: [mi, gi, yi, ke, Te, Zl],
          },
          Vu = {
            findFiberByHostInstance: vi,
            bundleType: 0,
            version: "18.0.0-fc46dba67-20220329",
            rendererPackageName: "react-dom",
          },
          qu = {
            bundleType: Vu.bundleType,
            version: Vu.version,
            rendererPackageName: Vu.rendererPackageName,
            rendererConfig: Vu.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setErrorHandler: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: x.ReactCurrentDispatcher,
            findHostInstanceByFiber: function (e) {
              return null === (e = Ve(e)) ? null : e.stateNode;
            },
            findFiberByHostInstance:
              Vu.findFiberByHostInstance ||
              function () {
                return null;
              },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
            reconcilerVersion: "18.0.0-fc46dba67-20220329",
          };
        if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
          var Xu = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (!Xu.isDisabled && Xu.supportsFiber)
            try {
              (it = Xu.inject(qu)), (at = Xu);
            } catch (ce) {}
        }
        (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Wu),
          (t.createPortal = function (e, t) {
            var n =
              2 < arguments.length && void 0 !== arguments[2]
                ? arguments[2]
                : null;
            if (!Hu(t)) throw Error(a(200));
            return Pu(e, t, null, n);
          }),
          (t.createRoot = function (e, t) {
            if (!Hu(e)) throw Error(a(299));
            var n = !1,
              r = "",
              i = Nu;
            return (
              null !== t &&
                void 0 !== t &&
                (!0 === t.unstable_strictMode && (n = !0),
                void 0 !== t.identifierPrefix && (r = t.identifierPrefix),
                void 0 !== t.onRecoverableError && (i = t.onRecoverableError)),
              (t = Au(e, 1, !1, null, 0, n, 0, r, i)),
              (e[fi] = t.current),
              Hr(8 === e.nodeType ? e.parentNode : e),
              new Fu(t)
            );
          }),
          (t.findDOMNode = function (e) {
            if (null == e) return null;
            if (1 === e.nodeType) return e;
            var t = e._reactInternals;
            if (void 0 === t) {
              if ("function" === typeof e.render) throw Error(a(188));
              throw ((e = Object.keys(e).join(",")), Error(a(268, e)));
            }
            return (e = null === (e = Ve(t)) ? null : e.stateNode);
          }),
          (t.flushSync = function (e) {
            return Kl(e);
          }),
          (t.hydrate = function (e, t, n) {
            if (!Uu(t)) throw Error(a(200));
            return Gu(null, e, t, !0, n);
          }),
          (t.hydrateRoot = function (e, t, n) {
            if (!Hu(e)) throw Error(a(405));
            var r = (null != n && n.hydratedSources) || null,
              i = !1,
              o = "",
              s = Nu;
            if (
              (null !== n &&
                void 0 !== n &&
                (!0 === n.unstable_strictMode && (i = !0),
                void 0 !== n.identifierPrefix && (o = n.identifierPrefix),
                void 0 !== n.onRecoverableError && (s = n.onRecoverableError)),
              (t = Ru(t, null, e, 1, null != n ? n : null, i, 0, o, s)),
              (e[fi] = t.current),
              Hr(e),
              r)
            )
              for (e = 0; e < r.length; e++)
                (i = (i = (n = r[e])._getVersion)(n._source)),
                  null == t.mutableSourceEagerHydrationData
                    ? (t.mutableSourceEagerHydrationData = [n, i])
                    : t.mutableSourceEagerHydrationData.push(n, i);
            return new Bu(t);
          }),
          (t.render = function (e, t, n) {
            if (!Uu(t)) throw Error(a(200));
            return Gu(null, e, t, !1, n);
          }),
          (t.unmountComponentAtNode = function (e) {
            if (!Uu(e)) throw Error(a(40));
            return (
              !!e._reactRootContainer &&
              (Kl(function () {
                Gu(null, null, e, !1, function () {
                  (e._reactRootContainer = null), (e[fi] = null);
                });
              }),
              !0)
            );
          }),
          (t.unstable_batchedUpdates = Zl),
          (t.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
            if (!Uu(n)) throw Error(a(200));
            if (null == e || void 0 === e._reactInternals) throw Error(a(38));
            return Gu(e, t, n, !1, r);
          }),
          (t.version = "18.0.0-fc46dba67-20220329");
      },
      4164: function (e, t, n) {
        "use strict";
        !(function e() {
          if (
            "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
            "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE
          )
            try {
              __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
            } catch (t) {
              console.error(t);
            }
        })(),
          (e.exports = n(4463));
      },
      1372: function (e, t) {
        "use strict";
        var n = 60103,
          r = 60106,
          i = 60107,
          a = 60108,
          o = 60114,
          s = 60109,
          l = 60110,
          u = 60112,
          c = 60113,
          f = 60120,
          d = 60115,
          h = 60116,
          p = 60121,
          v = 60122,
          m = 60117,
          g = 60129,
          y = 60131;
        if ("function" === typeof Symbol && Symbol.for) {
          var b = Symbol.for;
          (n = b("react.element")),
            (r = b("react.portal")),
            (i = b("react.fragment")),
            (a = b("react.strict_mode")),
            (o = b("react.profiler")),
            (s = b("react.provider")),
            (l = b("react.context")),
            (u = b("react.forward_ref")),
            (c = b("react.suspense")),
            (f = b("react.suspense_list")),
            (d = b("react.memo")),
            (h = b("react.lazy")),
            (p = b("react.block")),
            (v = b("react.server.block")),
            (m = b("react.fundamental")),
            (g = b("react.debug_trace_mode")),
            (y = b("react.legacy_hidden"));
        }
        function x(e) {
          if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
              case n:
                switch ((e = e.type)) {
                  case i:
                  case o:
                  case a:
                  case c:
                  case f:
                    return e;
                  default:
                    switch ((e = e && e.$$typeof)) {
                      case l:
                      case u:
                      case h:
                      case d:
                      case s:
                        return e;
                      default:
                        return t;
                    }
                }
              case r:
                return t;
            }
          }
        }
        t.isFragment = function (e) {
          return x(e) === i;
        };
      },
      7441: function (e, t, n) {
        "use strict";
        e.exports = n(1372);
      },
      4976: function (e, t) {
        "use strict";
        (t.ConcurrentRoot = 1),
          (t.ContinuousEventPriority = 4),
          (t.DefaultEventPriority = 16),
          (t.DiscreteEventPriority = 1);
      },
      3721: function (e, t, n) {
        e.exports = function (e) {
          var t = {},
            r = n(2791),
            i = n(5296),
            a = Object.assign;
          function o(e) {
            for (
              var t =
                  "https://reactjs.org/docs/error-decoder.html?invariant=" + e,
                n = 1;
              n < arguments.length;
              n++
            )
              t += "&args[]=" + encodeURIComponent(arguments[n]);
            return (
              "Minified React error #" +
              e +
              "; visit " +
              t +
              " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
            );
          }
          var s = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
            l = Symbol.for("react.element"),
            u = Symbol.for("react.portal"),
            c = Symbol.for("react.fragment"),
            f = Symbol.for("react.strict_mode"),
            d = Symbol.for("react.profiler"),
            h = Symbol.for("react.provider"),
            p = Symbol.for("react.context"),
            v = Symbol.for("react.forward_ref"),
            m = Symbol.for("react.suspense"),
            g = Symbol.for("react.suspense_list"),
            y = Symbol.for("react.memo"),
            b = Symbol.for("react.lazy");
          Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
          var x = Symbol.for("react.offscreen");
          Symbol.for("react.legacy_hidden"),
            Symbol.for("react.cache"),
            Symbol.for("react.tracing_marker");
          var w = Symbol.iterator;
          function _(e) {
            return null === e || "object" !== typeof e
              ? null
              : "function" === typeof (e = (w && e[w]) || e["@@iterator"])
              ? e
              : null;
          }
          function S(e) {
            if (null == e) return null;
            if ("function" === typeof e) return e.displayName || e.name || null;
            if ("string" === typeof e) return e;
            switch (e) {
              case c:
                return "Fragment";
              case u:
                return "Portal";
              case d:
                return "Profiler";
              case f:
                return "StrictMode";
              case m:
                return "Suspense";
              case g:
                return "SuspenseList";
            }
            if ("object" === typeof e)
              switch (e.$$typeof) {
                case p:
                  return (e.displayName || "Context") + ".Consumer";
                case h:
                  return (e._context.displayName || "Context") + ".Provider";
                case v:
                  var t = e.render;
                  return (
                    (e = e.displayName) ||
                      (e =
                        "" !== (e = t.displayName || t.name || "")
                          ? "ForwardRef(" + e + ")"
                          : "ForwardRef"),
                    e
                  );
                case y:
                  return null !== (t = e.displayName || null)
                    ? t
                    : S(e.type) || "Memo";
                case b:
                  (t = e._payload), (e = e._init);
                  try {
                    return S(e(t));
                  } catch (n) {}
              }
            return null;
          }
          function M(e) {
            var t = e.type;
            switch (e.tag) {
              case 24:
                return "Cache";
              case 9:
                return (t.displayName || "Context") + ".Consumer";
              case 10:
                return (t._context.displayName || "Context") + ".Provider";
              case 18:
                return "DehydratedFragment";
              case 11:
                return (
                  (e = (e = t.render).displayName || e.name || ""),
                  t.displayName ||
                    ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef")
                );
              case 7:
                return "Fragment";
              case 5:
                return t;
              case 4:
                return "Portal";
              case 3:
                return "Root";
              case 6:
                return "Text";
              case 16:
                return S(t);
              case 8:
                return t === f ? "StrictMode" : "Mode";
              case 22:
                return "Offscreen";
              case 12:
                return "Profiler";
              case 21:
                return "Scope";
              case 13:
                return "Suspense";
              case 19:
                return "SuspenseList";
              case 25:
                return "TracingMarker";
              case 1:
              case 0:
              case 17:
              case 2:
              case 14:
              case 15:
                if ("function" === typeof t)
                  return t.displayName || t.name || null;
                if ("string" === typeof t) return t;
            }
            return null;
          }
          function E(e) {
            var t = e,
              n = e;
            if (e.alternate) for (; t.return; ) t = t.return;
            else {
              e = t;
              do {
                0 !== (4098 & (t = e).flags) && (n = t.return), (e = t.return);
              } while (e);
            }
            return 3 === t.tag ? n : null;
          }
          function k(e) {
            if (E(e) !== e) throw Error(o(188));
          }
          function T(e) {
            var t = e.alternate;
            if (!t) {
              if (null === (t = E(e))) throw Error(o(188));
              return t !== e ? null : e;
            }
            for (var n = e, r = t; ; ) {
              var i = n.return;
              if (null === i) break;
              var a = i.alternate;
              if (null === a) {
                if (null !== (r = i.return)) {
                  n = r;
                  continue;
                }
                break;
              }
              if (i.child === a.child) {
                for (a = i.child; a; ) {
                  if (a === n) return k(i), e;
                  if (a === r) return k(i), t;
                  a = a.sibling;
                }
                throw Error(o(188));
              }
              if (n.return !== r.return) (n = i), (r = a);
              else {
                for (var s = !1, l = i.child; l; ) {
                  if (l === n) {
                    (s = !0), (n = i), (r = a);
                    break;
                  }
                  if (l === r) {
                    (s = !0), (r = i), (n = a);
                    break;
                  }
                  l = l.sibling;
                }
                if (!s) {
                  for (l = a.child; l; ) {
                    if (l === n) {
                      (s = !0), (n = a), (r = i);
                      break;
                    }
                    if (l === r) {
                      (s = !0), (r = a), (n = i);
                      break;
                    }
                    l = l.sibling;
                  }
                  if (!s) throw Error(o(189));
                }
              }
              if (n.alternate !== r) throw Error(o(190));
            }
            if (3 !== n.tag) throw Error(o(188));
            return n.stateNode.current === n ? e : t;
          }
          function C(e) {
            return null !== (e = T(e)) ? A(e) : null;
          }
          function A(e) {
            if (5 === e.tag || 6 === e.tag) return e;
            for (e = e.child; null !== e; ) {
              var t = A(e);
              if (null !== t) return t;
              e = e.sibling;
            }
            return null;
          }
          function P(e) {
            if (5 === e.tag || 6 === e.tag) return e;
            for (e = e.child; null !== e; ) {
              if (4 !== e.tag) {
                var t = P(e);
                if (null !== t) return t;
              }
              e = e.sibling;
            }
            return null;
          }
          var L,
            R = Array.isArray,
            O = e.getPublicInstance,
            z = e.getRootHostContext,
            D = e.getChildHostContext,
            I = e.prepareForCommit,
            N = e.resetAfterCommit,
            F = e.createInstance,
            B = e.appendInitialChild,
            H = e.finalizeInitialChildren,
            U = e.prepareUpdate,
            j = e.shouldSetTextContent,
            G = e.createTextInstance,
            W = e.scheduleTimeout,
            V = e.cancelTimeout,
            q = e.noTimeout,
            X = e.isPrimaryRenderer,
            Y = e.supportsMutation,
            J = e.supportsPersistence,
            $ = e.supportsHydration,
            Q = e.getInstanceFromNode,
            Z = e.preparePortalMount,
            K = e.getCurrentEventPriority,
            ee = e.detachDeletedInstance,
            te = e.supportsMicrotasks,
            ne = e.scheduleMicrotask,
            re = e.supportsTestSelectors,
            ie = e.findFiberRoot,
            ae = e.getBoundingRect,
            oe = e.getTextContent,
            se = e.isHiddenSubtree,
            le = e.matchAccessibilityRole,
            ue = e.setFocusIfFocusable,
            ce = e.setupIntersectionObserver,
            fe = e.appendChild,
            de = e.appendChildToContainer,
            he = e.commitTextUpdate,
            pe = e.commitMount,
            ve = e.commitUpdate,
            me = e.insertBefore,
            ge = e.insertInContainerBefore,
            ye = e.removeChild,
            be = e.removeChildFromContainer,
            xe = e.resetTextContent,
            we = e.hideInstance,
            _e = e.hideTextInstance,
            Se = e.unhideInstance,
            Me = e.unhideTextInstance,
            Ee = e.clearContainer,
            ke = e.cloneInstance,
            Te = e.createContainerChildSet,
            Ce = e.appendChildToContainerChildSet,
            Ae = e.finalizeContainerChildren,
            Pe = e.replaceContainerChildren,
            Le = e.cloneHiddenInstance,
            Re = e.cloneHiddenTextInstance,
            Oe = e.canHydrateInstance,
            ze = e.canHydrateTextInstance,
            De = e.canHydrateSuspenseInstance,
            Ie = e.isSuspenseInstancePending,
            Ne = e.isSuspenseInstanceFallback,
            Fe = e.registerSuspenseInstanceRetry,
            Be = e.getNextHydratableSibling,
            He = e.getFirstHydratableChild,
            Ue = e.getFirstHydratableChildWithinContainer,
            je = e.getFirstHydratableChildWithinSuspenseInstance,
            Ge = e.hydrateInstance,
            We = e.hydrateTextInstance,
            Ve = e.hydrateSuspenseInstance,
            qe = e.getNextHydratableInstanceAfterSuspenseInstance,
            Xe = e.commitHydratedContainer,
            Ye = e.commitHydratedSuspenseInstance,
            Je = e.clearSuspenseBoundary,
            $e = e.clearSuspenseBoundaryFromContainer,
            Qe = e.shouldDeleteUnhydratedTailInstances,
            Ze = e.didNotMatchHydratedContainerTextInstance,
            Ke = e.didNotMatchHydratedTextInstance;
          function et(e) {
            if (void 0 === L)
              try {
                throw Error();
              } catch (n) {
                var t = n.stack.trim().match(/\n( *(at )?)/);
                L = (t && t[1]) || "";
              }
            return "\n" + L + e;
          }
          var tt = !1;
          function nt(e, t) {
            if (!e || tt) return "";
            tt = !0;
            var n = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            try {
              if (t)
                if (
                  ((t = function () {
                    throw Error();
                  }),
                  Object.defineProperty(t.prototype, "props", {
                    set: function () {
                      throw Error();
                    },
                  }),
                  "object" === typeof Reflect && Reflect.construct)
                ) {
                  try {
                    Reflect.construct(t, []);
                  } catch (u) {
                    var r = u;
                  }
                  Reflect.construct(e, [], t);
                } else {
                  try {
                    t.call();
                  } catch (u) {
                    r = u;
                  }
                  e.call(t.prototype);
                }
              else {
                try {
                  throw Error();
                } catch (u) {
                  r = u;
                }
                e();
              }
            } catch (u) {
              if (u && r && "string" === typeof u.stack) {
                for (
                  var i = u.stack.split("\n"),
                    a = r.stack.split("\n"),
                    o = i.length - 1,
                    s = a.length - 1;
                  1 <= o && 0 <= s && i[o] !== a[s];

                )
                  s--;
                for (; 1 <= o && 0 <= s; o--, s--)
                  if (i[o] !== a[s]) {
                    if (1 !== o || 1 !== s)
                      do {
                        if ((o--, 0 > --s || i[o] !== a[s])) {
                          var l = "\n" + i[o].replace(" at new ", " at ");
                          return (
                            e.displayName &&
                              l.includes("<anonymous>") &&
                              (l = l.replace("<anonymous>", e.displayName)),
                            l
                          );
                        }
                      } while (1 <= o && 0 <= s);
                    break;
                  }
              }
            } finally {
              (tt = !1), (Error.prepareStackTrace = n);
            }
            return (e = e ? e.displayName || e.name : "") ? et(e) : "";
          }
          var rt = Object.prototype.hasOwnProperty,
            it = [],
            at = -1;
          function ot(e) {
            return { current: e };
          }
          function st(e) {
            0 > at || ((e.current = it[at]), (it[at] = null), at--);
          }
          function lt(e, t) {
            at++, (it[at] = e.current), (e.current = t);
          }
          var ut = {},
            ct = ot(ut),
            ft = ot(!1),
            dt = ut;
          function ht(e, t) {
            var n = e.type.contextTypes;
            if (!n) return ut;
            var r = e.stateNode;
            if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
              return r.__reactInternalMemoizedMaskedChildContext;
            var i,
              a = {};
            for (i in n) a[i] = t[i];
            return (
              r &&
                (((e =
                  e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t),
                (e.__reactInternalMemoizedMaskedChildContext = a)),
              a
            );
          }
          function pt(e) {
            return null !== (e = e.childContextTypes) && void 0 !== e;
          }
          function vt() {
            st(ft), st(ct);
          }
          function mt(e, t, n) {
            if (ct.current !== ut) throw Error(o(168));
            lt(ct, t), lt(ft, n);
          }
          function gt(e, t, n) {
            var r = e.stateNode;
            if (
              ((t = t.childContextTypes),
              "function" !== typeof r.getChildContext)
            )
              return n;
            for (var i in (r = r.getChildContext()))
              if (!(i in t)) throw Error(o(108, M(e) || "Unknown", i));
            return a({}, n, r);
          }
          function yt(e) {
            return (
              (e =
                ((e = e.stateNode) &&
                  e.__reactInternalMemoizedMergedChildContext) ||
                ut),
              (dt = ct.current),
              lt(ct, e),
              lt(ft, ft.current),
              !0
            );
          }
          function bt(e, t, n) {
            var r = e.stateNode;
            if (!r) throw Error(o(169));
            n
              ? ((e = gt(e, t, dt)),
                (r.__reactInternalMemoizedMergedChildContext = e),
                st(ft),
                st(ct),
                lt(ct, e))
              : st(ft),
              lt(ft, n);
          }
          var xt = Math.clz32
              ? Math.clz32
              : function (e) {
                  return 0 === (e >>>= 0) ? 32 : (31 - ((wt(e) / _t) | 0)) | 0;
                },
            wt = Math.log,
            _t = Math.LN2;
          var St = 64,
            Mt = 4194304;
          function Et(e) {
            switch (e & -e) {
              case 1:
                return 1;
              case 2:
                return 2;
              case 4:
                return 4;
              case 8:
                return 8;
              case 16:
                return 16;
              case 32:
                return 32;
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
                return 4194240 & e;
              case 4194304:
              case 8388608:
              case 16777216:
              case 33554432:
              case 67108864:
                return 130023424 & e;
              case 134217728:
                return 134217728;
              case 268435456:
                return 268435456;
              case 536870912:
                return 536870912;
              case 1073741824:
                return 1073741824;
              default:
                return e;
            }
          }
          function kt(e, t) {
            var n = e.pendingLanes;
            if (0 === n) return 0;
            var r = 0,
              i = e.suspendedLanes,
              a = e.pingedLanes,
              o = 268435455 & n;
            if (0 !== o) {
              var s = o & ~i;
              0 !== s ? (r = Et(s)) : 0 !== (a &= o) && (r = Et(a));
            } else 0 !== (o = n & ~i) ? (r = Et(o)) : 0 !== a && (r = Et(a));
            if (0 === r) return 0;
            if (
              0 !== t &&
              t !== r &&
              0 === (t & i) &&
              ((i = r & -r) >= (a = t & -t) ||
                (16 === i && 0 !== (4194240 & a)))
            )
              return t;
            if ((0 !== (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes)))
              for (e = e.entanglements, t &= r; 0 < t; )
                (i = 1 << (n = 31 - xt(t))), (r |= e[n]), (t &= ~i);
            return r;
          }
          function Tt(e, t) {
            switch (e) {
              case 1:
              case 2:
              case 4:
                return t + 250;
              case 8:
              case 16:
              case 32:
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
                return t + 5e3;
              default:
                return -1;
            }
          }
          function Ct(e) {
            return 0 !== (e = -1073741825 & e.pendingLanes)
              ? e
              : 1073741824 & e
              ? 1073741824
              : 0;
          }
          function At(e) {
            for (var t = [], n = 0; 31 > n; n++) t.push(e);
            return t;
          }
          function Pt(e, t, n) {
            (e.pendingLanes |= t),
              536870912 !== t && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
              ((e = e.eventTimes)[(t = 31 - xt(t))] = n);
          }
          function Lt(e, t) {
            var n = (e.entangledLanes |= t);
            for (e = e.entanglements; n; ) {
              var r = 31 - xt(n),
                i = 1 << r;
              (i & t) | (e[r] & t) && (e[r] |= t), (n &= ~i);
            }
          }
          var Rt = 0;
          function Ot(e) {
            return 1 < (e &= -e)
              ? 4 < e
                ? 0 !== (268435455 & e)
                  ? 16
                  : 536870912
                : 4
              : 1;
          }
          var zt = i.unstable_scheduleCallback,
            Dt = i.unstable_cancelCallback,
            It = i.unstable_shouldYield,
            Nt = i.unstable_requestPaint,
            Ft = i.unstable_now,
            Bt = i.unstable_ImmediatePriority,
            Ht = i.unstable_UserBlockingPriority,
            Ut = i.unstable_NormalPriority,
            jt = i.unstable_IdlePriority,
            Gt = null,
            Wt = null;
          var Vt =
              "function" === typeof Object.is
                ? Object.is
                : function (e, t) {
                    return (
                      (e === t && (0 !== e || 1 / e === 1 / t)) ||
                      (e !== e && t !== t)
                    );
                  },
            qt = null,
            Xt = !1,
            Yt = !1;
          function Jt(e) {
            null === qt ? (qt = [e]) : qt.push(e);
          }
          function $t() {
            if (!Yt && null !== qt) {
              Yt = !0;
              var e = 0,
                t = Rt;
              try {
                var n = qt;
                for (Rt = 1; e < n.length; e++) {
                  var r = n[e];
                  do {
                    r = r(!0);
                  } while (null !== r);
                }
                (qt = null), (Xt = !1);
              } catch (i) {
                throw (null !== qt && (qt = qt.slice(e + 1)), zt(Bt, $t), i);
              } finally {
                (Rt = t), (Yt = !1);
              }
            }
            return null;
          }
          var Qt = s.ReactCurrentBatchConfig;
          function Zt(e, t) {
            if (Vt(e, t)) return !0;
            if (
              "object" !== typeof e ||
              null === e ||
              "object" !== typeof t ||
              null === t
            )
              return !1;
            var n = Object.keys(e),
              r = Object.keys(t);
            if (n.length !== r.length) return !1;
            for (r = 0; r < n.length; r++) {
              var i = n[r];
              if (!rt.call(t, i) || !Vt(e[i], t[i])) return !1;
            }
            return !0;
          }
          function Kt(e) {
            switch (e.tag) {
              case 5:
                return et(e.type);
              case 16:
                return et("Lazy");
              case 13:
                return et("Suspense");
              case 19:
                return et("SuspenseList");
              case 0:
              case 2:
              case 15:
                return (e = nt(e.type, !1));
              case 11:
                return (e = nt(e.type.render, !1));
              case 1:
                return (e = nt(e.type, !0));
              default:
                return "";
            }
          }
          function en(e, t) {
            if (e && e.defaultProps) {
              for (var n in ((t = a({}, t)), (e = e.defaultProps)))
                void 0 === t[n] && (t[n] = e[n]);
              return t;
            }
            return t;
          }
          var tn = ot(null),
            nn = null,
            rn = null,
            an = null;
          function on() {
            an = rn = nn = null;
          }
          function sn(e, t, n) {
            X
              ? (lt(tn, t._currentValue), (t._currentValue = n))
              : (lt(tn, t._currentValue2), (t._currentValue2 = n));
          }
          function ln(e) {
            var t = tn.current;
            st(tn), X ? (e._currentValue = t) : (e._currentValue2 = t);
          }
          function un(e, t, n) {
            for (; null !== e; ) {
              var r = e.alternate;
              if (
                ((e.childLanes & t) !== t
                  ? ((e.childLanes |= t), null !== r && (r.childLanes |= t))
                  : null !== r &&
                    (r.childLanes & t) !== t &&
                    (r.childLanes |= t),
                e === n)
              )
                break;
              e = e.return;
            }
          }
          function cn(e, t) {
            (nn = e),
              (an = rn = null),
              null !== (e = e.dependencies) &&
                null !== e.firstContext &&
                (0 !== (e.lanes & t) && (Ii = !0), (e.firstContext = null));
          }
          function fn(e) {
            var t = X ? e._currentValue : e._currentValue2;
            if (an !== e)
              if (
                ((e = { context: e, memoizedValue: t, next: null }),
                null === rn)
              ) {
                if (null === nn) throw Error(o(308));
                (rn = e), (nn.dependencies = { lanes: 0, firstContext: e });
              } else rn = rn.next = e;
            return t;
          }
          var dn = null,
            hn = !1;
          function pn(e) {
            e.updateQueue = {
              baseState: e.memoizedState,
              firstBaseUpdate: null,
              lastBaseUpdate: null,
              shared: { pending: null, interleaved: null, lanes: 0 },
              effects: null,
            };
          }
          function vn(e, t) {
            (e = e.updateQueue),
              t.updateQueue === e &&
                (t.updateQueue = {
                  baseState: e.baseState,
                  firstBaseUpdate: e.firstBaseUpdate,
                  lastBaseUpdate: e.lastBaseUpdate,
                  shared: e.shared,
                  effects: e.effects,
                });
          }
          function mn(e, t) {
            return {
              eventTime: e,
              lane: t,
              tag: 0,
              payload: null,
              callback: null,
              next: null,
            };
          }
          function gn(e, t) {
            var n = e.updateQueue;
            null !== n &&
              ((n = n.shared),
              null !== Ya && 0 !== (1 & e.mode) && 0 === (2 & Xa)
                ? (null === (e = n.interleaved)
                    ? ((t.next = t), null === dn ? (dn = [n]) : dn.push(n))
                    : ((t.next = e.next), (e.next = t)),
                  (n.interleaved = t))
                : (null === (e = n.pending)
                    ? (t.next = t)
                    : ((t.next = e.next), (e.next = t)),
                  (n.pending = t)));
          }
          function yn(e, t, n) {
            if (
              null !== (t = t.updateQueue) &&
              ((t = t.shared), 0 !== (4194240 & n))
            ) {
              var r = t.lanes;
              (n |= r &= e.pendingLanes), (t.lanes = n), Lt(e, n);
            }
          }
          function bn(e, t) {
            var n = e.updateQueue,
              r = e.alternate;
            if (null !== r && n === (r = r.updateQueue)) {
              var i = null,
                a = null;
              if (null !== (n = n.firstBaseUpdate)) {
                do {
                  var o = {
                    eventTime: n.eventTime,
                    lane: n.lane,
                    tag: n.tag,
                    payload: n.payload,
                    callback: n.callback,
                    next: null,
                  };
                  null === a ? (i = a = o) : (a = a.next = o), (n = n.next);
                } while (null !== n);
                null === a ? (i = a = t) : (a = a.next = t);
              } else i = a = t;
              return (
                (n = {
                  baseState: r.baseState,
                  firstBaseUpdate: i,
                  lastBaseUpdate: a,
                  shared: r.shared,
                  effects: r.effects,
                }),
                void (e.updateQueue = n)
              );
            }
            null === (e = n.lastBaseUpdate)
              ? (n.firstBaseUpdate = t)
              : (e.next = t),
              (n.lastBaseUpdate = t);
          }
          function xn(e, t, n, r) {
            var i = e.updateQueue;
            hn = !1;
            var o = i.firstBaseUpdate,
              s = i.lastBaseUpdate,
              l = i.shared.pending;
            if (null !== l) {
              i.shared.pending = null;
              var u = l,
                c = u.next;
              (u.next = null), null === s ? (o = c) : (s.next = c), (s = u);
              var f = e.alternate;
              null !== f &&
                (l = (f = f.updateQueue).lastBaseUpdate) !== s &&
                (null === l ? (f.firstBaseUpdate = c) : (l.next = c),
                (f.lastBaseUpdate = u));
            }
            if (null !== o) {
              var d = i.baseState;
              for (s = 0, f = c = u = null, l = o; ; ) {
                var h = l.lane,
                  p = l.eventTime;
                if ((r & h) === h) {
                  null !== f &&
                    (f = f.next =
                      {
                        eventTime: p,
                        lane: 0,
                        tag: l.tag,
                        payload: l.payload,
                        callback: l.callback,
                        next: null,
                      });
                  e: {
                    var v = e,
                      m = l;
                    switch (((h = t), (p = n), m.tag)) {
                      case 1:
                        if ("function" === typeof (v = m.payload)) {
                          d = v.call(p, d, h);
                          break e;
                        }
                        d = v;
                        break e;
                      case 3:
                        v.flags = (-65537 & v.flags) | 128;
                      case 0:
                        if (
                          null ===
                            (h =
                              "function" === typeof (v = m.payload)
                                ? v.call(p, d, h)
                                : v) ||
                          void 0 === h
                        )
                          break e;
                        d = a({}, d, h);
                        break e;
                      case 2:
                        hn = !0;
                    }
                  }
                  null !== l.callback &&
                    0 !== l.lane &&
                    ((e.flags |= 64),
                    null === (h = i.effects) ? (i.effects = [l]) : h.push(l));
                } else
                  (p = {
                    eventTime: p,
                    lane: h,
                    tag: l.tag,
                    payload: l.payload,
                    callback: l.callback,
                    next: null,
                  }),
                    null === f ? ((c = f = p), (u = d)) : (f = f.next = p),
                    (s |= h);
                if (null === (l = l.next)) {
                  if (null === (l = i.shared.pending)) break;
                  (l = (h = l).next),
                    (h.next = null),
                    (i.lastBaseUpdate = h),
                    (i.shared.pending = null);
                }
              }
              if (
                (null === f && (u = d),
                (i.baseState = u),
                (i.firstBaseUpdate = c),
                (i.lastBaseUpdate = f),
                null !== (t = i.shared.interleaved))
              ) {
                i = t;
                do {
                  (s |= i.lane), (i = i.next);
                } while (i !== t);
              } else null === o && (i.shared.lanes = 0);
              (to |= s), (e.lanes = s), (e.memoizedState = d);
            }
          }
          function wn(e, t, n) {
            if (((e = t.effects), (t.effects = null), null !== e))
              for (t = 0; t < e.length; t++) {
                var r = e[t],
                  i = r.callback;
                if (null !== i) {
                  if (((r.callback = null), (r = n), "function" !== typeof i))
                    throw Error(o(191, i));
                  i.call(r);
                }
              }
          }
          var _n = new r.Component().refs;
          function Sn(e, t, n, r) {
            (n =
              null === (n = n(r, (t = e.memoizedState))) || void 0 === n
                ? t
                : a({}, t, n)),
              (e.memoizedState = n),
              0 === e.lanes && (e.updateQueue.baseState = n);
          }
          var Mn = {
            isMounted: function (e) {
              return !!(e = e._reactInternals) && E(e) === e;
            },
            enqueueSetState: function (e, t, n) {
              e = e._reactInternals;
              var r = wo(),
                i = _o(e),
                a = mn(r, i);
              (a.payload = t),
                void 0 !== n && null !== n && (a.callback = n),
                gn(e, a),
                null !== (t = So(e, i, r)) && yn(t, e, i);
            },
            enqueueReplaceState: function (e, t, n) {
              e = e._reactInternals;
              var r = wo(),
                i = _o(e),
                a = mn(r, i);
              (a.tag = 1),
                (a.payload = t),
                void 0 !== n && null !== n && (a.callback = n),
                gn(e, a),
                null !== (t = So(e, i, r)) && yn(t, e, i);
            },
            enqueueForceUpdate: function (e, t) {
              e = e._reactInternals;
              var n = wo(),
                r = _o(e),
                i = mn(n, r);
              (i.tag = 2),
                void 0 !== t && null !== t && (i.callback = t),
                gn(e, i),
                null !== (t = So(e, r, n)) && yn(t, e, r);
            },
          };
          function En(e, t, n, r, i, a, o) {
            return "function" === typeof (e = e.stateNode).shouldComponentUpdate
              ? e.shouldComponentUpdate(r, a, o)
              : !t.prototype ||
                  !t.prototype.isPureReactComponent ||
                  !Zt(n, r) ||
                  !Zt(i, a);
          }
          function kn(e, t, n) {
            var r = !1,
              i = ut,
              a = t.contextType;
            return (
              "object" === typeof a && null !== a
                ? (a = fn(a))
                : ((i = pt(t) ? dt : ct.current),
                  (a = (r = null !== (r = t.contextTypes) && void 0 !== r)
                    ? ht(e, i)
                    : ut)),
              (t = new t(n, a)),
              (e.memoizedState =
                null !== t.state && void 0 !== t.state ? t.state : null),
              (t.updater = Mn),
              (e.stateNode = t),
              (t._reactInternals = e),
              r &&
                (((e =
                  e.stateNode).__reactInternalMemoizedUnmaskedChildContext = i),
                (e.__reactInternalMemoizedMaskedChildContext = a)),
              t
            );
          }
          function Tn(e, t, n, r) {
            (e = t.state),
              "function" === typeof t.componentWillReceiveProps &&
                t.componentWillReceiveProps(n, r),
              "function" === typeof t.UNSAFE_componentWillReceiveProps &&
                t.UNSAFE_componentWillReceiveProps(n, r),
              t.state !== e && Mn.enqueueReplaceState(t, t.state, null);
          }
          function Cn(e, t, n, r) {
            var i = e.stateNode;
            (i.props = n), (i.state = e.memoizedState), (i.refs = _n), pn(e);
            var a = t.contextType;
            "object" === typeof a && null !== a
              ? (i.context = fn(a))
              : ((a = pt(t) ? dt : ct.current), (i.context = ht(e, a))),
              (i.state = e.memoizedState),
              "function" === typeof (a = t.getDerivedStateFromProps) &&
                (Sn(e, t, a, n), (i.state = e.memoizedState)),
              "function" === typeof t.getDerivedStateFromProps ||
                "function" === typeof i.getSnapshotBeforeUpdate ||
                ("function" !== typeof i.UNSAFE_componentWillMount &&
                  "function" !== typeof i.componentWillMount) ||
                ((t = i.state),
                "function" === typeof i.componentWillMount &&
                  i.componentWillMount(),
                "function" === typeof i.UNSAFE_componentWillMount &&
                  i.UNSAFE_componentWillMount(),
                t !== i.state && Mn.enqueueReplaceState(i, i.state, null),
                xn(e, n, i, r),
                (i.state = e.memoizedState)),
              "function" === typeof i.componentDidMount && (e.flags |= 4194308);
          }
          var An = [],
            Pn = 0,
            Ln = null,
            Rn = 0,
            On = [],
            zn = 0,
            Dn = null,
            In = 1,
            Nn = "";
          function Fn(e, t) {
            (An[Pn++] = Rn), (An[Pn++] = Ln), (Ln = e), (Rn = t);
          }
          function Bn(e, t, n) {
            (On[zn++] = In), (On[zn++] = Nn), (On[zn++] = Dn), (Dn = e);
            var r = In;
            e = Nn;
            var i = 32 - xt(r) - 1;
            (r &= ~(1 << i)), (n += 1);
            var a = 32 - xt(t) + i;
            if (30 < a) {
              var o = i - (i % 5);
              (a = (r & ((1 << o) - 1)).toString(32)),
                (r >>= o),
                (i -= o),
                (In = (1 << (32 - xt(t) + i)) | (n << i) | r),
                (Nn = a + e);
            } else (In = (1 << a) | (n << i) | r), (Nn = e);
          }
          function Hn(e) {
            null !== e.return && (Fn(e, 1), Bn(e, 1, 0));
          }
          function Un(e) {
            for (; e === Ln; )
              (Ln = An[--Pn]),
                (An[Pn] = null),
                (Rn = An[--Pn]),
                (An[Pn] = null);
            for (; e === Dn; )
              (Dn = On[--zn]),
                (On[zn] = null),
                (Nn = On[--zn]),
                (On[zn] = null),
                (In = On[--zn]),
                (On[zn] = null);
          }
          var jn = null,
            Gn = null,
            Wn = !1,
            Vn = !1,
            qn = null;
          function Xn(e, t) {
            var n = Zo(5, null, null, 0);
            (n.elementType = "DELETED"),
              (n.stateNode = t),
              (n.return = e),
              null === (t = e.deletions)
                ? ((e.deletions = [n]), (e.flags |= 16))
                : t.push(n);
          }
          function Yn(e, t) {
            switch (e.tag) {
              case 5:
                return (
                  null !== (t = Oe(t, e.type, e.pendingProps)) &&
                  ((e.stateNode = t), (jn = e), (Gn = He(t)), !0)
                );
              case 6:
                return (
                  null !== (t = ze(t, e.pendingProps)) &&
                  ((e.stateNode = t), (jn = e), (Gn = null), !0)
                );
              case 13:
                if (null !== (t = De(t))) {
                  var n = null !== Dn ? { id: In, overflow: Nn } : null;
                  return (
                    (e.memoizedState = {
                      dehydrated: t,
                      treeContext: n,
                      retryLane: 1073741824,
                    }),
                    ((n = Zo(18, null, null, 0)).stateNode = t),
                    (n.return = e),
                    (e.child = n),
                    (jn = e),
                    (Gn = null),
                    !0
                  );
                }
                return !1;
              default:
                return !1;
            }
          }
          function Jn(e) {
            return 0 !== (1 & e.mode) && 0 === (128 & e.flags);
          }
          function $n(e) {
            if (Wn) {
              var t = Gn;
              if (t) {
                var n = t;
                if (!Yn(e, t)) {
                  if (Jn(e)) throw Error(o(418));
                  t = Be(n);
                  var r = jn;
                  t && Yn(e, t)
                    ? Xn(r, n)
                    : ((e.flags = (-4097 & e.flags) | 2), (Wn = !1), (jn = e));
                }
              } else {
                if (Jn(e)) throw Error(o(418));
                (e.flags = (-4097 & e.flags) | 2), (Wn = !1), (jn = e);
              }
            }
          }
          function Qn(e) {
            for (
              e = e.return;
              null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;

            )
              e = e.return;
            jn = e;
          }
          function Zn(e) {
            if (!$ || e !== jn) return !1;
            if (!Wn) return Qn(e), (Wn = !0), !1;
            if (
              3 !== e.tag &&
              (5 !== e.tag || (Qe(e.type) && !j(e.type, e.memoizedProps)))
            ) {
              var t = Gn;
              if (t) {
                if (Jn(e)) {
                  for (e = Gn; e; ) e = Be(e);
                  throw Error(o(418));
                }
                for (; t; ) Xn(e, t), (t = Be(t));
              }
            }
            if ((Qn(e), 13 === e.tag)) {
              if (!$) throw Error(o(316));
              if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
                throw Error(o(317));
              Gn = qe(e);
            } else Gn = jn ? Be(e.stateNode) : null;
            return !0;
          }
          function Kn() {
            $ && ((Gn = jn = null), (Vn = Wn = !1));
          }
          function er(e) {
            null === qn ? (qn = [e]) : qn.push(e);
          }
          function tr(e, t, n) {
            if (
              null !== (e = n.ref) &&
              "function" !== typeof e &&
              "object" !== typeof e
            ) {
              if (n._owner) {
                if ((n = n._owner)) {
                  if (1 !== n.tag) throw Error(o(309));
                  var r = n.stateNode;
                }
                if (!r) throw Error(o(147, e));
                var i = r,
                  a = "" + e;
                return null !== t &&
                  null !== t.ref &&
                  "function" === typeof t.ref &&
                  t.ref._stringRef === a
                  ? t.ref
                  : ((t = function (e) {
                      var t = i.refs;
                      t === _n && (t = i.refs = {}),
                        null === e ? delete t[a] : (t[a] = e);
                    }),
                    (t._stringRef = a),
                    t);
              }
              if ("string" !== typeof e) throw Error(o(284));
              if (!n._owner) throw Error(o(290, e));
            }
            return e;
          }
          function nr(e, t) {
            throw (
              ((e = Object.prototype.toString.call(t)),
              Error(
                o(
                  31,
                  "[object Object]" === e
                    ? "object with keys {" + Object.keys(t).join(", ") + "}"
                    : e
                )
              ))
            );
          }
          function rr(e) {
            return (0, e._init)(e._payload);
          }
          function ir(e) {
            function t(t, n) {
              if (e) {
                var r = t.deletions;
                null === r ? ((t.deletions = [n]), (t.flags |= 16)) : r.push(n);
              }
            }
            function n(n, r) {
              if (!e) return null;
              for (; null !== r; ) t(n, r), (r = r.sibling);
              return null;
            }
            function r(e, t) {
              for (e = new Map(); null !== t; )
                null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                  (t = t.sibling);
              return e;
            }
            function i(e, t) {
              return ((e = es(e, t)).index = 0), (e.sibling = null), e;
            }
            function a(t, n, r) {
              return (
                (t.index = r),
                e
                  ? null !== (r = t.alternate)
                    ? (r = r.index) < n
                      ? ((t.flags |= 2), n)
                      : r
                    : ((t.flags |= 2), n)
                  : ((t.flags |= 1048576), n)
              );
            }
            function s(t) {
              return e && null === t.alternate && (t.flags |= 2), t;
            }
            function f(e, t, n, r) {
              return null === t || 6 !== t.tag
                ? (((t = is(n, e.mode, r)).return = e), t)
                : (((t = i(t, n)).return = e), t);
            }
            function d(e, t, n, r) {
              var a = n.type;
              return a === c
                ? p(e, t, n.props.children, r, n.key)
                : null !== t &&
                  (t.elementType === a ||
                    ("object" === typeof a &&
                      null !== a &&
                      a.$$typeof === b &&
                      rr(a) === t.type))
                ? (((r = i(t, n.props)).ref = tr(e, t, n)), (r.return = e), r)
                : (((r = ts(n.type, n.key, n.props, null, e.mode, r)).ref = tr(
                    e,
                    t,
                    n
                  )),
                  (r.return = e),
                  r);
            }
            function h(e, t, n, r) {
              return null === t ||
                4 !== t.tag ||
                t.stateNode.containerInfo !== n.containerInfo ||
                t.stateNode.implementation !== n.implementation
                ? (((t = as(n, e.mode, r)).return = e), t)
                : (((t = i(t, n.children || [])).return = e), t);
            }
            function p(e, t, n, r, a) {
              return null === t || 7 !== t.tag
                ? (((t = ns(n, e.mode, r, a)).return = e), t)
                : (((t = i(t, n)).return = e), t);
            }
            function v(e, t, n) {
              if (("string" === typeof t && "" !== t) || "number" === typeof t)
                return ((t = is("" + t, e.mode, n)).return = e), t;
              if ("object" === typeof t && null !== t) {
                switch (t.$$typeof) {
                  case l:
                    return (
                      ((n = ts(t.type, t.key, t.props, null, e.mode, n)).ref =
                        tr(e, null, t)),
                      (n.return = e),
                      n
                    );
                  case u:
                    return ((t = as(t, e.mode, n)).return = e), t;
                  case b:
                    return v(e, (0, t._init)(t._payload), n);
                }
                if (R(t) || _(t))
                  return ((t = ns(t, e.mode, n, null)).return = e), t;
                nr(e, t);
              }
              return null;
            }
            function m(e, t, n, r) {
              var i = null !== t ? t.key : null;
              if (("string" === typeof n && "" !== n) || "number" === typeof n)
                return null !== i ? null : f(e, t, "" + n, r);
              if ("object" === typeof n && null !== n) {
                switch (n.$$typeof) {
                  case l:
                    return n.key === i ? d(e, t, n, r) : null;
                  case u:
                    return n.key === i ? h(e, t, n, r) : null;
                  case b:
                    return m(e, t, (i = n._init)(n._payload), r);
                }
                if (R(n) || _(n))
                  return null !== i ? null : p(e, t, n, r, null);
                nr(e, n);
              }
              return null;
            }
            function g(e, t, n, r, i) {
              if (("string" === typeof r && "" !== r) || "number" === typeof r)
                return f(t, (e = e.get(n) || null), "" + r, i);
              if ("object" === typeof r && null !== r) {
                switch (r.$$typeof) {
                  case l:
                    return d(
                      t,
                      (e = e.get(null === r.key ? n : r.key) || null),
                      r,
                      i
                    );
                  case u:
                    return h(
                      t,
                      (e = e.get(null === r.key ? n : r.key) || null),
                      r,
                      i
                    );
                  case b:
                    return g(e, t, n, (0, r._init)(r._payload), i);
                }
                if (R(r) || _(r))
                  return p(t, (e = e.get(n) || null), r, i, null);
                nr(t, r);
              }
              return null;
            }
            function y(i, o, s, l) {
              for (
                var u = null, c = null, f = o, d = (o = 0), h = null;
                null !== f && d < s.length;
                d++
              ) {
                f.index > d ? ((h = f), (f = null)) : (h = f.sibling);
                var p = m(i, f, s[d], l);
                if (null === p) {
                  null === f && (f = h);
                  break;
                }
                e && f && null === p.alternate && t(i, f),
                  (o = a(p, o, d)),
                  null === c ? (u = p) : (c.sibling = p),
                  (c = p),
                  (f = h);
              }
              if (d === s.length) return n(i, f), Wn && Fn(i, d), u;
              if (null === f) {
                for (; d < s.length; d++)
                  null !== (f = v(i, s[d], l)) &&
                    ((o = a(f, o, d)),
                    null === c ? (u = f) : (c.sibling = f),
                    (c = f));
                return Wn && Fn(i, d), u;
              }
              for (f = r(i, f); d < s.length; d++)
                null !== (h = g(f, i, d, s[d], l)) &&
                  (e &&
                    null !== h.alternate &&
                    f.delete(null === h.key ? d : h.key),
                  (o = a(h, o, d)),
                  null === c ? (u = h) : (c.sibling = h),
                  (c = h));
              return (
                e &&
                  f.forEach(function (e) {
                    return t(i, e);
                  }),
                Wn && Fn(i, d),
                u
              );
            }
            function x(i, s, l, u) {
              var c = _(l);
              if ("function" !== typeof c) throw Error(o(150));
              if (null == (l = c.call(l))) throw Error(o(151));
              for (
                var f = (c = null), d = s, h = (s = 0), p = null, y = l.next();
                null !== d && !y.done;
                h++, y = l.next()
              ) {
                d.index > h ? ((p = d), (d = null)) : (p = d.sibling);
                var b = m(i, d, y.value, u);
                if (null === b) {
                  null === d && (d = p);
                  break;
                }
                e && d && null === b.alternate && t(i, d),
                  (s = a(b, s, h)),
                  null === f ? (c = b) : (f.sibling = b),
                  (f = b),
                  (d = p);
              }
              if (y.done) return n(i, d), Wn && Fn(i, h), c;
              if (null === d) {
                for (; !y.done; h++, y = l.next())
                  null !== (y = v(i, y.value, u)) &&
                    ((s = a(y, s, h)),
                    null === f ? (c = y) : (f.sibling = y),
                    (f = y));
                return Wn && Fn(i, h), c;
              }
              for (d = r(i, d); !y.done; h++, y = l.next())
                null !== (y = g(d, i, h, y.value, u)) &&
                  (e &&
                    null !== y.alternate &&
                    d.delete(null === y.key ? h : y.key),
                  (s = a(y, s, h)),
                  null === f ? (c = y) : (f.sibling = y),
                  (f = y));
              return (
                e &&
                  d.forEach(function (e) {
                    return t(i, e);
                  }),
                Wn && Fn(i, h),
                c
              );
            }
            return function e(r, a, o, f) {
              if (
                ("object" === typeof o &&
                  null !== o &&
                  o.type === c &&
                  null === o.key &&
                  (o = o.props.children),
                "object" === typeof o && null !== o)
              ) {
                switch (o.$$typeof) {
                  case l:
                    e: {
                      for (var d = o.key, h = a; null !== h; ) {
                        if (h.key === d) {
                          if ((d = o.type) === c) {
                            if (7 === h.tag) {
                              n(r, h.sibling),
                                ((a = i(h, o.props.children)).return = r),
                                (r = a);
                              break e;
                            }
                          } else if (
                            h.elementType === d ||
                            ("object" === typeof d &&
                              null !== d &&
                              d.$$typeof === b &&
                              rr(d) === h.type)
                          ) {
                            n(r, h.sibling),
                              ((a = i(h, o.props)).ref = tr(r, h, o)),
                              (a.return = r),
                              (r = a);
                            break e;
                          }
                          n(r, h);
                          break;
                        }
                        t(r, h), (h = h.sibling);
                      }
                      o.type === c
                        ? (((a = ns(
                            o.props.children,
                            r.mode,
                            f,
                            o.key
                          )).return = r),
                          (r = a))
                        : (((f = ts(
                            o.type,
                            o.key,
                            o.props,
                            null,
                            r.mode,
                            f
                          )).ref = tr(r, a, o)),
                          (f.return = r),
                          (r = f));
                    }
                    return s(r);
                  case u:
                    e: {
                      for (h = o.key; null !== a; ) {
                        if (a.key === h) {
                          if (
                            4 === a.tag &&
                            a.stateNode.containerInfo === o.containerInfo &&
                            a.stateNode.implementation === o.implementation
                          ) {
                            n(r, a.sibling),
                              ((a = i(a, o.children || [])).return = r),
                              (r = a);
                            break e;
                          }
                          n(r, a);
                          break;
                        }
                        t(r, a), (a = a.sibling);
                      }
                      ((a = as(o, r.mode, f)).return = r), (r = a);
                    }
                    return s(r);
                  case b:
                    return e(r, a, (h = o._init)(o._payload), f);
                }
                if (R(o)) return y(r, a, o, f);
                if (_(o)) return x(r, a, o, f);
                nr(r, o);
              }
              return ("string" === typeof o && "" !== o) ||
                "number" === typeof o
                ? ((o = "" + o),
                  null !== a && 6 === a.tag
                    ? (n(r, a.sibling), ((a = i(a, o)).return = r), (r = a))
                    : (n(r, a), ((a = is(o, r.mode, f)).return = r), (r = a)),
                  s(r))
                : n(r, a);
            };
          }
          var ar = ir(!0),
            or = ir(!1),
            sr = {},
            lr = ot(sr),
            ur = ot(sr),
            cr = ot(sr);
          function fr(e) {
            if (e === sr) throw Error(o(174));
            return e;
          }
          function dr(e, t) {
            lt(cr, t), lt(ur, e), lt(lr, sr), (e = z(t)), st(lr), lt(lr, e);
          }
          function hr() {
            st(lr), st(ur), st(cr);
          }
          function pr(e) {
            var t = fr(cr.current),
              n = fr(lr.current);
            n !== (t = D(n, e.type, t)) && (lt(ur, e), lt(lr, t));
          }
          function vr(e) {
            ur.current === e && (st(lr), st(ur));
          }
          var mr = ot(0);
          function gr(e) {
            for (var t = e; null !== t; ) {
              if (13 === t.tag) {
                var n = t.memoizedState;
                if (
                  null !== n &&
                  (null === (n = n.dehydrated) || Ie(n) || Ne(n))
                )
                  return t;
              } else if (
                19 === t.tag &&
                void 0 !== t.memoizedProps.revealOrder
              ) {
                if (0 !== (128 & t.flags)) return t;
              } else if (null !== t.child) {
                (t.child.return = t), (t = t.child);
                continue;
              }
              if (t === e) break;
              for (; null === t.sibling; ) {
                if (null === t.return || t.return === e) return null;
                t = t.return;
              }
              (t.sibling.return = t.return), (t = t.sibling);
            }
            return null;
          }
          var yr = [];
          function br() {
            for (var e = 0; e < yr.length; e++) {
              var t = yr[e];
              X
                ? (t._workInProgressVersionPrimary = null)
                : (t._workInProgressVersionSecondary = null);
            }
            yr.length = 0;
          }
          var xr = s.ReactCurrentDispatcher,
            wr = s.ReactCurrentBatchConfig,
            _r = 0,
            Sr = null,
            Mr = null,
            Er = null,
            kr = !1,
            Tr = !1,
            Cr = 0,
            Ar = 0;
          function Pr() {
            throw Error(o(321));
          }
          function Lr(e, t) {
            if (null === t) return !1;
            for (var n = 0; n < t.length && n < e.length; n++)
              if (!Vt(e[n], t[n])) return !1;
            return !0;
          }
          function Rr(e, t, n, r, i, a) {
            if (
              ((_r = a),
              (Sr = t),
              (t.memoizedState = null),
              (t.updateQueue = null),
              (t.lanes = 0),
              (xr.current = null === e || null === e.memoizedState ? pi : vi),
              (e = n(r, i)),
              Tr)
            ) {
              a = 0;
              do {
                if (((Tr = !1), (Cr = 0), 25 <= a)) throw Error(o(301));
                (a += 1),
                  (Er = Mr = null),
                  (t.updateQueue = null),
                  (xr.current = mi),
                  (e = n(r, i));
              } while (Tr);
            }
            if (
              ((xr.current = hi),
              (t = null !== Mr && null !== Mr.next),
              (_r = 0),
              (Er = Mr = Sr = null),
              (kr = !1),
              t)
            )
              throw Error(o(300));
            return e;
          }
          function Or() {
            var e = 0 !== Cr;
            return (Cr = 0), e;
          }
          function zr() {
            var e = {
              memoizedState: null,
              baseState: null,
              baseQueue: null,
              queue: null,
              next: null,
            };
            return (
              null === Er ? (Sr.memoizedState = Er = e) : (Er = Er.next = e), Er
            );
          }
          function Dr() {
            if (null === Mr) {
              var e = Sr.alternate;
              e = null !== e ? e.memoizedState : null;
            } else e = Mr.next;
            var t = null === Er ? Sr.memoizedState : Er.next;
            if (null !== t) (Er = t), (Mr = e);
            else {
              if (null === e) throw Error(o(310));
              (e = {
                memoizedState: (Mr = e).memoizedState,
                baseState: Mr.baseState,
                baseQueue: Mr.baseQueue,
                queue: Mr.queue,
                next: null,
              }),
                null === Er ? (Sr.memoizedState = Er = e) : (Er = Er.next = e);
            }
            return Er;
          }
          function Ir(e, t) {
            return "function" === typeof t ? t(e) : t;
          }
          function Nr(e) {
            var t = Dr(),
              n = t.queue;
            if (null === n) throw Error(o(311));
            n.lastRenderedReducer = e;
            var r = Mr,
              i = r.baseQueue,
              a = n.pending;
            if (null !== a) {
              if (null !== i) {
                var s = i.next;
                (i.next = a.next), (a.next = s);
              }
              (r.baseQueue = i = a), (n.pending = null);
            }
            if (null !== i) {
              (a = i.next), (r = r.baseState);
              var l = (s = null),
                u = null,
                c = a;
              do {
                var f = c.lane;
                if ((_r & f) === f)
                  null !== u &&
                    (u = u.next =
                      {
                        lane: 0,
                        action: c.action,
                        hasEagerState: c.hasEagerState,
                        eagerState: c.eagerState,
                        next: null,
                      }),
                    (r = c.hasEagerState ? c.eagerState : e(r, c.action));
                else {
                  var d = {
                    lane: f,
                    action: c.action,
                    hasEagerState: c.hasEagerState,
                    eagerState: c.eagerState,
                    next: null,
                  };
                  null === u ? ((l = u = d), (s = r)) : (u = u.next = d),
                    (Sr.lanes |= f),
                    (to |= f);
                }
                c = c.next;
              } while (null !== c && c !== a);
              null === u ? (s = r) : (u.next = l),
                Vt(r, t.memoizedState) || (Ii = !0),
                (t.memoizedState = r),
                (t.baseState = s),
                (t.baseQueue = u),
                (n.lastRenderedState = r);
            }
            if (null !== (e = n.interleaved)) {
              i = e;
              do {
                (a = i.lane), (Sr.lanes |= a), (to |= a), (i = i.next);
              } while (i !== e);
            } else null === i && (n.lanes = 0);
            return [t.memoizedState, n.dispatch];
          }
          function Fr(e) {
            var t = Dr(),
              n = t.queue;
            if (null === n) throw Error(o(311));
            n.lastRenderedReducer = e;
            var r = n.dispatch,
              i = n.pending,
              a = t.memoizedState;
            if (null !== i) {
              n.pending = null;
              var s = (i = i.next);
              do {
                (a = e(a, s.action)), (s = s.next);
              } while (s !== i);
              Vt(a, t.memoizedState) || (Ii = !0),
                (t.memoizedState = a),
                null === t.baseQueue && (t.baseState = a),
                (n.lastRenderedState = a);
            }
            return [a, r];
          }
          function Br() {}
          function Hr(e, t) {
            var n = Sr,
              r = Dr(),
              i = t(),
              a = !Vt(r.memoizedState, i);
            if (
              (a && ((r.memoizedState = i), (Ii = !0)),
              (r = r.queue),
              Qr(Gr.bind(null, n, r, e), [e]),
              r.getSnapshot !== t ||
                a ||
                (null !== Er && 1 & Er.memoizedState.tag))
            ) {
              if (
                ((n.flags |= 2048),
                qr(9, jr.bind(null, n, r, i, t), void 0, null),
                null === Ya)
              )
                throw Error(o(349));
              0 !== (30 & _r) || Ur(n, t, i);
            }
            return i;
          }
          function Ur(e, t, n) {
            (e.flags |= 16384),
              (e = { getSnapshot: t, value: n }),
              null === (t = Sr.updateQueue)
                ? ((t = { lastEffect: null, stores: null }),
                  (Sr.updateQueue = t),
                  (t.stores = [e]))
                : null === (n = t.stores)
                ? (t.stores = [e])
                : n.push(e);
          }
          function jr(e, t, n, r) {
            (t.value = n), (t.getSnapshot = r), Wr(t) && So(e, 1, -1);
          }
          function Gr(e, t, n) {
            return n(function () {
              Wr(t) && So(e, 1, -1);
            });
          }
          function Wr(e) {
            var t = e.getSnapshot;
            e = e.value;
            try {
              var n = t();
              return !Vt(e, n);
            } catch (r) {
              return !0;
            }
          }
          function Vr(e) {
            var t = zr();
            return (
              "function" === typeof e && (e = e()),
              (t.memoizedState = t.baseState = e),
              (e = {
                pending: null,
                interleaved: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: Ir,
                lastRenderedState: e,
              }),
              (t.queue = e),
              (e = e.dispatch = li.bind(null, Sr, e)),
              [t.memoizedState, e]
            );
          }
          function qr(e, t, n, r) {
            return (
              (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
              null === (t = Sr.updateQueue)
                ? ((t = { lastEffect: null, stores: null }),
                  (Sr.updateQueue = t),
                  (t.lastEffect = e.next = e))
                : null === (n = t.lastEffect)
                ? (t.lastEffect = e.next = e)
                : ((r = n.next),
                  (n.next = e),
                  (e.next = r),
                  (t.lastEffect = e)),
              e
            );
          }
          function Xr() {
            return Dr().memoizedState;
          }
          function Yr(e, t, n, r) {
            var i = zr();
            (Sr.flags |= e),
              (i.memoizedState = qr(1 | t, n, void 0, void 0 === r ? null : r));
          }
          function Jr(e, t, n, r) {
            var i = Dr();
            r = void 0 === r ? null : r;
            var a = void 0;
            if (null !== Mr) {
              var o = Mr.memoizedState;
              if (((a = o.destroy), null !== r && Lr(r, o.deps)))
                return void (i.memoizedState = qr(t, n, a, r));
            }
            (Sr.flags |= e), (i.memoizedState = qr(1 | t, n, a, r));
          }
          function $r(e, t) {
            return Yr(8390656, 8, e, t);
          }
          function Qr(e, t) {
            return Jr(2048, 8, e, t);
          }
          function Zr(e, t) {
            return Jr(4, 2, e, t);
          }
          function Kr(e, t) {
            return Jr(4, 4, e, t);
          }
          function ei(e, t) {
            return "function" === typeof t
              ? ((e = e()),
                t(e),
                function () {
                  t(null);
                })
              : null !== t && void 0 !== t
              ? ((e = e()),
                (t.current = e),
                function () {
                  t.current = null;
                })
              : void 0;
          }
          function ti(e, t, n) {
            return (
              (n = null !== n && void 0 !== n ? n.concat([e]) : null),
              Jr(4, 4, ei.bind(null, t, e), n)
            );
          }
          function ni() {}
          function ri(e, t) {
            var n = Dr();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && Lr(t, r[1])
              ? r[0]
              : ((n.memoizedState = [e, t]), e);
          }
          function ii(e, t) {
            var n = Dr();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && Lr(t, r[1])
              ? r[0]
              : ((e = e()), (n.memoizedState = [e, t]), e);
          }
          function ai(e, t) {
            var n = Rt;
            (Rt = 0 !== n && 4 > n ? n : 4), e(!0);
            var r = wr.transition;
            wr.transition = {};
            try {
              e(!1), t();
            } finally {
              (Rt = n), (wr.transition = r);
            }
          }
          function oi() {
            return Dr().memoizedState;
          }
          function si(e, t, n) {
            var r = _o(e);
            (n = {
              lane: r,
              action: n,
              hasEagerState: !1,
              eagerState: null,
              next: null,
            }),
              ui(e)
                ? ci(t, n)
                : (fi(e, t, n),
                  null !== (e = So(e, r, (n = wo()))) && di(e, t, r));
          }
          function li(e, t, n) {
            var r = _o(e),
              i = {
                lane: r,
                action: n,
                hasEagerState: !1,
                eagerState: null,
                next: null,
              };
            if (ui(e)) ci(t, i);
            else {
              fi(e, t, i);
              var a = e.alternate;
              if (
                0 === e.lanes &&
                (null === a || 0 === a.lanes) &&
                null !== (a = t.lastRenderedReducer)
              )
                try {
                  var o = t.lastRenderedState,
                    s = a(o, n);
                  if (((i.hasEagerState = !0), (i.eagerState = s), Vt(s, o)))
                    return;
                } catch (l) {}
              null !== (e = So(e, r, (n = wo()))) && di(e, t, r);
            }
          }
          function ui(e) {
            var t = e.alternate;
            return e === Sr || (null !== t && t === Sr);
          }
          function ci(e, t) {
            Tr = kr = !0;
            var n = e.pending;
            null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)),
              (e.pending = t);
          }
          function fi(e, t, n) {
            null !== Ya && 0 !== (1 & e.mode) && 0 === (2 & Xa)
              ? (null === (e = t.interleaved)
                  ? ((n.next = n), null === dn ? (dn = [t]) : dn.push(t))
                  : ((n.next = e.next), (e.next = n)),
                (t.interleaved = n))
              : (null === (e = t.pending)
                  ? (n.next = n)
                  : ((n.next = e.next), (e.next = n)),
                (t.pending = n));
          }
          function di(e, t, n) {
            if (0 !== (4194240 & n)) {
              var r = t.lanes;
              (n |= r &= e.pendingLanes), (t.lanes = n), Lt(e, n);
            }
          }
          var hi = {
              readContext: fn,
              useCallback: Pr,
              useContext: Pr,
              useEffect: Pr,
              useImperativeHandle: Pr,
              useInsertionEffect: Pr,
              useLayoutEffect: Pr,
              useMemo: Pr,
              useReducer: Pr,
              useRef: Pr,
              useState: Pr,
              useDebugValue: Pr,
              useDeferredValue: Pr,
              useTransition: Pr,
              useMutableSource: Pr,
              useSyncExternalStore: Pr,
              useId: Pr,
              unstable_isNewReconciler: !1,
            },
            pi = {
              readContext: fn,
              useCallback: function (e, t) {
                return (zr().memoizedState = [e, void 0 === t ? null : t]), e;
              },
              useContext: fn,
              useEffect: $r,
              useImperativeHandle: function (e, t, n) {
                return (
                  (n = null !== n && void 0 !== n ? n.concat([e]) : null),
                  Yr(4194308, 4, ei.bind(null, t, e), n)
                );
              },
              useLayoutEffect: function (e, t) {
                return Yr(4194308, 4, e, t);
              },
              useInsertionEffect: function (e, t) {
                return Yr(4, 2, e, t);
              },
              useMemo: function (e, t) {
                var n = zr();
                return (
                  (t = void 0 === t ? null : t),
                  (e = e()),
                  (n.memoizedState = [e, t]),
                  e
                );
              },
              useReducer: function (e, t, n) {
                var r = zr();
                return (
                  (t = void 0 !== n ? n(t) : t),
                  (r.memoizedState = r.baseState = t),
                  (e = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: e,
                    lastRenderedState: t,
                  }),
                  (r.queue = e),
                  (e = e.dispatch = si.bind(null, Sr, e)),
                  [r.memoizedState, e]
                );
              },
              useRef: function (e) {
                return (e = { current: e }), (zr().memoizedState = e);
              },
              useState: Vr,
              useDebugValue: ni,
              useDeferredValue: function (e) {
                var t = Vr(e),
                  n = t[0],
                  r = t[1];
                return (
                  $r(
                    function () {
                      var t = wr.transition;
                      wr.transition = {};
                      try {
                        r(e);
                      } finally {
                        wr.transition = t;
                      }
                    },
                    [e]
                  ),
                  n
                );
              },
              useTransition: function () {
                var e = Vr(!1),
                  t = e[0];
                return (
                  (e = ai.bind(null, e[1])), (zr().memoizedState = e), [t, e]
                );
              },
              useMutableSource: function () {},
              useSyncExternalStore: function (e, t, n) {
                var r = Sr,
                  i = zr();
                if (Wn) {
                  if (void 0 === n) throw Error(o(407));
                  n = n();
                } else {
                  if (((n = t()), null === Ya)) throw Error(o(349));
                  0 !== (30 & _r) || Ur(r, t, n);
                }
                i.memoizedState = n;
                var a = { value: n, getSnapshot: t };
                return (
                  (i.queue = a),
                  $r(Gr.bind(null, r, a, e), [e]),
                  (r.flags |= 2048),
                  qr(9, jr.bind(null, r, a, n, t), void 0, null),
                  n
                );
              },
              useId: function () {
                var e = zr(),
                  t = Ya.identifierPrefix;
                if (Wn) {
                  var n = Nn;
                  (t =
                    ":" +
                    t +
                    "R" +
                    (n = (In & ~(1 << (32 - xt(In) - 1))).toString(32) + n)),
                    0 < (n = Cr++) && (t += "H" + n.toString(32)),
                    (t += ":");
                } else t = ":" + t + "r" + (n = Ar++).toString(32) + ":";
                return (e.memoizedState = t);
              },
              unstable_isNewReconciler: !1,
            },
            vi = {
              readContext: fn,
              useCallback: ri,
              useContext: fn,
              useEffect: Qr,
              useImperativeHandle: ti,
              useInsertionEffect: Zr,
              useLayoutEffect: Kr,
              useMemo: ii,
              useReducer: Nr,
              useRef: Xr,
              useState: function () {
                return Nr(Ir);
              },
              useDebugValue: ni,
              useDeferredValue: function (e) {
                var t = Nr(Ir),
                  n = t[0],
                  r = t[1];
                return (
                  Qr(
                    function () {
                      var t = wr.transition;
                      wr.transition = {};
                      try {
                        r(e);
                      } finally {
                        wr.transition = t;
                      }
                    },
                    [e]
                  ),
                  n
                );
              },
              useTransition: function () {
                return [Nr(Ir)[0], Dr().memoizedState];
              },
              useMutableSource: Br,
              useSyncExternalStore: Hr,
              useId: oi,
              unstable_isNewReconciler: !1,
            },
            mi = {
              readContext: fn,
              useCallback: ri,
              useContext: fn,
              useEffect: Qr,
              useImperativeHandle: ti,
              useInsertionEffect: Zr,
              useLayoutEffect: Kr,
              useMemo: ii,
              useReducer: Fr,
              useRef: Xr,
              useState: function () {
                return Fr(Ir);
              },
              useDebugValue: ni,
              useDeferredValue: function (e) {
                var t = Fr(Ir),
                  n = t[0],
                  r = t[1];
                return (
                  Qr(
                    function () {
                      var t = wr.transition;
                      wr.transition = {};
                      try {
                        r(e);
                      } finally {
                        wr.transition = t;
                      }
                    },
                    [e]
                  ),
                  n
                );
              },
              useTransition: function () {
                return [Fr(Ir)[0], Dr().memoizedState];
              },
              useMutableSource: Br,
              useSyncExternalStore: Hr,
              useId: oi,
              unstable_isNewReconciler: !1,
            };
          function gi(e, t) {
            try {
              var n = "",
                r = t;
              do {
                (n += Kt(r)), (r = r.return);
              } while (r);
              var i = n;
            } catch (a) {
              i = "\nError generating stack: " + a.message + "\n" + a.stack;
            }
            return { value: e, source: t, stack: i };
          }
          function yi(e, t) {
            try {
              console.error(t.value);
            } catch (n) {
              setTimeout(function () {
                throw n;
              });
            }
          }
          var bi,
            xi,
            wi,
            _i,
            Si = "function" === typeof WeakMap ? WeakMap : Map;
          function Mi(e, t, n) {
            ((n = mn(-1, n)).tag = 3), (n.payload = { element: null });
            var r = t.value;
            return (
              (n.callback = function () {
                co || ((co = !0), (fo = r)), yi(0, t);
              }),
              n
            );
          }
          function Ei(e, t, n) {
            (n = mn(-1, n)).tag = 3;
            var r = e.type.getDerivedStateFromError;
            if ("function" === typeof r) {
              var i = t.value;
              (n.payload = function () {
                return r(i);
              }),
                (n.callback = function () {
                  yi(0, t);
                });
            }
            var a = e.stateNode;
            return (
              null !== a &&
                "function" === typeof a.componentDidCatch &&
                (n.callback = function () {
                  yi(0, t),
                    "function" !== typeof r &&
                      (null === ho ? (ho = new Set([this])) : ho.add(this));
                  var e = t.stack;
                  this.componentDidCatch(t.value, {
                    componentStack: null !== e ? e : "",
                  });
                }),
              n
            );
          }
          function ki(e, t, n) {
            var r = e.pingCache;
            if (null === r) {
              r = e.pingCache = new Si();
              var i = new Set();
              r.set(t, i);
            } else void 0 === (i = r.get(t)) && ((i = new Set()), r.set(t, i));
            i.has(n) || (i.add(n), (e = qo.bind(null, e, t, n)), t.then(e, e));
          }
          function Ti(e) {
            do {
              var t;
              if (
                ((t = 13 === e.tag) &&
                  (t = null === (t = e.memoizedState) || null !== t.dehydrated),
                t)
              )
                return e;
              e = e.return;
            } while (null !== e);
            return null;
          }
          function Ci(e, t, n, r, i) {
            return 0 === (1 & e.mode)
              ? (e === t
                  ? (e.flags |= 65536)
                  : ((e.flags |= 128),
                    (n.flags |= 131072),
                    (n.flags &= -52805),
                    1 === n.tag &&
                      (null === n.alternate
                        ? (n.tag = 17)
                        : (((t = mn(-1, 1)).tag = 2), gn(n, t))),
                    (n.lanes |= 1)),
                e)
              : ((e.flags |= 65536), (e.lanes = i), e);
          }
          function Ai(e) {
            e.flags |= 4;
          }
          function Pi(e, t) {
            if (null !== e && e.child === t.child) return !0;
            if (0 !== (16 & t.flags)) return !1;
            for (e = t.child; null !== e; ) {
              if (0 !== (12854 & e.flags) || 0 !== (12854 & e.subtreeFlags))
                return !1;
              e = e.sibling;
            }
            return !0;
          }
          if (Y)
            (bi = function (e, t) {
              for (var n = t.child; null !== n; ) {
                if (5 === n.tag || 6 === n.tag) B(e, n.stateNode);
                else if (4 !== n.tag && null !== n.child) {
                  (n.child.return = n), (n = n.child);
                  continue;
                }
                if (n === t) break;
                for (; null === n.sibling; ) {
                  if (null === n.return || n.return === t) return;
                  n = n.return;
                }
                (n.sibling.return = n.return), (n = n.sibling);
              }
            }),
              (xi = function () {}),
              (wi = function (e, t, n, r, i) {
                if ((e = e.memoizedProps) !== r) {
                  var a = t.stateNode,
                    o = fr(lr.current);
                  (n = U(a, n, e, r, i, o)), (t.updateQueue = n) && Ai(t);
                }
              }),
              (_i = function (e, t, n, r) {
                n !== r && Ai(t);
              });
          else if (J) {
            bi = function (e, t, n, r) {
              for (var i = t.child; null !== i; ) {
                if (5 === i.tag) {
                  var a = i.stateNode;
                  n && r && (a = Le(a, i.type, i.memoizedProps, i)), B(e, a);
                } else if (6 === i.tag)
                  (a = i.stateNode),
                    n && r && (a = Re(a, i.memoizedProps, i)),
                    B(e, a);
                else if (4 !== i.tag)
                  if (22 === i.tag && null !== i.memoizedState)
                    null !== (a = i.child) && (a.return = i), bi(e, i, !0, !0);
                  else if (null !== i.child) {
                    (i.child.return = i), (i = i.child);
                    continue;
                  }
                if (i === t) break;
                for (; null === i.sibling; ) {
                  if (null === i.return || i.return === t) return;
                  i = i.return;
                }
                (i.sibling.return = i.return), (i = i.sibling);
              }
            };
            var Li = function e(t, n, r, i) {
              for (var a = n.child; null !== a; ) {
                if (5 === a.tag) {
                  var o = a.stateNode;
                  r && i && (o = Le(o, a.type, a.memoizedProps, a)), Ce(t, o);
                } else if (6 === a.tag)
                  (o = a.stateNode),
                    r && i && (o = Re(o, a.memoizedProps, a)),
                    Ce(t, o);
                else if (4 !== a.tag)
                  if (22 === a.tag && null !== a.memoizedState)
                    null !== (o = a.child) && (o.return = a), e(t, a, !0, !0);
                  else if (null !== a.child) {
                    (a.child.return = a), (a = a.child);
                    continue;
                  }
                if (a === n) break;
                for (; null === a.sibling; ) {
                  if (null === a.return || a.return === n) return;
                  a = a.return;
                }
                (a.sibling.return = a.return), (a = a.sibling);
              }
            };
            (xi = function (e, t) {
              var n = t.stateNode;
              if (!Pi(e, t)) {
                e = n.containerInfo;
                var r = Te(e);
                Li(r, t, !1, !1), (n.pendingChildren = r), Ai(t), Ae(e, r);
              }
            }),
              (wi = function (e, t, n, r, i) {
                var a = e.stateNode,
                  o = e.memoizedProps;
                if ((e = Pi(e, t)) && o === r) t.stateNode = a;
                else {
                  var s = t.stateNode,
                    l = fr(lr.current),
                    u = null;
                  o !== r && (u = U(s, n, o, r, i, l)),
                    e && null === u
                      ? (t.stateNode = a)
                      : ((a = ke(a, u, n, o, r, t, e, s)),
                        H(a, n, r, i, l) && Ai(t),
                        (t.stateNode = a),
                        e ? Ai(t) : bi(a, t, !1, !1));
                }
              }),
              (_i = function (e, t, n, r) {
                n !== r
                  ? ((e = fr(cr.current)),
                    (n = fr(lr.current)),
                    (t.stateNode = G(r, e, n, t)),
                    Ai(t))
                  : (t.stateNode = e.stateNode);
              });
          } else
            (xi = function () {}), (wi = function () {}), (_i = function () {});
          function Ri(e, t) {
            if (!Wn)
              switch (e.tailMode) {
                case "hidden":
                  t = e.tail;
                  for (var n = null; null !== t; )
                    null !== t.alternate && (n = t), (t = t.sibling);
                  null === n ? (e.tail = null) : (n.sibling = null);
                  break;
                case "collapsed":
                  n = e.tail;
                  for (var r = null; null !== n; )
                    null !== n.alternate && (r = n), (n = n.sibling);
                  null === r
                    ? t || null === e.tail
                      ? (e.tail = null)
                      : (e.tail.sibling = null)
                    : (r.sibling = null);
              }
          }
          function Oi(e) {
            var t = null !== e.alternate && e.alternate.child === e.child,
              n = 0,
              r = 0;
            if (t)
              for (var i = e.child; null !== i; )
                (n |= i.lanes | i.childLanes),
                  (r |= 14680064 & i.subtreeFlags),
                  (r |= 14680064 & i.flags),
                  (i.return = e),
                  (i = i.sibling);
            else
              for (i = e.child; null !== i; )
                (n |= i.lanes | i.childLanes),
                  (r |= i.subtreeFlags),
                  (r |= i.flags),
                  (i.return = e),
                  (i = i.sibling);
            return (e.subtreeFlags |= r), (e.childLanes = n), t;
          }
          function zi(e, t, n) {
            var r = t.pendingProps;
            switch ((Un(t), t.tag)) {
              case 2:
              case 16:
              case 15:
              case 0:
              case 11:
              case 7:
              case 8:
              case 12:
              case 9:
              case 14:
                return Oi(t), null;
              case 1:
              case 17:
                return pt(t.type) && vt(), Oi(t), null;
              case 3:
                return (
                  (r = t.stateNode),
                  hr(),
                  st(ft),
                  st(ct),
                  br(),
                  r.pendingContext &&
                    ((r.context = r.pendingContext), (r.pendingContext = null)),
                  (null !== e && null !== e.child) ||
                    (Zn(t)
                      ? Ai(t)
                      : null === e ||
                        (e.memoizedState.isDehydrated &&
                          0 === (256 & t.flags)) ||
                        ((t.flags |= 1024),
                        null !== qn && (Co(qn), (qn = null)))),
                  xi(e, t),
                  Oi(t),
                  null
                );
              case 5:
                vr(t), (n = fr(cr.current));
                var i = t.type;
                if (null !== e && null != t.stateNode)
                  wi(e, t, i, r, n),
                    e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
                else {
                  if (!r) {
                    if (null === t.stateNode) throw Error(o(166));
                    return Oi(t), null;
                  }
                  if (((e = fr(lr.current)), Zn(t))) {
                    if (!$) throw Error(o(175));
                    (e = Ge(
                      t.stateNode,
                      t.type,
                      t.memoizedProps,
                      n,
                      e,
                      t,
                      !Vn
                    )),
                      (t.updateQueue = e),
                      null !== e && Ai(t);
                  } else {
                    var a = F(i, r, n, e, t);
                    bi(a, t, !1, !1),
                      (t.stateNode = a),
                      H(a, i, r, n, e) && Ai(t);
                  }
                  null !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
                }
                return Oi(t), null;
              case 6:
                if (e && null != t.stateNode) _i(e, t, e.memoizedProps, r);
                else {
                  if ("string" !== typeof r && null === t.stateNode)
                    throw Error(o(166));
                  if (((e = fr(cr.current)), (n = fr(lr.current)), Zn(t))) {
                    if (!$) throw Error(o(176));
                    if (
                      ((e = t.stateNode),
                      (r = t.memoizedProps),
                      (n = We(e, r, t, !Vn)) && null !== (i = jn))
                    )
                      switch (((a = 0 !== (1 & i.mode)), i.tag)) {
                        case 3:
                          Ze(i.stateNode.containerInfo, e, r, a);
                          break;
                        case 5:
                          Ke(i.type, i.memoizedProps, i.stateNode, e, r, a);
                      }
                    n && Ai(t);
                  } else t.stateNode = G(r, e, n, t);
                }
                return Oi(t), null;
              case 13:
                if (
                  (st(mr),
                  (r = t.memoizedState),
                  Wn &&
                    null !== Gn &&
                    0 !== (1 & t.mode) &&
                    0 === (128 & t.flags))
                ) {
                  for (e = Gn; e; ) e = Be(e);
                  return Kn(), (t.flags |= 98560), t;
                }
                if (null !== r && null !== r.dehydrated) {
                  if (((r = Zn(t)), null === e)) {
                    if (!r) throw Error(o(318));
                    if (!$) throw Error(o(344));
                    if (
                      !(e =
                        null !== (e = t.memoizedState) ? e.dehydrated : null)
                    )
                      throw Error(o(317));
                    Ve(e, t);
                  } else
                    Kn(),
                      0 === (128 & t.flags) && (t.memoizedState = null),
                      (t.flags |= 4);
                  return Oi(t), null;
                }
                return (
                  null !== qn && (Co(qn), (qn = null)),
                  0 !== (128 & t.flags)
                    ? ((t.lanes = n), t)
                    : ((r = null !== r),
                      (n = !1),
                      null === e ? Zn(t) : (n = null !== e.memoizedState),
                      r &&
                        !n &&
                        ((t.child.flags |= 8192),
                        0 !== (1 & t.mode) &&
                          (null === e || 0 !== (1 & mr.current)
                            ? 0 === Ka && (Ka = 3)
                            : Io())),
                      null !== t.updateQueue && (t.flags |= 4),
                      Oi(t),
                      null)
                );
              case 4:
                return (
                  hr(),
                  xi(e, t),
                  null === e && Z(t.stateNode.containerInfo),
                  Oi(t),
                  null
                );
              case 10:
                return ln(t.type._context), Oi(t), null;
              case 19:
                if ((st(mr), null === (i = t.memoizedState)))
                  return Oi(t), null;
                if (((r = 0 !== (128 & t.flags)), null === (a = i.rendering)))
                  if (r) Ri(i, !1);
                  else {
                    if (0 !== Ka || (null !== e && 0 !== (128 & e.flags)))
                      for (e = t.child; null !== e; ) {
                        if (null !== (a = gr(e))) {
                          for (
                            t.flags |= 128,
                              Ri(i, !1),
                              null !== (e = a.updateQueue) &&
                                ((t.updateQueue = e), (t.flags |= 4)),
                              t.subtreeFlags = 0,
                              e = n,
                              r = t.child;
                            null !== r;

                          )
                            (i = e),
                              ((n = r).flags &= 14680066),
                              null === (a = n.alternate)
                                ? ((n.childLanes = 0),
                                  (n.lanes = i),
                                  (n.child = null),
                                  (n.subtreeFlags = 0),
                                  (n.memoizedProps = null),
                                  (n.memoizedState = null),
                                  (n.updateQueue = null),
                                  (n.dependencies = null),
                                  (n.stateNode = null))
                                : ((n.childLanes = a.childLanes),
                                  (n.lanes = a.lanes),
                                  (n.child = a.child),
                                  (n.subtreeFlags = 0),
                                  (n.deletions = null),
                                  (n.memoizedProps = a.memoizedProps),
                                  (n.memoizedState = a.memoizedState),
                                  (n.updateQueue = a.updateQueue),
                                  (n.type = a.type),
                                  (i = a.dependencies),
                                  (n.dependencies =
                                    null === i
                                      ? null
                                      : {
                                          lanes: i.lanes,
                                          firstContext: i.firstContext,
                                        })),
                              (r = r.sibling);
                          return lt(mr, (1 & mr.current) | 2), t.child;
                        }
                        e = e.sibling;
                      }
                    null !== i.tail &&
                      Ft() > so &&
                      ((t.flags |= 128),
                      (r = !0),
                      Ri(i, !1),
                      (t.lanes = 4194304));
                  }
                else {
                  if (!r)
                    if (null !== (e = gr(a))) {
                      if (
                        ((t.flags |= 128),
                        (r = !0),
                        null !== (e = e.updateQueue) &&
                          ((t.updateQueue = e), (t.flags |= 4)),
                        Ri(i, !0),
                        null === i.tail &&
                          "hidden" === i.tailMode &&
                          !a.alternate &&
                          !Wn)
                      )
                        return Oi(t), null;
                    } else
                      2 * Ft() - i.renderingStartTime > so &&
                        1073741824 !== n &&
                        ((t.flags |= 128),
                        (r = !0),
                        Ri(i, !1),
                        (t.lanes = 4194304));
                  i.isBackwards
                    ? ((a.sibling = t.child), (t.child = a))
                    : (null !== (e = i.last) ? (e.sibling = a) : (t.child = a),
                      (i.last = a));
                }
                return null !== i.tail
                  ? ((t = i.tail),
                    (i.rendering = t),
                    (i.tail = t.sibling),
                    (i.renderingStartTime = Ft()),
                    (t.sibling = null),
                    (e = mr.current),
                    lt(mr, r ? (1 & e) | 2 : 1 & e),
                    t)
                  : (Oi(t), null);
              case 22:
              case 23:
                return (
                  Ro(),
                  (r = null !== t.memoizedState),
                  null !== e &&
                    (null !== e.memoizedState) !== r &&
                    (t.flags |= 8192),
                  r && 0 !== (1 & t.mode)
                    ? 0 !== (1073741824 & Qa) &&
                      (Oi(t), Y && 6 & t.subtreeFlags && (t.flags |= 8192))
                    : Oi(t),
                  null
                );
              case 24:
              case 25:
                return null;
            }
            throw Error(o(156, t.tag));
          }
          var Di = s.ReactCurrentOwner,
            Ii = !1;
          function Ni(e, t, n, r) {
            t.child = null === e ? or(t, null, n, r) : ar(t, e.child, n, r);
          }
          function Fi(e, t, n, r, i) {
            n = n.render;
            var a = t.ref;
            return (
              cn(t, i),
              (r = Rr(e, t, n, r, a, i)),
              (n = Or()),
              null === e || Ii
                ? (Wn && n && Hn(t), (t.flags |= 1), Ni(e, t, r, i), t.child)
                : ((t.updateQueue = e.updateQueue),
                  (t.flags &= -2053),
                  (e.lanes &= ~i),
                  ia(e, t, i))
            );
          }
          function Bi(e, t, n, r, i) {
            if (null === e) {
              var a = n.type;
              return "function" !== typeof a ||
                Ko(a) ||
                void 0 !== a.defaultProps ||
                null !== n.compare ||
                void 0 !== n.defaultProps
                ? (((e = ts(n.type, null, r, t, t.mode, i)).ref = t.ref),
                  (e.return = t),
                  (t.child = e))
                : ((t.tag = 15), (t.type = a), Hi(e, t, a, r, i));
            }
            if (((a = e.child), 0 === (e.lanes & i))) {
              var o = a.memoizedProps;
              if (
                (n = null !== (n = n.compare) ? n : Zt)(o, r) &&
                e.ref === t.ref
              )
                return ia(e, t, i);
            }
            return (
              (t.flags |= 1),
              ((e = es(a, r)).ref = t.ref),
              (e.return = t),
              (t.child = e)
            );
          }
          function Hi(e, t, n, r, i) {
            if (null !== e && Zt(e.memoizedProps, r) && e.ref === t.ref) {
              if (((Ii = !1), 0 === (e.lanes & i)))
                return (t.lanes = e.lanes), ia(e, t, i);
              0 !== (131072 & e.flags) && (Ii = !0);
            }
            return Gi(e, t, n, r, i);
          }
          function Ui(e, t, n) {
            var r = t.pendingProps,
              i = r.children,
              a = null !== e ? e.memoizedState : null;
            if ("hidden" === r.mode)
              if (0 === (1 & t.mode))
                (t.memoizedState = { baseLanes: 0, cachePool: null }),
                  lt(Za, Qa),
                  (Qa |= n);
              else {
                if (0 === (1073741824 & n))
                  return (
                    (e = null !== a ? a.baseLanes | n : n),
                    (t.lanes = t.childLanes = 1073741824),
                    (t.memoizedState = { baseLanes: e, cachePool: null }),
                    (t.updateQueue = null),
                    lt(Za, Qa),
                    (Qa |= e),
                    null
                  );
                (t.memoizedState = { baseLanes: 0, cachePool: null }),
                  (r = null !== a ? a.baseLanes : n),
                  lt(Za, Qa),
                  (Qa |= r);
              }
            else
              null !== a
                ? ((r = a.baseLanes | n), (t.memoizedState = null))
                : (r = n),
                lt(Za, Qa),
                (Qa |= r);
            return Ni(e, t, i, n), t.child;
          }
          function ji(e, t) {
            var n = t.ref;
            ((null === e && null !== n) || (null !== e && e.ref !== n)) &&
              ((t.flags |= 512), (t.flags |= 2097152));
          }
          function Gi(e, t, n, r, i) {
            var a = pt(n) ? dt : ct.current;
            return (
              (a = ht(t, a)),
              cn(t, i),
              (n = Rr(e, t, n, r, a, i)),
              (r = Or()),
              null === e || Ii
                ? (Wn && r && Hn(t), (t.flags |= 1), Ni(e, t, n, i), t.child)
                : ((t.updateQueue = e.updateQueue),
                  (t.flags &= -2053),
                  (e.lanes &= ~i),
                  ia(e, t, i))
            );
          }
          function Wi(e, t, n, r, i) {
            if (pt(n)) {
              var a = !0;
              yt(t);
            } else a = !1;
            if ((cn(t, i), null === t.stateNode))
              null !== e &&
                ((e.alternate = null), (t.alternate = null), (t.flags |= 2)),
                kn(t, n, r),
                Cn(t, n, r, i),
                (r = !0);
            else if (null === e) {
              var o = t.stateNode,
                s = t.memoizedProps;
              o.props = s;
              var l = o.context,
                u = n.contextType;
              "object" === typeof u && null !== u
                ? (u = fn(u))
                : (u = ht(t, (u = pt(n) ? dt : ct.current)));
              var c = n.getDerivedStateFromProps,
                f =
                  "function" === typeof c ||
                  "function" === typeof o.getSnapshotBeforeUpdate;
              f ||
                ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                  "function" !== typeof o.componentWillReceiveProps) ||
                ((s !== r || l !== u) && Tn(t, o, r, u)),
                (hn = !1);
              var d = t.memoizedState;
              (o.state = d),
                xn(t, r, o, i),
                (l = t.memoizedState),
                s !== r || d !== l || ft.current || hn
                  ? ("function" === typeof c &&
                      (Sn(t, n, c, r), (l = t.memoizedState)),
                    (s = hn || En(t, n, s, r, d, l, u))
                      ? (f ||
                          ("function" !== typeof o.UNSAFE_componentWillMount &&
                            "function" !== typeof o.componentWillMount) ||
                          ("function" === typeof o.componentWillMount &&
                            o.componentWillMount(),
                          "function" === typeof o.UNSAFE_componentWillMount &&
                            o.UNSAFE_componentWillMount()),
                        "function" === typeof o.componentDidMount &&
                          (t.flags |= 4194308))
                      : ("function" === typeof o.componentDidMount &&
                          (t.flags |= 4194308),
                        (t.memoizedProps = r),
                        (t.memoizedState = l)),
                    (o.props = r),
                    (o.state = l),
                    (o.context = u),
                    (r = s))
                  : ("function" === typeof o.componentDidMount &&
                      (t.flags |= 4194308),
                    (r = !1));
            } else {
              (o = t.stateNode),
                vn(e, t),
                (s = t.memoizedProps),
                (u = t.type === t.elementType ? s : en(t.type, s)),
                (o.props = u),
                (f = t.pendingProps),
                (d = o.context),
                "object" === typeof (l = n.contextType) && null !== l
                  ? (l = fn(l))
                  : (l = ht(t, (l = pt(n) ? dt : ct.current)));
              var h = n.getDerivedStateFromProps;
              (c =
                "function" === typeof h ||
                "function" === typeof o.getSnapshotBeforeUpdate) ||
                ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                  "function" !== typeof o.componentWillReceiveProps) ||
                ((s !== f || d !== l) && Tn(t, o, r, l)),
                (hn = !1),
                (d = t.memoizedState),
                (o.state = d),
                xn(t, r, o, i);
              var p = t.memoizedState;
              s !== f || d !== p || ft.current || hn
                ? ("function" === typeof h &&
                    (Sn(t, n, h, r), (p = t.memoizedState)),
                  (u = hn || En(t, n, u, r, d, p, l) || !1)
                    ? (c ||
                        ("function" !== typeof o.UNSAFE_componentWillUpdate &&
                          "function" !== typeof o.componentWillUpdate) ||
                        ("function" === typeof o.componentWillUpdate &&
                          o.componentWillUpdate(r, p, l),
                        "function" === typeof o.UNSAFE_componentWillUpdate &&
                          o.UNSAFE_componentWillUpdate(r, p, l)),
                      "function" === typeof o.componentDidUpdate &&
                        (t.flags |= 4),
                      "function" === typeof o.getSnapshotBeforeUpdate &&
                        (t.flags |= 1024))
                    : ("function" !== typeof o.componentDidUpdate ||
                        (s === e.memoizedProps && d === e.memoizedState) ||
                        (t.flags |= 4),
                      "function" !== typeof o.getSnapshotBeforeUpdate ||
                        (s === e.memoizedProps && d === e.memoizedState) ||
                        (t.flags |= 1024),
                      (t.memoizedProps = r),
                      (t.memoizedState = p)),
                  (o.props = r),
                  (o.state = p),
                  (o.context = l),
                  (r = u))
                : ("function" !== typeof o.componentDidUpdate ||
                    (s === e.memoizedProps && d === e.memoizedState) ||
                    (t.flags |= 4),
                  "function" !== typeof o.getSnapshotBeforeUpdate ||
                    (s === e.memoizedProps && d === e.memoizedState) ||
                    (t.flags |= 1024),
                  (r = !1));
            }
            return Vi(e, t, n, r, a, i);
          }
          function Vi(e, t, n, r, i, a) {
            ji(e, t);
            var o = 0 !== (128 & t.flags);
            if (!r && !o) return i && bt(t, n, !1), ia(e, t, a);
            (r = t.stateNode), (Di.current = t);
            var s =
              o && "function" !== typeof n.getDerivedStateFromError
                ? null
                : r.render();
            return (
              (t.flags |= 1),
              null !== e && o
                ? ((t.child = ar(t, e.child, null, a)),
                  (t.child = ar(t, null, s, a)))
                : Ni(e, t, s, a),
              (t.memoizedState = r.state),
              i && bt(t, n, !0),
              t.child
            );
          }
          function qi(e) {
            var t = e.stateNode;
            t.pendingContext
              ? mt(0, t.pendingContext, t.pendingContext !== t.context)
              : t.context && mt(0, t.context, !1),
              dr(e, t.containerInfo);
          }
          function Xi(e, t, n, r, i) {
            return Kn(), er(i), (t.flags |= 256), Ni(e, t, n, r), t.child;
          }
          var Yi = { dehydrated: null, treeContext: null, retryLane: 0 };
          function Ji(e) {
            return { baseLanes: e, cachePool: null };
          }
          function $i(e, t, n) {
            var r,
              i = t.pendingProps,
              a = mr.current,
              s = !1,
              l = 0 !== (128 & t.flags);
            if (
              ((r = l) ||
                (r = (null === e || null !== e.memoizedState) && 0 !== (2 & a)),
              r
                ? ((s = !0), (t.flags &= -129))
                : (null !== e && null === e.memoizedState) || (a |= 1),
              lt(mr, 1 & a),
              null === e)
            )
              return (
                $n(t),
                null !== (e = t.memoizedState) && null !== (e = e.dehydrated)
                  ? (0 === (1 & t.mode)
                      ? (t.lanes = 1)
                      : Ne(e)
                      ? (t.lanes = 8)
                      : (t.lanes = 1073741824),
                    null)
                  : ((a = i.children),
                    (e = i.fallback),
                    s
                      ? ((i = t.mode),
                        (s = t.child),
                        (a = { mode: "hidden", children: a }),
                        0 === (1 & i) && null !== s
                          ? ((s.childLanes = 0), (s.pendingProps = a))
                          : (s = rs(a, i, 0, null)),
                        (e = ns(e, i, n, null)),
                        (s.return = t),
                        (e.return = t),
                        (s.sibling = e),
                        (t.child = s),
                        (t.child.memoizedState = Ji(n)),
                        (t.memoizedState = Yi),
                        e)
                      : Qi(t, a))
              );
            if (null !== (a = e.memoizedState)) {
              if (null !== (r = a.dehydrated)) {
                if (l)
                  return 256 & t.flags
                    ? ((t.flags &= -257), ea(e, t, n, Error(o(422))))
                    : null !== t.memoizedState
                    ? ((t.child = e.child), (t.flags |= 128), null)
                    : ((s = i.fallback),
                      (a = t.mode),
                      (i = rs(
                        { mode: "visible", children: i.children },
                        a,
                        0,
                        null
                      )),
                      ((s = ns(s, a, n, null)).flags |= 2),
                      (i.return = t),
                      (s.return = t),
                      (i.sibling = s),
                      (t.child = i),
                      0 !== (1 & t.mode) && ar(t, e.child, null, n),
                      (t.child.memoizedState = Ji(n)),
                      (t.memoizedState = Yi),
                      s);
                if (0 === (1 & t.mode)) t = ea(e, t, n, null);
                else if (Ne(r)) t = ea(e, t, n, Error(o(419)));
                else if (((i = 0 !== (n & e.childLanes)), Ii || i)) {
                  if (null !== (i = Ya)) {
                    switch (n & -n) {
                      case 4:
                        s = 2;
                        break;
                      case 16:
                        s = 8;
                        break;
                      case 64:
                      case 128:
                      case 256:
                      case 512:
                      case 1024:
                      case 2048:
                      case 4096:
                      case 8192:
                      case 16384:
                      case 32768:
                      case 65536:
                      case 131072:
                      case 262144:
                      case 524288:
                      case 1048576:
                      case 2097152:
                      case 4194304:
                      case 8388608:
                      case 16777216:
                      case 33554432:
                      case 67108864:
                        s = 32;
                        break;
                      case 536870912:
                        s = 268435456;
                        break;
                      default:
                        s = 0;
                    }
                    0 !== (i = 0 !== (s & (i.suspendedLanes | n)) ? 0 : s) &&
                      i !== a.retryLane &&
                      ((a.retryLane = i), So(e, i, -1));
                  }
                  Io(), (t = ea(e, t, n, Error(o(421))));
                } else
                  Ie(r)
                    ? ((t.flags |= 128),
                      (t.child = e.child),
                      (t = Yo.bind(null, e)),
                      Fe(r, t),
                      (t = null))
                    : ((n = a.treeContext),
                      $ &&
                        ((Gn = je(r)),
                        (jn = t),
                        (Wn = !0),
                        (qn = null),
                        (Vn = !1),
                        null !== n &&
                          ((On[zn++] = In),
                          (On[zn++] = Nn),
                          (On[zn++] = Dn),
                          (In = n.id),
                          (Nn = n.overflow),
                          (Dn = t))),
                      ((t = Qi(t, t.pendingProps.children)).flags |= 4096));
                return t;
              }
              return s
                ? ((i = Ki(e, t, i.children, i.fallback, n)),
                  (s = t.child),
                  (a = e.child.memoizedState),
                  (s.memoizedState =
                    null === a
                      ? Ji(n)
                      : { baseLanes: a.baseLanes | n, cachePool: null }),
                  (s.childLanes = e.childLanes & ~n),
                  (t.memoizedState = Yi),
                  i)
                : ((n = Zi(e, t, i.children, n)), (t.memoizedState = null), n);
            }
            return s
              ? ((i = Ki(e, t, i.children, i.fallback, n)),
                (s = t.child),
                (a = e.child.memoizedState),
                (s.memoizedState =
                  null === a
                    ? Ji(n)
                    : { baseLanes: a.baseLanes | n, cachePool: null }),
                (s.childLanes = e.childLanes & ~n),
                (t.memoizedState = Yi),
                i)
              : ((n = Zi(e, t, i.children, n)), (t.memoizedState = null), n);
          }
          function Qi(e, t) {
            return (
              ((t = rs(
                { mode: "visible", children: t },
                e.mode,
                0,
                null
              )).return = e),
              (e.child = t)
            );
          }
          function Zi(e, t, n, r) {
            var i = e.child;
            return (
              (e = i.sibling),
              (n = es(i, { mode: "visible", children: n })),
              0 === (1 & t.mode) && (n.lanes = r),
              (n.return = t),
              (n.sibling = null),
              null !== e &&
                (null === (r = t.deletions)
                  ? ((t.deletions = [e]), (t.flags |= 16))
                  : r.push(e)),
              (t.child = n)
            );
          }
          function Ki(e, t, n, r, i) {
            var a = t.mode,
              o = (e = e.child).sibling,
              s = { mode: "hidden", children: n };
            return (
              0 === (1 & a) && t.child !== e
                ? (((n = t.child).childLanes = 0),
                  (n.pendingProps = s),
                  (t.deletions = null))
                : ((n = es(e, s)).subtreeFlags = 14680064 & e.subtreeFlags),
              null !== o
                ? (r = es(o, r))
                : ((r = ns(r, a, i, null)).flags |= 2),
              (r.return = t),
              (n.return = t),
              (n.sibling = r),
              (t.child = n),
              r
            );
          }
          function ea(e, t, n, r) {
            return (
              null !== r && er(r),
              ar(t, e.child, null, n),
              ((e = Qi(t, t.pendingProps.children)).flags |= 2),
              (t.memoizedState = null),
              e
            );
          }
          function ta(e, t, n) {
            e.lanes |= t;
            var r = e.alternate;
            null !== r && (r.lanes |= t), un(e.return, t, n);
          }
          function na(e, t, n, r, i) {
            var a = e.memoizedState;
            null === a
              ? (e.memoizedState = {
                  isBackwards: t,
                  rendering: null,
                  renderingStartTime: 0,
                  last: r,
                  tail: n,
                  tailMode: i,
                })
              : ((a.isBackwards = t),
                (a.rendering = null),
                (a.renderingStartTime = 0),
                (a.last = r),
                (a.tail = n),
                (a.tailMode = i));
          }
          function ra(e, t, n) {
            var r = t.pendingProps,
              i = r.revealOrder,
              a = r.tail;
            if ((Ni(e, t, r.children, n), 0 !== (2 & (r = mr.current))))
              (r = (1 & r) | 2), (t.flags |= 128);
            else {
              if (null !== e && 0 !== (128 & e.flags))
                e: for (e = t.child; null !== e; ) {
                  if (13 === e.tag) null !== e.memoizedState && ta(e, n, t);
                  else if (19 === e.tag) ta(e, n, t);
                  else if (null !== e.child) {
                    (e.child.return = e), (e = e.child);
                    continue;
                  }
                  if (e === t) break e;
                  for (; null === e.sibling; ) {
                    if (null === e.return || e.return === t) break e;
                    e = e.return;
                  }
                  (e.sibling.return = e.return), (e = e.sibling);
                }
              r &= 1;
            }
            if ((lt(mr, r), 0 === (1 & t.mode))) t.memoizedState = null;
            else
              switch (i) {
                case "forwards":
                  for (n = t.child, i = null; null !== n; )
                    null !== (e = n.alternate) && null === gr(e) && (i = n),
                      (n = n.sibling);
                  null === (n = i)
                    ? ((i = t.child), (t.child = null))
                    : ((i = n.sibling), (n.sibling = null)),
                    na(t, !1, i, n, a);
                  break;
                case "backwards":
                  for (n = null, i = t.child, t.child = null; null !== i; ) {
                    if (null !== (e = i.alternate) && null === gr(e)) {
                      t.child = i;
                      break;
                    }
                    (e = i.sibling), (i.sibling = n), (n = i), (i = e);
                  }
                  na(t, !0, n, null, a);
                  break;
                case "together":
                  na(t, !1, null, null, void 0);
                  break;
                default:
                  t.memoizedState = null;
              }
            return t.child;
          }
          function ia(e, t, n) {
            if (
              (null !== e && (t.dependencies = e.dependencies),
              (to |= t.lanes),
              0 === (n & t.childLanes))
            )
              return null;
            if (null !== e && t.child !== e.child) throw Error(o(153));
            if (null !== t.child) {
              for (
                n = es((e = t.child), e.pendingProps),
                  t.child = n,
                  n.return = t;
                null !== e.sibling;

              )
                (e = e.sibling),
                  ((n = n.sibling = es(e, e.pendingProps)).return = t);
              n.sibling = null;
            }
            return t.child;
          }
          function aa(e, t) {
            switch ((Un(t), t.tag)) {
              case 1:
                return (
                  pt(t.type) && vt(),
                  65536 & (e = t.flags)
                    ? ((t.flags = (-65537 & e) | 128), t)
                    : null
                );
              case 3:
                return (
                  hr(),
                  st(ft),
                  st(ct),
                  br(),
                  0 !== (65536 & (e = t.flags)) && 0 === (128 & e)
                    ? ((t.flags = (-65537 & e) | 128), t)
                    : null
                );
              case 5:
                return vr(t), null;
              case 13:
                if (
                  (st(mr),
                  null !== (e = t.memoizedState) && null !== e.dehydrated)
                ) {
                  if (null === t.alternate) throw Error(o(340));
                  Kn();
                }
                return 65536 & (e = t.flags)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null;
              case 19:
                return st(mr), null;
              case 4:
                return hr(), null;
              case 10:
                return ln(t.type._context), null;
              case 22:
              case 23:
                return Ro(), null;
              default:
                return null;
            }
          }
          var oa = !1,
            sa = !1,
            la = "function" === typeof WeakSet ? WeakSet : Set,
            ua = null;
          function ca(e, t) {
            var n = e.ref;
            if (null !== n)
              if ("function" === typeof n)
                try {
                  n(null);
                } catch (r) {
                  Vo(e, t, r);
                }
              else n.current = null;
          }
          function fa(e, t, n) {
            try {
              n();
            } catch (r) {
              Vo(e, t, r);
            }
          }
          var da = !1;
          function ha(e, t, n) {
            var r = t.updateQueue;
            if (null !== (r = null !== r ? r.lastEffect : null)) {
              var i = (r = r.next);
              do {
                if ((i.tag & e) === e) {
                  var a = i.destroy;
                  (i.destroy = void 0), void 0 !== a && fa(t, n, a);
                }
                i = i.next;
              } while (i !== r);
            }
          }
          function pa(e, t) {
            if (
              null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)
            ) {
              var n = (t = t.next);
              do {
                if ((n.tag & e) === e) {
                  var r = n.create;
                  n.destroy = r();
                }
                n = n.next;
              } while (n !== t);
            }
          }
          function va(e) {
            var t = e.ref;
            if (null !== t) {
              var n = e.stateNode;
              if (5 === e.tag) e = O(n);
              else e = n;
              "function" === typeof t ? t(e) : (t.current = e);
            }
          }
          function ma(e, t, n) {
            if (Wt && "function" === typeof Wt.onCommitFiberUnmount)
              try {
                Wt.onCommitFiberUnmount(Gt, t);
              } catch (o) {}
            switch (t.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                if (
                  null !== (e = t.updateQueue) &&
                  null !== (e = e.lastEffect)
                ) {
                  var r = (e = e.next);
                  do {
                    var i = r,
                      a = i.destroy;
                    (i = i.tag),
                      void 0 !== a &&
                        (0 !== (2 & i) || 0 !== (4 & i)) &&
                        fa(t, n, a),
                      (r = r.next);
                  } while (r !== e);
                }
                break;
              case 1:
                if (
                  (ca(t, n),
                  "function" === typeof (e = t.stateNode).componentWillUnmount)
                )
                  try {
                    (e.props = t.memoizedProps),
                      (e.state = t.memoizedState),
                      e.componentWillUnmount();
                  } catch (o) {
                    Vo(t, n, o);
                  }
                break;
              case 5:
                ca(t, n);
                break;
              case 4:
                Y
                  ? Ma(e, t, n)
                  : J &&
                    J &&
                    ((t = t.stateNode.containerInfo), (n = Te(t)), Pe(t, n));
            }
          }
          function ga(e, t, n) {
            for (var r = t; ; )
              if ((ma(e, r, n), null === r.child || (Y && 4 === r.tag))) {
                if (r === t) break;
                for (; null === r.sibling; ) {
                  if (null === r.return || r.return === t) return;
                  r = r.return;
                }
                (r.sibling.return = r.return), (r = r.sibling);
              } else (r.child.return = r), (r = r.child);
          }
          function ya(e) {
            var t = e.alternate;
            null !== t && ((e.alternate = null), ya(t)),
              (e.child = null),
              (e.deletions = null),
              (e.sibling = null),
              5 === e.tag && null !== (t = e.stateNode) && ee(t),
              (e.stateNode = null),
              (e.return = null),
              (e.dependencies = null),
              (e.memoizedProps = null),
              (e.memoizedState = null),
              (e.pendingProps = null),
              (e.stateNode = null),
              (e.updateQueue = null);
          }
          function ba(e) {
            return 5 === e.tag || 3 === e.tag || 4 === e.tag;
          }
          function xa(e) {
            e: for (;;) {
              for (; null === e.sibling; ) {
                if (null === e.return || ba(e.return)) return null;
                e = e.return;
              }
              for (
                e.sibling.return = e.return, e = e.sibling;
                5 !== e.tag && 6 !== e.tag && 18 !== e.tag;

              ) {
                if (2 & e.flags) continue e;
                if (null === e.child || 4 === e.tag) continue e;
                (e.child.return = e), (e = e.child);
              }
              if (!(2 & e.flags)) return e.stateNode;
            }
          }
          function wa(e) {
            if (Y) {
              e: {
                for (var t = e.return; null !== t; ) {
                  if (ba(t)) break e;
                  t = t.return;
                }
                throw Error(o(160));
              }
              var n = t;
              switch (n.tag) {
                case 5:
                  (t = n.stateNode),
                    32 & n.flags && (xe(t), (n.flags &= -33)),
                    Sa(e, (n = xa(e)), t);
                  break;
                case 3:
                case 4:
                  (t = n.stateNode.containerInfo), _a(e, (n = xa(e)), t);
                  break;
                default:
                  throw Error(o(161));
              }
            }
          }
          function _a(e, t, n) {
            var r = e.tag;
            if (5 === r || 6 === r)
              (e = e.stateNode), t ? ge(n, e, t) : de(n, e);
            else if (4 !== r && null !== (e = e.child))
              for (_a(e, t, n), e = e.sibling; null !== e; )
                _a(e, t, n), (e = e.sibling);
          }
          function Sa(e, t, n) {
            var r = e.tag;
            if (5 === r || 6 === r)
              (e = e.stateNode), t ? me(n, e, t) : fe(n, e);
            else if (4 !== r && null !== (e = e.child))
              for (Sa(e, t, n), e = e.sibling; null !== e; )
                Sa(e, t, n), (e = e.sibling);
          }
          function Ma(e, t, n) {
            for (var r, i, a = t, s = !1; ; ) {
              if (!s) {
                s = a.return;
                e: for (;;) {
                  if (null === s) throw Error(o(160));
                  switch (((r = s.stateNode), s.tag)) {
                    case 5:
                      i = !1;
                      break e;
                    case 3:
                    case 4:
                      (r = r.containerInfo), (i = !0);
                      break e;
                  }
                  s = s.return;
                }
                s = !0;
              }
              if (5 === a.tag || 6 === a.tag)
                ga(e, a, n), i ? be(r, a.stateNode) : ye(r, a.stateNode);
              else if (18 === a.tag)
                i ? $e(r, a.stateNode) : Je(r, a.stateNode);
              else if (4 === a.tag) {
                if (null !== a.child) {
                  (r = a.stateNode.containerInfo),
                    (i = !0),
                    (a.child.return = a),
                    (a = a.child);
                  continue;
                }
              } else if ((ma(e, a, n), null !== a.child)) {
                (a.child.return = a), (a = a.child);
                continue;
              }
              if (a === t) break;
              for (; null === a.sibling; ) {
                if (null === a.return || a.return === t) return;
                4 === (a = a.return).tag && (s = !1);
              }
              (a.sibling.return = a.return), (a = a.sibling);
            }
          }
          function Ea(e, t) {
            if (Y) {
              switch (t.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  return ha(3, t, t.return), pa(3, t), void ha(5, t, t.return);
                case 1:
                case 12:
                case 17:
                  return;
                case 5:
                  var n = t.stateNode;
                  if (null != n) {
                    var r = t.memoizedProps;
                    e = null !== e ? e.memoizedProps : r;
                    var i = t.type,
                      a = t.updateQueue;
                    (t.updateQueue = null), null !== a && ve(n, a, i, e, r, t);
                  }
                  return;
                case 6:
                  if (null === t.stateNode) throw Error(o(162));
                  return (
                    (n = t.memoizedProps),
                    void he(t.stateNode, null !== e ? e.memoizedProps : n, n)
                  );
                case 3:
                  return void (
                    $ &&
                    null !== e &&
                    e.memoizedState.isDehydrated &&
                    Xe(t.stateNode.containerInfo)
                  );
                case 13:
                case 19:
                  return void ka(t);
              }
              throw Error(o(163));
            }
            switch (t.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                return ha(3, t, t.return), pa(3, t), void ha(5, t, t.return);
              case 12:
              case 22:
              case 23:
                return;
              case 13:
              case 19:
                return void ka(t);
              case 3:
                $ &&
                  null !== e &&
                  e.memoizedState.isDehydrated &&
                  Xe(t.stateNode.containerInfo);
            }
            e: if (J) {
              switch (t.tag) {
                case 1:
                case 5:
                case 6:
                  break e;
                case 3:
                case 4:
                  (t = t.stateNode), Pe(t.containerInfo, t.pendingChildren);
                  break e;
              }
              throw Error(o(163));
            }
          }
          function ka(e) {
            var t = e.updateQueue;
            if (null !== t) {
              e.updateQueue = null;
              var n = e.stateNode;
              null === n && (n = e.stateNode = new la()),
                t.forEach(function (t) {
                  var r = Jo.bind(null, e, t);
                  n.has(t) || (n.add(t), t.then(r, r));
                });
            }
          }
          function Ta(e, t, n) {
            (ua = e), Ca(e, t, n);
          }
          function Ca(e, t, n) {
            for (var r = 0 !== (1 & e.mode); null !== ua; ) {
              var i = ua,
                a = i.child;
              if (22 === i.tag && r) {
                var o = null !== i.memoizedState || oa;
                if (!o) {
                  var s = i.alternate,
                    l = (null !== s && null !== s.memoizedState) || sa;
                  s = oa;
                  var u = sa;
                  if (((oa = o), (sa = l) && !u))
                    for (ua = i; null !== ua; )
                      (l = (o = ua).child),
                        22 === o.tag && null !== o.memoizedState
                          ? La(i)
                          : null !== l
                          ? ((l.return = o), (ua = l))
                          : La(i);
                  for (; null !== a; ) (ua = a), Ca(a, t, n), (a = a.sibling);
                  (ua = i), (oa = s), (sa = u);
                }
                Aa(e);
              } else
                0 !== (8772 & i.subtreeFlags) && null !== a
                  ? ((a.return = i), (ua = a))
                  : Aa(e);
            }
          }
          function Aa(e) {
            for (; null !== ua; ) {
              var t = ua;
              if (0 !== (8772 & t.flags)) {
                var n = t.alternate;
                try {
                  if (0 !== (8772 & t.flags))
                    switch (t.tag) {
                      case 0:
                      case 11:
                      case 15:
                        sa || pa(5, t);
                        break;
                      case 1:
                        var r = t.stateNode;
                        if (4 & t.flags && !sa)
                          if (null === n) r.componentDidMount();
                          else {
                            var i =
                              t.elementType === t.type
                                ? n.memoizedProps
                                : en(t.type, n.memoizedProps);
                            r.componentDidUpdate(
                              i,
                              n.memoizedState,
                              r.__reactInternalSnapshotBeforeUpdate
                            );
                          }
                        var a = t.updateQueue;
                        null !== a && wn(t, a, r);
                        break;
                      case 3:
                        var s = t.updateQueue;
                        if (null !== s) {
                          if (((n = null), null !== t.child))
                            switch (t.child.tag) {
                              case 5:
                                n = O(t.child.stateNode);
                                break;
                              case 1:
                                n = t.child.stateNode;
                            }
                          wn(t, s, n);
                        }
                        break;
                      case 5:
                        var l = t.stateNode;
                        null === n &&
                          4 & t.flags &&
                          pe(l, t.type, t.memoizedProps, t);
                        break;
                      case 6:
                      case 4:
                      case 12:
                      case 19:
                      case 17:
                      case 21:
                      case 22:
                      case 23:
                        break;
                      case 13:
                        if ($ && null === t.memoizedState) {
                          var u = t.alternate;
                          if (null !== u) {
                            var c = u.memoizedState;
                            if (null !== c) {
                              var f = c.dehydrated;
                              null !== f && Ye(f);
                            }
                          }
                        }
                        break;
                      default:
                        throw Error(o(163));
                    }
                  sa || (512 & t.flags && va(t));
                } catch (d) {
                  Vo(t, t.return, d);
                }
              }
              if (t === e) {
                ua = null;
                break;
              }
              if (null !== (n = t.sibling)) {
                (n.return = t.return), (ua = n);
                break;
              }
              ua = t.return;
            }
          }
          function Pa(e) {
            for (; null !== ua; ) {
              var t = ua;
              if (t === e) {
                ua = null;
                break;
              }
              var n = t.sibling;
              if (null !== n) {
                (n.return = t.return), (ua = n);
                break;
              }
              ua = t.return;
            }
          }
          function La(e) {
            for (; null !== ua; ) {
              var t = ua;
              try {
                switch (t.tag) {
                  case 0:
                  case 11:
                  case 15:
                    var n = t.return;
                    try {
                      pa(4, t);
                    } catch (l) {
                      Vo(t, n, l);
                    }
                    break;
                  case 1:
                    var r = t.stateNode;
                    if ("function" === typeof r.componentDidMount) {
                      var i = t.return;
                      try {
                        r.componentDidMount();
                      } catch (l) {
                        Vo(t, i, l);
                      }
                    }
                    var a = t.return;
                    try {
                      va(t);
                    } catch (l) {
                      Vo(t, a, l);
                    }
                    break;
                  case 5:
                    var o = t.return;
                    try {
                      va(t);
                    } catch (l) {
                      Vo(t, o, l);
                    }
                }
              } catch (l) {
                Vo(t, t.return, l);
              }
              if (t === e) {
                ua = null;
                break;
              }
              var s = t.sibling;
              if (null !== s) {
                (s.return = t.return), (ua = s);
                break;
              }
              ua = t.return;
            }
          }
          var Ra = 0,
            Oa = 1,
            za = 2,
            Da = 3,
            Ia = 4;
          if ("function" === typeof Symbol && Symbol.for) {
            var Na = Symbol.for;
            (Ra = Na("selector.component")),
              (Oa = Na("selector.has_pseudo_class")),
              (za = Na("selector.role")),
              (Da = Na("selector.test_id")),
              (Ia = Na("selector.text"));
          }
          function Fa(e) {
            var t = Q(e);
            if (null != t) {
              if ("string" !== typeof t.memoizedProps["data-testname"])
                throw Error(o(364));
              return t;
            }
            if (null === (e = ie(e))) throw Error(o(362));
            return e.stateNode.current;
          }
          function Ba(e, t) {
            switch (t.$$typeof) {
              case Ra:
                if (e.type === t.value) return !0;
                break;
              case Oa:
                e: {
                  (t = t.value), (e = [e, 0]);
                  for (var n = 0; n < e.length; ) {
                    var r = e[n++],
                      i = e[n++],
                      a = t[i];
                    if (5 !== r.tag || !se(r)) {
                      for (; null != a && Ba(r, a); ) a = t[++i];
                      if (i === t.length) {
                        t = !0;
                        break e;
                      }
                      for (r = r.child; null !== r; )
                        e.push(r, i), (r = r.sibling);
                    }
                  }
                  t = !1;
                }
                return t;
              case za:
                if (5 === e.tag && le(e.stateNode, t.value)) return !0;
                break;
              case Ia:
                if (
                  (5 === e.tag || 6 === e.tag) &&
                  null !== (e = oe(e)) &&
                  0 <= e.indexOf(t.value)
                )
                  return !0;
                break;
              case Da:
                if (
                  5 === e.tag &&
                  "string" === typeof (e = e.memoizedProps["data-testname"]) &&
                  e.toLowerCase() === t.value.toLowerCase()
                )
                  return !0;
                break;
              default:
                throw Error(o(365));
            }
            return !1;
          }
          function Ha(e) {
            switch (e.$$typeof) {
              case Ra:
                return "<" + (S(e.value) || "Unknown") + ">";
              case Oa:
                return ":has(" + (Ha(e) || "") + ")";
              case za:
                return '[role="' + e.value + '"]';
              case Ia:
                return '"' + e.value + '"';
              case Da:
                return '[data-testname="' + e.value + '"]';
              default:
                throw Error(o(365));
            }
          }
          function Ua(e, t) {
            var n = [];
            e = [e, 0];
            for (var r = 0; r < e.length; ) {
              var i = e[r++],
                a = e[r++],
                o = t[a];
              if (5 !== i.tag || !se(i)) {
                for (; null != o && Ba(i, o); ) o = t[++a];
                if (a === t.length) n.push(i);
                else
                  for (i = i.child; null !== i; ) e.push(i, a), (i = i.sibling);
              }
            }
            return n;
          }
          function ja(e, t) {
            if (!re) throw Error(o(363));
            (e = Ua((e = Fa(e)), t)), (t = []), (e = Array.from(e));
            for (var n = 0; n < e.length; ) {
              var r = e[n++];
              if (5 === r.tag) se(r) || t.push(r.stateNode);
              else for (r = r.child; null !== r; ) e.push(r), (r = r.sibling);
            }
            return t;
          }
          var Ga = Math.ceil,
            Wa = s.ReactCurrentDispatcher,
            Va = s.ReactCurrentOwner,
            qa = s.ReactCurrentBatchConfig,
            Xa = 0,
            Ya = null,
            Ja = null,
            $a = 0,
            Qa = 0,
            Za = ot(0),
            Ka = 0,
            eo = null,
            to = 0,
            no = 0,
            ro = 0,
            io = null,
            ao = null,
            oo = 0,
            so = 1 / 0;
          function lo() {
            so = Ft() + 500;
          }
          var uo,
            co = !1,
            fo = null,
            ho = null,
            po = !1,
            vo = null,
            mo = 0,
            go = 0,
            yo = null,
            bo = -1,
            xo = 0;
          function wo() {
            return 0 !== (6 & Xa) ? Ft() : -1 !== bo ? bo : (bo = Ft());
          }
          function _o(e) {
            return 0 === (1 & e.mode)
              ? 1
              : 0 !== (2 & Xa) && 0 !== $a
              ? $a & -$a
              : null !== Qt.transition
              ? (0 === xo &&
                  ((e = St),
                  0 === (4194240 & (St <<= 1)) && (St = 64),
                  (xo = e)),
                xo)
              : 0 !== (e = Rt)
              ? e
              : K();
          }
          function So(e, t, n) {
            if (50 < go) throw ((go = 0), (yo = null), Error(o(185)));
            var r = Mo(e, t);
            return null === r
              ? null
              : (Pt(r, t, n),
                (0 !== (2 & Xa) && r === Ya) ||
                  (r === Ya &&
                    (0 === (2 & Xa) && (no |= t), 4 === Ka && Ao(r, $a)),
                  Eo(r, n),
                  1 === t &&
                    0 === Xa &&
                    0 === (1 & e.mode) &&
                    (lo(), Xt && $t())),
                r);
          }
          function Mo(e, t) {
            e.lanes |= t;
            var n = e.alternate;
            for (
              null !== n && (n.lanes |= t), n = e, e = e.return;
              null !== e;

            )
              (e.childLanes |= t),
                null !== (n = e.alternate) && (n.childLanes |= t),
                (n = e),
                (e = e.return);
            return 3 === n.tag ? n.stateNode : null;
          }
          function Eo(e, t) {
            var n = e.callbackNode;
            !(function (e, t) {
              for (
                var n = e.suspendedLanes,
                  r = e.pingedLanes,
                  i = e.expirationTimes,
                  a = e.pendingLanes;
                0 < a;

              ) {
                var o = 31 - xt(a),
                  s = 1 << o,
                  l = i[o];
                -1 === l
                  ? (0 !== (s & n) && 0 === (s & r)) || (i[o] = Tt(s, t))
                  : l <= t && (e.expiredLanes |= s),
                  (a &= ~s);
              }
            })(e, t);
            var r = kt(e, e === Ya ? $a : 0);
            if (0 === r)
              null !== n && Dt(n),
                (e.callbackNode = null),
                (e.callbackPriority = 0);
            else if (((t = r & -r), e.callbackPriority !== t)) {
              if ((null != n && Dt(n), 1 === t))
                0 === e.tag
                  ? (function (e) {
                      (Xt = !0), Jt(e);
                    })(Po.bind(null, e))
                  : Jt(Po.bind(null, e)),
                  te
                    ? ne(function () {
                        0 === Xa && $t();
                      })
                    : zt(Bt, $t),
                  (n = null);
              else {
                switch (Ot(r)) {
                  case 1:
                    n = Bt;
                    break;
                  case 4:
                    n = Ht;
                    break;
                  case 16:
                  default:
                    n = Ut;
                    break;
                  case 536870912:
                    n = jt;
                }
                n = $o(n, ko.bind(null, e));
              }
              (e.callbackPriority = t), (e.callbackNode = n);
            }
          }
          function ko(e, t) {
            if (((bo = -1), (xo = 0), 0 !== (6 & Xa))) throw Error(o(327));
            var n = e.callbackNode;
            if (Go() && e.callbackNode !== n) return null;
            var r = kt(e, e === Ya ? $a : 0);
            if (0 === r) return null;
            if (0 !== (30 & r) || 0 !== (r & e.expiredLanes) || t) t = No(e, r);
            else {
              t = r;
              var i = Xa;
              Xa |= 2;
              var a = Do();
              for ((Ya === e && $a === t) || (lo(), Oo(e, t)); ; )
                try {
                  Bo();
                  break;
                } catch (l) {
                  zo(e, l);
                }
              on(),
                (Wa.current = a),
                (Xa = i),
                null !== Ja ? (t = 0) : ((Ya = null), ($a = 0), (t = Ka));
            }
            if (0 !== t) {
              if (
                (2 === t && 0 !== (i = Ct(e)) && ((r = i), (t = To(e, i))),
                1 === t)
              )
                throw ((n = eo), Oo(e, 0), Ao(e, r), Eo(e, Ft()), n);
              if (6 === t) Ao(e, r);
              else {
                if (
                  ((i = e.current.alternate),
                  0 === (30 & r) &&
                    !(function (e) {
                      for (var t = e; ; ) {
                        if (16384 & t.flags) {
                          var n = t.updateQueue;
                          if (null !== n && null !== (n = n.stores))
                            for (var r = 0; r < n.length; r++) {
                              var i = n[r],
                                a = i.getSnapshot;
                              i = i.value;
                              try {
                                if (!Vt(a(), i)) return !1;
                              } catch (s) {
                                return !1;
                              }
                            }
                        }
                        if (
                          ((n = t.child), 16384 & t.subtreeFlags && null !== n)
                        )
                          (n.return = t), (t = n);
                        else {
                          if (t === e) break;
                          for (; null === t.sibling; ) {
                            if (null === t.return || t.return === e) return !0;
                            t = t.return;
                          }
                          (t.sibling.return = t.return), (t = t.sibling);
                        }
                      }
                      return !0;
                    })(i) &&
                    (2 === (t = No(e, r)) &&
                      0 !== (a = Ct(e)) &&
                      ((r = a), (t = To(e, a))),
                    1 === t))
                )
                  throw ((n = eo), Oo(e, 0), Ao(e, r), Eo(e, Ft()), n);
                switch (((e.finishedWork = i), (e.finishedLanes = r), t)) {
                  case 0:
                  case 1:
                    throw Error(o(345));
                  case 2:
                  case 5:
                    jo(e, ao);
                    break;
                  case 3:
                    if (
                      (Ao(e, r),
                      (130023424 & r) === r && 10 < (t = oo + 500 - Ft()))
                    ) {
                      if (0 !== kt(e, 0)) break;
                      if (((i = e.suspendedLanes) & r) !== r) {
                        wo(), (e.pingedLanes |= e.suspendedLanes & i);
                        break;
                      }
                      e.timeoutHandle = W(jo.bind(null, e, ao), t);
                      break;
                    }
                    jo(e, ao);
                    break;
                  case 4:
                    if ((Ao(e, r), (4194240 & r) === r)) break;
                    for (t = e.eventTimes, i = -1; 0 < r; ) {
                      var s = 31 - xt(r);
                      (a = 1 << s), (s = t[s]) > i && (i = s), (r &= ~a);
                    }
                    if (
                      ((r = i),
                      10 <
                        (r =
                          (120 > (r = Ft() - r)
                            ? 120
                            : 480 > r
                            ? 480
                            : 1080 > r
                            ? 1080
                            : 1920 > r
                            ? 1920
                            : 3e3 > r
                            ? 3e3
                            : 4320 > r
                            ? 4320
                            : 1960 * Ga(r / 1960)) - r))
                    ) {
                      e.timeoutHandle = W(jo.bind(null, e, ao), r);
                      break;
                    }
                    jo(e, ao);
                    break;
                  default:
                    throw Error(o(329));
                }
              }
            }
            return Eo(e, Ft()), e.callbackNode === n ? ko.bind(null, e) : null;
          }
          function To(e, t) {
            var n = io;
            return (
              e.current.memoizedState.isDehydrated && (Oo(e, t).flags |= 256),
              2 !== (e = No(e, t)) && ((t = ao), (ao = n), null !== t && Co(t)),
              e
            );
          }
          function Co(e) {
            null === ao ? (ao = e) : ao.push.apply(ao, e);
          }
          function Ao(e, t) {
            for (
              t &= ~ro,
                t &= ~no,
                e.suspendedLanes |= t,
                e.pingedLanes &= ~t,
                e = e.expirationTimes;
              0 < t;

            ) {
              var n = 31 - xt(t),
                r = 1 << n;
              (e[n] = -1), (t &= ~r);
            }
          }
          function Po(e) {
            if (0 !== (6 & Xa)) throw Error(o(327));
            Go();
            var t = kt(e, 0);
            if (0 === (1 & t)) return Eo(e, Ft()), null;
            var n = No(e, t);
            if (0 !== e.tag && 2 === n) {
              var r = Ct(e);
              0 !== r && ((t = r), (n = To(e, r)));
            }
            if (1 === n) throw ((n = eo), Oo(e, 0), Ao(e, t), Eo(e, Ft()), n);
            if (6 === n) throw Error(o(345));
            return (
              (e.finishedWork = e.current.alternate),
              (e.finishedLanes = t),
              jo(e, ao),
              Eo(e, Ft()),
              null
            );
          }
          function Lo(e) {
            null !== vo && 0 === vo.tag && 0 === (6 & Xa) && Go();
            var t = Xa;
            Xa |= 1;
            var n = qa.transition,
              r = Rt;
            try {
              if (((qa.transition = null), (Rt = 1), e)) return e();
            } finally {
              (Rt = r), (qa.transition = n), 0 === (6 & (Xa = t)) && $t();
            }
          }
          function Ro() {
            (Qa = Za.current), st(Za);
          }
          function Oo(e, t) {
            (e.finishedWork = null), (e.finishedLanes = 0);
            var n = e.timeoutHandle;
            if ((n !== q && ((e.timeoutHandle = q), V(n)), null !== Ja))
              for (n = Ja.return; null !== n; ) {
                var r = n;
                switch ((Un(r), r.tag)) {
                  case 1:
                    null !== (r = r.type.childContextTypes) &&
                      void 0 !== r &&
                      vt();
                    break;
                  case 3:
                    hr(), st(ft), st(ct), br();
                    break;
                  case 5:
                    vr(r);
                    break;
                  case 4:
                    hr();
                    break;
                  case 13:
                  case 19:
                    st(mr);
                    break;
                  case 10:
                    ln(r.type._context);
                    break;
                  case 22:
                  case 23:
                    Ro();
                }
                n = n.return;
              }
            if (
              ((Ya = e),
              (Ja = e = es(e.current, null)),
              ($a = Qa = t),
              (Ka = 0),
              (eo = null),
              (ro = no = to = 0),
              (ao = io = null),
              null !== dn)
            ) {
              for (t = 0; t < dn.length; t++)
                if (null !== (r = (n = dn[t]).interleaved)) {
                  n.interleaved = null;
                  var i = r.next,
                    a = n.pending;
                  if (null !== a) {
                    var o = a.next;
                    (a.next = i), (r.next = o);
                  }
                  n.pending = r;
                }
              dn = null;
            }
            return e;
          }
          function zo(e, t) {
            for (;;) {
              var n = Ja;
              try {
                if ((on(), (xr.current = hi), kr)) {
                  for (var r = Sr.memoizedState; null !== r; ) {
                    var i = r.queue;
                    null !== i && (i.pending = null), (r = r.next);
                  }
                  kr = !1;
                }
                if (
                  ((_r = 0),
                  (Er = Mr = Sr = null),
                  (Tr = !1),
                  (Cr = 0),
                  (Va.current = null),
                  null === n || null === n.return)
                ) {
                  (Ka = 1), (eo = t), (Ja = null);
                  break;
                }
                e: {
                  var a = e,
                    s = n.return,
                    l = n,
                    u = t;
                  if (
                    ((t = $a),
                    (l.flags |= 32768),
                    null !== u &&
                      "object" === typeof u &&
                      "function" === typeof u.then)
                  ) {
                    var c = u,
                      f = l,
                      d = f.tag;
                    if (
                      0 === (1 & f.mode) &&
                      (0 === d || 11 === d || 15 === d)
                    ) {
                      var h = f.alternate;
                      h
                        ? ((f.updateQueue = h.updateQueue),
                          (f.memoizedState = h.memoizedState),
                          (f.lanes = h.lanes))
                        : ((f.updateQueue = null), (f.memoizedState = null));
                    }
                    var p = Ti(s);
                    if (null !== p) {
                      (p.flags &= -257),
                        Ci(p, s, l, 0, t),
                        1 & p.mode && ki(a, c, t),
                        (u = c);
                      var v = (t = p).updateQueue;
                      if (null === v) {
                        var m = new Set();
                        m.add(u), (t.updateQueue = m);
                      } else v.add(u);
                      break e;
                    }
                    if (0 === (1 & t)) {
                      ki(a, c, t), Io();
                      break e;
                    }
                    u = Error(o(426));
                  } else if (Wn && 1 & l.mode) {
                    var g = Ti(s);
                    if (null !== g) {
                      0 === (65536 & g.flags) && (g.flags |= 256),
                        Ci(g, s, l, 0, t),
                        er(u);
                      break e;
                    }
                  }
                  (a = u),
                    4 !== Ka && (Ka = 2),
                    null === io ? (io = [a]) : io.push(a),
                    (u = gi(u, l)),
                    (l = s);
                  do {
                    switch (l.tag) {
                      case 3:
                        (l.flags |= 65536),
                          (t &= -t),
                          (l.lanes |= t),
                          bn(l, Mi(0, u, t));
                        break e;
                      case 1:
                        a = u;
                        var y = l.type,
                          b = l.stateNode;
                        if (
                          0 === (128 & l.flags) &&
                          ("function" === typeof y.getDerivedStateFromError ||
                            (null !== b &&
                              "function" === typeof b.componentDidCatch &&
                              (null === ho || !ho.has(b))))
                        ) {
                          (l.flags |= 65536),
                            (t &= -t),
                            (l.lanes |= t),
                            bn(l, Ei(l, a, t));
                          break e;
                        }
                    }
                    l = l.return;
                  } while (null !== l);
                }
                Uo(n);
              } catch (x) {
                (t = x), Ja === n && null !== n && (Ja = n = n.return);
                continue;
              }
              break;
            }
          }
          function Do() {
            var e = Wa.current;
            return (Wa.current = hi), null === e ? hi : e;
          }
          function Io() {
            (0 !== Ka && 3 !== Ka && 2 !== Ka) || (Ka = 4),
              null === Ya ||
                (0 === (268435455 & to) && 0 === (268435455 & no)) ||
                Ao(Ya, $a);
          }
          function No(e, t) {
            var n = Xa;
            Xa |= 2;
            var r = Do();
            for ((Ya === e && $a === t) || Oo(e, t); ; )
              try {
                Fo();
                break;
              } catch (i) {
                zo(e, i);
              }
            if ((on(), (Xa = n), (Wa.current = r), null !== Ja))
              throw Error(o(261));
            return (Ya = null), ($a = 0), Ka;
          }
          function Fo() {
            for (; null !== Ja; ) Ho(Ja);
          }
          function Bo() {
            for (; null !== Ja && !It(); ) Ho(Ja);
          }
          function Ho(e) {
            var t = uo(e.alternate, e, Qa);
            (e.memoizedProps = e.pendingProps),
              null === t ? Uo(e) : (Ja = t),
              (Va.current = null);
          }
          function Uo(e) {
            var t = e;
            do {
              var n = t.alternate;
              if (((e = t.return), 0 === (32768 & t.flags))) {
                if (null !== (n = zi(n, t, Qa))) return void (Ja = n);
              } else {
                if (null !== (n = aa(n, t)))
                  return (n.flags &= 32767), void (Ja = n);
                if (null === e) return (Ka = 6), void (Ja = null);
                (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
              }
              if (null !== (t = t.sibling)) return void (Ja = t);
              Ja = t = e;
            } while (null !== t);
            0 === Ka && (Ka = 5);
          }
          function jo(e, t) {
            var n = Rt,
              r = qa.transition;
            try {
              (qa.transition = null),
                (Rt = 1),
                (function (e, t, n) {
                  do {
                    Go();
                  } while (null !== vo);
                  if (0 !== (6 & Xa)) throw Error(o(327));
                  var r = e.finishedWork,
                    i = e.finishedLanes;
                  if (null === r) return null;
                  if (
                    ((e.finishedWork = null),
                    (e.finishedLanes = 0),
                    r === e.current)
                  )
                    throw Error(o(177));
                  (e.callbackNode = null), (e.callbackPriority = 0);
                  var a = r.lanes | r.childLanes;
                  if (
                    ((function (e, t) {
                      var n = e.pendingLanes & ~t;
                      (e.pendingLanes = t),
                        (e.suspendedLanes = 0),
                        (e.pingedLanes = 0),
                        (e.expiredLanes &= t),
                        (e.mutableReadLanes &= t),
                        (e.entangledLanes &= t),
                        (t = e.entanglements);
                      var r = e.eventTimes;
                      for (e = e.expirationTimes; 0 < n; ) {
                        var i = 31 - xt(n),
                          a = 1 << i;
                        (t[i] = 0), (r[i] = -1), (e[i] = -1), (n &= ~a);
                      }
                    })(e, a),
                    e === Ya && ((Ja = Ya = null), ($a = 0)),
                    (0 === (2064 & r.subtreeFlags) && 0 === (2064 & r.flags)) ||
                      po ||
                      ((po = !0),
                      $o(Ut, function () {
                        return Go(), null;
                      })),
                    (a = 0 !== (15990 & r.flags)),
                    0 !== (15990 & r.subtreeFlags) || a)
                  ) {
                    (a = qa.transition), (qa.transition = null);
                    var s = Rt;
                    Rt = 1;
                    var l = Xa;
                    (Xa |= 4),
                      (Va.current = null),
                      (function (e, t) {
                        for (I(e.containerInfo), ua = t; null !== ua; )
                          if (
                            ((t = (e = ua).child),
                            0 !== (1028 & e.subtreeFlags) && null !== t)
                          )
                            (t.return = e), (ua = t);
                          else
                            for (; null !== ua; ) {
                              e = ua;
                              try {
                                var n = e.alternate;
                                if (0 !== (1024 & e.flags))
                                  switch (e.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                    case 5:
                                    case 6:
                                    case 4:
                                    case 17:
                                      break;
                                    case 1:
                                      if (null !== n) {
                                        var r = n.memoizedProps,
                                          i = n.memoizedState,
                                          a = e.stateNode,
                                          s = a.getSnapshotBeforeUpdate(
                                            e.elementType === e.type
                                              ? r
                                              : en(e.type, r),
                                            i
                                          );
                                        a.__reactInternalSnapshotBeforeUpdate =
                                          s;
                                      }
                                      break;
                                    case 3:
                                      Y && Ee(e.stateNode.containerInfo);
                                      break;
                                    default:
                                      throw Error(o(163));
                                  }
                              } catch (l) {
                                Vo(e, e.return, l);
                              }
                              if (null !== (t = e.sibling)) {
                                (t.return = e.return), (ua = t);
                                break;
                              }
                              ua = e.return;
                            }
                        (n = da), (da = !1);
                      })(e, r),
                      (function (e, t) {
                        for (ua = t; null !== ua; ) {
                          var n = (t = ua).deletions;
                          if (null !== n)
                            for (var r = 0; r < n.length; r++) {
                              var i = n[r];
                              try {
                                var a = e;
                                Y ? Ma(a, i, t) : ga(a, i, t);
                                var o = i.alternate;
                                null !== o && (o.return = null),
                                  (i.return = null);
                              } catch (w) {
                                Vo(i, t, w);
                              }
                            }
                          if (
                            ((n = t.child),
                            0 !== (12854 & t.subtreeFlags) && null !== n)
                          )
                            (n.return = t), (ua = n);
                          else
                            for (; null !== ua; ) {
                              t = ua;
                              try {
                                var s = t.flags;
                                if ((32 & s && Y && xe(t.stateNode), 512 & s)) {
                                  var l = t.alternate;
                                  if (null !== l) {
                                    var u = l.ref;
                                    null !== u &&
                                      ("function" === typeof u
                                        ? u(null)
                                        : (u.current = null));
                                  }
                                }
                                if (8192 & s)
                                  switch (t.tag) {
                                    case 13:
                                      if (null !== t.memoizedState) {
                                        var c = t.alternate;
                                        (null !== c &&
                                          null !== c.memoizedState) ||
                                          (oo = Ft());
                                      }
                                      break;
                                    case 22:
                                      var f = null !== t.memoizedState,
                                        d = t.alternate,
                                        h =
                                          null !== d &&
                                          null !== d.memoizedState;
                                      if (((n = t), Y))
                                        e: if (
                                          ((r = n), (i = f), (a = null), Y)
                                        )
                                          for (var p = r; ; ) {
                                            if (5 === p.tag) {
                                              if (null === a) {
                                                a = p;
                                                var v = p.stateNode;
                                                i
                                                  ? we(v)
                                                  : Se(
                                                      p.stateNode,
                                                      p.memoizedProps
                                                    );
                                              }
                                            } else if (6 === p.tag) {
                                              if (null === a) {
                                                var m = p.stateNode;
                                                i
                                                  ? _e(m)
                                                  : Me(m, p.memoizedProps);
                                              }
                                            } else if (
                                              ((22 !== p.tag && 23 !== p.tag) ||
                                                null === p.memoizedState ||
                                                p === r) &&
                                              null !== p.child
                                            ) {
                                              (p.child.return = p),
                                                (p = p.child);
                                              continue;
                                            }
                                            if (p === r) break;
                                            for (; null === p.sibling; ) {
                                              if (
                                                null === p.return ||
                                                p.return === r
                                              )
                                                break e;
                                              a === p && (a = null),
                                                (p = p.return);
                                            }
                                            a === p && (a = null),
                                              (p.sibling.return = p.return),
                                              (p = p.sibling);
                                          }
                                      if (f && !h && 0 !== (1 & n.mode)) {
                                        ua = n;
                                        for (var g = n.child; null !== g; ) {
                                          for (n = ua = g; null !== ua; ) {
                                            var y = (r = ua).child;
                                            switch (r.tag) {
                                              case 0:
                                              case 11:
                                              case 14:
                                              case 15:
                                                ha(4, r, r.return);
                                                break;
                                              case 1:
                                                ca(r, r.return);
                                                var b = r.stateNode;
                                                if (
                                                  "function" ===
                                                  typeof b.componentWillUnmount
                                                ) {
                                                  var x = r.return;
                                                  try {
                                                    (b.props = r.memoizedProps),
                                                      (b.state =
                                                        r.memoizedState),
                                                      b.componentWillUnmount();
                                                  } catch (w) {
                                                    Vo(r, x, w);
                                                  }
                                                }
                                                break;
                                              case 5:
                                                ca(r, r.return);
                                                break;
                                              case 22:
                                                if (null !== r.memoizedState) {
                                                  Pa(n);
                                                  continue;
                                                }
                                            }
                                            null !== y
                                              ? ((y.return = r), (ua = y))
                                              : Pa(n);
                                          }
                                          g = g.sibling;
                                        }
                                      }
                                  }
                                switch (4102 & s) {
                                  case 2:
                                    wa(t), (t.flags &= -3);
                                    break;
                                  case 6:
                                    wa(t), (t.flags &= -3), Ea(t.alternate, t);
                                    break;
                                  case 4096:
                                    t.flags &= -4097;
                                    break;
                                  case 4100:
                                    (t.flags &= -4097), Ea(t.alternate, t);
                                    break;
                                  case 4:
                                    Ea(t.alternate, t);
                                }
                              } catch (w) {
                                Vo(t, t.return, w);
                              }
                              if (null !== (n = t.sibling)) {
                                (n.return = t.return), (ua = n);
                                break;
                              }
                              ua = t.return;
                            }
                        }
                      })(e, r),
                      N(e.containerInfo),
                      (e.current = r),
                      Ta(r, e, i),
                      Nt(),
                      (Xa = l),
                      (Rt = s),
                      (qa.transition = a);
                  } else e.current = r;
                  if (
                    (po && ((po = !1), (vo = e), (mo = i)),
                    0 === (a = e.pendingLanes) && (ho = null),
                    (function (e) {
                      if (Wt && "function" === typeof Wt.onCommitFiberRoot)
                        try {
                          Wt.onCommitFiberRoot(
                            Gt,
                            e,
                            void 0,
                            128 === (128 & e.current.flags)
                          );
                        } catch (t) {}
                    })(r.stateNode),
                    Eo(e, Ft()),
                    null !== t)
                  )
                    for (n = e.onRecoverableError, r = 0; r < t.length; r++)
                      n(t[r]);
                  if (co) throw ((co = !1), (e = fo), (fo = null), e);
                  0 !== (1 & mo) && 0 !== e.tag && Go(),
                    0 !== (1 & (a = e.pendingLanes))
                      ? e === yo
                        ? go++
                        : ((go = 0), (yo = e))
                      : (go = 0),
                    $t();
                })(e, t, n);
            } finally {
              (qa.transition = r), (Rt = n);
            }
            return null;
          }
          function Go() {
            if (null !== vo) {
              var e = Ot(mo),
                t = qa.transition,
                n = Rt;
              try {
                if (
                  ((qa.transition = null), (Rt = 16 > e ? 16 : e), null === vo)
                )
                  var r = !1;
                else {
                  if (((e = vo), (vo = null), (mo = 0), 0 !== (6 & Xa)))
                    throw Error(o(331));
                  var i = Xa;
                  for (Xa |= 4, ua = e.current; null !== ua; ) {
                    var a = ua,
                      s = a.child;
                    if (0 !== (16 & ua.flags)) {
                      var l = a.deletions;
                      if (null !== l) {
                        for (var u = 0; u < l.length; u++) {
                          var c = l[u];
                          for (ua = c; null !== ua; ) {
                            var f = ua;
                            switch (f.tag) {
                              case 0:
                              case 11:
                              case 15:
                                ha(8, f, a);
                            }
                            var d = f.child;
                            if (null !== d) (d.return = f), (ua = d);
                            else
                              for (; null !== ua; ) {
                                var h = (f = ua).sibling,
                                  p = f.return;
                                if ((ya(f), f === c)) {
                                  ua = null;
                                  break;
                                }
                                if (null !== h) {
                                  (h.return = p), (ua = h);
                                  break;
                                }
                                ua = p;
                              }
                          }
                        }
                        var v = a.alternate;
                        if (null !== v) {
                          var m = v.child;
                          if (null !== m) {
                            v.child = null;
                            do {
                              var g = m.sibling;
                              (m.sibling = null), (m = g);
                            } while (null !== m);
                          }
                        }
                        ua = a;
                      }
                    }
                    if (0 !== (2064 & a.subtreeFlags) && null !== s)
                      (s.return = a), (ua = s);
                    else
                      e: for (; null !== ua; ) {
                        if (0 !== (2048 & (a = ua).flags))
                          switch (a.tag) {
                            case 0:
                            case 11:
                            case 15:
                              ha(9, a, a.return);
                          }
                        var y = a.sibling;
                        if (null !== y) {
                          (y.return = a.return), (ua = y);
                          break e;
                        }
                        ua = a.return;
                      }
                  }
                  var b = e.current;
                  for (ua = b; null !== ua; ) {
                    var x = (s = ua).child;
                    if (0 !== (2064 & s.subtreeFlags) && null !== x)
                      (x.return = s), (ua = x);
                    else
                      e: for (s = b; null !== ua; ) {
                        if (0 !== (2048 & (l = ua).flags))
                          try {
                            switch (l.tag) {
                              case 0:
                              case 11:
                              case 15:
                                pa(9, l);
                            }
                          } catch (_) {
                            Vo(l, l.return, _);
                          }
                        if (l === s) {
                          ua = null;
                          break e;
                        }
                        var w = l.sibling;
                        if (null !== w) {
                          (w.return = l.return), (ua = w);
                          break e;
                        }
                        ua = l.return;
                      }
                  }
                  if (
                    ((Xa = i),
                    $t(),
                    Wt && "function" === typeof Wt.onPostCommitFiberRoot)
                  )
                    try {
                      Wt.onPostCommitFiberRoot(Gt, e);
                    } catch (_) {}
                  r = !0;
                }
                return r;
              } finally {
                (Rt = n), (qa.transition = t);
              }
            }
            return !1;
          }
          function Wo(e, t, n) {
            gn(e, (t = Mi(0, (t = gi(n, t)), 1))),
              (t = wo()),
              null !== (e = Mo(e, 1)) && (Pt(e, 1, t), Eo(e, t));
          }
          function Vo(e, t, n) {
            if (3 === e.tag) Wo(e, e, n);
            else
              for (; null !== t; ) {
                if (3 === t.tag) {
                  Wo(t, e, n);
                  break;
                }
                if (1 === t.tag) {
                  var r = t.stateNode;
                  if (
                    "function" === typeof t.type.getDerivedStateFromError ||
                    ("function" === typeof r.componentDidCatch &&
                      (null === ho || !ho.has(r)))
                  ) {
                    gn(t, (e = Ei(t, (e = gi(n, e)), 1))),
                      (e = wo()),
                      null !== (t = Mo(t, 1)) && (Pt(t, 1, e), Eo(t, e));
                    break;
                  }
                }
                t = t.return;
              }
          }
          function qo(e, t, n) {
            var r = e.pingCache;
            null !== r && r.delete(t),
              (t = wo()),
              (e.pingedLanes |= e.suspendedLanes & n),
              Ya === e &&
                ($a & n) === n &&
                (4 === Ka ||
                (3 === Ka && (130023424 & $a) === $a && 500 > Ft() - oo)
                  ? Oo(e, 0)
                  : (ro |= n)),
              Eo(e, t);
          }
          function Xo(e, t) {
            0 === t &&
              (0 === (1 & e.mode)
                ? (t = 1)
                : ((t = Mt), 0 === (130023424 & (Mt <<= 1)) && (Mt = 4194304)));
            var n = wo();
            null !== (e = Mo(e, t)) && (Pt(e, t, n), Eo(e, n));
          }
          function Yo(e) {
            var t = e.memoizedState,
              n = 0;
            null !== t && (n = t.retryLane), Xo(e, n);
          }
          function Jo(e, t) {
            var n = 0;
            switch (e.tag) {
              case 13:
                var r = e.stateNode,
                  i = e.memoizedState;
                null !== i && (n = i.retryLane);
                break;
              case 19:
                r = e.stateNode;
                break;
              default:
                throw Error(o(314));
            }
            null !== r && r.delete(t), Xo(e, n);
          }
          function $o(e, t) {
            return zt(e, t);
          }
          function Qo(e, t, n, r) {
            (this.tag = e),
              (this.key = n),
              (this.sibling =
                this.child =
                this.return =
                this.stateNode =
                this.type =
                this.elementType =
                  null),
              (this.index = 0),
              (this.ref = null),
              (this.pendingProps = t),
              (this.dependencies =
                this.memoizedState =
                this.updateQueue =
                this.memoizedProps =
                  null),
              (this.mode = r),
              (this.subtreeFlags = this.flags = 0),
              (this.deletions = null),
              (this.childLanes = this.lanes = 0),
              (this.alternate = null);
          }
          function Zo(e, t, n, r) {
            return new Qo(e, t, n, r);
          }
          function Ko(e) {
            return !(!(e = e.prototype) || !e.isReactComponent);
          }
          function es(e, t) {
            var n = e.alternate;
            return (
              null === n
                ? (((n = Zo(e.tag, t, e.key, e.mode)).elementType =
                    e.elementType),
                  (n.type = e.type),
                  (n.stateNode = e.stateNode),
                  (n.alternate = e),
                  (e.alternate = n))
                : ((n.pendingProps = t),
                  (n.type = e.type),
                  (n.flags = 0),
                  (n.subtreeFlags = 0),
                  (n.deletions = null)),
              (n.flags = 14680064 & e.flags),
              (n.childLanes = e.childLanes),
              (n.lanes = e.lanes),
              (n.child = e.child),
              (n.memoizedProps = e.memoizedProps),
              (n.memoizedState = e.memoizedState),
              (n.updateQueue = e.updateQueue),
              (t = e.dependencies),
              (n.dependencies =
                null === t
                  ? null
                  : { lanes: t.lanes, firstContext: t.firstContext }),
              (n.sibling = e.sibling),
              (n.index = e.index),
              (n.ref = e.ref),
              n
            );
          }
          function ts(e, t, n, r, i, a) {
            var s = 2;
            if (((r = e), "function" === typeof e)) Ko(e) && (s = 1);
            else if ("string" === typeof e) s = 5;
            else
              e: switch (e) {
                case c:
                  return ns(n.children, i, a, t);
                case f:
                  (s = 8), (i |= 8);
                  break;
                case d:
                  return (
                    ((e = Zo(12, n, t, 2 | i)).elementType = d),
                    (e.lanes = a),
                    e
                  );
                case m:
                  return (
                    ((e = Zo(13, n, t, i)).elementType = m), (e.lanes = a), e
                  );
                case g:
                  return (
                    ((e = Zo(19, n, t, i)).elementType = g), (e.lanes = a), e
                  );
                case x:
                  return rs(n, i, a, t);
                default:
                  if ("object" === typeof e && null !== e)
                    switch (e.$$typeof) {
                      case h:
                        s = 10;
                        break e;
                      case p:
                        s = 9;
                        break e;
                      case v:
                        s = 11;
                        break e;
                      case y:
                        s = 14;
                        break e;
                      case b:
                        (s = 16), (r = null);
                        break e;
                    }
                  throw Error(o(130, null == e ? e : typeof e, ""));
              }
            return (
              ((t = Zo(s, n, t, i)).elementType = e),
              (t.type = r),
              (t.lanes = a),
              t
            );
          }
          function ns(e, t, n, r) {
            return ((e = Zo(7, e, r, t)).lanes = n), e;
          }
          function rs(e, t, n, r) {
            return (
              ((e = Zo(22, e, r, t)).elementType = x),
              (e.lanes = n),
              (e.stateNode = {}),
              e
            );
          }
          function is(e, t, n) {
            return ((e = Zo(6, e, null, t)).lanes = n), e;
          }
          function as(e, t, n) {
            return (
              ((t = Zo(
                4,
                null !== e.children ? e.children : [],
                e.key,
                t
              )).lanes = n),
              (t.stateNode = {
                containerInfo: e.containerInfo,
                pendingChildren: null,
                implementation: e.implementation,
              }),
              t
            );
          }
          function os(e, t, n, r, i) {
            (this.tag = t),
              (this.containerInfo = e),
              (this.finishedWork =
                this.pingCache =
                this.current =
                this.pendingChildren =
                  null),
              (this.timeoutHandle = q),
              (this.callbackNode = this.pendingContext = this.context = null),
              (this.callbackPriority = 0),
              (this.eventTimes = At(0)),
              (this.expirationTimes = At(-1)),
              (this.entangledLanes =
                this.finishedLanes =
                this.mutableReadLanes =
                this.expiredLanes =
                this.pingedLanes =
                this.suspendedLanes =
                this.pendingLanes =
                  0),
              (this.entanglements = At(0)),
              (this.identifierPrefix = r),
              (this.onRecoverableError = i),
              $ && (this.mutableSourceEagerHydrationData = null);
          }
          function ss(e, t, n, r, i, a, o, s, l) {
            return (
              (e = new os(e, t, n, s, l)),
              1 === t ? ((t = 1), !0 === a && (t |= 8)) : (t = 0),
              (a = Zo(3, null, null, t)),
              (e.current = a),
              (a.stateNode = e),
              (a.memoizedState = {
                element: r,
                isDehydrated: n,
                cache: null,
                transitions: null,
              }),
              pn(a),
              e
            );
          }
          function ls(e) {
            if (!e) return ut;
            e: {
              if (E((e = e._reactInternals)) !== e || 1 !== e.tag)
                throw Error(o(170));
              var t = e;
              do {
                switch (t.tag) {
                  case 3:
                    t = t.stateNode.context;
                    break e;
                  case 1:
                    if (pt(t.type)) {
                      t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                      break e;
                    }
                }
                t = t.return;
              } while (null !== t);
              throw Error(o(171));
            }
            if (1 === e.tag) {
              var n = e.type;
              if (pt(n)) return gt(e, n, t);
            }
            return t;
          }
          function us(e) {
            var t = e._reactInternals;
            if (void 0 === t) {
              if ("function" === typeof e.render) throw Error(o(188));
              throw ((e = Object.keys(e).join(",")), Error(o(268, e)));
            }
            return null === (e = C(t)) ? null : e.stateNode;
          }
          function cs(e, t) {
            if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
              var n = e.retryLane;
              e.retryLane = 0 !== n && n < t ? n : t;
            }
          }
          function fs(e, t) {
            cs(e, t), (e = e.alternate) && cs(e, t);
          }
          function ds(e) {
            return null === (e = C(e)) ? null : e.stateNode;
          }
          function hs() {
            return null;
          }
          return (
            (uo = function (e, t, n) {
              if (null !== e)
                if (e.memoizedProps !== t.pendingProps || ft.current) Ii = !0;
                else {
                  if (0 === (e.lanes & n) && 0 === (128 & t.flags))
                    return (
                      (Ii = !1),
                      (function (e, t, n) {
                        switch (t.tag) {
                          case 3:
                            qi(t), Kn();
                            break;
                          case 5:
                            pr(t);
                            break;
                          case 1:
                            pt(t.type) && yt(t);
                            break;
                          case 4:
                            dr(t, t.stateNode.containerInfo);
                            break;
                          case 10:
                            sn(0, t.type._context, t.memoizedProps.value);
                            break;
                          case 13:
                            var r = t.memoizedState;
                            if (null !== r)
                              return null !== r.dehydrated
                                ? (lt(mr, 1 & mr.current),
                                  (t.flags |= 128),
                                  null)
                                : 0 !== (n & t.child.childLanes)
                                ? $i(e, t, n)
                                : (lt(mr, 1 & mr.current),
                                  null !== (e = ia(e, t, n))
                                    ? e.sibling
                                    : null);
                            lt(mr, 1 & mr.current);
                            break;
                          case 19:
                            if (
                              ((r = 0 !== (n & t.childLanes)),
                              0 !== (128 & e.flags))
                            ) {
                              if (r) return ra(e, t, n);
                              t.flags |= 128;
                            }
                            var i = t.memoizedState;
                            if (
                              (null !== i &&
                                ((i.rendering = null),
                                (i.tail = null),
                                (i.lastEffect = null)),
                              lt(mr, mr.current),
                              r)
                            )
                              break;
                            return null;
                          case 22:
                          case 23:
                            return (t.lanes = 0), Ui(e, t, n);
                        }
                        return ia(e, t, n);
                      })(e, t, n)
                    );
                  Ii = 0 !== (131072 & e.flags);
                }
              else
                (Ii = !1),
                  Wn && 0 !== (1048576 & t.flags) && Bn(t, Rn, t.index);
              switch (((t.lanes = 0), t.tag)) {
                case 2:
                  var r = t.type;
                  null !== e &&
                    ((e.alternate = null),
                    (t.alternate = null),
                    (t.flags |= 2)),
                    (e = t.pendingProps);
                  var i = ht(t, ct.current);
                  cn(t, n), (i = Rr(null, t, r, e, i, n));
                  var a = Or();
                  return (
                    (t.flags |= 1),
                    "object" === typeof i &&
                    null !== i &&
                    "function" === typeof i.render &&
                    void 0 === i.$$typeof
                      ? ((t.tag = 1),
                        (t.memoizedState = null),
                        (t.updateQueue = null),
                        pt(r) ? ((a = !0), yt(t)) : (a = !1),
                        (t.memoizedState =
                          null !== i.state && void 0 !== i.state
                            ? i.state
                            : null),
                        pn(t),
                        (i.updater = Mn),
                        (t.stateNode = i),
                        (i._reactInternals = t),
                        Cn(t, r, e, n),
                        (t = Vi(null, t, r, !0, a, n)))
                      : ((t.tag = 0),
                        Wn && a && Hn(t),
                        Ni(null, t, i, n),
                        (t = t.child)),
                    t
                  );
                case 16:
                  r = t.elementType;
                  e: {
                    switch (
                      (null !== e &&
                        ((e.alternate = null),
                        (t.alternate = null),
                        (t.flags |= 2)),
                      (e = t.pendingProps),
                      (r = (i = r._init)(r._payload)),
                      (t.type = r),
                      (i = t.tag =
                        (function (e) {
                          if ("function" === typeof e) return Ko(e) ? 1 : 0;
                          if (void 0 !== e && null !== e) {
                            if ((e = e.$$typeof) === v) return 11;
                            if (e === y) return 14;
                          }
                          return 2;
                        })(r)),
                      (e = en(r, e)),
                      i)
                    ) {
                      case 0:
                        t = Gi(null, t, r, e, n);
                        break e;
                      case 1:
                        t = Wi(null, t, r, e, n);
                        break e;
                      case 11:
                        t = Fi(null, t, r, e, n);
                        break e;
                      case 14:
                        t = Bi(null, t, r, en(r.type, e), n);
                        break e;
                    }
                    throw Error(o(306, r, ""));
                  }
                  return t;
                case 0:
                  return (
                    (r = t.type),
                    (i = t.pendingProps),
                    Gi(e, t, r, (i = t.elementType === r ? i : en(r, i)), n)
                  );
                case 1:
                  return (
                    (r = t.type),
                    (i = t.pendingProps),
                    Wi(e, t, r, (i = t.elementType === r ? i : en(r, i)), n)
                  );
                case 3:
                  e: {
                    if ((qi(t), null === e)) throw Error(o(387));
                    (r = t.pendingProps),
                      (i = (a = t.memoizedState).element),
                      vn(e, t),
                      xn(t, r, null, n);
                    var s = t.memoizedState;
                    if (((r = s.element), $ && a.isDehydrated)) {
                      if (
                        ((a = {
                          element: r,
                          isDehydrated: !1,
                          cache: s.cache,
                          transitions: s.transitions,
                        }),
                        (t.updateQueue.baseState = a),
                        (t.memoizedState = a),
                        256 & t.flags)
                      ) {
                        t = Xi(e, t, r, n, (i = Error(o(423))));
                        break e;
                      }
                      if (r !== i) {
                        t = Xi(e, t, r, n, (i = Error(o(424))));
                        break e;
                      }
                      for (
                        $ &&
                          ((Gn = Ue(t.stateNode.containerInfo)),
                          (jn = t),
                          (Wn = !0),
                          (qn = null),
                          (Vn = !1)),
                          n = or(t, null, r, n),
                          t.child = n;
                        n;

                      )
                        (n.flags = (-3 & n.flags) | 4096), (n = n.sibling);
                    } else {
                      if ((Kn(), r === i)) {
                        t = ia(e, t, n);
                        break e;
                      }
                      Ni(e, t, r, n);
                    }
                    t = t.child;
                  }
                  return t;
                case 5:
                  return (
                    pr(t),
                    null === e && $n(t),
                    (r = t.type),
                    (i = t.pendingProps),
                    (a = null !== e ? e.memoizedProps : null),
                    (s = i.children),
                    j(r, i)
                      ? (s = null)
                      : null !== a && j(r, a) && (t.flags |= 32),
                    ji(e, t),
                    Ni(e, t, s, n),
                    t.child
                  );
                case 6:
                  return null === e && $n(t), null;
                case 13:
                  return $i(e, t, n);
                case 4:
                  return (
                    dr(t, t.stateNode.containerInfo),
                    (r = t.pendingProps),
                    null === e ? (t.child = ar(t, null, r, n)) : Ni(e, t, r, n),
                    t.child
                  );
                case 11:
                  return (
                    (r = t.type),
                    (i = t.pendingProps),
                    Fi(e, t, r, (i = t.elementType === r ? i : en(r, i)), n)
                  );
                case 7:
                  return Ni(e, t, t.pendingProps, n), t.child;
                case 8:
                case 12:
                  return Ni(e, t, t.pendingProps.children, n), t.child;
                case 10:
                  e: {
                    if (
                      ((r = t.type._context),
                      (i = t.pendingProps),
                      (a = t.memoizedProps),
                      sn(0, r, (s = i.value)),
                      null !== a)
                    )
                      if (Vt(a.value, s)) {
                        if (a.children === i.children && !ft.current) {
                          t = ia(e, t, n);
                          break e;
                        }
                      } else
                        for (
                          null !== (a = t.child) && (a.return = t);
                          null !== a;

                        ) {
                          var l = a.dependencies;
                          if (null !== l) {
                            s = a.child;
                            for (var u = l.firstContext; null !== u; ) {
                              if (u.context === r) {
                                if (1 === a.tag) {
                                  (u = mn(-1, n & -n)).tag = 2;
                                  var c = a.updateQueue;
                                  if (null !== c) {
                                    var f = (c = c.shared).pending;
                                    null === f
                                      ? (u.next = u)
                                      : ((u.next = f.next), (f.next = u)),
                                      (c.pending = u);
                                  }
                                }
                                (a.lanes |= n),
                                  null !== (u = a.alternate) && (u.lanes |= n),
                                  un(a.return, n, t),
                                  (l.lanes |= n);
                                break;
                              }
                              u = u.next;
                            }
                          } else if (10 === a.tag)
                            s = a.type === t.type ? null : a.child;
                          else if (18 === a.tag) {
                            if (null === (s = a.return)) throw Error(o(341));
                            (s.lanes |= n),
                              null !== (l = s.alternate) && (l.lanes |= n),
                              un(s, n, t),
                              (s = a.sibling);
                          } else s = a.child;
                          if (null !== s) s.return = a;
                          else
                            for (s = a; null !== s; ) {
                              if (s === t) {
                                s = null;
                                break;
                              }
                              if (null !== (a = s.sibling)) {
                                (a.return = s.return), (s = a);
                                break;
                              }
                              s = s.return;
                            }
                          a = s;
                        }
                    Ni(e, t, i.children, n), (t = t.child);
                  }
                  return t;
                case 9:
                  return (
                    (i = t.type),
                    (r = t.pendingProps.children),
                    cn(t, n),
                    (r = r((i = fn(i)))),
                    (t.flags |= 1),
                    Ni(e, t, r, n),
                    t.child
                  );
                case 14:
                  return (
                    (i = en((r = t.type), t.pendingProps)),
                    Bi(e, t, r, (i = en(r.type, i)), n)
                  );
                case 15:
                  return Hi(e, t, t.type, t.pendingProps, n);
                case 17:
                  return (
                    (r = t.type),
                    (i = t.pendingProps),
                    (i = t.elementType === r ? i : en(r, i)),
                    null !== e &&
                      ((e.alternate = null),
                      (t.alternate = null),
                      (t.flags |= 2)),
                    (t.tag = 1),
                    pt(r) ? ((e = !0), yt(t)) : (e = !1),
                    cn(t, n),
                    kn(t, r, i),
                    Cn(t, r, i, n),
                    Vi(null, t, r, !0, e, n)
                  );
                case 19:
                  return ra(e, t, n);
                case 22:
                  return Ui(e, t, n);
              }
              throw Error(o(156, t.tag));
            }),
            (t.attemptContinuousHydration = function (e) {
              13 === e.tag && (So(e, 134217728, wo()), fs(e, 134217728));
            }),
            (t.attemptHydrationAtCurrentPriority = function (e) {
              if (13 === e.tag) {
                var t = wo(),
                  n = _o(e);
                So(e, n, t), fs(e, n);
              }
            }),
            (t.attemptSynchronousHydration = function (e) {
              switch (e.tag) {
                case 3:
                  var t = e.stateNode;
                  if (t.current.memoizedState.isDehydrated) {
                    var n = Et(t.pendingLanes);
                    0 !== n &&
                      (Lt(t, 1 | n),
                      Eo(t, Ft()),
                      0 === (6 & Xa) && (lo(), $t()));
                  }
                  break;
                case 13:
                  var r = wo();
                  Lo(function () {
                    return So(e, 1, r);
                  }),
                    fs(e, 1);
              }
            }),
            (t.batchedUpdates = function (e, t) {
              var n = Xa;
              Xa |= 1;
              try {
                return e(t);
              } finally {
                0 === (Xa = n) && (lo(), Xt && $t());
              }
            }),
            (t.createComponentSelector = function (e) {
              return { $$typeof: Ra, value: e };
            }),
            (t.createContainer = function (e, t, n, r, i, a, o) {
              return ss(e, t, !1, null, 0, r, 0, a, o);
            }),
            (t.createHasPseudoClassSelector = function (e) {
              return { $$typeof: Oa, value: e };
            }),
            (t.createHydrationContainer = function (e, t, n, r, i, a, o, s, l) {
              return (
                ((e = ss(n, r, !0, e, 0, a, 0, s, l)).context = ls(null)),
                (n = e.current),
                ((a = mn((r = wo()), (i = _o(n)))).callback =
                  void 0 !== t && null !== t ? t : null),
                gn(n, a),
                (e.current.lanes = i),
                Pt(e, i, r),
                Eo(e, r),
                e
              );
            }),
            (t.createPortal = function (e, t, n) {
              var r =
                3 < arguments.length && void 0 !== arguments[3]
                  ? arguments[3]
                  : null;
              return {
                $$typeof: u,
                key: null == r ? null : "" + r,
                children: e,
                containerInfo: t,
                implementation: n,
              };
            }),
            (t.createRoleSelector = function (e) {
              return { $$typeof: za, value: e };
            }),
            (t.createTestNameSelector = function (e) {
              return { $$typeof: Da, value: e };
            }),
            (t.createTextSelector = function (e) {
              return { $$typeof: Ia, value: e };
            }),
            (t.deferredUpdates = function (e) {
              var t = Rt,
                n = qa.transition;
              try {
                return (qa.transition = null), (Rt = 16), e();
              } finally {
                (Rt = t), (qa.transition = n);
              }
            }),
            (t.discreteUpdates = function (e, t, n, r, i) {
              var a = Rt,
                o = qa.transition;
              try {
                return (qa.transition = null), (Rt = 1), e(t, n, r, i);
              } finally {
                (Rt = a), (qa.transition = o), 0 === Xa && lo();
              }
            }),
            (t.findAllNodes = ja),
            (t.findBoundingRects = function (e, t) {
              if (!re) throw Error(o(363));
              (t = ja(e, t)), (e = []);
              for (var n = 0; n < t.length; n++) e.push(ae(t[n]));
              for (t = e.length - 1; 0 < t; t--)
                for (
                  var r = (n = e[t]).x,
                    i = r + n.width,
                    a = n.y,
                    s = a + n.height,
                    l = t - 1;
                  0 <= l;
                  l--
                )
                  if (t !== l) {
                    var u = e[l],
                      c = u.x,
                      f = c + u.width,
                      d = u.y,
                      h = d + u.height;
                    if (r >= c && a >= d && i <= f && s <= h) {
                      e.splice(t, 1);
                      break;
                    }
                    if (!(r !== c || n.width !== u.width || h < a || d > s)) {
                      d > a && ((u.height += d - a), (u.y = a)),
                        h < s && (u.height = s - d),
                        e.splice(t, 1);
                      break;
                    }
                    if (!(a !== d || n.height !== u.height || f < r || c > i)) {
                      c > r && ((u.width += c - r), (u.x = r)),
                        f < i && (u.width = i - c),
                        e.splice(t, 1);
                      break;
                    }
                  }
              return e;
            }),
            (t.findHostInstance = us),
            (t.findHostInstanceWithNoPortals = function (e) {
              return null === (e = null !== (e = T(e)) ? P(e) : null)
                ? null
                : e.stateNode;
            }),
            (t.findHostInstanceWithWarning = function (e) {
              return us(e);
            }),
            (t.flushControlled = function (e) {
              var t = Xa;
              Xa |= 1;
              var n = qa.transition,
                r = Rt;
              try {
                (qa.transition = null), (Rt = 1), e();
              } finally {
                (Rt = r), (qa.transition = n), 0 === (Xa = t) && (lo(), $t());
              }
            }),
            (t.flushPassiveEffects = Go),
            (t.flushSync = Lo),
            (t.focusWithin = function (e, t) {
              if (!re) throw Error(o(363));
              for (
                t = Ua((e = Fa(e)), t), t = Array.from(t), e = 0;
                e < t.length;

              ) {
                var n = t[e++];
                if (!se(n)) {
                  if (5 === n.tag && ue(n.stateNode)) return !0;
                  for (n = n.child; null !== n; ) t.push(n), (n = n.sibling);
                }
              }
              return !1;
            }),
            (t.getCurrentUpdatePriority = function () {
              return Rt;
            }),
            (t.getFindAllNodesFailureDescription = function (e, t) {
              if (!re) throw Error(o(363));
              var n = 0,
                r = [];
              e = [Fa(e), 0];
              for (var i = 0; i < e.length; ) {
                var a = e[i++],
                  s = e[i++],
                  l = t[s];
                if (
                  (5 !== a.tag || !se(a)) &&
                  (Ba(a, l) && (r.push(Ha(l)), ++s > n && (n = s)),
                  s < t.length)
                )
                  for (a = a.child; null !== a; ) e.push(a, s), (a = a.sibling);
              }
              if (n < t.length) {
                for (e = []; n < t.length; n++) e.push(Ha(t[n]));
                return (
                  "findAllNodes was able to match part of the selector:\n  " +
                  r.join(" > ") +
                  "\n\nNo matching component was found for:\n  " +
                  e.join(" > ")
                );
              }
              return null;
            }),
            (t.getPublicRootInstance = function (e) {
              return (e = e.current).child
                ? 5 === e.child.tag
                  ? O(e.child.stateNode)
                  : e.child.stateNode
                : null;
            }),
            (t.injectIntoDevTools = function (e) {
              if (
                ((e = {
                  bundleType: e.bundleType,
                  version: e.version,
                  rendererPackageName: e.rendererPackageName,
                  rendererConfig: e.rendererConfig,
                  overrideHookState: null,
                  overrideHookStateDeletePath: null,
                  overrideHookStateRenamePath: null,
                  overrideProps: null,
                  overridePropsDeletePath: null,
                  overridePropsRenamePath: null,
                  setErrorHandler: null,
                  setSuspenseHandler: null,
                  scheduleUpdate: null,
                  currentDispatcherRef: s.ReactCurrentDispatcher,
                  findHostInstanceByFiber: ds,
                  findFiberByHostInstance: e.findFiberByHostInstance || hs,
                  findHostInstancesForRefresh: null,
                  scheduleRefresh: null,
                  scheduleRoot: null,
                  setRefreshHandler: null,
                  getCurrentFiber: null,
                  reconcilerVersion: "18.0.0-fc46dba67-20220329",
                }),
                "undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)
              )
                e = !1;
              else {
                var t = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                if (t.isDisabled || !t.supportsFiber) e = !0;
                else {
                  try {
                    (Gt = t.inject(e)), (Wt = t);
                  } catch (n) {}
                  e = !!t.checkDCE;
                }
              }
              return e;
            }),
            (t.isAlreadyRendering = function () {
              return !1;
            }),
            (t.observeVisibleRects = function (e, t, n, r) {
              if (!re) throw Error(o(363));
              e = ja(e, t);
              var i = ce(e, n, r).disconnect;
              return {
                disconnect: function () {
                  i();
                },
              };
            }),
            (t.registerMutableSourceForHydration = function (e, t) {
              var n = t._getVersion;
              (n = n(t._source)),
                null == e.mutableSourceEagerHydrationData
                  ? (e.mutableSourceEagerHydrationData = [t, n])
                  : e.mutableSourceEagerHydrationData.push(t, n);
            }),
            (t.runWithPriority = function (e, t) {
              var n = Rt;
              try {
                return (Rt = e), t();
              } finally {
                Rt = n;
              }
            }),
            (t.shouldError = function () {
              return null;
            }),
            (t.shouldSuspend = function () {
              return !1;
            }),
            (t.updateContainer = function (e, t, n, r) {
              var i = t.current,
                a = wo(),
                o = _o(i);
              return (
                (n = ls(n)),
                null === t.context ? (t.context = n) : (t.pendingContext = n),
                ((t = mn(a, o)).payload = { element: e }),
                null !== (r = void 0 === r ? null : r) && (t.callback = r),
                gn(i, t),
                null !== (e = So(i, o, a)) && yn(e, i, o),
                o
              );
            }),
            t
          );
        };
      },
      4585: function (e, t, n) {
        "use strict";
        e.exports = n(4976);
      },
      258: function (e, t, n) {
        "use strict";
        e.exports = n(3721);
      },
      2592: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = (function () {
            function e(e, t) {
              for (var n = 0; n < t.length; n++) {
                var r = t[n];
                (r.enumerable = r.enumerable || !1),
                  (r.configurable = !0),
                  "value" in r && (r.writable = !0),
                  Object.defineProperty(e, r.key, r);
              }
            }
            return function (t, n, r) {
              return n && e(t.prototype, n), r && e(t, r), t;
            };
          })(),
          i = o(n(2791)),
          a = o(n(7585));
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function s(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function l(e, t) {
          if (!e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return !t || ("object" !== typeof t && "function" !== typeof t)
            ? e
            : t;
        }
        var u = (function (e) {
          function t() {
            return (
              s(this, t),
              l(
                this,
                (t.__proto__ || Object.getPrototypeOf(t)).apply(this, arguments)
              )
            );
          }
          return (
            (function (e, t) {
              if ("function" !== typeof t && null !== t)
                throw new TypeError(
                  "Super expression must either be null or a function, not " +
                    typeof t
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: {
                  value: e,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
                t &&
                  (Object.setPrototypeOf
                    ? Object.setPrototypeOf(e, t)
                    : (e.__proto__ = t));
            })(t, e),
            r(t, [
              {
                key: "render",
                value: function () {
                  return i.default.createElement(
                    "input",
                    this.props,
                    this.props.children
                  );
                },
              },
            ]),
            t
          );
        })(i.default.Component);
        t.default = (0, a.default)(u);
      },
      5532: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            },
          i = (function () {
            function e(e, t) {
              for (var n = 0; n < t.length; n++) {
                var r = t[n];
                (r.enumerable = r.enumerable || !1),
                  (r.configurable = !0),
                  "value" in r && (r.writable = !0),
                  Object.defineProperty(e, r.key, r);
              }
            }
            return function (t, n, r) {
              return n && e(t.prototype, n), r && e(t, r), t;
            };
          })(),
          a = l(n(2791)),
          o = l(n(671)),
          s = l(n(2007));
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function u(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function c(e, t) {
          if (!e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return !t || ("object" !== typeof t && "function" !== typeof t)
            ? e
            : t;
        }
        var f = (function (e) {
          function t() {
            return (
              u(this, t),
              c(
                this,
                (t.__proto__ || Object.getPrototypeOf(t)).apply(this, arguments)
              )
            );
          }
          return (
            (function (e, t) {
              if ("function" !== typeof t && null !== t)
                throw new TypeError(
                  "Super expression must either be null or a function, not " +
                    typeof t
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: {
                  value: e,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
                t &&
                  (Object.setPrototypeOf
                    ? Object.setPrototypeOf(e, t)
                    : (e.__proto__ = t));
            })(t, e),
            i(t, [
              {
                key: "render",
                value: function () {
                  var e = this,
                    t = r({}, this.props);
                  return (
                    t.parentBindings && delete t.parentBindings,
                    a.default.createElement(
                      "div",
                      r({}, t, {
                        ref: function (t) {
                          e.props.parentBindings.domNode = t;
                        },
                      }),
                      this.props.children
                    )
                  );
                },
              },
            ]),
            t
          );
        })(a.default.Component);
        (f.propTypes = { name: s.default.string, id: s.default.string }),
          (t.default = (0, o.default)(f));
      },
      4582: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = a(n(2791)),
          i = a(n(7585));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function o(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function s(e, t) {
          if (!e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return !t || ("object" !== typeof t && "function" !== typeof t)
            ? e
            : t;
        }
        var l = (function (e) {
          function t() {
            var e, n, i;
            o(this, t);
            for (var a = arguments.length, l = Array(a), u = 0; u < a; u++)
              l[u] = arguments[u];
            return (
              (n = i =
                s(
                  this,
                  (e = t.__proto__ || Object.getPrototypeOf(t)).call.apply(
                    e,
                    [this].concat(l)
                  )
                )),
              (i.render = function () {
                return r.default.createElement("a", i.props, i.props.children);
              }),
              s(i, n)
            );
          }
          return (
            (function (e, t) {
              if ("function" !== typeof t && null !== t)
                throw new TypeError(
                  "Super expression must either be null or a function, not " +
                    typeof t
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: {
                  value: e,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
                t &&
                  (Object.setPrototypeOf
                    ? Object.setPrototypeOf(e, t)
                    : (e.__proto__ = t));
            })(t, e),
            t
          );
        })(r.default.Component);
        t.default = (0, i.default)(l);
      },
      5667: function (e, t, n) {
        "use strict";
        t.NY = t.rU = void 0;
        var r = h(n(4582)),
          i = h(n(2592)),
          a = h(n(5532)),
          o = h(n(2338)),
          s = h(n(979)),
          l = h(n(3688)),
          u = h(n(4102)),
          c = h(n(7585)),
          f = h(n(671)),
          d = h(n(719));
        function h(e) {
          return e && e.__esModule ? e : { default: e };
        }
        (t.rU = r.default),
          i.default,
          a.default,
          o.default,
          s.default,
          l.default,
          (t.NY = u.default),
          c.default,
          f.default,
          d.default,
          r.default,
          i.default,
          a.default,
          o.default,
          s.default,
          l.default,
          u.default,
          c.default,
          f.default,
          d.default;
      },
      719: function (e, t, n) {
        "use strict";
        var r =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            },
          i = (function () {
            function e(e, t) {
              for (var n = 0; n < t.length; n++) {
                var r = t[n];
                (r.enumerable = r.enumerable || !1),
                  (r.configurable = !0),
                  "value" in r && (r.writable = !0),
                  Object.defineProperty(e, r.key, r);
              }
            }
            return function (t, n, r) {
              return n && e(t.prototype, n), r && e(t, r), t;
            };
          })();
        function a(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function o(e, t) {
          if (!e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return !t || ("object" !== typeof t && "function" !== typeof t)
            ? e
            : t;
        }
        function s(e, t) {
          if ("function" !== typeof t && null !== t)
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof t
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: {
              value: e,
              enumerable: !1,
              writable: !0,
              configurable: !0,
            },
          })),
            t &&
              (Object.setPrototypeOf
                ? Object.setPrototypeOf(e, t)
                : (e.__proto__ = t));
        }
        var l = n(2791),
          u = (n(4164), n(5183), n(3688)),
          c = n(2338),
          f = n(2007),
          d = n(5203),
          h = {
            to: f.string.isRequired,
            containerId: f.string,
            container: f.object,
            activeClass: f.string,
            spy: f.bool,
            smooth: f.oneOfType([f.bool, f.string]),
            offset: f.number,
            delay: f.number,
            isDynamic: f.bool,
            onClick: f.func,
            duration: f.oneOfType([f.number, f.func]),
            absolute: f.bool,
            onSetActive: f.func,
            onSetInactive: f.func,
            ignoreCancelEvents: f.bool,
            hashSpy: f.bool,
            spyThrottle: f.number,
          },
          p = {
            Scroll: function (e, t) {
              console.warn("Helpers.Scroll is deprecated since v1.7.0");
              var n = t || c,
                f = (function (t) {
                  function c(e) {
                    a(this, c);
                    var t = o(
                      this,
                      (c.__proto__ || Object.getPrototypeOf(c)).call(this, e)
                    );
                    return p.call(t), (t.state = { active: !1 }), t;
                  }
                  return (
                    s(c, t),
                    i(c, [
                      {
                        key: "getScrollSpyContainer",
                        value: function () {
                          var e = this.props.containerId,
                            t = this.props.container;
                          return e
                            ? document.getElementById(e)
                            : t && t.nodeType
                            ? t
                            : document;
                        },
                      },
                      {
                        key: "componentDidMount",
                        value: function () {
                          if (this.props.spy || this.props.hashSpy) {
                            var e = this.getScrollSpyContainer();
                            u.isMounted(e) ||
                              u.mount(e, this.props.spyThrottle),
                              this.props.hashSpy &&
                                (d.isMounted() || d.mount(n),
                                d.mapContainer(this.props.to, e)),
                              this.props.spy &&
                                u.addStateHandler(this.stateHandler),
                              u.addSpyHandler(this.spyHandler, e),
                              this.setState({ container: e });
                          }
                        },
                      },
                      {
                        key: "componentWillUnmount",
                        value: function () {
                          u.unmount(this.stateHandler, this.spyHandler);
                        },
                      },
                      {
                        key: "render",
                        value: function () {
                          var t = "";
                          t =
                            this.state && this.state.active
                              ? (
                                  (this.props.className || "") +
                                  " " +
                                  (this.props.activeClass || "active")
                                ).trim()
                              : this.props.className;
                          var n = r({}, this.props);
                          for (var i in h) n.hasOwnProperty(i) && delete n[i];
                          return (
                            (n.className = t),
                            (n.onClick = this.handleClick),
                            l.createElement(e, n)
                          );
                        },
                      },
                    ]),
                    c
                  );
                })(l.Component),
                p = function () {
                  var e = this;
                  (this.scrollTo = function (t, i) {
                    n.scrollTo(t, r({}, e.state, i));
                  }),
                    (this.handleClick = function (t) {
                      e.props.onClick && e.props.onClick(t),
                        t.stopPropagation && t.stopPropagation(),
                        t.preventDefault && t.preventDefault(),
                        e.scrollTo(e.props.to, e.props);
                    }),
                    (this.stateHandler = function () {
                      n.getActiveLink() !== e.props.to &&
                        (null !== e.state &&
                          e.state.active &&
                          e.props.onSetInactive &&
                          e.props.onSetInactive(),
                        e.setState({ active: !1 }));
                    }),
                    (this.spyHandler = function (t) {
                      var r = e.getScrollSpyContainer();
                      if (!d.isMounted() || d.isInitialized()) {
                        var i = e.props.to,
                          a = null,
                          o = 0,
                          s = 0,
                          l = 0;
                        if (r.getBoundingClientRect)
                          l = r.getBoundingClientRect().top;
                        if (!a || e.props.isDynamic) {
                          if (!(a = n.get(i))) return;
                          var c = a.getBoundingClientRect();
                          s = (o = c.top - l + t) + c.height;
                        }
                        var f = t - e.props.offset,
                          h = f >= Math.floor(o) && f < Math.floor(s),
                          p = f < Math.floor(o) || f >= Math.floor(s),
                          v = n.getActiveLink();
                        return p
                          ? (i === v && n.setActiveLink(void 0),
                            e.props.hashSpy &&
                              d.getHash() === i &&
                              d.changeHash(),
                            e.props.spy &&
                              e.state.active &&
                              (e.setState({ active: !1 }),
                              e.props.onSetInactive && e.props.onSetInactive()),
                            u.updateStates())
                          : h && v !== i
                          ? (n.setActiveLink(i),
                            e.props.hashSpy && d.changeHash(i),
                            e.props.spy &&
                              (e.setState({ active: !0 }),
                              e.props.onSetActive && e.props.onSetActive(i)),
                            u.updateStates())
                          : void 0;
                      }
                    });
                };
              return (f.propTypes = h), (f.defaultProps = { offset: 0 }), f;
            },
            Element: function (e) {
              console.warn("Helpers.Element is deprecated since v1.7.0");
              var t = (function (t) {
                function n(e) {
                  a(this, n);
                  var t = o(
                    this,
                    (n.__proto__ || Object.getPrototypeOf(n)).call(this, e)
                  );
                  return (t.childBindings = { domNode: null }), t;
                }
                return (
                  s(n, t),
                  i(n, [
                    {
                      key: "componentDidMount",
                      value: function () {
                        if ("undefined" === typeof window) return !1;
                        this.registerElems(this.props.name);
                      },
                    },
                    {
                      key: "componentDidUpdate",
                      value: function (e) {
                        this.props.name !== e.name &&
                          this.registerElems(this.props.name);
                      },
                    },
                    {
                      key: "componentWillUnmount",
                      value: function () {
                        if ("undefined" === typeof window) return !1;
                        c.unregister(this.props.name);
                      },
                    },
                    {
                      key: "registerElems",
                      value: function (e) {
                        c.register(e, this.childBindings.domNode);
                      },
                    },
                    {
                      key: "render",
                      value: function () {
                        return l.createElement(
                          e,
                          r({}, this.props, {
                            parentBindings: this.childBindings,
                          })
                        );
                      },
                    },
                  ]),
                  n
                );
              })(l.Component);
              return (t.propTypes = { name: f.string, id: f.string }), t;
            },
          };
        e.exports = p;
      },
      4102: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            },
          i = (s(n(5183)), s(n(3987))),
          a = s(n(8616)),
          o = s(n(979));
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var l = function (e) {
            return i.default[e.smooth] || i.default.defaultEasing;
          },
          u =
            (function () {
              if ("undefined" !== typeof window)
                return (
                  window.requestAnimationFrame ||
                  window.webkitRequestAnimationFrame
                );
            })() ||
            function (e, t, n) {
              window.setTimeout(e, n || 1e3 / 60, new Date().getTime());
            },
          c = function (e) {
            var t = e.data.containerElement;
            if (t && t !== document && t !== document.body) return t.scrollLeft;
            var n = void 0 !== window.pageXOffset,
              r = "CSS1Compat" === (document.compatMode || "");
            return n
              ? window.pageXOffset
              : r
              ? document.documentElement.scrollLeft
              : document.body.scrollLeft;
          },
          f = function (e) {
            var t = e.data.containerElement;
            if (t && t !== document && t !== document.body) return t.scrollTop;
            var n = void 0 !== window.pageXOffset,
              r = "CSS1Compat" === (document.compatMode || "");
            return n
              ? window.pageYOffset
              : r
              ? document.documentElement.scrollTop
              : document.body.scrollTop;
          },
          d = function e(t, n, r) {
            var i = n.data;
            if (n.ignoreCancelEvents || !i.cancel)
              if (
                ((i.delta = Math.round(i.targetPosition - i.startPosition)),
                null === i.start && (i.start = r),
                (i.progress = r - i.start),
                (i.percent =
                  i.progress >= i.duration ? 1 : t(i.progress / i.duration)),
                (i.currentPosition =
                  i.startPosition + Math.ceil(i.delta * i.percent)),
                i.containerElement &&
                i.containerElement !== document &&
                i.containerElement !== document.body
                  ? n.horizontal
                    ? (i.containerElement.scrollLeft = i.currentPosition)
                    : (i.containerElement.scrollTop = i.currentPosition)
                  : n.horizontal
                  ? window.scrollTo(i.currentPosition, 0)
                  : window.scrollTo(0, i.currentPosition),
                i.percent < 1)
              ) {
                var a = e.bind(null, t, n);
                u.call(window, a);
              } else
                o.default.registered.end &&
                  o.default.registered.end(i.to, i.target, i.currentPosition);
            else
              o.default.registered.end &&
                o.default.registered.end(i.to, i.target, i.currentPositionY);
          },
          h = function (e) {
            e.data.containerElement = e
              ? e.containerId
                ? document.getElementById(e.containerId)
                : e.container && e.container.nodeType
                ? e.container
                : document
              : null;
          },
          p = function (e, t, n, r) {
            if (
              ((t.data = t.data || {
                currentPosition: 0,
                startPosition: 0,
                targetPosition: 0,
                progress: 0,
                duration: 0,
                cancel: !1,
                target: null,
                containerElement: null,
                to: null,
                start: null,
                delta: null,
                percent: null,
                delayTimeout: null,
              }),
              window.clearTimeout(t.data.delayTimeout),
              a.default.subscribe(function () {
                t.data.cancel = !0;
              }),
              h(t),
              (t.data.start = null),
              (t.data.cancel = !1),
              (t.data.startPosition = t.horizontal ? c(t) : f(t)),
              (t.data.targetPosition = t.absolute
                ? e
                : e + t.data.startPosition),
              t.data.startPosition !== t.data.targetPosition)
            ) {
              var i;
              (t.data.delta = Math.round(
                t.data.targetPosition - t.data.startPosition
              )),
                (t.data.duration = (
                  "function" === typeof (i = t.duration)
                    ? i
                    : function () {
                        return i;
                      }
                )(t.data.delta)),
                (t.data.duration = isNaN(parseFloat(t.data.duration))
                  ? 1e3
                  : parseFloat(t.data.duration)),
                (t.data.to = n),
                (t.data.target = r);
              var s = l(t),
                p = d.bind(null, s, t);
              t && t.delay > 0
                ? (t.data.delayTimeout = window.setTimeout(function () {
                    o.default.registered.begin &&
                      o.default.registered.begin(t.data.to, t.data.target),
                      u.call(window, p);
                  }, t.delay))
                : (o.default.registered.begin &&
                    o.default.registered.begin(t.data.to, t.data.target),
                  u.call(window, p));
            } else
              o.default.registered.end &&
                o.default.registered.end(
                  t.data.to,
                  t.data.target,
                  t.data.currentPosition
                );
          },
          v = function (e) {
            return (
              ((e = r({}, e)).data = e.data || {
                currentPosition: 0,
                startPosition: 0,
                targetPosition: 0,
                progress: 0,
                duration: 0,
                cancel: !1,
                target: null,
                containerElement: null,
                to: null,
                start: null,
                delta: null,
                percent: null,
                delayTimeout: null,
              }),
              (e.absolute = !0),
              e
            );
          };
        t.default = {
          animateTopScroll: p,
          getAnimationType: l,
          scrollToTop: function (e) {
            p(0, v(e));
          },
          scrollToBottom: function (e) {
            (e = v(e)),
              h(e),
              p(
                e.horizontal
                  ? (function (e) {
                      var t = e.data.containerElement;
                      if (t && t !== document && t !== document.body)
                        return t.scrollWidth - t.offsetWidth;
                      var n = document.body,
                        r = document.documentElement;
                      return Math.max(
                        n.scrollWidth,
                        n.offsetWidth,
                        r.clientWidth,
                        r.scrollWidth,
                        r.offsetWidth
                      );
                    })(e)
                  : (function (e) {
                      var t = e.data.containerElement;
                      if (t && t !== document && t !== document.body)
                        return t.scrollHeight - t.offsetHeight;
                      var n = document.body,
                        r = document.documentElement;
                      return Math.max(
                        n.scrollHeight,
                        n.offsetHeight,
                        r.clientHeight,
                        r.scrollHeight,
                        r.offsetHeight
                      );
                    })(e),
                e
              );
          },
          scrollTo: function (e, t) {
            p(e, v(t));
          },
          scrollMore: function (e, t) {
            (t = v(t)), h(t);
            var n = t.horizontal ? c(t) : f(t);
            p(e + n, t);
          },
        };
      },
      8616: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(4360),
          i = ["mousedown", "mousewheel", "touchmove", "keydown"];
        t.default = {
          subscribe: function (e) {
            return (
              "undefined" !== typeof document &&
              i.forEach(function (t) {
                return (0, r.addPassiveEventListener)(document, t, e);
              })
            );
          },
        };
      },
      4360: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        (t.addPassiveEventListener = function (e, t, n) {
          var r = (function () {
            var e = !1;
            try {
              var t = Object.defineProperty({}, "passive", {
                get: function () {
                  e = !0;
                },
              });
              window.addEventListener("test", null, t);
            } catch (n) {}
            return e;
          })();
          e.addEventListener(t, n, !!r && { passive: !0 });
        }),
          (t.removePassiveEventListener = function (e, t, n) {
            e.removeEventListener(t, n);
          });
      },
      671: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            },
          i = (function () {
            function e(e, t) {
              for (var n = 0; n < t.length; n++) {
                var r = t[n];
                (r.enumerable = r.enumerable || !1),
                  (r.configurable = !0),
                  "value" in r && (r.writable = !0),
                  Object.defineProperty(e, r.key, r);
              }
            }
            return function (t, n, r) {
              return n && e(t.prototype, n), r && e(t, r), t;
            };
          })(),
          a = l(n(2791)),
          o = (l(n(4164)), l(n(2338))),
          s = l(n(2007));
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        t.default = function (e) {
          var t = (function (t) {
            function n(e) {
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError("Cannot call a class as a function");
              })(this, n);
              var t = (function (e, t) {
                if (!e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called"
                  );
                return !t || ("object" !== typeof t && "function" !== typeof t)
                  ? e
                  : t;
              })(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
              return (t.childBindings = { domNode: null }), t;
            }
            return (
              (function (e, t) {
                if ("function" !== typeof t && null !== t)
                  throw new TypeError(
                    "Super expression must either be null or a function, not " +
                      typeof t
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0,
                  },
                })),
                  t &&
                    (Object.setPrototypeOf
                      ? Object.setPrototypeOf(e, t)
                      : (e.__proto__ = t));
              })(n, t),
              i(n, [
                {
                  key: "componentDidMount",
                  value: function () {
                    if ("undefined" === typeof window) return !1;
                    this.registerElems(this.props.name);
                  },
                },
                {
                  key: "componentDidUpdate",
                  value: function (e) {
                    this.props.name !== e.name &&
                      this.registerElems(this.props.name);
                  },
                },
                {
                  key: "componentWillUnmount",
                  value: function () {
                    if ("undefined" === typeof window) return !1;
                    o.default.unregister(this.props.name);
                  },
                },
                {
                  key: "registerElems",
                  value: function (e) {
                    o.default.register(e, this.childBindings.domNode);
                  },
                },
                {
                  key: "render",
                  value: function () {
                    return a.default.createElement(
                      e,
                      r({}, this.props, { parentBindings: this.childBindings })
                    );
                  },
                },
              ]),
              n
            );
          })(a.default.Component);
          return (
            (t.propTypes = { name: s.default.string, id: s.default.string }), t
          );
        };
      },
      979: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var n = {
          registered: {},
          scrollEvent: {
            register: function (e, t) {
              n.registered[e] = t;
            },
            remove: function (e) {
              n.registered[e] = null;
            },
          },
        };
        t.default = n;
      },
      5203: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        n(4360);
        var r,
          i = n(5183),
          a = (r = i) && r.__esModule ? r : { default: r };
        var o = {
          mountFlag: !1,
          initialized: !1,
          scroller: null,
          containers: {},
          mount: function (e) {
            (this.scroller = e),
              (this.handleHashChange = this.handleHashChange.bind(this)),
              window.addEventListener("hashchange", this.handleHashChange),
              this.initStateFromHash(),
              (this.mountFlag = !0);
          },
          mapContainer: function (e, t) {
            this.containers[e] = t;
          },
          isMounted: function () {
            return this.mountFlag;
          },
          isInitialized: function () {
            return this.initialized;
          },
          initStateFromHash: function () {
            var e = this,
              t = this.getHash();
            t
              ? window.setTimeout(function () {
                  e.scrollTo(t, !0), (e.initialized = !0);
                }, 10)
              : (this.initialized = !0);
          },
          scrollTo: function (e, t) {
            var n = this.scroller;
            if (n.get(e) && (t || e !== n.getActiveLink())) {
              var r = this.containers[e] || document;
              n.scrollTo(e, { container: r });
            }
          },
          getHash: function () {
            return a.default.getHash();
          },
          changeHash: function (e, t) {
            this.isInitialized() &&
              a.default.getHash() !== e &&
              a.default.updateHash(e, t);
          },
          handleHashChange: function () {
            this.scrollTo(this.getHash());
          },
          unmount: function () {
            (this.scroller = null),
              (this.containers = null),
              window.removeEventListener("hashchange", this.handleHashChange);
          },
        };
        t.default = o;
      },
      7585: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            },
          i = (function () {
            function e(e, t) {
              for (var n = 0; n < t.length; n++) {
                var r = t[n];
                (r.enumerable = r.enumerable || !1),
                  (r.configurable = !0),
                  "value" in r && (r.writable = !0),
                  Object.defineProperty(e, r.key, r);
              }
            }
            return function (t, n, r) {
              return n && e(t.prototype, n), r && e(t, r), t;
            };
          })(),
          a = c(n(2791)),
          o = c(n(3688)),
          s = c(n(2338)),
          l = c(n(2007)),
          u = c(n(5203));
        function c(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var f = {
          to: l.default.string.isRequired,
          containerId: l.default.string,
          container: l.default.object,
          activeClass: l.default.string,
          spy: l.default.bool,
          horizontal: l.default.bool,
          smooth: l.default.oneOfType([l.default.bool, l.default.string]),
          offset: l.default.number,
          delay: l.default.number,
          isDynamic: l.default.bool,
          onClick: l.default.func,
          duration: l.default.oneOfType([l.default.number, l.default.func]),
          absolute: l.default.bool,
          onSetActive: l.default.func,
          onSetInactive: l.default.func,
          ignoreCancelEvents: l.default.bool,
          hashSpy: l.default.bool,
          saveHashHistory: l.default.bool,
          spyThrottle: l.default.number,
        };
        t.default = function (e, t) {
          var n = t || s.default,
            l = (function (t) {
              function s(e) {
                !(function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function");
                })(this, s);
                var t = (function (e, t) {
                  if (!e)
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  return !t ||
                    ("object" !== typeof t && "function" !== typeof t)
                    ? e
                    : t;
                })(
                  this,
                  (s.__proto__ || Object.getPrototypeOf(s)).call(this, e)
                );
                return c.call(t), (t.state = { active: !1 }), t;
              }
              return (
                (function (e, t) {
                  if ("function" !== typeof t && null !== t)
                    throw new TypeError(
                      "Super expression must either be null or a function, not " +
                        typeof t
                    );
                  (e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                      value: e,
                      enumerable: !1,
                      writable: !0,
                      configurable: !0,
                    },
                  })),
                    t &&
                      (Object.setPrototypeOf
                        ? Object.setPrototypeOf(e, t)
                        : (e.__proto__ = t));
                })(s, t),
                i(s, [
                  {
                    key: "getScrollSpyContainer",
                    value: function () {
                      var e = this.props.containerId,
                        t = this.props.container;
                      return e && !t
                        ? document.getElementById(e)
                        : t && t.nodeType
                        ? t
                        : document;
                    },
                  },
                  {
                    key: "componentDidMount",
                    value: function () {
                      if (this.props.spy || this.props.hashSpy) {
                        var e = this.getScrollSpyContainer();
                        o.default.isMounted(e) ||
                          o.default.mount(e, this.props.spyThrottle),
                          this.props.hashSpy &&
                            (u.default.isMounted() || u.default.mount(n),
                            u.default.mapContainer(this.props.to, e)),
                          o.default.addSpyHandler(this.spyHandler, e),
                          this.setState({ container: e });
                      }
                    },
                  },
                  {
                    key: "componentWillUnmount",
                    value: function () {
                      o.default.unmount(this.stateHandler, this.spyHandler);
                    },
                  },
                  {
                    key: "render",
                    value: function () {
                      var t = "";
                      t =
                        this.state && this.state.active
                          ? (
                              (this.props.className || "") +
                              " " +
                              (this.props.activeClass || "active")
                            ).trim()
                          : this.props.className;
                      var n = r({}, this.props);
                      for (var i in f) n.hasOwnProperty(i) && delete n[i];
                      return (
                        (n.className = t),
                        (n.onClick = this.handleClick),
                        a.default.createElement(e, n)
                      );
                    },
                  },
                ]),
                s
              );
            })(a.default.PureComponent),
            c = function () {
              var e = this;
              (this.scrollTo = function (t, i) {
                n.scrollTo(t, r({}, e.state, i));
              }),
                (this.handleClick = function (t) {
                  e.props.onClick && e.props.onClick(t),
                    t.stopPropagation && t.stopPropagation(),
                    t.preventDefault && t.preventDefault(),
                    e.scrollTo(e.props.to, e.props);
                }),
                (this.spyHandler = function (t, r) {
                  var i = e.getScrollSpyContainer();
                  if (!u.default.isMounted() || u.default.isInitialized()) {
                    var a = e.props.horizontal,
                      o = e.props.to,
                      s = null,
                      l = void 0,
                      c = void 0;
                    if (a) {
                      var f = 0,
                        d = 0,
                        h = 0;
                      if (i.getBoundingClientRect)
                        h = i.getBoundingClientRect().left;
                      if (!s || e.props.isDynamic) {
                        if (!(s = n.get(o))) return;
                        var p = s.getBoundingClientRect();
                        d = (f = p.left - h + t) + p.width;
                      }
                      var v = t - e.props.offset;
                      (l = v >= Math.floor(f) && v < Math.floor(d)),
                        (c = v < Math.floor(f) || v >= Math.floor(d));
                    } else {
                      var m = 0,
                        g = 0,
                        y = 0;
                      if (i.getBoundingClientRect)
                        y = i.getBoundingClientRect().top;
                      if (!s || e.props.isDynamic) {
                        if (!(s = n.get(o))) return;
                        var b = s.getBoundingClientRect();
                        g = (m = b.top - y + r) + b.height;
                      }
                      var x = r - e.props.offset;
                      (l = x >= Math.floor(m) && x < Math.floor(g)),
                        (c = x < Math.floor(m) || x >= Math.floor(g));
                    }
                    var w = n.getActiveLink();
                    if (c) {
                      if (
                        (o === w && n.setActiveLink(void 0),
                        e.props.hashSpy && u.default.getHash() === o)
                      ) {
                        var _ = e.props.saveHashHistory,
                          S = void 0 !== _ && _;
                        u.default.changeHash("", S);
                      }
                      e.props.spy &&
                        e.state.active &&
                        (e.setState({ active: !1 }),
                        e.props.onSetInactive && e.props.onSetInactive(o, s));
                    }
                    if (l && (w !== o || !1 === e.state.active)) {
                      n.setActiveLink(o);
                      var M = e.props.saveHashHistory,
                        E = void 0 !== M && M;
                      e.props.hashSpy && u.default.changeHash(o, E),
                        e.props.spy &&
                          (e.setState({ active: !0 }),
                          e.props.onSetActive && e.props.onSetActive(o, s));
                    }
                  }
                });
            };
          return (l.propTypes = f), (l.defaultProps = { offset: 0 }), l;
        };
      },
      3688: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r,
          i = n(3881),
          a = (r = i) && r.__esModule ? r : { default: r },
          o = n(4360);
        var s = {
          spyCallbacks: [],
          spySetState: [],
          scrollSpyContainers: [],
          mount: function (e, t) {
            if (e) {
              var n = (function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 66;
                return (0, a.default)(e, t);
              })(function (t) {
                s.scrollHandler(e);
              }, t);
              s.scrollSpyContainers.push(e),
                (0, o.addPassiveEventListener)(e, "scroll", n);
            }
          },
          isMounted: function (e) {
            return -1 !== s.scrollSpyContainers.indexOf(e);
          },
          currentPositionX: function (e) {
            if (e === document) {
              var t = void 0 !== window.pageYOffset,
                n = "CSS1Compat" === (document.compatMode || "");
              return t
                ? window.pageXOffset
                : n
                ? document.documentElement.scrollLeft
                : document.body.scrollLeft;
            }
            return e.scrollLeft;
          },
          currentPositionY: function (e) {
            if (e === document) {
              var t = void 0 !== window.pageXOffset,
                n = "CSS1Compat" === (document.compatMode || "");
              return t
                ? window.pageYOffset
                : n
                ? document.documentElement.scrollTop
                : document.body.scrollTop;
            }
            return e.scrollTop;
          },
          scrollHandler: function (e) {
            (
              s.scrollSpyContainers[s.scrollSpyContainers.indexOf(e)]
                .spyCallbacks || []
            ).forEach(function (t) {
              return t(s.currentPositionX(e), s.currentPositionY(e));
            });
          },
          addStateHandler: function (e) {
            s.spySetState.push(e);
          },
          addSpyHandler: function (e, t) {
            var n = s.scrollSpyContainers[s.scrollSpyContainers.indexOf(t)];
            n.spyCallbacks || (n.spyCallbacks = []),
              n.spyCallbacks.push(e),
              e(s.currentPositionX(t), s.currentPositionY(t));
          },
          updateStates: function () {
            s.spySetState.forEach(function (e) {
              return e();
            });
          },
          unmount: function (e, t) {
            s.scrollSpyContainers.forEach(function (e) {
              return (
                e.spyCallbacks &&
                e.spyCallbacks.length &&
                e.spyCallbacks.splice(e.spyCallbacks.indexOf(t), 1)
              );
            }),
              s.spySetState &&
                s.spySetState.length &&
                s.spySetState.splice(s.spySetState.indexOf(e), 1),
              document.removeEventListener("scroll", s.scrollHandler);
          },
          update: function () {
            return s.scrollSpyContainers.forEach(function (e) {
              return s.scrollHandler(e);
            });
          },
        };
        t.default = s;
      },
      2338: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            },
          i = s(n(5183)),
          a = s(n(4102)),
          o = s(n(979));
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var l = {},
          u = void 0;
        t.default = {
          unmount: function () {
            l = {};
          },
          register: function (e, t) {
            l[e] = t;
          },
          unregister: function (e) {
            delete l[e];
          },
          get: function (e) {
            return (
              l[e] ||
              document.getElementById(e) ||
              document.getElementsByName(e)[0] ||
              document.getElementsByClassName(e)[0]
            );
          },
          setActiveLink: function (e) {
            return (u = e);
          },
          getActiveLink: function () {
            return u;
          },
          scrollTo: function (e, t) {
            var n = this.get(e);
            if (n) {
              var s = (t = r({}, t, { absolute: !1 })).containerId,
                l = t.container,
                u = void 0;
              (u = s
                ? document.getElementById(s)
                : l && l.nodeType
                ? l
                : document),
                (t.absolute = !0);
              var c = t.horizontal,
                f = i.default.scrollOffset(u, n, c) + (t.offset || 0);
              if (!t.smooth)
                return (
                  o.default.registered.begin &&
                    o.default.registered.begin(e, n),
                  u === document
                    ? t.horizontal
                      ? window.scrollTo(f, 0)
                      : window.scrollTo(0, f)
                    : (u.scrollTop = f),
                  void (
                    o.default.registered.end && o.default.registered.end(e, n)
                  )
                );
              a.default.animateTopScroll(f, t, e, n);
            } else console.warn("target Element not found");
          },
        };
      },
      3987: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = {
            defaultEasing: function (e) {
              return e < 0.5
                ? Math.pow(2 * e, 2) / 2
                : 1 - Math.pow(2 * (1 - e), 2) / 2;
            },
            linear: function (e) {
              return e;
            },
            easeInQuad: function (e) {
              return e * e;
            },
            easeOutQuad: function (e) {
              return e * (2 - e);
            },
            easeInOutQuad: function (e) {
              return e < 0.5 ? 2 * e * e : (4 - 2 * e) * e - 1;
            },
            easeInCubic: function (e) {
              return e * e * e;
            },
            easeOutCubic: function (e) {
              return --e * e * e + 1;
            },
            easeInOutCubic: function (e) {
              return e < 0.5
                ? 4 * e * e * e
                : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1;
            },
            easeInQuart: function (e) {
              return e * e * e * e;
            },
            easeOutQuart: function (e) {
              return 1 - --e * e * e * e;
            },
            easeInOutQuart: function (e) {
              return e < 0.5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e;
            },
            easeInQuint: function (e) {
              return e * e * e * e * e;
            },
            easeOutQuint: function (e) {
              return 1 + --e * e * e * e * e;
            },
            easeInOutQuint: function (e) {
              return e < 0.5
                ? 16 * e * e * e * e * e
                : 1 + 16 * --e * e * e * e * e;
            },
          });
      },
      5183: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var n = function (e, t) {
          for (var n = e.offsetTop, r = e.offsetParent; r && !t(r); )
            (n += r.offsetTop), (r = r.offsetParent);
          return { offsetTop: n, offsetParent: r };
        };
        t.default = {
          updateHash: function (e, t) {
            var n = 0 === e.indexOf("#") ? e.substring(1) : e,
              r = n ? "#" + n : "",
              i = window && window.location,
              a = r ? i.pathname + i.search + r : i.pathname + i.search;
            t
              ? history.pushState(history.state, "", a)
              : history.replaceState(history.state, "", a);
          },
          getHash: function () {
            return window.location.hash.replace(/^#/, "");
          },
          filterElementInContainer: function (e) {
            return function (t) {
              return e.contains
                ? e != t && e.contains(t)
                : !!(16 & e.compareDocumentPosition(t));
            };
          },
          scrollOffset: function (e, t, r) {
            if (r)
              return e === document
                ? t.getBoundingClientRect().left +
                    (window.scrollX || window.pageXOffset)
                : "static" !== getComputedStyle(e).position
                ? t.offsetLeft
                : t.offsetLeft - e.offsetLeft;
            if (e === document)
              return (
                t.getBoundingClientRect().top +
                (window.scrollY || window.pageYOffset)
              );
            if ("static" !== getComputedStyle(e).position) {
              if (t.offsetParent !== e) {
                var i = n(t, function (t) {
                    return t === e || t === document;
                  }),
                  a = i.offsetTop;
                if (i.offsetParent !== e)
                  throw new Error(
                    "Seems containerElement is not an ancestor of the Element"
                  );
                return a;
              }
              return t.offsetTop;
            }
            if (t.offsetParent === e.offsetParent)
              return t.offsetTop - e.offsetTop;
            var o = function (e) {
              return e === document;
            };
            return n(t, o).offsetTop - n(e, o).offsetTop;
          },
        };
      },
      8436: function (e, t, n) {
        "use strict";
        function r(e) {
          return (
            (r =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            r(e)
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PrevArrow = t.NextArrow = void 0);
        var i = s(n(2791)),
          a = s(n(1694)),
          o = n(8026);
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function l() {
          return (
            (l =
              Object.assign ||
              function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
            l.apply(this, arguments)
          );
        }
        function u(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function c(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? u(Object(n), !0).forEach(function (t) {
                  f(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : u(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function f(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function d(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function h(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function p(e, t, n) {
          return (
            t && h(e.prototype, t),
            n && h(e, n),
            Object.defineProperty(e, "prototype", { writable: !1 }),
            e
          );
        }
        function v(e, t) {
          if ("function" !== typeof t && null !== t)
            throw new TypeError(
              "Super expression must either be null or a function"
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            Object.defineProperty(e, "prototype", { writable: !1 }),
            t && m(e, t);
        }
        function m(e, t) {
          return (
            (m =
              Object.setPrototypeOf ||
              function (e, t) {
                return (e.__proto__ = t), e;
              }),
            m(e, t)
          );
        }
        function g(e) {
          var t = (function () {
            if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" === typeof Proxy) return !0;
            try {
              return (
                Boolean.prototype.valueOf.call(
                  Reflect.construct(Boolean, [], function () {})
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          })();
          return function () {
            var n,
              r = b(e);
            if (t) {
              var i = b(this).constructor;
              n = Reflect.construct(r, arguments, i);
            } else n = r.apply(this, arguments);
            return y(this, n);
          };
        }
        function y(e, t) {
          if (t && ("object" === r(t) || "function" === typeof t)) return t;
          if (void 0 !== t)
            throw new TypeError(
              "Derived constructors may only return object or undefined"
            );
          return (function (e) {
            if (void 0 === e)
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            return e;
          })(e);
        }
        function b(e) {
          return (
            (b = Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            b(e)
          );
        }
        var x = (function (e) {
          v(n, e);
          var t = g(n);
          function n() {
            return d(this, n), t.apply(this, arguments);
          }
          return (
            p(n, [
              {
                key: "clickHandler",
                value: function (e, t) {
                  t && t.preventDefault(), this.props.clickHandler(e, t);
                },
              },
              {
                key: "render",
                value: function () {
                  var e = { "slick-arrow": !0, "slick-prev": !0 },
                    t = this.clickHandler.bind(this, { message: "previous" });
                  !this.props.infinite &&
                    (0 === this.props.currentSlide ||
                      this.props.slideCount <= this.props.slidesToShow) &&
                    ((e["slick-disabled"] = !0), (t = null));
                  var n = {
                      key: "0",
                      "data-role": "none",
                      className: (0, a.default)(e),
                      style: { display: "block" },
                      onClick: t,
                    },
                    r = {
                      currentSlide: this.props.currentSlide,
                      slideCount: this.props.slideCount,
                    };
                  return this.props.prevArrow
                    ? i.default.cloneElement(
                        this.props.prevArrow,
                        c(c({}, n), r)
                      )
                    : i.default.createElement(
                        "button",
                        l({ key: "0", type: "button" }, n),
                        " ",
                        "Previous"
                      );
                },
              },
            ]),
            n
          );
        })(i.default.PureComponent);
        t.PrevArrow = x;
        var w = (function (e) {
          v(n, e);
          var t = g(n);
          function n() {
            return d(this, n), t.apply(this, arguments);
          }
          return (
            p(n, [
              {
                key: "clickHandler",
                value: function (e, t) {
                  t && t.preventDefault(), this.props.clickHandler(e, t);
                },
              },
              {
                key: "render",
                value: function () {
                  var e = { "slick-arrow": !0, "slick-next": !0 },
                    t = this.clickHandler.bind(this, { message: "next" });
                  (0, o.canGoNext)(this.props) ||
                    ((e["slick-disabled"] = !0), (t = null));
                  var n = {
                      key: "1",
                      "data-role": "none",
                      className: (0, a.default)(e),
                      style: { display: "block" },
                      onClick: t,
                    },
                    r = {
                      currentSlide: this.props.currentSlide,
                      slideCount: this.props.slideCount,
                    };
                  return this.props.nextArrow
                    ? i.default.cloneElement(
                        this.props.nextArrow,
                        c(c({}, n), r)
                      )
                    : i.default.createElement(
                        "button",
                        l({ key: "1", type: "button" }, n),
                        " ",
                        "Next"
                      );
                },
              },
            ]),
            n
          );
        })(i.default.PureComponent);
        t.NextArrow = w;
      },
      5484: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r,
          i = (r = n(2791)) && r.__esModule ? r : { default: r };
        var a = {
          accessibility: !0,
          adaptiveHeight: !1,
          afterChange: null,
          appendDots: function (e) {
            return i.default.createElement(
              "ul",
              { style: { display: "block" } },
              e
            );
          },
          arrows: !0,
          autoplay: !1,
          autoplaySpeed: 3e3,
          beforeChange: null,
          centerMode: !1,
          centerPadding: "50px",
          className: "",
          cssEase: "ease",
          customPaging: function (e) {
            return i.default.createElement("button", null, e + 1);
          },
          dots: !1,
          dotsClass: "slick-dots",
          draggable: !0,
          easing: "linear",
          edgeFriction: 0.35,
          fade: !1,
          focusOnSelect: !1,
          infinite: !0,
          initialSlide: 0,
          lazyLoad: null,
          nextArrow: null,
          onEdge: null,
          onInit: null,
          onLazyLoadError: null,
          onReInit: null,
          pauseOnDotsHover: !1,
          pauseOnFocus: !1,
          pauseOnHover: !0,
          prevArrow: null,
          responsive: null,
          rows: 1,
          rtl: !1,
          slide: "div",
          slidesPerRow: 1,
          slidesToScroll: 1,
          slidesToShow: 1,
          speed: 500,
          swipe: !0,
          swipeEvent: null,
          swipeToSlide: !1,
          touchMove: !0,
          touchThreshold: 5,
          useCSS: !0,
          useTransform: !0,
          variableWidth: !1,
          vertical: !1,
          waitForAnimate: !0,
        };
        t.default = a;
      },
      3800: function (e, t, n) {
        "use strict";
        function r(e) {
          return (
            (r =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            r(e)
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Dots = void 0);
        var i = s(n(2791)),
          a = s(n(1694)),
          o = n(8026);
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function l(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function u(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function c(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function f(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function d(e, t) {
          return (
            (d =
              Object.setPrototypeOf ||
              function (e, t) {
                return (e.__proto__ = t), e;
              }),
            d(e, t)
          );
        }
        function h(e) {
          var t = (function () {
            if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" === typeof Proxy) return !0;
            try {
              return (
                Boolean.prototype.valueOf.call(
                  Reflect.construct(Boolean, [], function () {})
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          })();
          return function () {
            var n,
              r = v(e);
            if (t) {
              var i = v(this).constructor;
              n = Reflect.construct(r, arguments, i);
            } else n = r.apply(this, arguments);
            return p(this, n);
          };
        }
        function p(e, t) {
          if (t && ("object" === r(t) || "function" === typeof t)) return t;
          if (void 0 !== t)
            throw new TypeError(
              "Derived constructors may only return object or undefined"
            );
          return (function (e) {
            if (void 0 === e)
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            return e;
          })(e);
        }
        function v(e) {
          return (
            (v = Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            v(e)
          );
        }
        var m = (function (e) {
          !(function (e, t) {
            if ("function" !== typeof t && null !== t)
              throw new TypeError(
                "Super expression must either be null or a function"
              );
            (e.prototype = Object.create(t && t.prototype, {
              constructor: { value: e, writable: !0, configurable: !0 },
            })),
              Object.defineProperty(e, "prototype", { writable: !1 }),
              t && d(e, t);
          })(p, e);
          var t,
            n,
            r,
            s = h(p);
          function p() {
            return c(this, p), s.apply(this, arguments);
          }
          return (
            (t = p),
            (n = [
              {
                key: "clickHandler",
                value: function (e, t) {
                  t.preventDefault(), this.props.clickHandler(e);
                },
              },
              {
                key: "render",
                value: function () {
                  for (
                    var e,
                      t = this.props,
                      n = t.onMouseEnter,
                      r = t.onMouseOver,
                      s = t.onMouseLeave,
                      c = t.infinite,
                      f = t.slidesToScroll,
                      d = t.slidesToShow,
                      h = t.slideCount,
                      p = t.currentSlide,
                      v = (e = {
                        slideCount: h,
                        slidesToScroll: f,
                        slidesToShow: d,
                        infinite: c,
                      }).infinite
                        ? Math.ceil(e.slideCount / e.slidesToScroll)
                        : Math.ceil(
                            (e.slideCount - e.slidesToShow) / e.slidesToScroll
                          ) + 1,
                      m = { onMouseEnter: n, onMouseOver: r, onMouseLeave: s },
                      g = [],
                      y = 0;
                    y < v;
                    y++
                  ) {
                    var b = (y + 1) * f - 1,
                      x = c ? b : (0, o.clamp)(b, 0, h - 1),
                      w = x - (f - 1),
                      _ = c ? w : (0, o.clamp)(w, 0, h - 1),
                      S = (0, a.default)({
                        "slick-active": c ? p >= _ && p <= x : p === _,
                      }),
                      M = {
                        message: "dots",
                        index: y,
                        slidesToScroll: f,
                        currentSlide: p,
                      },
                      E = this.clickHandler.bind(this, M);
                    g = g.concat(
                      i.default.createElement(
                        "li",
                        { key: y, className: S },
                        i.default.cloneElement(this.props.customPaging(y), {
                          onClick: E,
                        })
                      )
                    );
                  }
                  return i.default.cloneElement(
                    this.props.appendDots(g),
                    (function (e) {
                      for (var t = 1; t < arguments.length; t++) {
                        var n = null != arguments[t] ? arguments[t] : {};
                        t % 2
                          ? l(Object(n), !0).forEach(function (t) {
                              u(e, t, n[t]);
                            })
                          : Object.getOwnPropertyDescriptors
                          ? Object.defineProperties(
                              e,
                              Object.getOwnPropertyDescriptors(n)
                            )
                          : l(Object(n)).forEach(function (t) {
                              Object.defineProperty(
                                e,
                                t,
                                Object.getOwnPropertyDescriptor(n, t)
                              );
                            });
                      }
                      return e;
                    })({ className: this.props.dotsClass }, m)
                  );
                },
              },
            ]),
            n && f(t.prototype, n),
            r && f(t, r),
            Object.defineProperty(t, "prototype", { writable: !1 }),
            p
          );
        })(i.default.PureComponent);
        t.Dots = m;
      },
      5717: function (e, t, n) {
        "use strict";
        var r;
        t.Z = void 0;
        var i = ((r = n(3178)) && r.__esModule ? r : { default: r }).default;
        t.Z = i;
      },
      1382: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var n = {
          animating: !1,
          autoplaying: null,
          currentDirection: 0,
          currentLeft: null,
          currentSlide: 0,
          direction: 1,
          dragging: !1,
          edgeDragged: !1,
          initialized: !1,
          lazyLoadedList: [],
          listHeight: null,
          listWidth: null,
          scrolling: !1,
          slideCount: null,
          slideHeight: null,
          slideWidth: null,
          swipeLeft: null,
          swiped: !1,
          swiping: !1,
          touchObject: { startX: 0, startY: 0, curX: 0, curY: 0 },
          trackStyle: {},
          trackWidth: 0,
          targetSlide: 0,
        };
        t.default = n;
      },
      8293: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.InnerSlider = void 0);
        var r = d(n(2791)),
          i = d(n(1382)),
          a = d(n(5095)),
          o = d(n(1694)),
          s = n(8026),
          l = n(4931),
          u = n(3800),
          c = n(8436),
          f = d(n(474));
        function d(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function h(e) {
          return (
            (h =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            h(e)
          );
        }
        function p() {
          return (
            (p =
              Object.assign ||
              function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
            p.apply(this, arguments)
          );
        }
        function v(e, t) {
          if (null == e) return {};
          var n,
            r,
            i = (function (e, t) {
              if (null == e) return {};
              var n,
                r,
                i = {},
                a = Object.keys(e);
              for (r = 0; r < a.length; r++)
                (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
              return i;
            })(e, t);
          if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (r = 0; r < a.length; r++)
              (n = a[r]),
                t.indexOf(n) >= 0 ||
                  (Object.prototype.propertyIsEnumerable.call(e, n) &&
                    (i[n] = e[n]));
          }
          return i;
        }
        function m(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function g(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? m(Object(n), !0).forEach(function (t) {
                  M(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : m(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function y(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function b(e, t) {
          return (
            (b =
              Object.setPrototypeOf ||
              function (e, t) {
                return (e.__proto__ = t), e;
              }),
            b(e, t)
          );
        }
        function x(e) {
          var t = (function () {
            if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" === typeof Proxy) return !0;
            try {
              return (
                Boolean.prototype.valueOf.call(
                  Reflect.construct(Boolean, [], function () {})
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          })();
          return function () {
            var n,
              r = S(e);
            if (t) {
              var i = S(this).constructor;
              n = Reflect.construct(r, arguments, i);
            } else n = r.apply(this, arguments);
            return w(this, n);
          };
        }
        function w(e, t) {
          if (t && ("object" === h(t) || "function" === typeof t)) return t;
          if (void 0 !== t)
            throw new TypeError(
              "Derived constructors may only return object or undefined"
            );
          return _(e);
        }
        function _(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function S(e) {
          return (
            (S = Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            S(e)
          );
        }
        function M(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        var E = (function (e) {
          !(function (e, t) {
            if ("function" !== typeof t && null !== t)
              throw new TypeError(
                "Super expression must either be null or a function"
              );
            (e.prototype = Object.create(t && t.prototype, {
              constructor: { value: e, writable: !0, configurable: !0 },
            })),
              Object.defineProperty(e, "prototype", { writable: !1 }),
              t && b(e, t);
          })(w, e);
          var t,
            n,
            d,
            m = x(w);
          function w(e) {
            var t;
            !(function (e, t) {
              if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function");
            })(this, w),
              M(_((t = m.call(this, e))), "listRefHandler", function (e) {
                return (t.list = e);
              }),
              M(_(t), "trackRefHandler", function (e) {
                return (t.track = e);
              }),
              M(_(t), "adaptHeight", function () {
                if (t.props.adaptiveHeight && t.list) {
                  var e = t.list.querySelector(
                    '[data-index="'.concat(t.state.currentSlide, '"]')
                  );
                  t.list.style.height = (0, s.getHeight)(e) + "px";
                }
              }),
              M(_(t), "componentDidMount", function () {
                if ((t.props.onInit && t.props.onInit(), t.props.lazyLoad)) {
                  var e = (0, s.getOnDemandLazySlides)(
                    g(g({}, t.props), t.state)
                  );
                  e.length > 0 &&
                    (t.setState(function (t) {
                      return { lazyLoadedList: t.lazyLoadedList.concat(e) };
                    }),
                    t.props.onLazyLoad && t.props.onLazyLoad(e));
                }
                var n = g({ listRef: t.list, trackRef: t.track }, t.props);
                t.updateState(n, !0, function () {
                  t.adaptHeight(), t.props.autoplay && t.autoPlay("update");
                }),
                  "progressive" === t.props.lazyLoad &&
                    (t.lazyLoadTimer = setInterval(t.progressiveLazyLoad, 1e3)),
                  (t.ro = new f.default(function () {
                    t.state.animating
                      ? (t.onWindowResized(!1),
                        t.callbackTimers.push(
                          setTimeout(function () {
                            return t.onWindowResized();
                          }, t.props.speed)
                        ))
                      : t.onWindowResized();
                  })),
                  t.ro.observe(t.list),
                  document.querySelectorAll &&
                    Array.prototype.forEach.call(
                      document.querySelectorAll(".slick-slide"),
                      function (e) {
                        (e.onfocus = t.props.pauseOnFocus
                          ? t.onSlideFocus
                          : null),
                          (e.onblur = t.props.pauseOnFocus
                            ? t.onSlideBlur
                            : null);
                      }
                    ),
                  window.addEventListener
                    ? window.addEventListener("resize", t.onWindowResized)
                    : window.attachEvent("onresize", t.onWindowResized);
              }),
              M(_(t), "componentWillUnmount", function () {
                t.animationEndCallback && clearTimeout(t.animationEndCallback),
                  t.lazyLoadTimer && clearInterval(t.lazyLoadTimer),
                  t.callbackTimers.length &&
                    (t.callbackTimers.forEach(function (e) {
                      return clearTimeout(e);
                    }),
                    (t.callbackTimers = [])),
                  window.addEventListener
                    ? window.removeEventListener("resize", t.onWindowResized)
                    : window.detachEvent("onresize", t.onWindowResized),
                  t.autoplayTimer && clearInterval(t.autoplayTimer),
                  t.ro.disconnect();
              }),
              M(_(t), "componentDidUpdate", function (e) {
                if (
                  (t.checkImagesLoad(),
                  t.props.onReInit && t.props.onReInit(),
                  t.props.lazyLoad)
                ) {
                  var n = (0, s.getOnDemandLazySlides)(
                    g(g({}, t.props), t.state)
                  );
                  n.length > 0 &&
                    (t.setState(function (e) {
                      return { lazyLoadedList: e.lazyLoadedList.concat(n) };
                    }),
                    t.props.onLazyLoad && t.props.onLazyLoad(n));
                }
                t.adaptHeight();
                var i = g(
                    g({ listRef: t.list, trackRef: t.track }, t.props),
                    t.state
                  ),
                  a = t.didPropsChange(e);
                a &&
                  t.updateState(i, a, function () {
                    t.state.currentSlide >=
                      r.default.Children.count(t.props.children) &&
                      t.changeSlide({
                        message: "index",
                        index:
                          r.default.Children.count(t.props.children) -
                          t.props.slidesToShow,
                        currentSlide: t.state.currentSlide,
                      }),
                      t.props.autoplay
                        ? t.autoPlay("update")
                        : t.pause("paused");
                  });
              }),
              M(_(t), "onWindowResized", function (e) {
                t.debouncedResize && t.debouncedResize.cancel(),
                  (t.debouncedResize = (0, a.default)(function () {
                    return t.resizeWindow(e);
                  }, 50)),
                  t.debouncedResize();
              }),
              M(_(t), "resizeWindow", function () {
                var e =
                    !(arguments.length > 0 && void 0 !== arguments[0]) ||
                    arguments[0],
                  n = Boolean(t.track && t.track.node);
                if (n) {
                  var r = g(
                    g({ listRef: t.list, trackRef: t.track }, t.props),
                    t.state
                  );
                  t.updateState(r, e, function () {
                    t.props.autoplay ? t.autoPlay("update") : t.pause("paused");
                  }),
                    t.setState({ animating: !1 }),
                    clearTimeout(t.animationEndCallback),
                    delete t.animationEndCallback;
                }
              }),
              M(_(t), "updateState", function (e, n, i) {
                var a = (0, s.initializedState)(e);
                e = g(g(g({}, e), a), {}, { slideIndex: a.currentSlide });
                var o = (0, s.getTrackLeft)(e);
                e = g(g({}, e), {}, { left: o });
                var l = (0, s.getTrackCSS)(e);
                (n ||
                  r.default.Children.count(t.props.children) !==
                    r.default.Children.count(e.children)) &&
                  (a.trackStyle = l),
                  t.setState(a, i);
              }),
              M(_(t), "ssrInit", function () {
                if (t.props.variableWidth) {
                  var e = 0,
                    n = 0,
                    i = [],
                    a = (0, s.getPreClones)(
                      g(
                        g(g({}, t.props), t.state),
                        {},
                        { slideCount: t.props.children.length }
                      )
                    ),
                    o = (0, s.getPostClones)(
                      g(
                        g(g({}, t.props), t.state),
                        {},
                        { slideCount: t.props.children.length }
                      )
                    );
                  t.props.children.forEach(function (t) {
                    i.push(t.props.style.width), (e += t.props.style.width);
                  });
                  for (var l = 0; l < a; l++)
                    (n += i[i.length - 1 - l]), (e += i[i.length - 1 - l]);
                  for (var u = 0; u < o; u++) e += i[u];
                  for (var c = 0; c < t.state.currentSlide; c++) n += i[c];
                  var f = { width: e + "px", left: -n + "px" };
                  if (t.props.centerMode) {
                    var d = "".concat(i[t.state.currentSlide], "px");
                    f.left = "calc("
                      .concat(f.left, " + (100% - ")
                      .concat(d, ") / 2 ) ");
                  }
                  return { trackStyle: f };
                }
                var h = r.default.Children.count(t.props.children),
                  p = g(g(g({}, t.props), t.state), {}, { slideCount: h }),
                  v = (0, s.getPreClones)(p) + (0, s.getPostClones)(p) + h,
                  m = (100 / t.props.slidesToShow) * v,
                  y = 100 / v,
                  b =
                    (-y * ((0, s.getPreClones)(p) + t.state.currentSlide) * m) /
                    100;
                return (
                  t.props.centerMode && (b += (100 - (y * m) / 100) / 2),
                  {
                    slideWidth: y + "%",
                    trackStyle: { width: m + "%", left: b + "%" },
                  }
                );
              }),
              M(_(t), "checkImagesLoad", function () {
                var e =
                    (t.list &&
                      t.list.querySelectorAll &&
                      t.list.querySelectorAll(".slick-slide img")) ||
                    [],
                  n = e.length,
                  r = 0;
                Array.prototype.forEach.call(e, function (e) {
                  var i = function () {
                    return ++r && r >= n && t.onWindowResized();
                  };
                  if (e.onclick) {
                    var a = e.onclick;
                    e.onclick = function () {
                      a(), e.parentNode.focus();
                    };
                  } else
                    e.onclick = function () {
                      return e.parentNode.focus();
                    };
                  e.onload ||
                    (t.props.lazyLoad
                      ? (e.onload = function () {
                          t.adaptHeight(),
                            t.callbackTimers.push(
                              setTimeout(t.onWindowResized, t.props.speed)
                            );
                        })
                      : ((e.onload = i),
                        (e.onerror = function () {
                          i(),
                            t.props.onLazyLoadError &&
                              t.props.onLazyLoadError();
                        })));
                });
              }),
              M(_(t), "progressiveLazyLoad", function () {
                for (
                  var e = [],
                    n = g(g({}, t.props), t.state),
                    r = t.state.currentSlide;
                  r < t.state.slideCount + (0, s.getPostClones)(n);
                  r++
                )
                  if (t.state.lazyLoadedList.indexOf(r) < 0) {
                    e.push(r);
                    break;
                  }
                for (
                  var i = t.state.currentSlide - 1;
                  i >= -(0, s.getPreClones)(n);
                  i--
                )
                  if (t.state.lazyLoadedList.indexOf(i) < 0) {
                    e.push(i);
                    break;
                  }
                e.length > 0
                  ? (t.setState(function (t) {
                      return { lazyLoadedList: t.lazyLoadedList.concat(e) };
                    }),
                    t.props.onLazyLoad && t.props.onLazyLoad(e))
                  : t.lazyLoadTimer &&
                    (clearInterval(t.lazyLoadTimer), delete t.lazyLoadTimer);
              }),
              M(_(t), "slideHandler", function (e) {
                var n =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1],
                  r = t.props,
                  i = r.asNavFor,
                  a = r.beforeChange,
                  o = r.onLazyLoad,
                  l = r.speed,
                  u = r.afterChange,
                  c = t.state.currentSlide,
                  f = (0, s.slideHandler)(
                    g(
                      g(g({ index: e }, t.props), t.state),
                      {},
                      { trackRef: t.track, useCSS: t.props.useCSS && !n }
                    )
                  ),
                  d = f.state,
                  h = f.nextState;
                if (d) {
                  a && a(c, d.currentSlide);
                  var p = d.lazyLoadedList.filter(function (e) {
                    return t.state.lazyLoadedList.indexOf(e) < 0;
                  });
                  o && p.length > 0 && o(p),
                    !t.props.waitForAnimate &&
                      t.animationEndCallback &&
                      (clearTimeout(t.animationEndCallback),
                      u && u(c),
                      delete t.animationEndCallback),
                    t.setState(d, function () {
                      i &&
                        t.asNavForIndex !== e &&
                        ((t.asNavForIndex = e), i.innerSlider.slideHandler(e)),
                        h &&
                          (t.animationEndCallback = setTimeout(function () {
                            var e = h.animating,
                              n = v(h, ["animating"]);
                            t.setState(n, function () {
                              t.callbackTimers.push(
                                setTimeout(function () {
                                  return t.setState({ animating: e });
                                }, 10)
                              ),
                                u && u(d.currentSlide),
                                delete t.animationEndCallback;
                            });
                          }, l));
                    });
                }
              }),
              M(_(t), "changeSlide", function (e) {
                var n =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1],
                  r = g(g({}, t.props), t.state),
                  i = (0, s.changeSlide)(r, e);
                if (
                  (0 === i || i) &&
                  (!0 === n ? t.slideHandler(i, n) : t.slideHandler(i),
                  t.props.autoplay && t.autoPlay("update"),
                  t.props.focusOnSelect)
                ) {
                  var a = t.list.querySelectorAll(".slick-current");
                  a[0] && a[0].focus();
                }
              }),
              M(_(t), "clickHandler", function (e) {
                !1 === t.clickable && (e.stopPropagation(), e.preventDefault()),
                  (t.clickable = !0);
              }),
              M(_(t), "keyHandler", function (e) {
                var n = (0, s.keyHandler)(
                  e,
                  t.props.accessibility,
                  t.props.rtl
                );
                "" !== n && t.changeSlide({ message: n });
              }),
              M(_(t), "selectHandler", function (e) {
                t.changeSlide(e);
              }),
              M(_(t), "disableBodyScroll", function () {
                window.ontouchmove = function (e) {
                  (e = e || window.event).preventDefault && e.preventDefault(),
                    (e.returnValue = !1);
                };
              }),
              M(_(t), "enableBodyScroll", function () {
                window.ontouchmove = null;
              }),
              M(_(t), "swipeStart", function (e) {
                t.props.verticalSwiping && t.disableBodyScroll();
                var n = (0, s.swipeStart)(e, t.props.swipe, t.props.draggable);
                "" !== n && t.setState(n);
              }),
              M(_(t), "swipeMove", function (e) {
                var n = (0, s.swipeMove)(
                  e,
                  g(
                    g(g({}, t.props), t.state),
                    {},
                    {
                      trackRef: t.track,
                      listRef: t.list,
                      slideIndex: t.state.currentSlide,
                    }
                  )
                );
                n && (n.swiping && (t.clickable = !1), t.setState(n));
              }),
              M(_(t), "swipeEnd", function (e) {
                var n = (0, s.swipeEnd)(
                  e,
                  g(
                    g(g({}, t.props), t.state),
                    {},
                    {
                      trackRef: t.track,
                      listRef: t.list,
                      slideIndex: t.state.currentSlide,
                    }
                  )
                );
                if (n) {
                  var r = n.triggerSlideHandler;
                  delete n.triggerSlideHandler,
                    t.setState(n),
                    void 0 !== r &&
                      (t.slideHandler(r),
                      t.props.verticalSwiping && t.enableBodyScroll());
                }
              }),
              M(_(t), "touchEnd", function (e) {
                t.swipeEnd(e), (t.clickable = !0);
              }),
              M(_(t), "slickPrev", function () {
                t.callbackTimers.push(
                  setTimeout(function () {
                    return t.changeSlide({ message: "previous" });
                  }, 0)
                );
              }),
              M(_(t), "slickNext", function () {
                t.callbackTimers.push(
                  setTimeout(function () {
                    return t.changeSlide({ message: "next" });
                  }, 0)
                );
              }),
              M(_(t), "slickGoTo", function (e) {
                var n =
                  arguments.length > 1 &&
                  void 0 !== arguments[1] &&
                  arguments[1];
                if (((e = Number(e)), isNaN(e))) return "";
                t.callbackTimers.push(
                  setTimeout(function () {
                    return t.changeSlide(
                      {
                        message: "index",
                        index: e,
                        currentSlide: t.state.currentSlide,
                      },
                      n
                    );
                  }, 0)
                );
              }),
              M(_(t), "play", function () {
                var e;
                if (t.props.rtl)
                  e = t.state.currentSlide - t.props.slidesToScroll;
                else {
                  if (!(0, s.canGoNext)(g(g({}, t.props), t.state))) return !1;
                  e = t.state.currentSlide + t.props.slidesToScroll;
                }
                t.slideHandler(e);
              }),
              M(_(t), "autoPlay", function (e) {
                t.autoplayTimer && clearInterval(t.autoplayTimer);
                var n = t.state.autoplaying;
                if ("update" === e) {
                  if ("hovered" === n || "focused" === n || "paused" === n)
                    return;
                } else if ("leave" === e) {
                  if ("paused" === n || "focused" === n) return;
                } else if ("blur" === e && ("paused" === n || "hovered" === n))
                  return;
                (t.autoplayTimer = setInterval(
                  t.play,
                  t.props.autoplaySpeed + 50
                )),
                  t.setState({ autoplaying: "playing" });
              }),
              M(_(t), "pause", function (e) {
                t.autoplayTimer &&
                  (clearInterval(t.autoplayTimer), (t.autoplayTimer = null));
                var n = t.state.autoplaying;
                "paused" === e
                  ? t.setState({ autoplaying: "paused" })
                  : "focused" === e
                  ? ("hovered" !== n && "playing" !== n) ||
                    t.setState({ autoplaying: "focused" })
                  : "playing" === n && t.setState({ autoplaying: "hovered" });
              }),
              M(_(t), "onDotsOver", function () {
                return t.props.autoplay && t.pause("hovered");
              }),
              M(_(t), "onDotsLeave", function () {
                return (
                  t.props.autoplay &&
                  "hovered" === t.state.autoplaying &&
                  t.autoPlay("leave")
                );
              }),
              M(_(t), "onTrackOver", function () {
                return t.props.autoplay && t.pause("hovered");
              }),
              M(_(t), "onTrackLeave", function () {
                return (
                  t.props.autoplay &&
                  "hovered" === t.state.autoplaying &&
                  t.autoPlay("leave")
                );
              }),
              M(_(t), "onSlideFocus", function () {
                return t.props.autoplay && t.pause("focused");
              }),
              M(_(t), "onSlideBlur", function () {
                return (
                  t.props.autoplay &&
                  "focused" === t.state.autoplaying &&
                  t.autoPlay("blur")
                );
              }),
              M(_(t), "render", function () {
                var e,
                  n,
                  i,
                  a = (0, o.default)("slick-slider", t.props.className, {
                    "slick-vertical": t.props.vertical,
                    "slick-initialized": !0,
                  }),
                  f = g(g({}, t.props), t.state),
                  d = (0, s.extractObject)(f, [
                    "fade",
                    "cssEase",
                    "speed",
                    "infinite",
                    "centerMode",
                    "focusOnSelect",
                    "currentSlide",
                    "lazyLoad",
                    "lazyLoadedList",
                    "rtl",
                    "slideWidth",
                    "slideHeight",
                    "listHeight",
                    "vertical",
                    "slidesToShow",
                    "slidesToScroll",
                    "slideCount",
                    "trackStyle",
                    "variableWidth",
                    "unslick",
                    "centerPadding",
                    "targetSlide",
                    "useCSS",
                  ]),
                  h = t.props.pauseOnHover;
                if (
                  ((d = g(
                    g({}, d),
                    {},
                    {
                      onMouseEnter: h ? t.onTrackOver : null,
                      onMouseLeave: h ? t.onTrackLeave : null,
                      onMouseOver: h ? t.onTrackOver : null,
                      focusOnSelect:
                        t.props.focusOnSelect && t.clickable
                          ? t.selectHandler
                          : null,
                    }
                  )),
                  !0 === t.props.dots &&
                    t.state.slideCount >= t.props.slidesToShow)
                ) {
                  var v = (0, s.extractObject)(f, [
                      "dotsClass",
                      "slideCount",
                      "slidesToShow",
                      "currentSlide",
                      "slidesToScroll",
                      "clickHandler",
                      "children",
                      "customPaging",
                      "infinite",
                      "appendDots",
                    ]),
                    m = t.props.pauseOnDotsHover;
                  (v = g(
                    g({}, v),
                    {},
                    {
                      clickHandler: t.changeSlide,
                      onMouseEnter: m ? t.onDotsLeave : null,
                      onMouseOver: m ? t.onDotsOver : null,
                      onMouseLeave: m ? t.onDotsLeave : null,
                    }
                  )),
                    (e = r.default.createElement(u.Dots, v));
                }
                var y = (0, s.extractObject)(f, [
                  "infinite",
                  "centerMode",
                  "currentSlide",
                  "slideCount",
                  "slidesToShow",
                  "prevArrow",
                  "nextArrow",
                ]);
                (y.clickHandler = t.changeSlide),
                  t.props.arrows &&
                    ((n = r.default.createElement(c.PrevArrow, y)),
                    (i = r.default.createElement(c.NextArrow, y)));
                var b = null;
                t.props.vertical && (b = { height: t.state.listHeight });
                var x = null;
                !1 === t.props.vertical
                  ? !0 === t.props.centerMode &&
                    (x = { padding: "0px " + t.props.centerPadding })
                  : !0 === t.props.centerMode &&
                    (x = { padding: t.props.centerPadding + " 0px" });
                var w = g(g({}, b), x),
                  _ = t.props.touchMove,
                  S = {
                    className: "slick-list",
                    style: w,
                    onClick: t.clickHandler,
                    onMouseDown: _ ? t.swipeStart : null,
                    onMouseMove: t.state.dragging && _ ? t.swipeMove : null,
                    onMouseUp: _ ? t.swipeEnd : null,
                    onMouseLeave: t.state.dragging && _ ? t.swipeEnd : null,
                    onTouchStart: _ ? t.swipeStart : null,
                    onTouchMove: t.state.dragging && _ ? t.swipeMove : null,
                    onTouchEnd: _ ? t.touchEnd : null,
                    onTouchCancel: t.state.dragging && _ ? t.swipeEnd : null,
                    onKeyDown: t.props.accessibility ? t.keyHandler : null,
                  },
                  M = { className: a, dir: "ltr", style: t.props.style };
                return (
                  t.props.unslick &&
                    ((S = { className: "slick-list" }), (M = { className: a })),
                  r.default.createElement(
                    "div",
                    M,
                    t.props.unslick ? "" : n,
                    r.default.createElement(
                      "div",
                      p({ ref: t.listRefHandler }, S),
                      r.default.createElement(
                        l.Track,
                        p({ ref: t.trackRefHandler }, d),
                        t.props.children
                      )
                    ),
                    t.props.unslick ? "" : i,
                    t.props.unslick ? "" : e
                  )
                );
              }),
              (t.list = null),
              (t.track = null),
              (t.state = g(
                g({}, i.default),
                {},
                {
                  currentSlide: t.props.initialSlide,
                  slideCount: r.default.Children.count(t.props.children),
                }
              )),
              (t.callbackTimers = []),
              (t.clickable = !0),
              (t.debouncedResize = null);
            var n = t.ssrInit();
            return (t.state = g(g({}, t.state), n)), t;
          }
          return (
            (t = w),
            (n = [
              {
                key: "didPropsChange",
                value: function (e) {
                  for (
                    var t = !1, n = 0, i = Object.keys(this.props);
                    n < i.length;
                    n++
                  ) {
                    var a = i[n];
                    if (!e.hasOwnProperty(a)) {
                      t = !0;
                      break;
                    }
                    if (
                      "object" !== h(e[a]) &&
                      "function" !== typeof e[a] &&
                      e[a] !== this.props[a]
                    ) {
                      t = !0;
                      break;
                    }
                  }
                  return (
                    t ||
                    r.default.Children.count(this.props.children) !==
                      r.default.Children.count(e.children)
                  );
                },
              },
            ]) && y(t.prototype, n),
            d && y(t, d),
            Object.defineProperty(t, "prototype", { writable: !1 }),
            w
          );
        })(r.default.Component);
        t.InnerSlider = E;
      },
      3178: function (e, t, n) {
        "use strict";
        function r(e) {
          return (
            (r =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            r(e)
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = u(n(2791)),
          a = n(8293),
          o = u(n(5477)),
          s = u(n(5484)),
          l = n(8026);
        function u(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function c() {
          return (
            (c =
              Object.assign ||
              function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
            c.apply(this, arguments)
          );
        }
        function f(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function d(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? f(Object(n), !0).forEach(function (t) {
                  b(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : f(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function h(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function p(e, t) {
          return (
            (p =
              Object.setPrototypeOf ||
              function (e, t) {
                return (e.__proto__ = t), e;
              }),
            p(e, t)
          );
        }
        function v(e) {
          var t = (function () {
            if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" === typeof Proxy) return !0;
            try {
              return (
                Boolean.prototype.valueOf.call(
                  Reflect.construct(Boolean, [], function () {})
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          })();
          return function () {
            var n,
              r = y(e);
            if (t) {
              var i = y(this).constructor;
              n = Reflect.construct(r, arguments, i);
            } else n = r.apply(this, arguments);
            return m(this, n);
          };
        }
        function m(e, t) {
          if (t && ("object" === r(t) || "function" === typeof t)) return t;
          if (void 0 !== t)
            throw new TypeError(
              "Derived constructors may only return object or undefined"
            );
          return g(e);
        }
        function g(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function y(e) {
          return (
            (y = Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            y(e)
          );
        }
        function b(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        var x = (0, l.canUseDOM)() && n(8153),
          w = (function (e) {
            !(function (e, t) {
              if ("function" !== typeof t && null !== t)
                throw new TypeError(
                  "Super expression must either be null or a function"
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: { value: e, writable: !0, configurable: !0 },
              })),
                Object.defineProperty(e, "prototype", { writable: !1 }),
                t && p(e, t);
            })(f, e);
            var t,
              n,
              r,
              u = v(f);
            function f(e) {
              var t;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function");
                })(this, f),
                b(
                  g((t = u.call(this, e))),
                  "innerSliderRefHandler",
                  function (e) {
                    return (t.innerSlider = e);
                  }
                ),
                b(g(t), "slickPrev", function () {
                  return t.innerSlider.slickPrev();
                }),
                b(g(t), "slickNext", function () {
                  return t.innerSlider.slickNext();
                }),
                b(g(t), "slickGoTo", function (e) {
                  var n =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  return t.innerSlider.slickGoTo(e, n);
                }),
                b(g(t), "slickPause", function () {
                  return t.innerSlider.pause("paused");
                }),
                b(g(t), "slickPlay", function () {
                  return t.innerSlider.autoPlay("play");
                }),
                (t.state = { breakpoint: null }),
                (t._responsiveMediaHandlers = []),
                t
              );
            }
            return (
              (t = f),
              (n = [
                {
                  key: "media",
                  value: function (e, t) {
                    x.register(e, t),
                      this._responsiveMediaHandlers.push({
                        query: e,
                        handler: t,
                      });
                  },
                },
                {
                  key: "componentDidMount",
                  value: function () {
                    var e = this;
                    if (this.props.responsive) {
                      var t = this.props.responsive.map(function (e) {
                        return e.breakpoint;
                      });
                      t.sort(function (e, t) {
                        return e - t;
                      }),
                        t.forEach(function (n, r) {
                          var i;
                          (i =
                            0 === r
                              ? (0, o.default)({ minWidth: 0, maxWidth: n })
                              : (0, o.default)({
                                  minWidth: t[r - 1] + 1,
                                  maxWidth: n,
                                })),
                            (0, l.canUseDOM)() &&
                              e.media(i, function () {
                                e.setState({ breakpoint: n });
                              });
                        });
                      var n = (0, o.default)({ minWidth: t.slice(-1)[0] });
                      (0, l.canUseDOM)() &&
                        this.media(n, function () {
                          e.setState({ breakpoint: null });
                        });
                    }
                  },
                },
                {
                  key: "componentWillUnmount",
                  value: function () {
                    this._responsiveMediaHandlers.forEach(function (e) {
                      x.unregister(e.query, e.handler);
                    });
                  },
                },
                {
                  key: "render",
                  value: function () {
                    var e,
                      t,
                      n = this;
                    (e = this.state.breakpoint
                      ? "unslick" ===
                        (t = this.props.responsive.filter(function (e) {
                          return e.breakpoint === n.state.breakpoint;
                        }))[0].settings
                        ? "unslick"
                        : d(d(d({}, s.default), this.props), t[0].settings)
                      : d(d({}, s.default), this.props)).centerMode &&
                      (e.slidesToScroll, (e.slidesToScroll = 1)),
                      e.fade &&
                        (e.slidesToShow,
                        e.slidesToScroll,
                        (e.slidesToShow = 1),
                        (e.slidesToScroll = 1));
                    var r = i.default.Children.toArray(this.props.children);
                    (r = r.filter(function (e) {
                      return "string" === typeof e ? !!e.trim() : !!e;
                    })),
                      e.variableWidth &&
                        (e.rows > 1 || e.slidesPerRow > 1) &&
                        (console.warn(
                          "variableWidth is not supported in case of rows > 1 or slidesPerRow > 1"
                        ),
                        (e.variableWidth = !1));
                    for (
                      var o = [], l = null, u = 0;
                      u < r.length;
                      u += e.rows * e.slidesPerRow
                    ) {
                      for (
                        var f = [], h = u;
                        h < u + e.rows * e.slidesPerRow;
                        h += e.slidesPerRow
                      ) {
                        for (
                          var p = [], v = h;
                          v < h + e.slidesPerRow &&
                          (e.variableWidth &&
                            r[v].props.style &&
                            (l = r[v].props.style.width),
                          !(v >= r.length));
                          v += 1
                        )
                          p.push(
                            i.default.cloneElement(r[v], {
                              key: 100 * u + 10 * h + v,
                              tabIndex: -1,
                              style: {
                                width: "".concat(100 / e.slidesPerRow, "%"),
                                display: "inline-block",
                              },
                            })
                          );
                        f.push(
                          i.default.createElement("div", { key: 10 * u + h }, p)
                        );
                      }
                      e.variableWidth
                        ? o.push(
                            i.default.createElement(
                              "div",
                              { key: u, style: { width: l } },
                              f
                            )
                          )
                        : o.push(i.default.createElement("div", { key: u }, f));
                    }
                    if ("unslick" === e) {
                      var m = "regular slider " + (this.props.className || "");
                      return i.default.createElement(
                        "div",
                        { className: m },
                        r
                      );
                    }
                    return (
                      o.length <= e.slidesToShow && (e.unslick = !0),
                      i.default.createElement(
                        a.InnerSlider,
                        c(
                          {
                            style: this.props.style,
                            ref: this.innerSliderRefHandler,
                          },
                          e
                        ),
                        o
                      )
                    );
                  },
                },
              ]) && h(t.prototype, n),
              r && h(t, r),
              Object.defineProperty(t, "prototype", { writable: !1 }),
              f
            );
          })(i.default.Component);
        t.default = w;
      },
      4931: function (e, t, n) {
        "use strict";
        function r(e) {
          return (
            (r =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            r(e)
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Track = void 0);
        var i = s(n(2791)),
          a = s(n(1694)),
          o = n(8026);
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function l() {
          return (
            (l =
              Object.assign ||
              function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
            l.apply(this, arguments)
          );
        }
        function u(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function c(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function f(e, t) {
          return (
            (f =
              Object.setPrototypeOf ||
              function (e, t) {
                return (e.__proto__ = t), e;
              }),
            f(e, t)
          );
        }
        function d(e) {
          var t = (function () {
            if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" === typeof Proxy) return !0;
            try {
              return (
                Boolean.prototype.valueOf.call(
                  Reflect.construct(Boolean, [], function () {})
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          })();
          return function () {
            var n,
              r = v(e);
            if (t) {
              var i = v(this).constructor;
              n = Reflect.construct(r, arguments, i);
            } else n = r.apply(this, arguments);
            return h(this, n);
          };
        }
        function h(e, t) {
          if (t && ("object" === r(t) || "function" === typeof t)) return t;
          if (void 0 !== t)
            throw new TypeError(
              "Derived constructors may only return object or undefined"
            );
          return p(e);
        }
        function p(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function v(e) {
          return (
            (v = Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            v(e)
          );
        }
        function m(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function g(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? m(Object(n), !0).forEach(function (t) {
                  y(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : m(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function y(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        var b = function (e) {
            var t, n, r, i, a;
            return (
              (r =
                (a = e.rtl ? e.slideCount - 1 - e.index : e.index) < 0 ||
                a >= e.slideCount),
              e.centerMode
                ? ((i = Math.floor(e.slidesToShow / 2)),
                  (n = (a - e.currentSlide) % e.slideCount === 0),
                  a > e.currentSlide - i - 1 &&
                    a <= e.currentSlide + i &&
                    (t = !0))
                : (t =
                    e.currentSlide <= a && a < e.currentSlide + e.slidesToShow),
              {
                "slick-slide": !0,
                "slick-active": t,
                "slick-center": n,
                "slick-cloned": r,
                "slick-current":
                  a ===
                  (e.targetSlide < 0
                    ? e.targetSlide + e.slideCount
                    : e.targetSlide >= e.slideCount
                    ? e.targetSlide - e.slideCount
                    : e.targetSlide),
              }
            );
          },
          x = function (e, t) {
            return e.key || t;
          },
          w = function (e) {
            var t,
              n = [],
              r = [],
              s = [],
              l = i.default.Children.count(e.children),
              u = (0, o.lazyStartIndex)(e),
              c = (0, o.lazyEndIndex)(e);
            return (
              i.default.Children.forEach(e.children, function (f, d) {
                var h,
                  p = {
                    message: "children",
                    index: d,
                    slidesToScroll: e.slidesToScroll,
                    currentSlide: e.currentSlide,
                  };
                h =
                  !e.lazyLoad ||
                  (e.lazyLoad && e.lazyLoadedList.indexOf(d) >= 0)
                    ? f
                    : i.default.createElement("div", null);
                var v = (function (e) {
                    var t = {};
                    return (
                      (void 0 !== e.variableWidth && !1 !== e.variableWidth) ||
                        (t.width = e.slideWidth),
                      e.fade &&
                        ((t.position = "relative"),
                        e.vertical
                          ? (t.top = -e.index * parseInt(e.slideHeight))
                          : (t.left = -e.index * parseInt(e.slideWidth)),
                        (t.opacity = e.currentSlide === e.index ? 1 : 0),
                        e.useCSS &&
                          (t.transition =
                            "opacity " +
                            e.speed +
                            "ms " +
                            e.cssEase +
                            ", visibility " +
                            e.speed +
                            "ms " +
                            e.cssEase)),
                      t
                    );
                  })(g(g({}, e), {}, { index: d })),
                  m = h.props.className || "",
                  y = b(g(g({}, e), {}, { index: d }));
                if (
                  (n.push(
                    i.default.cloneElement(h, {
                      key: "original" + x(h, d),
                      "data-index": d,
                      className: (0, a.default)(y, m),
                      tabIndex: "-1",
                      "aria-hidden": !y["slick-active"],
                      style: g(g({ outline: "none" }, h.props.style || {}), v),
                      onClick: function (t) {
                        h.props && h.props.onClick && h.props.onClick(t),
                          e.focusOnSelect && e.focusOnSelect(p);
                      },
                    })
                  ),
                  e.infinite && !1 === e.fade)
                ) {
                  var w = l - d;
                  w <= (0, o.getPreClones)(e) &&
                    l !== e.slidesToShow &&
                    ((t = -w) >= u && (h = f),
                    (y = b(g(g({}, e), {}, { index: t }))),
                    r.push(
                      i.default.cloneElement(h, {
                        key: "precloned" + x(h, t),
                        "data-index": t,
                        tabIndex: "-1",
                        className: (0, a.default)(y, m),
                        "aria-hidden": !y["slick-active"],
                        style: g(g({}, h.props.style || {}), v),
                        onClick: function (t) {
                          h.props && h.props.onClick && h.props.onClick(t),
                            e.focusOnSelect && e.focusOnSelect(p);
                        },
                      })
                    )),
                    l !== e.slidesToShow &&
                      ((t = l + d) < c && (h = f),
                      (y = b(g(g({}, e), {}, { index: t }))),
                      s.push(
                        i.default.cloneElement(h, {
                          key: "postcloned" + x(h, t),
                          "data-index": t,
                          tabIndex: "-1",
                          className: (0, a.default)(y, m),
                          "aria-hidden": !y["slick-active"],
                          style: g(g({}, h.props.style || {}), v),
                          onClick: function (t) {
                            h.props && h.props.onClick && h.props.onClick(t),
                              e.focusOnSelect && e.focusOnSelect(p);
                          },
                        })
                      ));
                }
              }),
              e.rtl ? r.concat(n, s).reverse() : r.concat(n, s)
            );
          },
          _ = (function (e) {
            !(function (e, t) {
              if ("function" !== typeof t && null !== t)
                throw new TypeError(
                  "Super expression must either be null or a function"
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: { value: e, writable: !0, configurable: !0 },
              })),
                Object.defineProperty(e, "prototype", { writable: !1 }),
                t && f(e, t);
            })(o, e);
            var t,
              n,
              r,
              a = d(o);
            function o() {
              var e;
              u(this, o);
              for (
                var t = arguments.length, n = new Array(t), r = 0;
                r < t;
                r++
              )
                n[r] = arguments[r];
              return (
                y(p((e = a.call.apply(a, [this].concat(n)))), "node", null),
                y(p(e), "handleRef", function (t) {
                  e.node = t;
                }),
                e
              );
            }
            return (
              (t = o),
              (n = [
                {
                  key: "render",
                  value: function () {
                    var e = w(this.props),
                      t = this.props,
                      n = {
                        onMouseEnter: t.onMouseEnter,
                        onMouseOver: t.onMouseOver,
                        onMouseLeave: t.onMouseLeave,
                      };
                    return i.default.createElement(
                      "div",
                      l(
                        {
                          ref: this.handleRef,
                          className: "slick-track",
                          style: this.props.trackStyle,
                        },
                        n
                      ),
                      e
                    );
                  },
                },
              ]) && c(t.prototype, n),
              r && c(t, r),
              Object.defineProperty(t, "prototype", { writable: !1 }),
              o
            );
          })(i.default.PureComponent);
        t.Track = _;
      },
      8026: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.checkSpecKeys =
            t.checkNavigable =
            t.changeSlide =
            t.canUseDOM =
            t.canGoNext =
              void 0),
          (t.clamp = l),
          (t.swipeStart =
            t.swipeMove =
            t.swipeEnd =
            t.slidesOnRight =
            t.slidesOnLeft =
            t.slideHandler =
            t.siblingDirection =
            t.safePreventDefault =
            t.lazyStartIndex =
            t.lazySlidesOnRight =
            t.lazySlidesOnLeft =
            t.lazyEndIndex =
            t.keyHandler =
            t.initializedState =
            t.getWidth =
            t.getTrackLeft =
            t.getTrackCSS =
            t.getTrackAnimateCSS =
            t.getTotalSlides =
            t.getSwipeDirection =
            t.getSlideCount =
            t.getRequiredLazySlides =
            t.getPreClones =
            t.getPostClones =
            t.getOnDemandLazySlides =
            t.getNavigableIndexes =
            t.getHeight =
            t.extractObject =
              void 0);
        var r,
          i = (r = n(2791)) && r.__esModule ? r : { default: r };
        function a(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function o(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? a(Object(n), !0).forEach(function (t) {
                  s(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : a(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function s(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function l(e, t, n) {
          return Math.max(t, Math.min(e, n));
        }
        var u = function (e) {
          ["onTouchStart", "onTouchMove", "onWheel"].includes(e._reactName) ||
            e.preventDefault();
        };
        t.safePreventDefault = u;
        var c = function (e) {
          for (var t = [], n = f(e), r = d(e), i = n; i < r; i++)
            e.lazyLoadedList.indexOf(i) < 0 && t.push(i);
          return t;
        };
        t.getOnDemandLazySlides = c;
        t.getRequiredLazySlides = function (e) {
          for (var t = [], n = f(e), r = d(e), i = n; i < r; i++) t.push(i);
          return t;
        };
        var f = function (e) {
          return e.currentSlide - h(e);
        };
        t.lazyStartIndex = f;
        var d = function (e) {
          return e.currentSlide + p(e);
        };
        t.lazyEndIndex = d;
        var h = function (e) {
          return e.centerMode
            ? Math.floor(e.slidesToShow / 2) +
                (parseInt(e.centerPadding) > 0 ? 1 : 0)
            : 0;
        };
        t.lazySlidesOnLeft = h;
        var p = function (e) {
          return e.centerMode
            ? Math.floor((e.slidesToShow - 1) / 2) +
                1 +
                (parseInt(e.centerPadding) > 0 ? 1 : 0)
            : e.slidesToShow;
        };
        t.lazySlidesOnRight = p;
        var v = function (e) {
          return (e && e.offsetWidth) || 0;
        };
        t.getWidth = v;
        var m = function (e) {
          return (e && e.offsetHeight) || 0;
        };
        t.getHeight = m;
        var g = function (e) {
          var t,
            n,
            r,
            i,
            a = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          return (
            (t = e.startX - e.curX),
            (n = e.startY - e.curY),
            (r = Math.atan2(n, t)),
            (i = Math.round((180 * r) / Math.PI)) < 0 &&
              (i = 360 - Math.abs(i)),
            (i <= 45 && i >= 0) || (i <= 360 && i >= 315)
              ? "left"
              : i >= 135 && i <= 225
              ? "right"
              : !0 === a
              ? i >= 35 && i <= 135
                ? "up"
                : "down"
              : "vertical"
          );
        };
        t.getSwipeDirection = g;
        var y = function (e) {
          var t = !0;
          return (
            e.infinite ||
              (((e.centerMode && e.currentSlide >= e.slideCount - 1) ||
                e.slideCount <= e.slidesToShow ||
                e.currentSlide >= e.slideCount - e.slidesToShow) &&
                (t = !1)),
            t
          );
        };
        t.canGoNext = y;
        t.extractObject = function (e, t) {
          var n = {};
          return (
            t.forEach(function (t) {
              return (n[t] = e[t]);
            }),
            n
          );
        };
        t.initializedState = function (e) {
          var t,
            n = i.default.Children.count(e.children),
            r = e.listRef,
            a = Math.ceil(v(r)),
            s = e.trackRef && e.trackRef.node,
            l = Math.ceil(v(s));
          if (e.vertical) t = a;
          else {
            var u = e.centerMode && 2 * parseInt(e.centerPadding);
            "string" === typeof e.centerPadding &&
              "%" === e.centerPadding.slice(-1) &&
              (u *= a / 100),
              (t = Math.ceil((a - u) / e.slidesToShow));
          }
          var f = r && m(r.querySelector('[data-index="0"]')),
            d = f * e.slidesToShow,
            h = void 0 === e.currentSlide ? e.initialSlide : e.currentSlide;
          e.rtl && void 0 === e.currentSlide && (h = n - 1 - e.initialSlide);
          var p = e.lazyLoadedList || [],
            g = c(o(o({}, e), {}, { currentSlide: h, lazyLoadedList: p })),
            y = {
              slideCount: n,
              slideWidth: t,
              listWidth: a,
              trackWidth: l,
              currentSlide: h,
              slideHeight: f,
              listHeight: d,
              lazyLoadedList: (p = p.concat(g)),
            };
          return (
            null === e.autoplaying && e.autoplay && (y.autoplaying = "playing"),
            y
          );
        };
        t.slideHandler = function (e) {
          var t = e.waitForAnimate,
            n = e.animating,
            r = e.fade,
            i = e.infinite,
            a = e.index,
            s = e.slideCount,
            u = e.lazyLoad,
            f = e.currentSlide,
            d = e.centerMode,
            h = e.slidesToScroll,
            p = e.slidesToShow,
            v = e.useCSS,
            m = e.lazyLoadedList;
          if (t && n) return {};
          var g,
            b,
            x,
            w = a,
            _ = {},
            k = {},
            T = i ? a : l(a, 0, s - 1);
          if (r) {
            if (!i && (a < 0 || a >= s)) return {};
            a < 0 ? (w = a + s) : a >= s && (w = a - s),
              u && m.indexOf(w) < 0 && (m = m.concat(w)),
              (_ = {
                animating: !0,
                currentSlide: w,
                lazyLoadedList: m,
                targetSlide: w,
              }),
              (k = { animating: !1, targetSlide: w });
          } else
            (g = w),
              w < 0
                ? ((g = w + s), i ? s % h !== 0 && (g = s - (s % h)) : (g = 0))
                : !y(e) && w > f
                ? (w = g = f)
                : d && w >= s
                ? ((w = i ? s : s - 1), (g = i ? 0 : s - 1))
                : w >= s &&
                  ((g = w - s), i ? s % h !== 0 && (g = 0) : (g = s - p)),
              !i && w + p >= s && (g = s - p),
              (b = E(o(o({}, e), {}, { slideIndex: w }))),
              (x = E(o(o({}, e), {}, { slideIndex: g }))),
              i || (b === x && (w = g), (b = x)),
              u && (m = m.concat(c(o(o({}, e), {}, { currentSlide: w })))),
              v
                ? ((_ = {
                    animating: !0,
                    currentSlide: g,
                    trackStyle: M(o(o({}, e), {}, { left: b })),
                    lazyLoadedList: m,
                    targetSlide: T,
                  }),
                  (k = {
                    animating: !1,
                    currentSlide: g,
                    trackStyle: S(o(o({}, e), {}, { left: x })),
                    swipeLeft: null,
                    targetSlide: T,
                  }))
                : (_ = {
                    currentSlide: g,
                    trackStyle: S(o(o({}, e), {}, { left: x })),
                    lazyLoadedList: m,
                    targetSlide: T,
                  });
          return { state: _, nextState: k };
        };
        t.changeSlide = function (e, t) {
          var n,
            r,
            i,
            a,
            s = e.slidesToScroll,
            l = e.slidesToShow,
            u = e.slideCount,
            c = e.currentSlide,
            f = e.targetSlide,
            d = e.lazyLoad,
            h = e.infinite;
          if (((n = u % s !== 0 ? 0 : (u - c) % s), "previous" === t.message))
            (a = c - (i = 0 === n ? s : l - n)),
              d && !h && (a = -1 === (r = c - i) ? u - 1 : r),
              h || (a = f - s);
          else if ("next" === t.message)
            (a = c + (i = 0 === n ? s : n)),
              d && !h && (a = ((c + s) % u) + n),
              h || (a = f + s);
          else if ("dots" === t.message) a = t.index * t.slidesToScroll;
          else if ("children" === t.message) {
            if (((a = t.index), h)) {
              var p = A(o(o({}, e), {}, { targetSlide: a }));
              a > t.currentSlide && "left" === p
                ? (a -= u)
                : a < t.currentSlide && "right" === p && (a += u);
            }
          } else "index" === t.message && (a = Number(t.index));
          return a;
        };
        t.keyHandler = function (e, t, n) {
          return e.target.tagName.match("TEXTAREA|INPUT|SELECT") || !t
            ? ""
            : 37 === e.keyCode
            ? n
              ? "next"
              : "previous"
            : 39 === e.keyCode
            ? n
              ? "previous"
              : "next"
            : "";
        };
        t.swipeStart = function (e, t, n) {
          return (
            "IMG" === e.target.tagName && u(e),
            !t || (!n && -1 !== e.type.indexOf("mouse"))
              ? ""
              : {
                  dragging: !0,
                  touchObject: {
                    startX: e.touches ? e.touches[0].pageX : e.clientX,
                    startY: e.touches ? e.touches[0].pageY : e.clientY,
                    curX: e.touches ? e.touches[0].pageX : e.clientX,
                    curY: e.touches ? e.touches[0].pageY : e.clientY,
                  },
                }
          );
        };
        t.swipeMove = function (e, t) {
          var n = t.scrolling,
            r = t.animating,
            i = t.vertical,
            a = t.swipeToSlide,
            s = t.verticalSwiping,
            l = t.rtl,
            c = t.currentSlide,
            f = t.edgeFriction,
            d = t.edgeDragged,
            h = t.onEdge,
            p = t.swiped,
            v = t.swiping,
            m = t.slideCount,
            b = t.slidesToScroll,
            x = t.infinite,
            w = t.touchObject,
            _ = t.swipeEvent,
            M = t.listHeight,
            k = t.listWidth;
          if (!n) {
            if (r) return u(e);
            i && a && s && u(e);
            var T,
              C = {},
              A = E(t);
            (w.curX = e.touches ? e.touches[0].pageX : e.clientX),
              (w.curY = e.touches ? e.touches[0].pageY : e.clientY),
              (w.swipeLength = Math.round(
                Math.sqrt(Math.pow(w.curX - w.startX, 2))
              ));
            var P = Math.round(Math.sqrt(Math.pow(w.curY - w.startY, 2)));
            if (!s && !v && P > 10) return { scrolling: !0 };
            s && (w.swipeLength = P);
            var L = (l ? -1 : 1) * (w.curX > w.startX ? 1 : -1);
            s && (L = w.curY > w.startY ? 1 : -1);
            var R = Math.ceil(m / b),
              O = g(t.touchObject, s),
              z = w.swipeLength;
            return (
              x ||
                (((0 === c && ("right" === O || "down" === O)) ||
                  (c + 1 >= R && ("left" === O || "up" === O)) ||
                  (!y(t) && ("left" === O || "up" === O))) &&
                  ((z = w.swipeLength * f),
                  !1 === d && h && (h(O), (C.edgeDragged = !0)))),
              !p && _ && (_(O), (C.swiped = !0)),
              (T = i ? A + z * (M / k) * L : l ? A - z * L : A + z * L),
              s && (T = A + z * L),
              (C = o(
                o({}, C),
                {},
                {
                  touchObject: w,
                  swipeLeft: T,
                  trackStyle: S(o(o({}, t), {}, { left: T })),
                }
              )),
              Math.abs(w.curX - w.startX) < 0.8 * Math.abs(w.curY - w.startY)
                ? C
                : (w.swipeLength > 10 && ((C.swiping = !0), u(e)), C)
            );
          }
        };
        t.swipeEnd = function (e, t) {
          var n = t.dragging,
            r = t.swipe,
            i = t.touchObject,
            a = t.listWidth,
            s = t.touchThreshold,
            l = t.verticalSwiping,
            c = t.listHeight,
            f = t.swipeToSlide,
            d = t.scrolling,
            h = t.onSwipe,
            p = t.targetSlide,
            v = t.currentSlide,
            m = t.infinite;
          if (!n) return r && u(e), {};
          var y = l ? c / s : a / s,
            b = g(i, l),
            _ = {
              dragging: !1,
              edgeDragged: !1,
              scrolling: !1,
              swiping: !1,
              swiped: !1,
              swipeLeft: null,
              touchObject: {},
            };
          if (d) return _;
          if (!i.swipeLength) return _;
          if (i.swipeLength > y) {
            var S, k;
            u(e), h && h(b);
            var T = m ? v : p;
            switch (b) {
              case "left":
              case "up":
                (k = T + w(t)), (S = f ? x(t, k) : k), (_.currentDirection = 0);
                break;
              case "right":
              case "down":
                (k = T - w(t)), (S = f ? x(t, k) : k), (_.currentDirection = 1);
                break;
              default:
                S = T;
            }
            _.triggerSlideHandler = S;
          } else {
            var C = E(t);
            _.trackStyle = M(o(o({}, t), {}, { left: C }));
          }
          return _;
        };
        var b = function (e) {
          for (
            var t = e.infinite ? 2 * e.slideCount : e.slideCount,
              n = e.infinite ? -1 * e.slidesToShow : 0,
              r = e.infinite ? -1 * e.slidesToShow : 0,
              i = [];
            n < t;

          )
            i.push(n),
              (n = r + e.slidesToScroll),
              (r += Math.min(e.slidesToScroll, e.slidesToShow));
          return i;
        };
        t.getNavigableIndexes = b;
        var x = function (e, t) {
          var n = b(e),
            r = 0;
          if (t > n[n.length - 1]) t = n[n.length - 1];
          else
            for (var i in n) {
              if (t < n[i]) {
                t = r;
                break;
              }
              r = n[i];
            }
          return t;
        };
        t.checkNavigable = x;
        var w = function (e) {
          var t = e.centerMode
            ? e.slideWidth * Math.floor(e.slidesToShow / 2)
            : 0;
          if (e.swipeToSlide) {
            var n,
              r = e.listRef,
              i =
                (r.querySelectorAll && r.querySelectorAll(".slick-slide")) ||
                [];
            if (
              (Array.from(i).every(function (r) {
                if (e.vertical) {
                  if (r.offsetTop + m(r) / 2 > -1 * e.swipeLeft)
                    return (n = r), !1;
                } else if (r.offsetLeft - t + v(r) / 2 > -1 * e.swipeLeft) return (n = r), !1;
                return !0;
              }),
              !n)
            )
              return 0;
            var a =
              !0 === e.rtl ? e.slideCount - e.currentSlide : e.currentSlide;
            return Math.abs(n.dataset.index - a) || 1;
          }
          return e.slidesToScroll;
        };
        t.getSlideCount = w;
        var _ = function (e, t) {
          return t.reduce(function (t, n) {
            return t && e.hasOwnProperty(n);
          }, !0)
            ? null
            : console.error("Keys Missing:", e);
        };
        t.checkSpecKeys = _;
        var S = function (e) {
          var t, n;
          _(e, [
            "left",
            "variableWidth",
            "slideCount",
            "slidesToShow",
            "slideWidth",
          ]);
          var r = e.slideCount + 2 * e.slidesToShow;
          e.vertical ? (n = r * e.slideHeight) : (t = C(e) * e.slideWidth);
          var i = { opacity: 1, transition: "", WebkitTransition: "" };
          if (e.useTransform) {
            var a = e.vertical
                ? "translate3d(0px, " + e.left + "px, 0px)"
                : "translate3d(" + e.left + "px, 0px, 0px)",
              s = e.vertical
                ? "translate3d(0px, " + e.left + "px, 0px)"
                : "translate3d(" + e.left + "px, 0px, 0px)",
              l = e.vertical
                ? "translateY(" + e.left + "px)"
                : "translateX(" + e.left + "px)";
            i = o(
              o({}, i),
              {},
              { WebkitTransform: a, transform: s, msTransform: l }
            );
          } else e.vertical ? (i.top = e.left) : (i.left = e.left);
          return (
            e.fade && (i = { opacity: 1 }),
            t && (i.width = t),
            n && (i.height = n),
            window &&
              !window.addEventListener &&
              window.attachEvent &&
              (e.vertical
                ? (i.marginTop = e.left + "px")
                : (i.marginLeft = e.left + "px")),
            i
          );
        };
        t.getTrackCSS = S;
        var M = function (e) {
          _(e, [
            "left",
            "variableWidth",
            "slideCount",
            "slidesToShow",
            "slideWidth",
            "speed",
            "cssEase",
          ]);
          var t = S(e);
          return (
            e.useTransform
              ? ((t.WebkitTransition =
                  "-webkit-transform " + e.speed + "ms " + e.cssEase),
                (t.transition = "transform " + e.speed + "ms " + e.cssEase))
              : e.vertical
              ? (t.transition = "top " + e.speed + "ms " + e.cssEase)
              : (t.transition = "left " + e.speed + "ms " + e.cssEase),
            t
          );
        };
        t.getTrackAnimateCSS = M;
        var E = function (e) {
          if (e.unslick) return 0;
          _(e, [
            "slideIndex",
            "trackRef",
            "infinite",
            "centerMode",
            "slideCount",
            "slidesToShow",
            "slidesToScroll",
            "slideWidth",
            "listWidth",
            "variableWidth",
            "slideHeight",
          ]);
          var t,
            n,
            r = e.slideIndex,
            i = e.trackRef,
            a = e.infinite,
            o = e.centerMode,
            s = e.slideCount,
            l = e.slidesToShow,
            u = e.slidesToScroll,
            c = e.slideWidth,
            f = e.listWidth,
            d = e.variableWidth,
            h = e.slideHeight,
            p = e.fade,
            v = e.vertical;
          if (p || 1 === e.slideCount) return 0;
          var m = 0;
          if (
            (a
              ? ((m = -k(e)),
                s % u !== 0 &&
                  r + u > s &&
                  (m = -(r > s ? l - (r - s) : s % u)),
                o && (m += parseInt(l / 2)))
              : (s % u !== 0 && r + u > s && (m = l - (s % u)),
                o && (m = parseInt(l / 2))),
            (t = v ? r * h * -1 + m * h : r * c * -1 + m * c),
            !0 === d)
          ) {
            var g,
              y = i && i.node;
            if (
              ((g = r + k(e)),
              (t = (n = y && y.childNodes[g]) ? -1 * n.offsetLeft : 0),
              !0 === o)
            ) {
              (g = a ? r + k(e) : r), (n = y && y.children[g]), (t = 0);
              for (var b = 0; b < g; b++)
                t -= y && y.children[b] && y.children[b].offsetWidth;
              (t -= parseInt(e.centerPadding)),
                (t += n && (f - n.offsetWidth) / 2);
            }
          }
          return t;
        };
        t.getTrackLeft = E;
        var k = function (e) {
          return e.unslick || !e.infinite
            ? 0
            : e.variableWidth
            ? e.slideCount
            : e.slidesToShow + (e.centerMode ? 1 : 0);
        };
        t.getPreClones = k;
        var T = function (e) {
          return e.unslick || !e.infinite ? 0 : e.slideCount;
        };
        t.getPostClones = T;
        var C = function (e) {
          return 1 === e.slideCount ? 1 : k(e) + e.slideCount + T(e);
        };
        t.getTotalSlides = C;
        var A = function (e) {
          return e.targetSlide > e.currentSlide
            ? e.targetSlide > e.currentSlide + P(e)
              ? "left"
              : "right"
            : e.targetSlide < e.currentSlide - L(e)
            ? "right"
            : "left";
        };
        t.siblingDirection = A;
        var P = function (e) {
          var t = e.slidesToShow,
            n = e.centerMode,
            r = e.rtl,
            i = e.centerPadding;
          if (n) {
            var a = (t - 1) / 2 + 1;
            return parseInt(i) > 0 && (a += 1), r && t % 2 === 0 && (a += 1), a;
          }
          return r ? 0 : t - 1;
        };
        t.slidesOnRight = P;
        var L = function (e) {
          var t = e.slidesToShow,
            n = e.centerMode,
            r = e.rtl,
            i = e.centerPadding;
          if (n) {
            var a = (t - 1) / 2 + 1;
            return parseInt(i) > 0 && (a += 1), r || t % 2 !== 0 || (a += 1), a;
          }
          return r ? t - 1 : 0;
        };
        t.slidesOnLeft = L;
        t.canUseDOM = function () {
          return !(
            "undefined" === typeof window ||
            !window.document ||
            !window.document.createElement
          );
        };
      },
      6374: function (e, t, n) {
        "use strict";
        var r = n(2791),
          i = Symbol.for("react.element"),
          a = Symbol.for("react.fragment"),
          o = Object.prototype.hasOwnProperty,
          s =
            r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
              .ReactCurrentOwner,
          l = { key: !0, ref: !0, __self: !0, __source: !0 };
        function u(e, t, n) {
          var r,
            a = {},
            u = null,
            c = null;
          for (r in (void 0 !== n && (u = "" + n),
          void 0 !== t.key && (u = "" + t.key),
          void 0 !== t.ref && (c = t.ref),
          t))
            o.call(t, r) && !l.hasOwnProperty(r) && (a[r] = t[r]);
          if (e && e.defaultProps)
            for (r in (t = e.defaultProps)) void 0 === a[r] && (a[r] = t[r]);
          return {
            $$typeof: i,
            type: e,
            key: u,
            ref: c,
            props: a,
            _owner: s.current,
          };
        }
        (t.Fragment = a), (t.jsx = u), (t.jsxs = u);
      },
      9117: function (e, t) {
        "use strict";
        var n = Symbol.for("react.element"),
          r = Symbol.for("react.portal"),
          i = Symbol.for("react.fragment"),
          a = Symbol.for("react.strict_mode"),
          o = Symbol.for("react.profiler"),
          s = Symbol.for("react.provider"),
          l = Symbol.for("react.context"),
          u = Symbol.for("react.forward_ref"),
          c = Symbol.for("react.suspense"),
          f = Symbol.for("react.memo"),
          d = Symbol.for("react.lazy"),
          h = Symbol.iterator;
        var p = {
            isMounted: function () {
              return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
          },
          v = Object.assign,
          m = {};
        function g(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = m),
            (this.updater = n || p);
        }
        function y() {}
        function b(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = m),
            (this.updater = n || p);
        }
        (g.prototype.isReactComponent = {}),
          (g.prototype.setState = function (e, t) {
            if ("object" !== typeof e && "function" !== typeof e && null != e)
              throw Error(
                "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
              );
            this.updater.enqueueSetState(this, e, t, "setState");
          }),
          (g.prototype.forceUpdate = function (e) {
            this.updater.enqueueForceUpdate(this, e, "forceUpdate");
          }),
          (y.prototype = g.prototype);
        var x = (b.prototype = new y());
        (x.constructor = b), v(x, g.prototype), (x.isPureReactComponent = !0);
        var w = Array.isArray,
          _ = Object.prototype.hasOwnProperty,
          S = { current: null },
          M = { key: !0, ref: !0, __self: !0, __source: !0 };
        function E(e, t, r) {
          var i,
            a = {},
            o = null,
            s = null;
          if (null != t)
            for (i in (void 0 !== t.ref && (s = t.ref),
            void 0 !== t.key && (o = "" + t.key),
            t))
              _.call(t, i) && !M.hasOwnProperty(i) && (a[i] = t[i]);
          var l = arguments.length - 2;
          if (1 === l) a.children = r;
          else if (1 < l) {
            for (var u = Array(l), c = 0; c < l; c++) u[c] = arguments[c + 2];
            a.children = u;
          }
          if (e && e.defaultProps)
            for (i in (l = e.defaultProps)) void 0 === a[i] && (a[i] = l[i]);
          return {
            $$typeof: n,
            type: e,
            key: o,
            ref: s,
            props: a,
            _owner: S.current,
          };
        }
        function k(e) {
          return "object" === typeof e && null !== e && e.$$typeof === n;
        }
        var T = /\/+/g;
        function C(e, t) {
          return "object" === typeof e && null !== e && null != e.key
            ? (function (e) {
                var t = { "=": "=0", ":": "=2" };
                return (
                  "$" +
                  e.replace(/[=:]/g, function (e) {
                    return t[e];
                  })
                );
              })("" + e.key)
            : t.toString(36);
        }
        function A(e, t, i, a, o) {
          var s = typeof e;
          ("undefined" !== s && "boolean" !== s) || (e = null);
          var l = !1;
          if (null === e) l = !0;
          else
            switch (s) {
              case "string":
              case "number":
                l = !0;
                break;
              case "object":
                switch (e.$$typeof) {
                  case n:
                  case r:
                    l = !0;
                }
            }
          if (l)
            return (
              (o = o((l = e))),
              (e = "" === a ? "." + C(l, 0) : a),
              w(o)
                ? ((i = ""),
                  null != e && (i = e.replace(T, "$&/") + "/"),
                  A(o, t, i, "", function (e) {
                    return e;
                  }))
                : null != o &&
                  (k(o) &&
                    (o = (function (e, t) {
                      return {
                        $$typeof: n,
                        type: e.type,
                        key: t,
                        ref: e.ref,
                        props: e.props,
                        _owner: e._owner,
                      };
                    })(
                      o,
                      i +
                        (!o.key || (l && l.key === o.key)
                          ? ""
                          : ("" + o.key).replace(T, "$&/") + "/") +
                        e
                    )),
                  t.push(o)),
              1
            );
          if (((l = 0), (a = "" === a ? "." : a + ":"), w(e)))
            for (var u = 0; u < e.length; u++) {
              var c = a + C((s = e[u]), u);
              l += A(s, t, i, c, o);
            }
          else if (
            ((c = (function (e) {
              return null === e || "object" !== typeof e
                ? null
                : "function" === typeof (e = (h && e[h]) || e["@@iterator"])
                ? e
                : null;
            })(e)),
            "function" === typeof c)
          )
            for (e = c.call(e), u = 0; !(s = e.next()).done; )
              l += A((s = s.value), t, i, (c = a + C(s, u++)), o);
          else if ("object" === s)
            throw (
              ((t = String(e)),
              Error(
                "Objects are not valid as a React child (found: " +
                  ("[object Object]" === t
                    ? "object with keys {" + Object.keys(e).join(", ") + "}"
                    : t) +
                  "). If you meant to render a collection of children, use an array instead."
              ))
            );
          return l;
        }
        function P(e, t, n) {
          if (null == e) return e;
          var r = [],
            i = 0;
          return (
            A(e, r, "", "", function (e) {
              return t.call(n, e, i++);
            }),
            r
          );
        }
        function L(e) {
          if (-1 === e._status) {
            var t = e._result;
            (t = t()).then(
              function (t) {
                (0 !== e._status && -1 !== e._status) ||
                  ((e._status = 1), (e._result = t));
              },
              function (t) {
                (0 !== e._status && -1 !== e._status) ||
                  ((e._status = 2), (e._result = t));
              }
            ),
              -1 === e._status && ((e._status = 0), (e._result = t));
          }
          if (1 === e._status) return e._result.default;
          throw e._result;
        }
        var R = { current: null },
          O = { transition: null },
          z = {
            ReactCurrentDispatcher: R,
            ReactCurrentBatchConfig: O,
            ReactCurrentOwner: S,
          };
        (t.Children = {
          map: P,
          forEach: function (e, t, n) {
            P(
              e,
              function () {
                t.apply(this, arguments);
              },
              n
            );
          },
          count: function (e) {
            var t = 0;
            return (
              P(e, function () {
                t++;
              }),
              t
            );
          },
          toArray: function (e) {
            return (
              P(e, function (e) {
                return e;
              }) || []
            );
          },
          only: function (e) {
            if (!k(e))
              throw Error(
                "React.Children.only expected to receive a single React element child."
              );
            return e;
          },
        }),
          (t.Component = g),
          (t.Fragment = i),
          (t.Profiler = o),
          (t.PureComponent = b),
          (t.StrictMode = a),
          (t.Suspense = c),
          (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = z),
          (t.cloneElement = function (e, t, r) {
            if (null === e || void 0 === e)
              throw Error(
                "React.cloneElement(...): The argument must be a React element, but you passed " +
                  e +
                  "."
              );
            var i = v({}, e.props),
              a = e.key,
              o = e.ref,
              s = e._owner;
            if (null != t) {
              if (
                (void 0 !== t.ref && ((o = t.ref), (s = S.current)),
                void 0 !== t.key && (a = "" + t.key),
                e.type && e.type.defaultProps)
              )
                var l = e.type.defaultProps;
              for (u in t)
                _.call(t, u) &&
                  !M.hasOwnProperty(u) &&
                  (i[u] = void 0 === t[u] && void 0 !== l ? l[u] : t[u]);
            }
            var u = arguments.length - 2;
            if (1 === u) i.children = r;
            else if (1 < u) {
              l = Array(u);
              for (var c = 0; c < u; c++) l[c] = arguments[c + 2];
              i.children = l;
            }
            return {
              $$typeof: n,
              type: e.type,
              key: a,
              ref: o,
              props: i,
              _owner: s,
            };
          }),
          (t.createContext = function (e) {
            return (
              ((e = {
                $$typeof: l,
                _currentValue: e,
                _currentValue2: e,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null,
              }).Provider = { $$typeof: s, _context: e }),
              (e.Consumer = e)
            );
          }),
          (t.createElement = E),
          (t.createFactory = function (e) {
            var t = E.bind(null, e);
            return (t.type = e), t;
          }),
          (t.createRef = function () {
            return { current: null };
          }),
          (t.forwardRef = function (e) {
            return { $$typeof: u, render: e };
          }),
          (t.isValidElement = k),
          (t.lazy = function (e) {
            return {
              $$typeof: d,
              _payload: { _status: -1, _result: e },
              _init: L,
            };
          }),
          (t.memo = function (e, t) {
            return { $$typeof: f, type: e, compare: void 0 === t ? null : t };
          }),
          (t.startTransition = function (e) {
            var t = O.transition;
            O.transition = {};
            try {
              e();
            } finally {
              O.transition = t;
            }
          }),
          (t.unstable_act = function () {
            throw Error(
              "act(...) is not supported in production builds of React."
            );
          }),
          (t.useCallback = function (e, t) {
            return R.current.useCallback(e, t);
          }),
          (t.useContext = function (e) {
            return R.current.useContext(e);
          }),
          (t.useDebugValue = function () {}),
          (t.useDeferredValue = function (e) {
            return R.current.useDeferredValue(e);
          }),
          (t.useEffect = function (e, t) {
            return R.current.useEffect(e, t);
          }),
          (t.useId = function () {
            return R.current.useId();
          }),
          (t.useImperativeHandle = function (e, t, n) {
            return R.current.useImperativeHandle(e, t, n);
          }),
          (t.useInsertionEffect = function (e, t) {
            return R.current.useInsertionEffect(e, t);
          }),
          (t.useLayoutEffect = function (e, t) {
            return R.current.useLayoutEffect(e, t);
          }),
          (t.useMemo = function (e, t) {
            return R.current.useMemo(e, t);
          }),
          (t.useReducer = function (e, t, n) {
            return R.current.useReducer(e, t, n);
          }),
          (t.useRef = function (e) {
            return R.current.useRef(e);
          }),
          (t.useState = function (e) {
            return R.current.useState(e);
          }),
          (t.useSyncExternalStore = function (e, t, n) {
            return R.current.useSyncExternalStore(e, t, n);
          }),
          (t.useTransition = function () {
            return R.current.useTransition();
          }),
          (t.version = "18.0.0-fc46dba67-20220329");
      },
      2791: function (e, t, n) {
        "use strict";
        e.exports = n(9117);
      },
      184: function (e, t, n) {
        "use strict";
        e.exports = n(6374);
      },
      9727: function (e) {
        var t = (function (e) {
          "use strict";
          var t,
            n = Object.prototype,
            r = n.hasOwnProperty,
            i = "function" === typeof Symbol ? Symbol : {},
            a = i.iterator || "@@iterator",
            o = i.asyncIterator || "@@asyncIterator",
            s = i.toStringTag || "@@toStringTag";
          function l(e, t, n) {
            return (
              Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              }),
              e[t]
            );
          }
          try {
            l({}, "");
          } catch (L) {
            l = function (e, t, n) {
              return (e[t] = n);
            };
          }
          function u(e, t, n, r) {
            var i = t && t.prototype instanceof m ? t : m,
              a = Object.create(i.prototype),
              o = new C(r || []);
            return (
              (a._invoke = (function (e, t, n) {
                var r = f;
                return function (i, a) {
                  if (r === h) throw new Error("Generator is already running");
                  if (r === p) {
                    if ("throw" === i) throw a;
                    return P();
                  }
                  for (n.method = i, n.arg = a; ; ) {
                    var o = n.delegate;
                    if (o) {
                      var s = E(o, n);
                      if (s) {
                        if (s === v) continue;
                        return s;
                      }
                    }
                    if ("next" === n.method) n.sent = n._sent = n.arg;
                    else if ("throw" === n.method) {
                      if (r === f) throw ((r = p), n.arg);
                      n.dispatchException(n.arg);
                    } else "return" === n.method && n.abrupt("return", n.arg);
                    r = h;
                    var l = c(e, t, n);
                    if ("normal" === l.type) {
                      if (((r = n.done ? p : d), l.arg === v)) continue;
                      return { value: l.arg, done: n.done };
                    }
                    "throw" === l.type &&
                      ((r = p), (n.method = "throw"), (n.arg = l.arg));
                  }
                };
              })(e, n, o)),
              a
            );
          }
          function c(e, t, n) {
            try {
              return { type: "normal", arg: e.call(t, n) };
            } catch (L) {
              return { type: "throw", arg: L };
            }
          }
          e.wrap = u;
          var f = "suspendedStart",
            d = "suspendedYield",
            h = "executing",
            p = "completed",
            v = {};
          function m() {}
          function g() {}
          function y() {}
          var b = {};
          l(b, a, function () {
            return this;
          });
          var x = Object.getPrototypeOf,
            w = x && x(x(A([])));
          w && w !== n && r.call(w, a) && (b = w);
          var _ = (y.prototype = m.prototype = Object.create(b));
          function S(e) {
            ["next", "throw", "return"].forEach(function (t) {
              l(e, t, function (e) {
                return this._invoke(t, e);
              });
            });
          }
          function M(e, t) {
            function n(i, a, o, s) {
              var l = c(e[i], e, a);
              if ("throw" !== l.type) {
                var u = l.arg,
                  f = u.value;
                return f && "object" === typeof f && r.call(f, "__await")
                  ? t.resolve(f.__await).then(
                      function (e) {
                        n("next", e, o, s);
                      },
                      function (e) {
                        n("throw", e, o, s);
                      }
                    )
                  : t.resolve(f).then(
                      function (e) {
                        (u.value = e), o(u);
                      },
                      function (e) {
                        return n("throw", e, o, s);
                      }
                    );
              }
              s(l.arg);
            }
            var i;
            this._invoke = function (e, r) {
              function a() {
                return new t(function (t, i) {
                  n(e, r, t, i);
                });
              }
              return (i = i ? i.then(a, a) : a());
            };
          }
          function E(e, n) {
            var r = e.iterator[n.method];
            if (r === t) {
              if (((n.delegate = null), "throw" === n.method)) {
                if (
                  e.iterator.return &&
                  ((n.method = "return"),
                  (n.arg = t),
                  E(e, n),
                  "throw" === n.method)
                )
                  return v;
                (n.method = "throw"),
                  (n.arg = new TypeError(
                    "The iterator does not provide a 'throw' method"
                  ));
              }
              return v;
            }
            var i = c(r, e.iterator, n.arg);
            if ("throw" === i.type)
              return (
                (n.method = "throw"), (n.arg = i.arg), (n.delegate = null), v
              );
            var a = i.arg;
            return a
              ? a.done
                ? ((n[e.resultName] = a.value),
                  (n.next = e.nextLoc),
                  "return" !== n.method && ((n.method = "next"), (n.arg = t)),
                  (n.delegate = null),
                  v)
                : a
              : ((n.method = "throw"),
                (n.arg = new TypeError("iterator result is not an object")),
                (n.delegate = null),
                v);
          }
          function k(e) {
            var t = { tryLoc: e[0] };
            1 in e && (t.catchLoc = e[1]),
              2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])),
              this.tryEntries.push(t);
          }
          function T(e) {
            var t = e.completion || {};
            (t.type = "normal"), delete t.arg, (e.completion = t);
          }
          function C(e) {
            (this.tryEntries = [{ tryLoc: "root" }]),
              e.forEach(k, this),
              this.reset(!0);
          }
          function A(e) {
            if (e) {
              var n = e[a];
              if (n) return n.call(e);
              if ("function" === typeof e.next) return e;
              if (!isNaN(e.length)) {
                var i = -1,
                  o = function n() {
                    for (; ++i < e.length; )
                      if (r.call(e, i))
                        return (n.value = e[i]), (n.done = !1), n;
                    return (n.value = t), (n.done = !0), n;
                  };
                return (o.next = o);
              }
            }
            return { next: P };
          }
          function P() {
            return { value: t, done: !0 };
          }
          return (
            (g.prototype = y),
            l(_, "constructor", y),
            l(y, "constructor", g),
            (g.displayName = l(y, s, "GeneratorFunction")),
            (e.isGeneratorFunction = function (e) {
              var t = "function" === typeof e && e.constructor;
              return (
                !!t &&
                (t === g || "GeneratorFunction" === (t.displayName || t.name))
              );
            }),
            (e.mark = function (e) {
              return (
                Object.setPrototypeOf
                  ? Object.setPrototypeOf(e, y)
                  : ((e.__proto__ = y), l(e, s, "GeneratorFunction")),
                (e.prototype = Object.create(_)),
                e
              );
            }),
            (e.awrap = function (e) {
              return { __await: e };
            }),
            S(M.prototype),
            l(M.prototype, o, function () {
              return this;
            }),
            (e.AsyncIterator = M),
            (e.async = function (t, n, r, i, a) {
              void 0 === a && (a = Promise);
              var o = new M(u(t, n, r, i), a);
              return e.isGeneratorFunction(n)
                ? o
                : o.next().then(function (e) {
                    return e.done ? e.value : o.next();
                  });
            }),
            S(_),
            l(_, s, "Generator"),
            l(_, a, function () {
              return this;
            }),
            l(_, "toString", function () {
              return "[object Generator]";
            }),
            (e.keys = function (e) {
              var t = [];
              for (var n in e) t.push(n);
              return (
                t.reverse(),
                function n() {
                  for (; t.length; ) {
                    var r = t.pop();
                    if (r in e) return (n.value = r), (n.done = !1), n;
                  }
                  return (n.done = !0), n;
                }
              );
            }),
            (e.values = A),
            (C.prototype = {
              constructor: C,
              reset: function (e) {
                if (
                  ((this.prev = 0),
                  (this.next = 0),
                  (this.sent = this._sent = t),
                  (this.done = !1),
                  (this.delegate = null),
                  (this.method = "next"),
                  (this.arg = t),
                  this.tryEntries.forEach(T),
                  !e)
                )
                  for (var n in this)
                    "t" === n.charAt(0) &&
                      r.call(this, n) &&
                      !isNaN(+n.slice(1)) &&
                      (this[n] = t);
              },
              stop: function () {
                this.done = !0;
                var e = this.tryEntries[0].completion;
                if ("throw" === e.type) throw e.arg;
                return this.rval;
              },
              dispatchException: function (e) {
                if (this.done) throw e;
                var n = this;
                function i(r, i) {
                  return (
                    (s.type = "throw"),
                    (s.arg = e),
                    (n.next = r),
                    i && ((n.method = "next"), (n.arg = t)),
                    !!i
                  );
                }
                for (var a = this.tryEntries.length - 1; a >= 0; --a) {
                  var o = this.tryEntries[a],
                    s = o.completion;
                  if ("root" === o.tryLoc) return i("end");
                  if (o.tryLoc <= this.prev) {
                    var l = r.call(o, "catchLoc"),
                      u = r.call(o, "finallyLoc");
                    if (l && u) {
                      if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
                      if (this.prev < o.finallyLoc) return i(o.finallyLoc);
                    } else if (l) {
                      if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
                    } else {
                      if (!u)
                        throw new Error(
                          "try statement without catch or finally"
                        );
                      if (this.prev < o.finallyLoc) return i(o.finallyLoc);
                    }
                  }
                }
              },
              abrupt: function (e, t) {
                for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                  var i = this.tryEntries[n];
                  if (
                    i.tryLoc <= this.prev &&
                    r.call(i, "finallyLoc") &&
                    this.prev < i.finallyLoc
                  ) {
                    var a = i;
                    break;
                  }
                }
                a &&
                  ("break" === e || "continue" === e) &&
                  a.tryLoc <= t &&
                  t <= a.finallyLoc &&
                  (a = null);
                var o = a ? a.completion : {};
                return (
                  (o.type = e),
                  (o.arg = t),
                  a
                    ? ((this.method = "next"), (this.next = a.finallyLoc), v)
                    : this.complete(o)
                );
              },
              complete: function (e, t) {
                if ("throw" === e.type) throw e.arg;
                return (
                  "break" === e.type || "continue" === e.type
                    ? (this.next = e.arg)
                    : "return" === e.type
                    ? ((this.rval = this.arg = e.arg),
                      (this.method = "return"),
                      (this.next = "end"))
                    : "normal" === e.type && t && (this.next = t),
                  v
                );
              },
              finish: function (e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                  var n = this.tryEntries[t];
                  if (n.finallyLoc === e)
                    return this.complete(n.completion, n.afterLoc), T(n), v;
                }
              },
              catch: function (e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                  var n = this.tryEntries[t];
                  if (n.tryLoc === e) {
                    var r = n.completion;
                    if ("throw" === r.type) {
                      var i = r.arg;
                      T(n);
                    }
                    return i;
                  }
                }
                throw new Error("illegal catch attempt");
              },
              delegateYield: function (e, n, r) {
                return (
                  (this.delegate = {
                    iterator: A(e),
                    resultName: n,
                    nextLoc: r,
                  }),
                  "next" === this.method && (this.arg = t),
                  v
                );
              },
            }),
            e
          );
        })(e.exports);
        try {
          regeneratorRuntime = t;
        } catch (n) {
          "object" === typeof globalThis
            ? (globalThis.regeneratorRuntime = t)
            : Function("r", "regeneratorRuntime = r")(t);
        }
      },
      474: function (e, t, n) {
        "use strict";
        n.r(t);
        var r = (function () {
            if ("undefined" !== typeof Map) return Map;
            function e(e, t) {
              var n = -1;
              return (
                e.some(function (e, r) {
                  return e[0] === t && ((n = r), !0);
                }),
                n
              );
            }
            return (function () {
              function t() {
                this.__entries__ = [];
              }
              return (
                Object.defineProperty(t.prototype, "size", {
                  get: function () {
                    return this.__entries__.length;
                  },
                  enumerable: !0,
                  configurable: !0,
                }),
                (t.prototype.get = function (t) {
                  var n = e(this.__entries__, t),
                    r = this.__entries__[n];
                  return r && r[1];
                }),
                (t.prototype.set = function (t, n) {
                  var r = e(this.__entries__, t);
                  ~r
                    ? (this.__entries__[r][1] = n)
                    : this.__entries__.push([t, n]);
                }),
                (t.prototype.delete = function (t) {
                  var n = this.__entries__,
                    r = e(n, t);
                  ~r && n.splice(r, 1);
                }),
                (t.prototype.has = function (t) {
                  return !!~e(this.__entries__, t);
                }),
                (t.prototype.clear = function () {
                  this.__entries__.splice(0);
                }),
                (t.prototype.forEach = function (e, t) {
                  void 0 === t && (t = null);
                  for (var n = 0, r = this.__entries__; n < r.length; n++) {
                    var i = r[n];
                    e.call(t, i[1], i[0]);
                  }
                }),
                t
              );
            })();
          })(),
          i =
            "undefined" !== typeof window &&
            "undefined" !== typeof document &&
            window.document === document,
          a =
            "undefined" !== typeof n.g && n.g.Math === Math
              ? n.g
              : "undefined" !== typeof self && self.Math === Math
              ? self
              : "undefined" !== typeof window && window.Math === Math
              ? window
              : Function("return this")(),
          o =
            "function" === typeof requestAnimationFrame
              ? requestAnimationFrame.bind(a)
              : function (e) {
                  return setTimeout(function () {
                    return e(Date.now());
                  }, 1e3 / 60);
                };
        var s = [
            "top",
            "right",
            "bottom",
            "left",
            "width",
            "height",
            "size",
            "weight",
          ],
          l = "undefined" !== typeof MutationObserver,
          u = (function () {
            function e() {
              (this.connected_ = !1),
                (this.mutationEventsAdded_ = !1),
                (this.mutationsObserver_ = null),
                (this.observers_ = []),
                (this.onTransitionEnd_ = this.onTransitionEnd_.bind(this)),
                (this.refresh = (function (e, t) {
                  var n = !1,
                    r = !1,
                    i = 0;
                  function a() {
                    n && ((n = !1), e()), r && l();
                  }
                  function s() {
                    o(a);
                  }
                  function l() {
                    var e = Date.now();
                    if (n) {
                      if (e - i < 2) return;
                      r = !0;
                    } else (n = !0), (r = !1), setTimeout(s, t);
                    i = e;
                  }
                  return l;
                })(this.refresh.bind(this), 20));
            }
            return (
              (e.prototype.addObserver = function (e) {
                ~this.observers_.indexOf(e) || this.observers_.push(e),
                  this.connected_ || this.connect_();
              }),
              (e.prototype.removeObserver = function (e) {
                var t = this.observers_,
                  n = t.indexOf(e);
                ~n && t.splice(n, 1),
                  !t.length && this.connected_ && this.disconnect_();
              }),
              (e.prototype.refresh = function () {
                this.updateObservers_() && this.refresh();
              }),
              (e.prototype.updateObservers_ = function () {
                var e = this.observers_.filter(function (e) {
                  return e.gatherActive(), e.hasActive();
                });
                return (
                  e.forEach(function (e) {
                    return e.broadcastActive();
                  }),
                  e.length > 0
                );
              }),
              (e.prototype.connect_ = function () {
                i &&
                  !this.connected_ &&
                  (document.addEventListener(
                    "transitionend",
                    this.onTransitionEnd_
                  ),
                  window.addEventListener("resize", this.refresh),
                  l
                    ? ((this.mutationsObserver_ = new MutationObserver(
                        this.refresh
                      )),
                      this.mutationsObserver_.observe(document, {
                        attributes: !0,
                        childList: !0,
                        characterData: !0,
                        subtree: !0,
                      }))
                    : (document.addEventListener(
                        "DOMSubtreeModified",
                        this.refresh
                      ),
                      (this.mutationEventsAdded_ = !0)),
                  (this.connected_ = !0));
              }),
              (e.prototype.disconnect_ = function () {
                i &&
                  this.connected_ &&
                  (document.removeEventListener(
                    "transitionend",
                    this.onTransitionEnd_
                  ),
                  window.removeEventListener("resize", this.refresh),
                  this.mutationsObserver_ &&
                    this.mutationsObserver_.disconnect(),
                  this.mutationEventsAdded_ &&
                    document.removeEventListener(
                      "DOMSubtreeModified",
                      this.refresh
                    ),
                  (this.mutationsObserver_ = null),
                  (this.mutationEventsAdded_ = !1),
                  (this.connected_ = !1));
              }),
              (e.prototype.onTransitionEnd_ = function (e) {
                var t = e.propertyName,
                  n = void 0 === t ? "" : t;
                s.some(function (e) {
                  return !!~n.indexOf(e);
                }) && this.refresh();
              }),
              (e.getInstance = function () {
                return (
                  this.instance_ || (this.instance_ = new e()), this.instance_
                );
              }),
              (e.instance_ = null),
              e
            );
          })(),
          c = function (e, t) {
            for (var n = 0, r = Object.keys(t); n < r.length; n++) {
              var i = r[n];
              Object.defineProperty(e, i, {
                value: t[i],
                enumerable: !1,
                writable: !1,
                configurable: !0,
              });
            }
            return e;
          },
          f = function (e) {
            return (e && e.ownerDocument && e.ownerDocument.defaultView) || a;
          },
          d = y(0, 0, 0, 0);
        function h(e) {
          return parseFloat(e) || 0;
        }
        function p(e) {
          for (var t = [], n = 1; n < arguments.length; n++)
            t[n - 1] = arguments[n];
          return t.reduce(function (t, n) {
            return t + h(e["border-" + n + "-width"]);
          }, 0);
        }
        function v(e) {
          var t = e.clientWidth,
            n = e.clientHeight;
          if (!t && !n) return d;
          var r = f(e).getComputedStyle(e),
            i = (function (e) {
              for (
                var t = {}, n = 0, r = ["top", "right", "bottom", "left"];
                n < r.length;
                n++
              ) {
                var i = r[n],
                  a = e["padding-" + i];
                t[i] = h(a);
              }
              return t;
            })(r),
            a = i.left + i.right,
            o = i.top + i.bottom,
            s = h(r.width),
            l = h(r.height);
          if (
            ("border-box" === r.boxSizing &&
              (Math.round(s + a) !== t && (s -= p(r, "left", "right") + a),
              Math.round(l + o) !== n && (l -= p(r, "top", "bottom") + o)),
            !(function (e) {
              return e === f(e).document.documentElement;
            })(e))
          ) {
            var u = Math.round(s + a) - t,
              c = Math.round(l + o) - n;
            1 !== Math.abs(u) && (s -= u), 1 !== Math.abs(c) && (l -= c);
          }
          return y(i.left, i.top, s, l);
        }
        var m =
          "undefined" !== typeof SVGGraphicsElement
            ? function (e) {
                return e instanceof f(e).SVGGraphicsElement;
              }
            : function (e) {
                return (
                  e instanceof f(e).SVGElement &&
                  "function" === typeof e.getBBox
                );
              };
        function g(e) {
          return i
            ? m(e)
              ? (function (e) {
                  var t = e.getBBox();
                  return y(0, 0, t.width, t.height);
                })(e)
              : v(e)
            : d;
        }
        function y(e, t, n, r) {
          return { x: e, y: t, width: n, height: r };
        }
        var b = (function () {
            function e(e) {
              (this.broadcastWidth = 0),
                (this.broadcastHeight = 0),
                (this.contentRect_ = y(0, 0, 0, 0)),
                (this.target = e);
            }
            return (
              (e.prototype.isActive = function () {
                var e = g(this.target);
                return (
                  (this.contentRect_ = e),
                  e.width !== this.broadcastWidth ||
                    e.height !== this.broadcastHeight
                );
              }),
              (e.prototype.broadcastRect = function () {
                var e = this.contentRect_;
                return (
                  (this.broadcastWidth = e.width),
                  (this.broadcastHeight = e.height),
                  e
                );
              }),
              e
            );
          })(),
          x = function (e, t) {
            var n = (function (e) {
              var t = e.x,
                n = e.y,
                r = e.width,
                i = e.height,
                a =
                  "undefined" !== typeof DOMRectReadOnly
                    ? DOMRectReadOnly
                    : Object,
                o = Object.create(a.prototype);
              return (
                c(o, {
                  x: t,
                  y: n,
                  width: r,
                  height: i,
                  top: n,
                  right: t + r,
                  bottom: i + n,
                  left: t,
                }),
                o
              );
            })(t);
            c(this, { target: e, contentRect: n });
          },
          w = (function () {
            function e(e, t, n) {
              if (
                ((this.activeObservations_ = []),
                (this.observations_ = new r()),
                "function" !== typeof e)
              )
                throw new TypeError(
                  "The callback provided as parameter 1 is not a function."
                );
              (this.callback_ = e),
                (this.controller_ = t),
                (this.callbackCtx_ = n);
            }
            return (
              (e.prototype.observe = function (e) {
                if (!arguments.length)
                  throw new TypeError(
                    "1 argument required, but only 0 present."
                  );
                if (
                  "undefined" !== typeof Element &&
                  Element instanceof Object
                ) {
                  if (!(e instanceof f(e).Element))
                    throw new TypeError(
                      'parameter 1 is not of type "Element".'
                    );
                  var t = this.observations_;
                  t.has(e) ||
                    (t.set(e, new b(e)),
                    this.controller_.addObserver(this),
                    this.controller_.refresh());
                }
              }),
              (e.prototype.unobserve = function (e) {
                if (!arguments.length)
                  throw new TypeError(
                    "1 argument required, but only 0 present."
                  );
                if (
                  "undefined" !== typeof Element &&
                  Element instanceof Object
                ) {
                  if (!(e instanceof f(e).Element))
                    throw new TypeError(
                      'parameter 1 is not of type "Element".'
                    );
                  var t = this.observations_;
                  t.has(e) &&
                    (t.delete(e),
                    t.size || this.controller_.removeObserver(this));
                }
              }),
              (e.prototype.disconnect = function () {
                this.clearActive(),
                  this.observations_.clear(),
                  this.controller_.removeObserver(this);
              }),
              (e.prototype.gatherActive = function () {
                var e = this;
                this.clearActive(),
                  this.observations_.forEach(function (t) {
                    t.isActive() && e.activeObservations_.push(t);
                  });
              }),
              (e.prototype.broadcastActive = function () {
                if (this.hasActive()) {
                  var e = this.callbackCtx_,
                    t = this.activeObservations_.map(function (e) {
                      return new x(e.target, e.broadcastRect());
                    });
                  this.callback_.call(e, t, e), this.clearActive();
                }
              }),
              (e.prototype.clearActive = function () {
                this.activeObservations_.splice(0);
              }),
              (e.prototype.hasActive = function () {
                return this.activeObservations_.length > 0;
              }),
              e
            );
          })(),
          _ = "undefined" !== typeof WeakMap ? new WeakMap() : new r(),
          S = function e(t) {
            if (!(this instanceof e))
              throw new TypeError("Cannot call a class as a function.");
            if (!arguments.length)
              throw new TypeError("1 argument required, but only 0 present.");
            var n = u.getInstance(),
              r = new w(t, n, this);
            _.set(this, r);
          };
        ["observe", "unobserve", "disconnect"].forEach(function (e) {
          S.prototype[e] = function () {
            var t;
            return (t = _.get(this))[e].apply(t, arguments);
          };
        });
        var M = "undefined" !== typeof a.ResizeObserver ? a.ResizeObserver : S;
        t.default = M;
      },
      6813: function (e, t) {
        "use strict";
        function n(e, t) {
          var n = e.length;
          e.push(t);
          e: for (; 0 < n; ) {
            var r = (n - 1) >>> 1,
              i = e[r];
            if (!(0 < a(i, t))) break e;
            (e[r] = t), (e[n] = i), (n = r);
          }
        }
        function r(e) {
          return 0 === e.length ? null : e[0];
        }
        function i(e) {
          if (0 === e.length) return null;
          var t = e[0],
            n = e.pop();
          if (n !== t) {
            e[0] = n;
            e: for (var r = 0, i = e.length, o = i >>> 1; r < o; ) {
              var s = 2 * (r + 1) - 1,
                l = e[s],
                u = s + 1,
                c = e[u];
              if (0 > a(l, n))
                u < i && 0 > a(c, l)
                  ? ((e[r] = c), (e[u] = n), (r = u))
                  : ((e[r] = l), (e[s] = n), (r = s));
              else {
                if (!(u < i && 0 > a(c, n))) break e;
                (e[r] = c), (e[u] = n), (r = u);
              }
            }
          }
          return t;
        }
        function a(e, t) {
          var n = e.sortIndex - t.sortIndex;
          return 0 !== n ? n : e.id - t.id;
        }
        if (
          "object" === typeof performance &&
          "function" === typeof performance.now
        ) {
          var o = performance;
          t.unstable_now = function () {
            return o.now();
          };
        } else {
          var s = Date,
            l = s.now();
          t.unstable_now = function () {
            return s.now() - l;
          };
        }
        var u = [],
          c = [],
          f = 1,
          d = null,
          h = 3,
          p = !1,
          v = !1,
          m = !1,
          g = "function" === typeof setTimeout ? setTimeout : null,
          y = "function" === typeof clearTimeout ? clearTimeout : null,
          b = "undefined" !== typeof setImmediate ? setImmediate : null;
        function x(e) {
          for (var t = r(c); null !== t; ) {
            if (null === t.callback) i(c);
            else {
              if (!(t.startTime <= e)) break;
              i(c), (t.sortIndex = t.expirationTime), n(u, t);
            }
            t = r(c);
          }
        }
        function w(e) {
          if (((m = !1), x(e), !v))
            if (null !== r(u)) (v = !0), O(_);
            else {
              var t = r(c);
              null !== t && z(w, t.startTime - e);
            }
        }
        function _(e, n) {
          (v = !1), m && ((m = !1), y(k), (k = -1)), (p = !0);
          var a = h;
          try {
            for (
              x(n), d = r(u);
              null !== d && (!(d.expirationTime > n) || (e && !A()));

            ) {
              var o = d.callback;
              if ("function" === typeof o) {
                (d.callback = null), (h = d.priorityLevel);
                var s = o(d.expirationTime <= n);
                (n = t.unstable_now()),
                  "function" === typeof s
                    ? (d.callback = s)
                    : d === r(u) && i(u),
                  x(n);
              } else i(u);
              d = r(u);
            }
            if (null !== d) var l = !0;
            else {
              var f = r(c);
              null !== f && z(w, f.startTime - n), (l = !1);
            }
            return l;
          } finally {
            (d = null), (h = a), (p = !1);
          }
        }
        "undefined" !== typeof navigator &&
          void 0 !== navigator.scheduling &&
          void 0 !== navigator.scheduling.isInputPending &&
          navigator.scheduling.isInputPending.bind(navigator.scheduling);
        var S,
          M = !1,
          E = null,
          k = -1,
          T = 5,
          C = -1;
        function A() {
          return !(t.unstable_now() - C < T);
        }
        function P() {
          if (null !== E) {
            var e = t.unstable_now();
            C = e;
            var n = !0;
            try {
              n = E(!0, e);
            } finally {
              n ? S() : ((M = !1), (E = null));
            }
          } else M = !1;
        }
        if ("function" === typeof b)
          S = function () {
            b(P);
          };
        else if ("undefined" !== typeof MessageChannel) {
          var L = new MessageChannel(),
            R = L.port2;
          (L.port1.onmessage = P),
            (S = function () {
              R.postMessage(null);
            });
        } else
          S = function () {
            g(P, 0);
          };
        function O(e) {
          (E = e), M || ((M = !0), S());
        }
        function z(e, n) {
          k = g(function () {
            e(t.unstable_now());
          }, n);
        }
        (t.unstable_IdlePriority = 5),
          (t.unstable_ImmediatePriority = 1),
          (t.unstable_LowPriority = 4),
          (t.unstable_NormalPriority = 3),
          (t.unstable_Profiling = null),
          (t.unstable_UserBlockingPriority = 2),
          (t.unstable_cancelCallback = function (e) {
            e.callback = null;
          }),
          (t.unstable_continueExecution = function () {
            v || p || ((v = !0), O(_));
          }),
          (t.unstable_forceFrameRate = function (e) {
            0 > e || 125 < e
              ? console.error(
                  "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                )
              : (T = 0 < e ? Math.floor(1e3 / e) : 5);
          }),
          (t.unstable_getCurrentPriorityLevel = function () {
            return h;
          }),
          (t.unstable_getFirstCallbackNode = function () {
            return r(u);
          }),
          (t.unstable_next = function (e) {
            switch (h) {
              case 1:
              case 2:
              case 3:
                var t = 3;
                break;
              default:
                t = h;
            }
            var n = h;
            h = t;
            try {
              return e();
            } finally {
              h = n;
            }
          }),
          (t.unstable_pauseExecution = function () {}),
          (t.unstable_requestPaint = function () {}),
          (t.unstable_runWithPriority = function (e, t) {
            switch (e) {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                break;
              default:
                e = 3;
            }
            var n = h;
            h = e;
            try {
              return t();
            } finally {
              h = n;
            }
          }),
          (t.unstable_scheduleCallback = function (e, i, a) {
            var o = t.unstable_now();
            switch (
              ("object" === typeof a && null !== a
                ? (a = "number" === typeof (a = a.delay) && 0 < a ? o + a : o)
                : (a = o),
              e)
            ) {
              case 1:
                var s = -1;
                break;
              case 2:
                s = 250;
                break;
              case 5:
                s = 1073741823;
                break;
              case 4:
                s = 1e4;
                break;
              default:
                s = 5e3;
            }
            return (
              (e = {
                id: f++,
                callback: i,
                priorityLevel: e,
                startTime: a,
                expirationTime: (s = a + s),
                sortIndex: -1,
              }),
              a > o
                ? ((e.sortIndex = a),
                  n(c, e),
                  null === r(u) &&
                    e === r(c) &&
                    (m ? (y(k), (k = -1)) : (m = !0), z(w, a - o)))
                : ((e.sortIndex = s), n(u, e), v || p || ((v = !0), O(_))),
              e
            );
          }),
          (t.unstable_shouldYield = A),
          (t.unstable_wrapCallback = function (e) {
            var t = h;
            return function () {
              var n = h;
              h = t;
              try {
                return e.apply(this, arguments);
              } finally {
                h = n;
              }
            };
          });
      },
      5296: function (e, t, n) {
        "use strict";
        e.exports = n(6813);
      },
      2806: function (e) {
        e.exports = function (e) {
          return e
            .replace(/[A-Z]/g, function (e) {
              return "-" + e.toLowerCase();
            })
            .toLowerCase();
        };
      },
    },
    t = {};
  function n(r) {
    var i = t[r];
    if (void 0 !== i) return i.exports;
    var a = (t[r] = { exports: {} });
    return e[r](a, a.exports, n), a.exports;
  }
  (n.n = function (e) {
    var t =
      e && e.__esModule
        ? function () {
            return e.default;
          }
        : function () {
            return e;
          };
    return n.d(t, { a: t }), t;
  }),
    (function () {
      var e,
        t = Object.getPrototypeOf
          ? function (e) {
              return Object.getPrototypeOf(e);
            }
          : function (e) {
              return e.__proto__;
            };
      n.t = function (r, i) {
        if ((1 & i && (r = this(r)), 8 & i)) return r;
        if ("object" === typeof r && r) {
          if (4 & i && r.__esModule) return r;
          if (16 & i && "function" === typeof r.then) return r;
        }
        var a = Object.create(null);
        n.r(a);
        var o = {};
        e = e || [null, t({}), t([]), t(t)];
        for (
          var s = 2 & i && r;
          "object" == typeof s && !~e.indexOf(s);
          s = t(s)
        )
          Object.getOwnPropertyNames(s).forEach(function (e) {
            o[e] = function () {
              return r[e];
            };
          });
        return (
          (o.default = function () {
            return r;
          }),
          n.d(a, o),
          a
        );
      };
    })(),
    (n.d = function (e, t) {
      for (var r in t)
        n.o(t, r) &&
          !n.o(e, r) &&
          Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
    }),
    (n.g = (function () {
      if ("object" === typeof globalThis) return globalThis;
      try {
        return this || new Function("return this")();
      } catch (e) {
        if ("object" === typeof window) return window;
      }
    })()),
    (n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (n.r = function (e) {
      "undefined" !== typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (function () {
      "use strict";
      var e = {};
      n.r(e),
        n.d(e, {
          ACESFilmicToneMapping: function () {
            return ha;
          },
          AddEquation: function () {
            return Ii;
          },
          AddOperation: function () {
            return la;
          },
          AdditiveAnimationBlendMode: function () {
            return Ho;
          },
          AdditiveBlending: function () {
            return Ri;
          },
          AlphaFormat: function () {
            return Va;
          },
          AlwaysDepth: function () {
            return Ki;
          },
          AlwaysStencilFunc: function () {
            return ps;
          },
          AmbientLight: function () {
            return eg;
          },
          AmbientLightProbe: function () {
            return gg;
          },
          AnimationClip: function () {
            return Em;
          },
          AnimationLoader: function () {
            return Om;
          },
          AnimationMixer: function () {
            return Qg;
          },
          AnimationObjectGroup: function () {
            return Jg;
          },
          AnimationUtils: function () {
            return dm;
          },
          ArcCurve: function () {
            return Op;
          },
          ArrayCamera: function () {
            return fh;
          },
          ArrowHelper: function () {
            return Hy;
          },
          Audio: function () {
            return Ag;
          },
          AudioAnalyser: function () {
            return Dg;
          },
          AudioContext: function () {
            return pg;
          },
          AudioListener: function () {
            return Cg;
          },
          AudioLoader: function () {
            return vg;
          },
          AxesHelper: function () {
            return Uy;
          },
          AxisHelper: function () {
            return Lb;
          },
          BackSide: function () {
            return ki;
          },
          BasicDepthPacking: function () {
            return qo;
          },
          BasicShadowMap: function () {
            return wi;
          },
          BinaryTextureLoader: function () {
            return Ib;
          },
          Bone: function () {
            return Zh;
          },
          BooleanKeyframeTrack: function () {
            return ym;
          },
          BoundingBoxHelper: function () {
            return Rb;
          },
          Box2: function () {
            return sy;
          },
          Box3: function () {
            return wl;
          },
          Box3Helper: function () {
            return Ny;
          },
          BoxBufferGeometry: function () {
            return wc;
          },
          BoxGeometry: function () {
            return wc;
          },
          BoxHelper: function () {
            return Iy;
          },
          BufferAttribute: function () {
            return Nu;
          },
          BufferGeometry: function () {
            return tc;
          },
          BufferGeometryLoader: function () {
            return lg;
          },
          ByteType: function () {
            return Da;
          },
          Cache: function () {
            return Tm;
          },
          Camera: function () {
            return kc;
          },
          CameraHelper: function () {
            return Ly;
          },
          CanvasRenderer: function () {
            return Fb;
          },
          CanvasTexture: function () {
            return Pp;
          },
          CapsuleBufferGeometry: function () {
            return ev;
          },
          CapsuleGeometry: function () {
            return ev;
          },
          CatmullRomCurve3: function () {
            return Bp;
          },
          CineonToneMapping: function () {
            return da;
          },
          CircleBufferGeometry: function () {
            return tv;
          },
          CircleGeometry: function () {
            return tv;
          },
          ClampToEdgeWrapping: function () {
            return _a;
          },
          Clock: function () {
            return _g;
          },
          Color: function () {
            return il;
          },
          ColorKeyframeTrack: function () {
            return bm;
          },
          ColorManagement: function () {
            return $s;
          },
          CompressedTexture: function () {
            return Ap;
          },
          CompressedTextureLoader: function () {
            return zm;
          },
          ConeBufferGeometry: function () {
            return rv;
          },
          ConeGeometry: function () {
            return rv;
          },
          CubeCamera: function () {
            return Ac;
          },
          CubeReflectionMapping: function () {
            return ma;
          },
          CubeRefractionMapping: function () {
            return ga;
          },
          CubeTexture: function () {
            return Pc;
          },
          CubeTextureLoader: function () {
            return Im;
          },
          CubeUVReflectionMapping: function () {
            return xa;
          },
          CubicBezierCurve: function () {
            return Gp;
          },
          CubicBezierCurve3: function () {
            return Wp;
          },
          CubicInterpolant: function () {
            return pm;
          },
          CullFaceBack: function () {
            return yi;
          },
          CullFaceFront: function () {
            return bi;
          },
          CullFaceFrontBack: function () {
            return xi;
          },
          CullFaceNone: function () {
            return gi;
          },
          Curve: function () {
            return Lp;
          },
          CurvePath: function () {
            return Qp;
          },
          CustomBlending: function () {
            return Di;
          },
          CustomToneMapping: function () {
            return pa;
          },
          CylinderBufferGeometry: function () {
            return nv;
          },
          CylinderGeometry: function () {
            return nv;
          },
          Cylindrical: function () {
            return ay;
          },
          Data3DTexture: function () {
            return pl;
          },
          DataArrayTexture: function () {
            return dl;
          },
          DataTexture: function () {
            return Kh;
          },
          DataTexture2DArray: function () {
            return Yb;
          },
          DataTexture3D: function () {
            return Jb;
          },
          DataTextureLoader: function () {
            return Nm;
          },
          DataUtils: function () {
            return Gy;
          },
          DecrementStencilOp: function () {
            return rs;
          },
          DecrementWrapStencilOp: function () {
            return as;
          },
          DefaultLoadingManager: function () {
            return Am;
          },
          DepthFormat: function () {
            return $a;
          },
          DepthStencilFormat: function () {
            return Qa;
          },
          DepthTexture: function () {
            return vh;
          },
          DirectionalLight: function () {
            return Km;
          },
          DirectionalLightHelper: function () {
            return Cy;
          },
          DiscreteInterpolant: function () {
            return mm;
          },
          DodecahedronBufferGeometry: function () {
            return av;
          },
          DodecahedronGeometry: function () {
            return av;
          },
          DoubleSide: function () {
            return Ti;
          },
          DstAlphaFactor: function () {
            return Xi;
          },
          DstColorFactor: function () {
            return Ji;
          },
          DynamicBufferAttribute: function () {
            return wb;
          },
          DynamicCopyUsage: function () {
            return _s;
          },
          DynamicDrawUsage: function () {
            return ms;
          },
          DynamicReadUsage: function () {
            return bs;
          },
          EdgesGeometry: function () {
            return cv;
          },
          EdgesHelper: function () {
            return Ob;
          },
          EllipseCurve: function () {
            return Rp;
          },
          EqualDepth: function () {
            return na;
          },
          EqualStencilFunc: function () {
            return us;
          },
          EquirectangularReflectionMapping: function () {
            return ya;
          },
          EquirectangularRefractionMapping: function () {
            return ba;
          },
          Euler: function () {
            return au;
          },
          EventDispatcher: function () {
            return Ts;
          },
          ExtrudeBufferGeometry: function () {
            return Uv;
          },
          ExtrudeGeometry: function () {
            return Uv;
          },
          FaceColors: function () {
            return cb;
          },
          FileLoader: function () {
            return Rm;
          },
          FlatShading: function () {
            return Ci;
          },
          Float16BufferAttribute: function () {
            return Vu;
          },
          Float32Attribute: function () {
            return Ab;
          },
          Float32BufferAttribute: function () {
            return qu;
          },
          Float64Attribute: function () {
            return Pb;
          },
          Float64BufferAttribute: function () {
            return Xu;
          },
          FloatType: function () {
            return Ha;
          },
          Fog: function () {
            return _h;
          },
          FogExp2: function () {
            return wh;
          },
          Font: function () {
            return Vb;
          },
          FontLoader: function () {
            return Wb;
          },
          FramebufferTexture: function () {
            return Cp;
          },
          FrontSide: function () {
            return Ei;
          },
          Frustum: function () {
            return Fc;
          },
          GLBufferAttribute: function () {
            return ey;
          },
          GLSL1: function () {
            return Ms;
          },
          GLSL3: function () {
            return Es;
          },
          GreaterDepth: function () {
            return ia;
          },
          GreaterEqualDepth: function () {
            return ra;
          },
          GreaterEqualStencilFunc: function () {
            return hs;
          },
          GreaterStencilFunc: function () {
            return fs;
          },
          GridHelper: function () {
            return Sy;
          },
          Group: function () {
            return dh;
          },
          HalfFloatType: function () {
            return Ua;
          },
          HemisphereLight: function () {
            return Hm;
          },
          HemisphereLightHelper: function () {
            return _y;
          },
          HemisphereLightProbe: function () {
            return mg;
          },
          IcosahedronBufferGeometry: function () {
            return Gv;
          },
          IcosahedronGeometry: function () {
            return Gv;
          },
          ImageBitmapLoader: function () {
            return hg;
          },
          ImageLoader: function () {
            return Dm;
          },
          ImageUtils: function () {
            return al;
          },
          ImmediateRenderObject: function () {
            return qb;
          },
          IncrementStencilOp: function () {
            return ns;
          },
          IncrementWrapStencilOp: function () {
            return is;
          },
          InstancedBufferAttribute: function () {
            return rp;
          },
          InstancedBufferGeometry: function () {
            return og;
          },
          InstancedInterleavedBuffer: function () {
            return Kg;
          },
          InstancedMesh: function () {
            return lp;
          },
          Int16Attribute: function () {
            return Eb;
          },
          Int16BufferAttribute: function () {
            return Uu;
          },
          Int32Attribute: function () {
            return Tb;
          },
          Int32BufferAttribute: function () {
            return Gu;
          },
          Int8Attribute: function () {
            return _b;
          },
          Int8BufferAttribute: function () {
            return Fu;
          },
          IntType: function () {
            return Fa;
          },
          InterleavedBuffer: function () {
            return Mh;
          },
          InterleavedBufferAttribute: function () {
            return kh;
          },
          Interpolant: function () {
            return hm;
          },
          InterpolateDiscrete: function () {
            return Oo;
          },
          InterpolateLinear: function () {
            return zo;
          },
          InterpolateSmooth: function () {
            return Do;
          },
          InvertStencilOp: function () {
            return os;
          },
          JSONLoader: function () {
            return Bb;
          },
          KeepStencilOp: function () {
            return es;
          },
          KeyframeTrack: function () {
            return gm;
          },
          LOD: function () {
            return Vh;
          },
          LatheBufferGeometry: function () {
            return Kp;
          },
          LatheGeometry: function () {
            return Kp;
          },
          Layers: function () {
            return ou;
          },
          LensFlare: function () {
            return Ub;
          },
          LessDepth: function () {
            return ea;
          },
          LessEqualDepth: function () {
            return ta;
          },
          LessEqualStencilFunc: function () {
            return cs;
          },
          LessStencilFunc: function () {
            return ls;
          },
          Light: function () {
            return Bm;
          },
          LightProbe: function () {
            return rg;
          },
          Line: function () {
            return vp;
          },
          Line3: function () {
            return cy;
          },
          LineBasicMaterial: function () {
            return up;
          },
          LineCurve: function () {
            return Vp;
          },
          LineCurve3: function () {
            return qp;
          },
          LineDashedMaterial: function () {
            return cm;
          },
          LineLoop: function () {
            return bp;
          },
          LinePieces: function () {
            return lb;
          },
          LineSegments: function () {
            return yp;
          },
          LineStrip: function () {
            return sb;
          },
          LinearEncoding: function () {
            return Wo;
          },
          LinearFilter: function () {
            return Aa;
          },
          LinearInterpolant: function () {
            return vm;
          },
          LinearMipMapLinearFilter: function () {
            return Oa;
          },
          LinearMipMapNearestFilter: function () {
            return La;
          },
          LinearMipmapLinearFilter: function () {
            return Ra;
          },
          LinearMipmapNearestFilter: function () {
            return Pa;
          },
          LinearSRGBColorSpace: function () {
            return Zo;
          },
          LinearToneMapping: function () {
            return ca;
          },
          Loader: function () {
            return Pm;
          },
          LoaderUtils: function () {
            return ag;
          },
          LoadingManager: function () {
            return Cm;
          },
          LoopOnce: function () {
            return Po;
          },
          LoopPingPong: function () {
            return Ro;
          },
          LoopRepeat: function () {
            return Lo;
          },
          LuminanceAlphaFormat: function () {
            return Ja;
          },
          LuminanceFormat: function () {
            return Ya;
          },
          MOUSE: function () {
            return vi;
          },
          Material: function () {
            return Ou;
          },
          MaterialLoader: function () {
            return ig;
          },
          Math: function () {
            return Hs;
          },
          MathUtils: function () {
            return Hs;
          },
          Matrix3: function () {
            return js;
          },
          Matrix4: function () {
            return Jl;
          },
          MaxEquation: function () {
            return Hi;
          },
          Mesh: function () {
            return bc;
          },
          MeshBasicMaterial: function () {
            return zu;
          },
          MeshDepthMaterial: function () {
            return ah;
          },
          MeshDistanceMaterial: function () {
            return oh;
          },
          MeshFaceMaterial: function () {
            return db;
          },
          MeshLambertMaterial: function () {
            return lm;
          },
          MeshMatcapMaterial: function () {
            return um;
          },
          MeshNormalMaterial: function () {
            return sm;
          },
          MeshPhongMaterial: function () {
            return am;
          },
          MeshPhysicalMaterial: function () {
            return im;
          },
          MeshStandardMaterial: function () {
            return rm;
          },
          MeshToonMaterial: function () {
            return om;
          },
          MinEquation: function () {
            return Bi;
          },
          MirroredRepeatWrapping: function () {
            return Sa;
          },
          MixOperation: function () {
            return sa;
          },
          MultiMaterial: function () {
            return hb;
          },
          MultiplyBlending: function () {
            return zi;
          },
          MultiplyOperation: function () {
            return oa;
          },
          NearestFilter: function () {
            return Ma;
          },
          NearestMipMapLinearFilter: function () {
            return Ca;
          },
          NearestMipMapNearestFilter: function () {
            return ka;
          },
          NearestMipmapLinearFilter: function () {
            return Ta;
          },
          NearestMipmapNearestFilter: function () {
            return Ea;
          },
          NeverDepth: function () {
            return Zi;
          },
          NeverStencilFunc: function () {
            return ss;
          },
          NoBlending: function () {
            return Pi;
          },
          NoColorSpace: function () {
            return $o;
          },
          NoColors: function () {
            return ub;
          },
          NoToneMapping: function () {
            return ua;
          },
          NormalAnimationBlendMode: function () {
            return Bo;
          },
          NormalBlending: function () {
            return Li;
          },
          NotEqualDepth: function () {
            return aa;
          },
          NotEqualStencilFunc: function () {
            return ds;
          },
          NumberKeyframeTrack: function () {
            return xm;
          },
          Object3D: function () {
            return xu;
          },
          ObjectLoader: function () {
            return ug;
          },
          ObjectSpaceNormalMap: function () {
            return Jo;
          },
          OctahedronBufferGeometry: function () {
            return Wv;
          },
          OctahedronGeometry: function () {
            return Wv;
          },
          OneFactor: function () {
            return ji;
          },
          OneMinusDstAlphaFactor: function () {
            return Yi;
          },
          OneMinusDstColorFactor: function () {
            return $i;
          },
          OneMinusSrcAlphaFactor: function () {
            return qi;
          },
          OneMinusSrcColorFactor: function () {
            return Wi;
          },
          OrthographicCamera: function () {
            return Qc;
          },
          PCFShadowMap: function () {
            return _i;
          },
          PCFSoftShadowMap: function () {
            return Si;
          },
          PMREMGenerator: function () {
            return sf;
          },
          ParametricGeometry: function () {
            return jb;
          },
          Particle: function () {
            return vb;
          },
          ParticleBasicMaterial: function () {
            return yb;
          },
          ParticleSystem: function () {
            return mb;
          },
          ParticleSystemMaterial: function () {
            return bb;
          },
          Path: function () {
            return Zp;
          },
          PerspectiveCamera: function () {
            return Tc;
          },
          Plane: function () {
            return Dc;
          },
          PlaneBufferGeometry: function () {
            return Uc;
          },
          PlaneGeometry: function () {
            return Uc;
          },
          PlaneHelper: function () {
            return Fy;
          },
          PointCloud: function () {
            return pb;
          },
          PointCloudMaterial: function () {
            return gb;
          },
          PointLight: function () {
            return Qm;
          },
          PointLightHelper: function () {
            return yy;
          },
          Points: function () {
            return Ep;
          },
          PointsMaterial: function () {
            return xp;
          },
          PolarGridHelper: function () {
            return My;
          },
          PolyhedronBufferGeometry: function () {
            return iv;
          },
          PolyhedronGeometry: function () {
            return iv;
          },
          PositionalAudio: function () {
            return zg;
          },
          PropertyBinding: function () {
            return Yg;
          },
          PropertyMixer: function () {
            return Ig;
          },
          QuadraticBezierCurve: function () {
            return Xp;
          },
          QuadraticBezierCurve3: function () {
            return Yp;
          },
          Quaternion: function () {
            return gl;
          },
          QuaternionKeyframeTrack: function () {
            return _m;
          },
          QuaternionLinearInterpolant: function () {
            return wm;
          },
          REVISION: function () {
            return pi;
          },
          RGBADepthPacking: function () {
            return Xo;
          },
          RGBAFormat: function () {
            return Xa;
          },
          RGBAIntegerFormat: function () {
            return no;
          },
          RGBA_ASTC_10x10_Format: function () {
            return ko;
          },
          RGBA_ASTC_10x5_Format: function () {
            return So;
          },
          RGBA_ASTC_10x6_Format: function () {
            return Mo;
          },
          RGBA_ASTC_10x8_Format: function () {
            return Eo;
          },
          RGBA_ASTC_12x10_Format: function () {
            return To;
          },
          RGBA_ASTC_12x12_Format: function () {
            return Co;
          },
          RGBA_ASTC_4x4_Format: function () {
            return vo;
          },
          RGBA_ASTC_5x4_Format: function () {
            return mo;
          },
          RGBA_ASTC_5x5_Format: function () {
            return go;
          },
          RGBA_ASTC_6x5_Format: function () {
            return yo;
          },
          RGBA_ASTC_6x6_Format: function () {
            return bo;
          },
          RGBA_ASTC_8x5_Format: function () {
            return xo;
          },
          RGBA_ASTC_8x6_Format: function () {
            return wo;
          },
          RGBA_ASTC_8x8_Format: function () {
            return _o;
          },
          RGBA_BPTC_Format: function () {
            return Ao;
          },
          RGBA_ETC2_EAC_Format: function () {
            return po;
          },
          RGBA_PVRTC_2BPPV1_Format: function () {
            return co;
          },
          RGBA_PVRTC_4BPPV1_Format: function () {
            return uo;
          },
          RGBA_S3TC_DXT1_Format: function () {
            return io;
          },
          RGBA_S3TC_DXT3_Format: function () {
            return ao;
          },
          RGBA_S3TC_DXT5_Format: function () {
            return oo;
          },
          RGBFormat: function () {
            return qa;
          },
          RGB_ETC1_Format: function () {
            return fo;
          },
          RGB_ETC2_Format: function () {
            return ho;
          },
          RGB_PVRTC_2BPPV1_Format: function () {
            return lo;
          },
          RGB_PVRTC_4BPPV1_Format: function () {
            return so;
          },
          RGB_S3TC_DXT1_Format: function () {
            return ro;
          },
          RGFormat: function () {
            return eo;
          },
          RGIntegerFormat: function () {
            return to;
          },
          RawShaderMaterial: function () {
            return nm;
          },
          Ray: function () {
            return Yl;
          },
          Raycaster: function () {
            return ty;
          },
          RectAreaLight: function () {
            return tg;
          },
          RedFormat: function () {
            return Za;
          },
          RedIntegerFormat: function () {
            return Ka;
          },
          ReinhardToneMapping: function () {
            return fa;
          },
          RepeatWrapping: function () {
            return wa;
          },
          ReplaceStencilOp: function () {
            return ts;
          },
          ReverseSubtractEquation: function () {
            return Fi;
          },
          RingBufferGeometry: function () {
            return Vv;
          },
          RingGeometry: function () {
            return Vv;
          },
          SRGBColorSpace: function () {
            return Qo;
          },
          Scene: function () {
            return Sh;
          },
          SceneUtils: function () {
            return Hb;
          },
          ShaderChunk: function () {
            return jc;
          },
          ShaderLib: function () {
            return Wc;
          },
          ShaderMaterial: function () {
            return Ec;
          },
          ShadowMaterial: function () {
            return tm;
          },
          Shape: function () {
            return fv;
          },
          ShapeBufferGeometry: function () {
            return qv;
          },
          ShapeGeometry: function () {
            return qv;
          },
          ShapePath: function () {
            return jy;
          },
          ShapeUtils: function () {
            return Fv;
          },
          ShortType: function () {
            return Ia;
          },
          Skeleton: function () {
            return np;
          },
          SkeletonHelper: function () {
            return my;
          },
          SkinnedMesh: function () {
            return Qh;
          },
          SmoothShading: function () {
            return Ai;
          },
          Source: function () {
            return ol;
          },
          Sphere: function () {
            return Hl;
          },
          SphereBufferGeometry: function () {
            return Xv;
          },
          SphereGeometry: function () {
            return Xv;
          },
          Spherical: function () {
            return iy;
          },
          SphericalHarmonics3: function () {
            return ng;
          },
          SplineCurve: function () {
            return Jp;
          },
          SpotLight: function () {
            return qm;
          },
          SpotLightHelper: function () {
            return dy;
          },
          Sprite: function () {
            return Uh;
          },
          SpriteMaterial: function () {
            return Ch;
          },
          SrcAlphaFactor: function () {
            return Vi;
          },
          SrcAlphaSaturateFactor: function () {
            return Qi;
          },
          SrcColorFactor: function () {
            return Gi;
          },
          StaticCopyUsage: function () {
            return ws;
          },
          StaticDrawUsage: function () {
            return vs;
          },
          StaticReadUsage: function () {
            return ys;
          },
          StereoCamera: function () {
            return wg;
          },
          StreamCopyUsage: function () {
            return Ss;
          },
          StreamDrawUsage: function () {
            return gs;
          },
          StreamReadUsage: function () {
            return xs;
          },
          StringKeyframeTrack: function () {
            return Sm;
          },
          SubtractEquation: function () {
            return Ni;
          },
          SubtractiveBlending: function () {
            return Oi;
          },
          TOUCH: function () {
            return mi;
          },
          TangentSpaceNormalMap: function () {
            return Yo;
          },
          TetrahedronBufferGeometry: function () {
            return Yv;
          },
          TetrahedronGeometry: function () {
            return Yv;
          },
          TextGeometry: function () {
            return Gb;
          },
          Texture: function () {
            return ul;
          },
          TextureLoader: function () {
            return Fm;
          },
          TorusBufferGeometry: function () {
            return Jv;
          },
          TorusGeometry: function () {
            return Jv;
          },
          TorusKnotBufferGeometry: function () {
            return $v;
          },
          TorusKnotGeometry: function () {
            return $v;
          },
          Triangle: function () {
            return Lu;
          },
          TriangleFanDrawMode: function () {
            return Go;
          },
          TriangleStripDrawMode: function () {
            return jo;
          },
          TrianglesDrawMode: function () {
            return Uo;
          },
          TubeBufferGeometry: function () {
            return Qv;
          },
          TubeGeometry: function () {
            return Qv;
          },
          UVMapping: function () {
            return va;
          },
          Uint16Attribute: function () {
            return kb;
          },
          Uint16BufferAttribute: function () {
            return ju;
          },
          Uint32Attribute: function () {
            return Cb;
          },
          Uint32BufferAttribute: function () {
            return Wu;
          },
          Uint8Attribute: function () {
            return Sb;
          },
          Uint8BufferAttribute: function () {
            return Bu;
          },
          Uint8ClampedAttribute: function () {
            return Mb;
          },
          Uint8ClampedBufferAttribute: function () {
            return Hu;
          },
          Uniform: function () {
            return Zg;
          },
          UniformsLib: function () {
            return Gc;
          },
          UniformsUtils: function () {
            return Mc;
          },
          UnsignedByteType: function () {
            return za;
          },
          UnsignedInt248Type: function () {
            return Wa;
          },
          UnsignedIntType: function () {
            return Ba;
          },
          UnsignedShort4444Type: function () {
            return ja;
          },
          UnsignedShort5551Type: function () {
            return Ga;
          },
          UnsignedShortType: function () {
            return Na;
          },
          VSMShadowMap: function () {
            return Mi;
          },
          Vector2: function () {
            return Us;
          },
          Vector3: function () {
            return yl;
          },
          Vector4: function () {
            return cl;
          },
          VectorKeyframeTrack: function () {
            return Mm;
          },
          Vertex: function () {
            return xb;
          },
          VertexColors: function () {
            return fb;
          },
          VideoTexture: function () {
            return Tp;
          },
          WebGL1Renderer: function () {
            return xh;
          },
          WebGL3DRenderTarget: function () {
            return vl;
          },
          WebGLArrayRenderTarget: function () {
            return hl;
          },
          WebGLCubeRenderTarget: function () {
            return Lc;
          },
          WebGLMultipleRenderTargets: function () {
            return ml;
          },
          WebGLMultisampleRenderTarget: function () {
            return Xb;
          },
          WebGLRenderTarget: function () {
            return fl;
          },
          WebGLRenderTargetCube: function () {
            return Nb;
          },
          WebGLRenderer: function () {
            return bh;
          },
          WebGLUtils: function () {
            return ch;
          },
          WireframeGeometry: function () {
            return Zv;
          },
          WireframeHelper: function () {
            return zb;
          },
          WrapAroundEnding: function () {
            return Fo;
          },
          XHRLoader: function () {
            return Db;
          },
          ZeroCurvatureEnding: function () {
            return Io;
          },
          ZeroFactor: function () {
            return Ui;
          },
          ZeroSlopeEnding: function () {
            return No;
          },
          ZeroStencilOp: function () {
            return Ko;
          },
          _SRGBAFormat: function () {
            return ks;
          },
          sRGBEncoding: function () {
            return Vo;
          },
        });
      var t = n(2791),
        r = n.t(t, 2),
        i = n(4164);
      function a(e) {
        if (Array.isArray(e)) return e;
      }
      function o(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
        return r;
      }
      function s(e, t) {
        if (e) {
          if ("string" === typeof e) return o(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          return (
            "Object" === n && e.constructor && (n = e.constructor.name),
            "Map" === n || "Set" === n
              ? Array.from(e)
              : "Arguments" === n ||
                /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
              ? o(e, t)
              : void 0
          );
        }
      }
      function l() {
        throw new TypeError(
          "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
        );
      }
      function u(e, t) {
        return (
          a(e) ||
          (function (e, t) {
            var n =
              null == e
                ? null
                : ("undefined" !== typeof Symbol && e[Symbol.iterator]) ||
                  e["@@iterator"];
            if (null != n) {
              var r,
                i,
                a = [],
                o = !0,
                s = !1;
              try {
                for (
                  n = n.call(e);
                  !(o = (r = n.next()).done) &&
                  (a.push(r.value), !t || a.length !== t);
                  o = !0
                );
              } catch (l) {
                (s = !0), (i = l);
              } finally {
                try {
                  o || null == n.return || n.return();
                } finally {
                  if (s) throw i;
                }
              }
              return a;
            }
          })(e, t) ||
          s(e, t) ||
          l()
        );
      }
      var c = n(184),
        f = function (e) {
          var n = e.setHomeActive,
            r = (0, t.useRef)(),
            i = !1,
            a = (0, t.useMemo)(function () {
              return new IntersectionObserver(
                function () {
                  i ? (n(!1), (i = !1)) : (n(!0), (i = !0));
                },
                { root: null, rootMargin: "0px", threshold: 0.35 }
              );
            }, []);
          return (
            (0, t.useEffect)(
              function () {
                var e = r.current;
                e && a.observe(e);
              },
              [a]
            ),
            (0, c.jsxs)("div", {
              className: "Main",
              id: "1",
              ref: r,
              children: [
                (0, c.jsxs)("div", {
                  className: "subTitle",
                  children: [
                    "\ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790 ",
                    (0, c.jsx)("a", { children: "\ucd5c\ud0dc\ud638" }),
                    " \uc785\ub2c8\ub2e4.",
                  ],
                }),
                (0, c.jsx)("div", {
                  className: "wrap",
                  children: (0, c.jsxs)("div", {
                    className: "title",
                    children: [
                      'From "Hello, World!"',
                      (0, c.jsx)("br", {}),
                      "to Here",
                    ],
                  }),
                }),
              ],
            })
          );
        },
        d = function () {
          return (0, c.jsxs)("footer", {
            className: "Footer",
            children: [
              (0, c.jsxs)("div", {
                className: "madeBy",
                children: [
                  "created by ",
                  (0, c.jsx)("a", { children: "taeho choi" }),
                ],
              }),
              (0, c.jsx)("div", {
                className: "copyright",
                children: "\u24d2 2022 taeho-choi-portfolio.",
              }),
            ],
          });
        };
      var h = (function () {
          function e(e) {
            var t = this;
            (this._insertTag = function (e) {
              var n;
              (n =
                0 === t.tags.length
                  ? t.insertionPoint
                    ? t.insertionPoint.nextSibling
                    : t.prepend
                    ? t.container.firstChild
                    : t.before
                  : t.tags[t.tags.length - 1].nextSibling),
                t.container.insertBefore(e, n),
                t.tags.push(e);
            }),
              (this.isSpeedy = void 0 === e.speedy || e.speedy),
              (this.tags = []),
              (this.ctr = 0),
              (this.nonce = e.nonce),
              (this.key = e.key),
              (this.container = e.container),
              (this.prepend = e.prepend),
              (this.insertionPoint = e.insertionPoint),
              (this.before = null);
          }
          var t = e.prototype;
          return (
            (t.hydrate = function (e) {
              e.forEach(this._insertTag);
            }),
            (t.insert = function (e) {
              this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 &&
                this._insertTag(
                  (function (e) {
                    var t = document.createElement("style");
                    return (
                      t.setAttribute("data-emotion", e.key),
                      void 0 !== e.nonce && t.setAttribute("nonce", e.nonce),
                      t.appendChild(document.createTextNode("")),
                      t.setAttribute("data-s", ""),
                      t
                    );
                  })(this)
                );
              var t = this.tags[this.tags.length - 1];
              if (this.isSpeedy) {
                var n = (function (e) {
                  if (e.sheet) return e.sheet;
                  for (var t = 0; t < document.styleSheets.length; t++)
                    if (document.styleSheets[t].ownerNode === e)
                      return document.styleSheets[t];
                })(t);
                try {
                  n.insertRule(e, n.cssRules.length);
                } catch ($y) {
                  0;
                }
              } else t.appendChild(document.createTextNode(e));
              this.ctr++;
            }),
            (t.flush = function () {
              this.tags.forEach(function (e) {
                return e.parentNode && e.parentNode.removeChild(e);
              }),
                (this.tags = []),
                (this.ctr = 0);
            }),
            e
          );
        })(),
        p = Math.abs,
        v = String.fromCharCode,
        m = Object.assign;
      function g(e) {
        return e.trim();
      }
      function y(e, t, n) {
        return e.replace(t, n);
      }
      function b(e, t) {
        return e.indexOf(t);
      }
      function x(e, t) {
        return 0 | e.charCodeAt(t);
      }
      function w(e, t, n) {
        return e.slice(t, n);
      }
      function _(e) {
        return e.length;
      }
      function S(e) {
        return e.length;
      }
      function M(e, t) {
        return t.push(e), e;
      }
      var E = 1,
        k = 1,
        T = 0,
        C = 0,
        A = 0,
        P = "";
      function L(e, t, n, r, i, a, o) {
        return {
          value: e,
          root: t,
          parent: n,
          type: r,
          props: i,
          children: a,
          line: E,
          column: k,
          length: o,
          return: "",
        };
      }
      function R(e, t) {
        return m(
          L("", null, null, "", null, null, 0),
          e,
          { length: -e.length },
          t
        );
      }
      function O() {
        return (A = C > 0 ? x(P, --C) : 0), k--, 10 === A && ((k = 1), E--), A;
      }
      function z() {
        return (A = C < T ? x(P, C++) : 0), k++, 10 === A && ((k = 1), E++), A;
      }
      function D() {
        return x(P, C);
      }
      function I() {
        return C;
      }
      function N(e, t) {
        return w(P, e, t);
      }
      function F(e) {
        switch (e) {
          case 0:
          case 9:
          case 10:
          case 13:
          case 32:
            return 5;
          case 33:
          case 43:
          case 44:
          case 47:
          case 62:
          case 64:
          case 126:
          case 59:
          case 123:
          case 125:
            return 4;
          case 58:
            return 3;
          case 34:
          case 39:
          case 40:
          case 91:
            return 2;
          case 41:
          case 93:
            return 1;
        }
        return 0;
      }
      function B(e) {
        return (E = k = 1), (T = _((P = e))), (C = 0), [];
      }
      function H(e) {
        return (P = ""), e;
      }
      function U(e) {
        return g(N(C - 1, W(91 === e ? e + 2 : 40 === e ? e + 1 : e)));
      }
      function j(e) {
        for (; (A = D()) && A < 33; ) z();
        return F(e) > 2 || F(A) > 3 ? "" : " ";
      }
      function G(e, t) {
        for (
          ;
          --t &&
          z() &&
          !(A < 48 || A > 102 || (A > 57 && A < 65) || (A > 70 && A < 97));

        );
        return N(e, I() + (t < 6 && 32 == D() && 32 == z()));
      }
      function W(e) {
        for (; z(); )
          switch (A) {
            case e:
              return C;
            case 34:
            case 39:
              34 !== e && 39 !== e && W(A);
              break;
            case 40:
              41 === e && W(e);
              break;
            case 92:
              z();
          }
        return C;
      }
      function V(e, t) {
        for (; z() && e + A !== 57 && (e + A !== 84 || 47 !== D()); );
        return "/*" + N(t, C - 1) + "*" + v(47 === e ? e : z());
      }
      function q(e) {
        for (; !F(D()); ) z();
        return N(e, C);
      }
      var X = "-ms-",
        Y = "-moz-",
        J = "-webkit-",
        $ = "comm",
        Q = "rule",
        Z = "decl",
        K = "@keyframes";
      function ee(e, t) {
        for (var n = "", r = S(e), i = 0; i < r; i++)
          n += t(e[i], i, e, t) || "";
        return n;
      }
      function te(e, t, n, r) {
        switch (e.type) {
          case "@import":
          case Z:
            return (e.return = e.return || e.value);
          case $:
            return "";
          case K:
            return (e.return = e.value + "{" + ee(e.children, r) + "}");
          case Q:
            e.value = e.props.join(",");
        }
        return _((n = ee(e.children, r)))
          ? (e.return = e.value + "{" + n + "}")
          : "";
      }
      function ne(e, t) {
        switch (
          (function (e, t) {
            return (
              (((((((t << 2) ^ x(e, 0)) << 2) ^ x(e, 1)) << 2) ^ x(e, 2)) <<
                2) ^
              x(e, 3)
            );
          })(e, t)
        ) {
          case 5103:
            return J + "print-" + e + e;
          case 5737:
          case 4201:
          case 3177:
          case 3433:
          case 1641:
          case 4457:
          case 2921:
          case 5572:
          case 6356:
          case 5844:
          case 3191:
          case 6645:
          case 3005:
          case 6391:
          case 5879:
          case 5623:
          case 6135:
          case 4599:
          case 4855:
          case 4215:
          case 6389:
          case 5109:
          case 5365:
          case 5621:
          case 3829:
            return J + e + e;
          case 5349:
          case 4246:
          case 4810:
          case 6968:
          case 2756:
            return J + e + Y + e + X + e + e;
          case 6828:
          case 4268:
            return J + e + X + e + e;
          case 6165:
            return J + e + X + "flex-" + e + e;
          case 5187:
            return (
              J +
              e +
              y(e, /(\w+).+(:[^]+)/, "-webkit-box-$1$2-ms-flex-$1$2") +
              e
            );
          case 5443:
            return J + e + X + "flex-item-" + y(e, /flex-|-self/, "") + e;
          case 4675:
            return (
              J +
              e +
              X +
              "flex-line-pack" +
              y(e, /align-content|flex-|-self/, "") +
              e
            );
          case 5548:
            return J + e + X + y(e, "shrink", "negative") + e;
          case 5292:
            return J + e + X + y(e, "basis", "preferred-size") + e;
          case 6060:
            return (
              J +
              "box-" +
              y(e, "-grow", "") +
              J +
              e +
              X +
              y(e, "grow", "positive") +
              e
            );
          case 4554:
            return J + y(e, /([^-])(transform)/g, "$1-webkit-$2") + e;
          case 6187:
            return (
              y(
                y(y(e, /(zoom-|grab)/, J + "$1"), /(image-set)/, J + "$1"),
                e,
                ""
              ) + e
            );
          case 5495:
          case 3959:
            return y(e, /(image-set\([^]*)/, J + "$1$`$1");
          case 4968:
            return (
              y(
                y(
                  e,
                  /(.+:)(flex-)?(.*)/,
                  "-webkit-box-pack:$3-ms-flex-pack:$3"
                ),
                /s.+-b[^;]+/,
                "justify"
              ) +
              J +
              e +
              e
            );
          case 4095:
          case 3583:
          case 4068:
          case 2532:
            return y(e, /(.+)-inline(.+)/, J + "$1$2") + e;
          case 8116:
          case 7059:
          case 5753:
          case 5535:
          case 5445:
          case 5701:
          case 4933:
          case 4677:
          case 5533:
          case 5789:
          case 5021:
          case 4765:
            if (_(e) - 1 - t > 6)
              switch (x(e, t + 1)) {
                case 109:
                  if (45 !== x(e, t + 4)) break;
                case 102:
                  return (
                    y(
                      e,
                      /(.+:)(.+)-([^]+)/,
                      "$1-webkit-$2-$3$1" +
                        Y +
                        (108 == x(e, t + 3) ? "$3" : "$2-$3")
                    ) + e
                  );
                case 115:
                  return ~b(e, "stretch")
                    ? ne(y(e, "stretch", "fill-available"), t) + e
                    : e;
              }
            break;
          case 4949:
            if (115 !== x(e, t + 1)) break;
          case 6444:
            switch (x(e, _(e) - 3 - (~b(e, "!important") && 10))) {
              case 107:
                return y(e, ":", ":" + J) + e;
              case 101:
                return (
                  y(
                    e,
                    /(.+:)([^;!]+)(;|!.+)?/,
                    "$1" +
                      J +
                      (45 === x(e, 14) ? "inline-" : "") +
                      "box$3$1" +
                      J +
                      "$2$3$1" +
                      X +
                      "$2box$3"
                  ) + e
                );
            }
            break;
          case 5936:
            switch (x(e, t + 11)) {
              case 114:
                return J + e + X + y(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
              case 108:
                return J + e + X + y(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
              case 45:
                return J + e + X + y(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
            }
            return J + e + X + e + e;
        }
        return e;
      }
      function re(e) {
        return H(ie("", null, null, null, [""], (e = B(e)), 0, [0], e));
      }
      function ie(e, t, n, r, i, a, o, s, l) {
        for (
          var u = 0,
            c = 0,
            f = o,
            d = 0,
            h = 0,
            p = 0,
            m = 1,
            g = 1,
            x = 1,
            w = 0,
            S = "",
            E = i,
            k = a,
            T = r,
            C = S;
          g;

        )
          switch (((p = w), (w = z()))) {
            case 40:
              if (108 != p && 58 == C.charCodeAt(f - 1)) {
                -1 != b((C += y(U(w), "&", "&\f")), "&\f") && (x = -1);
                break;
              }
            case 34:
            case 39:
            case 91:
              C += U(w);
              break;
            case 9:
            case 10:
            case 13:
            case 32:
              C += j(p);
              break;
            case 92:
              C += G(I() - 1, 7);
              continue;
            case 47:
              switch (D()) {
                case 42:
                case 47:
                  M(oe(V(z(), I()), t, n), l);
                  break;
                default:
                  C += "/";
              }
              break;
            case 123 * m:
              s[u++] = _(C) * x;
            case 125 * m:
            case 59:
            case 0:
              switch (w) {
                case 0:
                case 125:
                  g = 0;
                case 59 + c:
                  h > 0 &&
                    _(C) - f &&
                    M(
                      h > 32
                        ? se(C + ";", r, n, f - 1)
                        : se(y(C, " ", "") + ";", r, n, f - 2),
                      l
                    );
                  break;
                case 59:
                  C += ";";
                default:
                  if (
                    (M(
                      (T = ae(C, t, n, u, c, i, s, S, (E = []), (k = []), f)),
                      a
                    ),
                    123 === w)
                  )
                    if (0 === c) ie(C, t, T, T, E, a, f, s, k);
                    else
                      switch (d) {
                        case 100:
                        case 109:
                        case 115:
                          ie(
                            e,
                            T,
                            T,
                            r &&
                              M(ae(e, T, T, 0, 0, i, s, S, i, (E = []), f), k),
                            i,
                            k,
                            f,
                            s,
                            r ? E : k
                          );
                          break;
                        default:
                          ie(C, T, T, T, [""], k, 0, s, k);
                      }
              }
              (u = c = h = 0), (m = x = 1), (S = C = ""), (f = o);
              break;
            case 58:
              (f = 1 + _(C)), (h = p);
            default:
              if (m < 1)
                if (123 == w) --m;
                else if (125 == w && 0 == m++ && 125 == O()) continue;
              switch (((C += v(w)), w * m)) {
                case 38:
                  x = c > 0 ? 1 : ((C += "\f"), -1);
                  break;
                case 44:
                  (s[u++] = (_(C) - 1) * x), (x = 1);
                  break;
                case 64:
                  45 === D() && (C += U(z())),
                    (d = D()),
                    (c = f = _((S = C += q(I())))),
                    w++;
                  break;
                case 45:
                  45 === p && 2 == _(C) && (m = 0);
              }
          }
        return a;
      }
      function ae(e, t, n, r, i, a, o, s, l, u, c) {
        for (
          var f = i - 1, d = 0 === i ? a : [""], h = S(d), v = 0, m = 0, b = 0;
          v < r;
          ++v
        )
          for (
            var x = 0, _ = w(e, f + 1, (f = p((m = o[v])))), M = e;
            x < h;
            ++x
          )
            (M = g(m > 0 ? d[x] + " " + _ : y(_, /&\f/g, d[x]))) &&
              (l[b++] = M);
        return L(e, t, n, 0 === i ? Q : s, l, u, c);
      }
      function oe(e, t, n) {
        return L(e, t, n, $, v(A), w(e, 2, -2), 0);
      }
      function se(e, t, n, r) {
        return L(e, t, n, Z, w(e, 0, r), w(e, r + 1, -1), r);
      }
      var le = function (e, t, n) {
          for (
            var r = 0, i = 0;
            (r = i), (i = D()), 38 === r && 12 === i && (t[n] = 1), !F(i);

          )
            z();
          return N(e, C);
        },
        ue = function (e, t) {
          return H(
            (function (e, t) {
              var n = -1,
                r = 44;
              do {
                switch (F(r)) {
                  case 0:
                    38 === r && 12 === D() && (t[n] = 1),
                      (e[n] += le(C - 1, t, n));
                    break;
                  case 2:
                    e[n] += U(r);
                    break;
                  case 4:
                    if (44 === r) {
                      (e[++n] = 58 === D() ? "&\f" : ""), (t[n] = e[n].length);
                      break;
                    }
                  default:
                    e[n] += v(r);
                }
              } while ((r = z()));
              return e;
            })(B(e), t)
          );
        },
        ce = new WeakMap(),
        fe = function (e) {
          if ("rule" === e.type && e.parent && !(e.length < 1)) {
            for (
              var t = e.value,
                n = e.parent,
                r = e.column === n.column && e.line === n.line;
              "rule" !== n.type;

            )
              if (!(n = n.parent)) return;
            if (
              (1 !== e.props.length || 58 === t.charCodeAt(0) || ce.get(n)) &&
              !r
            ) {
              ce.set(e, !0);
              for (
                var i = [], a = ue(t, i), o = n.props, s = 0, l = 0;
                s < a.length;
                s++
              )
                for (var u = 0; u < o.length; u++, l++)
                  e.props[l] = i[s]
                    ? a[s].replace(/&\f/g, o[u])
                    : o[u] + " " + a[s];
            }
          }
        },
        de = function (e) {
          if ("decl" === e.type) {
            var t = e.value;
            108 === t.charCodeAt(0) &&
              98 === t.charCodeAt(2) &&
              ((e.return = ""), (e.value = ""));
          }
        },
        he = [
          function (e, t, n, r) {
            if (e.length > -1 && !e.return)
              switch (e.type) {
                case Z:
                  e.return = ne(e.value, e.length);
                  break;
                case K:
                  return ee([R(e, { value: y(e.value, "@", "@" + J) })], r);
                case Q:
                  if (e.length)
                    return (function (e, t) {
                      return e.map(t).join("");
                    })(e.props, function (t) {
                      switch (
                        (function (e, t) {
                          return (e = t.exec(e)) ? e[0] : e;
                        })(t, /(::plac\w+|:read-\w+)/)
                      ) {
                        case ":read-only":
                        case ":read-write":
                          return ee(
                            [
                              R(e, {
                                props: [y(t, /:(read-\w+)/, ":-moz-$1")],
                              }),
                            ],
                            r
                          );
                        case "::placeholder":
                          return ee(
                            [
                              R(e, {
                                props: [
                                  y(t, /:(plac\w+)/, ":-webkit-input-$1"),
                                ],
                              }),
                              R(e, { props: [y(t, /:(plac\w+)/, ":-moz-$1")] }),
                              R(e, {
                                props: [y(t, /:(plac\w+)/, X + "input-$1")],
                              }),
                            ],
                            r
                          );
                      }
                      return "";
                    });
              }
          },
        ],
        pe = function (e) {
          var t = e.key;
          if ("css" === t) {
            var n = document.querySelectorAll(
              "style[data-emotion]:not([data-s])"
            );
            Array.prototype.forEach.call(n, function (e) {
              -1 !== e.getAttribute("data-emotion").indexOf(" ") &&
                (document.head.appendChild(e), e.setAttribute("data-s", ""));
            });
          }
          var r = e.stylisPlugins || he;
          var i,
            a,
            o = {},
            s = [];
          (i = e.container || document.head),
            Array.prototype.forEach.call(
              document.querySelectorAll('style[data-emotion^="' + t + ' "]'),
              function (e) {
                for (
                  var t = e.getAttribute("data-emotion").split(" "), n = 1;
                  n < t.length;
                  n++
                )
                  o[t[n]] = !0;
                s.push(e);
              }
            );
          var l,
            u,
            c = [
              te,
              ((u = function (e) {
                l.insert(e);
              }),
              function (e) {
                e.root || ((e = e.return) && u(e));
              }),
            ],
            f = (function (e) {
              var t = S(e);
              return function (n, r, i, a) {
                for (var o = "", s = 0; s < t; s++) o += e[s](n, r, i, a) || "";
                return o;
              };
            })([fe, de].concat(r, c));
          a = function (e, t, n, r) {
            (l = n),
              ee(re(e ? e + "{" + t.styles + "}" : t.styles), f),
              r && (d.inserted[t.name] = !0);
          };
          var d = {
            key: t,
            sheet: new h({
              key: t,
              container: i,
              nonce: e.nonce,
              speedy: e.speedy,
              prepend: e.prepend,
              insertionPoint: e.insertionPoint,
            }),
            nonce: e.nonce,
            inserted: o,
            registered: {},
            insert: a,
          };
          return d.sheet.hydrate(s), d;
        };
      function ve(e, t, n) {
        var r = "";
        return (
          n.split(" ").forEach(function (n) {
            void 0 !== e[n] ? t.push(e[n] + ";") : (r += n + " ");
          }),
          r
        );
      }
      var me = function (e, t, n) {
          var r = e.key + "-" + t.name;
          !1 === n &&
            void 0 === e.registered[r] &&
            (e.registered[r] = t.styles);
        },
        ge = function (e, t, n) {
          me(e, t, n);
          var r = e.key + "-" + t.name;
          if (void 0 === e.inserted[t.name]) {
            var i = t;
            do {
              e.insert(t === i ? "." + r : "", i, e.sheet, !0);
              i = i.next;
            } while (void 0 !== i);
          }
        };
      var ye = function (e) {
          for (var t, n = 0, r = 0, i = e.length; i >= 4; ++r, i -= 4)
            (t =
              1540483477 *
                (65535 &
                  (t =
                    (255 & e.charCodeAt(r)) |
                    ((255 & e.charCodeAt(++r)) << 8) |
                    ((255 & e.charCodeAt(++r)) << 16) |
                    ((255 & e.charCodeAt(++r)) << 24))) +
              ((59797 * (t >>> 16)) << 16)),
              (n =
                (1540483477 * (65535 & (t ^= t >>> 24)) +
                  ((59797 * (t >>> 16)) << 16)) ^
                (1540483477 * (65535 & n) + ((59797 * (n >>> 16)) << 16)));
          switch (i) {
            case 3:
              n ^= (255 & e.charCodeAt(r + 2)) << 16;
            case 2:
              n ^= (255 & e.charCodeAt(r + 1)) << 8;
            case 1:
              n =
                1540483477 * (65535 & (n ^= 255 & e.charCodeAt(r))) +
                ((59797 * (n >>> 16)) << 16);
          }
          return (
            ((n =
              1540483477 * (65535 & (n ^= n >>> 13)) +
              ((59797 * (n >>> 16)) << 16)) ^
              (n >>> 15)) >>>
            0
          ).toString(36);
        },
        be = {
          animationIterationCount: 1,
          borderImageOutset: 1,
          borderImageSlice: 1,
          borderImageWidth: 1,
          boxFlex: 1,
          boxFlexGroup: 1,
          boxOrdinalGroup: 1,
          columnCount: 1,
          columns: 1,
          flex: 1,
          flexGrow: 1,
          flexPositive: 1,
          flexShrink: 1,
          flexNegative: 1,
          flexOrder: 1,
          gridRow: 1,
          gridRowEnd: 1,
          gridRowSpan: 1,
          gridRowStart: 1,
          gridColumn: 1,
          gridColumnEnd: 1,
          gridColumnSpan: 1,
          gridColumnStart: 1,
          msGridRow: 1,
          msGridRowSpan: 1,
          msGridColumn: 1,
          msGridColumnSpan: 1,
          fontWeight: 1,
          lineHeight: 1,
          opacity: 1,
          order: 1,
          orphans: 1,
          tabSize: 1,
          widows: 1,
          zIndex: 1,
          zoom: 1,
          WebkitLineClamp: 1,
          fillOpacity: 1,
          floodOpacity: 1,
          stopOpacity: 1,
          strokeDasharray: 1,
          strokeDashoffset: 1,
          strokeMiterlimit: 1,
          strokeOpacity: 1,
          strokeWidth: 1,
        };
      var xe = /[A-Z]|^ms/g,
        we = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
        _e = function (e) {
          return 45 === e.charCodeAt(1);
        },
        Se = function (e) {
          return null != e && "boolean" !== typeof e;
        },
        Me = (function (e) {
          var t = Object.create(null);
          return function (n) {
            return void 0 === t[n] && (t[n] = e(n)), t[n];
          };
        })(function (e) {
          return _e(e) ? e : e.replace(xe, "-$&").toLowerCase();
        }),
        Ee = function (e, t) {
          switch (e) {
            case "animation":
            case "animationName":
              if ("string" === typeof t)
                return t.replace(we, function (e, t, n) {
                  return (Te = { name: t, styles: n, next: Te }), t;
                });
          }
          return 1 === be[e] || _e(e) || "number" !== typeof t || 0 === t
            ? t
            : t + "px";
        };
      function ke(e, t, n) {
        if (null == n) return "";
        if (void 0 !== n.__emotion_styles) return n;
        switch (typeof n) {
          case "boolean":
            return "";
          case "object":
            if (1 === n.anim)
              return (
                (Te = { name: n.name, styles: n.styles, next: Te }), n.name
              );
            if (void 0 !== n.styles) {
              var r = n.next;
              if (void 0 !== r)
                for (; void 0 !== r; )
                  (Te = { name: r.name, styles: r.styles, next: Te }),
                    (r = r.next);
              return n.styles + ";";
            }
            return (function (e, t, n) {
              var r = "";
              if (Array.isArray(n))
                for (var i = 0; i < n.length; i++) r += ke(e, t, n[i]) + ";";
              else
                for (var a in n) {
                  var o = n[a];
                  if ("object" !== typeof o)
                    null != t && void 0 !== t[o]
                      ? (r += a + "{" + t[o] + "}")
                      : Se(o) && (r += Me(a) + ":" + Ee(a, o) + ";");
                  else if (
                    !Array.isArray(o) ||
                    "string" !== typeof o[0] ||
                    (null != t && void 0 !== t[o[0]])
                  ) {
                    var s = ke(e, t, o);
                    switch (a) {
                      case "animation":
                      case "animationName":
                        r += Me(a) + ":" + s + ";";
                        break;
                      default:
                        r += a + "{" + s + "}";
                    }
                  } else
                    for (var l = 0; l < o.length; l++)
                      Se(o[l]) && (r += Me(a) + ":" + Ee(a, o[l]) + ";");
                }
              return r;
            })(e, t, n);
          case "function":
            if (void 0 !== e) {
              var i = Te,
                a = n(e);
              return (Te = i), ke(e, t, a);
            }
        }
        if (null == t) return n;
        var o = t[n];
        return void 0 !== o ? o : n;
      }
      var Te,
        Ce = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
      var Ae = function (e, t, n) {
          if (
            1 === e.length &&
            "object" === typeof e[0] &&
            null !== e[0] &&
            void 0 !== e[0].styles
          )
            return e[0];
          var r = !0,
            i = "";
          Te = void 0;
          var a = e[0];
          null == a || void 0 === a.raw
            ? ((r = !1), (i += ke(n, t, a)))
            : (i += a[0]);
          for (var o = 1; o < e.length; o++)
            (i += ke(n, t, e[o])), r && (i += a[o]);
          Ce.lastIndex = 0;
          for (var s, l = ""; null !== (s = Ce.exec(i)); ) l += "-" + s[1];
          return { name: ye(i) + l, styles: i, next: Te };
        },
        Pe = {}.hasOwnProperty,
        Le = (0, t.createContext)(
          "undefined" !== typeof HTMLElement ? pe({ key: "css" }) : null
        );
      Le.Provider;
      var Re = function (e) {
          return (0, t.forwardRef)(function (n, r) {
            var i = (0, t.useContext)(Le);
            return e(n, i, r);
          });
        },
        Oe = (0, t.createContext)({});
      var ze = r.useInsertionEffect
        ? r.useInsertionEffect
        : function (e) {
            e();
          };
      function De(e) {
        ze(e);
      }
      var Ie = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__",
        Ne = function (e, t) {
          var n = {};
          for (var r in t) Pe.call(t, r) && (n[r] = t[r]);
          return (n[Ie] = e), n;
        },
        Fe = function (e) {
          var t = e.cache,
            n = e.serialized,
            r = e.isStringTag;
          me(t, n, r);
          De(function () {
            return ge(t, n, r);
          });
          return null;
        },
        Be = Re(function (e, n, r) {
          var i = e.css;
          "string" === typeof i &&
            void 0 !== n.registered[i] &&
            (i = n.registered[i]);
          var a = e[Ie],
            o = [i],
            s = "";
          "string" === typeof e.className
            ? (s = ve(n.registered, o, e.className))
            : null != e.className && (s = e.className + " ");
          var l = Ae(o, void 0, (0, t.useContext)(Oe));
          s += n.key + "-" + l.name;
          var u = {};
          for (var c in e)
            Pe.call(e, c) && "css" !== c && c !== Ie && (u[c] = e[c]);
          return (
            (u.ref = r),
            (u.className = s),
            (0, t.createElement)(
              t.Fragment,
              null,
              (0, t.createElement)(Fe, {
                cache: n,
                serialized: l,
                isStringTag: "string" === typeof a,
              }),
              (0, t.createElement)(a, u)
            )
          );
        });
      n(2110);
      var He = function (e, n) {
        var r = arguments;
        if (null == n || !Pe.call(n, "css"))
          return t.createElement.apply(void 0, r);
        var i = r.length,
          a = new Array(i);
        (a[0] = Be), (a[1] = Ne(e, n));
        for (var o = 2; o < i; o++) a[o] = r[o];
        return t.createElement.apply(null, a);
      };
      r.useInsertionEffect ? r.useInsertionEffect : t.useLayoutEffect;
      function Ue() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return Ae(t);
      }
      var je = function () {
          var e = Ue.apply(void 0, arguments),
            t = "animation-" + e.name;
          return {
            name: t,
            styles: "@keyframes " + t + "{" + e.styles + "}",
            anim: 1,
            toString: function () {
              return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
            },
          };
        },
        Ge = function e(t) {
          for (var n = t.length, r = 0, i = ""; r < n; r++) {
            var a = t[r];
            if (null != a) {
              var o = void 0;
              switch (typeof a) {
                case "boolean":
                  break;
                case "object":
                  if (Array.isArray(a)) o = e(a);
                  else
                    for (var s in ((o = ""), a))
                      a[s] && s && (o && (o += " "), (o += s));
                  break;
                default:
                  o = a;
              }
              o && (i && (i += " "), (i += o));
            }
          }
          return i;
        };
      function We(e, t, n) {
        var r = [],
          i = ve(e, r, n);
        return r.length < 2 ? n : i + t(r);
      }
      var Ve = function (e) {
          var t = e.cache,
            n = e.serializedArr;
          De(function () {
            for (var e = 0; e < n.length; e++) ge(t, n[e], !1);
          });
          return null;
        },
        qe = Re(function (e, n) {
          var r = [],
            i = function () {
              for (
                var e = arguments.length, t = new Array(e), i = 0;
                i < e;
                i++
              )
                t[i] = arguments[i];
              var a = Ae(t, n.registered);
              return r.push(a), me(n, a, !1), n.key + "-" + a.name;
            },
            a = {
              css: i,
              cx: function () {
                for (
                  var e = arguments.length, t = new Array(e), r = 0;
                  r < e;
                  r++
                )
                  t[r] = arguments[r];
                return We(n.registered, i, Ge(t));
              },
              theme: (0, t.useContext)(Oe),
            },
            o = e.children(a);
          return (
            !0,
            (0, t.createElement)(
              t.Fragment,
              null,
              (0, t.createElement)(Ve, { cache: n, serializedArr: r }),
              o
            )
          );
        });
      function Xe() {
        return (
          (Xe =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }),
          Xe.apply(this, arguments)
        );
      }
      function Ye(e, t) {
        return (
          (Ye =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            }),
          Ye(e, t)
        );
      }
      var Je = new Map(),
        $e = new WeakMap(),
        Qe = 0,
        Ze = void 0;
      function Ke(e) {
        return Object.keys(e)
          .sort()
          .filter(function (t) {
            return void 0 !== e[t];
          })
          .map(function (t) {
            return (
              t +
              "_" +
              ("root" === t
                ? (function (e) {
                    return e
                      ? ($e.has(e) || ((Qe += 1), $e.set(e, Qe.toString())),
                        $e.get(e))
                      : "0";
                  })(e.root)
                : e[t])
            );
          })
          .toString();
      }
      function et(e, t, n, r) {
        if (
          (void 0 === n && (n = {}),
          void 0 === r && (r = Ze),
          "undefined" === typeof window.IntersectionObserver && void 0 !== r)
        ) {
          var i = e.getBoundingClientRect();
          return (
            t(r, {
              isIntersecting: r,
              target: e,
              intersectionRatio:
                "number" === typeof n.threshold ? n.threshold : 0,
              time: 0,
              boundingClientRect: i,
              intersectionRect: i,
              rootBounds: i,
            }),
            function () {}
          );
        }
        var a = (function (e) {
            var t = Ke(e),
              n = Je.get(t);
            if (!n) {
              var r,
                i = new Map(),
                a = new IntersectionObserver(function (t) {
                  t.forEach(function (t) {
                    var n,
                      a =
                        t.isIntersecting &&
                        r.some(function (e) {
                          return t.intersectionRatio >= e;
                        });
                    e.trackVisibility &&
                      "undefined" === typeof t.isVisible &&
                      (t.isVisible = a),
                      null == (n = i.get(t.target)) ||
                        n.forEach(function (e) {
                          e(a, t);
                        });
                  });
                }, e);
              (r =
                a.thresholds ||
                (Array.isArray(e.threshold)
                  ? e.threshold
                  : [e.threshold || 0])),
                (n = { id: t, observer: a, elements: i }),
                Je.set(t, n);
            }
            return n;
          })(n),
          o = a.id,
          s = a.observer,
          l = a.elements,
          u = l.get(e) || [];
        return (
          l.has(e) || l.set(e, u),
          u.push(t),
          s.observe(e),
          function () {
            u.splice(u.indexOf(t), 1),
              0 === u.length && (l.delete(e), s.unobserve(e)),
              0 === l.size && (s.disconnect(), Je.delete(o));
          }
        );
      }
      var tt = [
        "children",
        "as",
        "triggerOnce",
        "threshold",
        "root",
        "rootMargin",
        "onChange",
        "skip",
        "trackVisibility",
        "delay",
        "initialInView",
        "fallbackInView",
      ];
      function nt(e) {
        return "function" !== typeof e.children;
      }
      var rt = (function (e) {
        var n, r;
        function i(t) {
          var n;
          return (
            ((n = e.call(this, t) || this).node = null),
            (n._unobserveCb = null),
            (n.handleNode = function (e) {
              n.node &&
                (n.unobserve(),
                e ||
                  n.props.triggerOnce ||
                  n.props.skip ||
                  n.setState({
                    inView: !!n.props.initialInView,
                    entry: void 0,
                  })),
                (n.node = e || null),
                n.observeNode();
            }),
            (n.handleChange = function (e, t) {
              e && n.props.triggerOnce && n.unobserve(),
                nt(n.props) || n.setState({ inView: e, entry: t }),
                n.props.onChange && n.props.onChange(e, t);
            }),
            (n.state = { inView: !!t.initialInView, entry: void 0 }),
            n
          );
        }
        (r = e),
          ((n = i).prototype = Object.create(r.prototype)),
          (n.prototype.constructor = n),
          Ye(n, r);
        var a = i.prototype;
        return (
          (a.componentDidUpdate = function (e) {
            (e.rootMargin === this.props.rootMargin &&
              e.root === this.props.root &&
              e.threshold === this.props.threshold &&
              e.skip === this.props.skip &&
              e.trackVisibility === this.props.trackVisibility &&
              e.delay === this.props.delay) ||
              (this.unobserve(), this.observeNode());
          }),
          (a.componentWillUnmount = function () {
            this.unobserve(), (this.node = null);
          }),
          (a.observeNode = function () {
            if (this.node && !this.props.skip) {
              var e = this.props,
                t = e.threshold,
                n = e.root,
                r = e.rootMargin,
                i = e.trackVisibility,
                a = e.delay,
                o = e.fallbackInView;
              this._unobserveCb = et(
                this.node,
                this.handleChange,
                {
                  threshold: t,
                  root: n,
                  rootMargin: r,
                  trackVisibility: i,
                  delay: a,
                },
                o
              );
            }
          }),
          (a.unobserve = function () {
            this._unobserveCb &&
              (this._unobserveCb(), (this._unobserveCb = null));
          }),
          (a.render = function () {
            if (!nt(this.props)) {
              var e = this.state,
                n = e.inView,
                r = e.entry;
              return this.props.children({
                inView: n,
                entry: r,
                ref: this.handleNode,
              });
            }
            var i = this.props,
              a = i.children,
              o = i.as,
              s = (function (e, t) {
                if (null == e) return {};
                var n,
                  r,
                  i = {},
                  a = Object.keys(e);
                for (r = 0; r < a.length; r++)
                  (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
                return i;
              })(i, tt);
            return t.createElement(
              o || "div",
              Xe({ ref: this.handleNode }, s),
              a
            );
          }),
          i
        );
      })(t.Component);
      (rt.displayName = "InView"),
        (rt.defaultProps = {
          threshold: 0,
          triggerOnce: !1,
          initialInView: !1,
        });
      var it,
        at = n(7441),
        ot = c.Fragment;
      function st(e, t, n) {
        return Pe.call(t, "css")
          ? (0, c.jsx)(Be, Ne(e, t), n)
          : (0, c.jsx)(e, t, n);
      }
      function lt() {
        return (
          (lt =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }),
          lt.apply(this, arguments)
        );
      }
      function ut(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = {},
          a = Object.keys(e);
        for (r = 0; r < a.length; r++)
          (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
        return i;
      }
      function ct(e, t) {
        return t || (t = e.slice(0)), (e.raw = t), e;
      }
      var ft,
        dt,
        ht,
        pt = je(
          it ||
            (it = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(-100%, 0, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        );
      function vt(e) {
        var t = e.duration,
          n = void 0 === t ? 1e3 : t,
          r = e.delay,
          i = void 0 === r ? 0 : r,
          a = e.timingFunction,
          o = void 0 === a ? "ease" : a,
          s = e.keyframes,
          l = void 0 === s ? pt : s,
          u = e.iterationCount,
          c = void 0 === u ? 1 : u;
        return Ue(
          ft ||
            (ft = ct([
              "\n    animation-duration: ",
              "ms;\n    animation-timing-function: ",
              ";\n    animation-delay: ",
              "ms;\n    animation-name: ",
              ";\n    animation-direction: normal;\n    animation-fill-mode: both;\n    animation-iteration-count: ",
              ";\n  ",
            ])),
          n,
          o,
          i,
          l,
          c
        );
      }
      var mt,
        gt,
        yt,
        bt,
        xt,
        wt,
        _t,
        St,
        Mt,
        Et,
        kt,
        Tt,
        Ct,
        At = Ue(dt || (dt = ct(["\n  opacity: 0;\n"]))),
        Pt = Ue(
          ht || (ht = ct(["\n  display: inline-block;\n  white-space: pre;\n"]))
        ),
        Lt = function e(n) {
          var r,
            i = n.cascade,
            a = void 0 !== i && i,
            o = n.damping,
            s = void 0 === o ? 0.5 : o,
            l = n.delay,
            u = void 0 === l ? 0 : l,
            c = n.duration,
            f = void 0 === c ? 1e3 : c,
            d = n.fraction,
            h = void 0 === d ? 0 : d,
            p = n.keyframes,
            v = void 0 === p ? pt : p,
            m = n.triggerOnce,
            g = void 0 !== m && m,
            y = n.css,
            b = n.className,
            x = n.style,
            w = n.childClassName,
            _ = n.childStyle,
            S = n.children,
            M = n.onVisibilityChange;
          if (null === (r = S) || void 0 === r) return null;
          if (
            (function (e) {
              return (
                "string" === typeof e ||
                "number" === typeof e ||
                "boolean" === typeof e
              );
            })(S)
          ) {
            var E = String(S);
            return a
              ? st(rt, {
                  threshold: h,
                  triggerOnce: g,
                  onChange: M,
                  children: function (e) {
                    var t = e.inView;
                    return st("div", {
                      ref: e.ref,
                      css: [y, Pt],
                      className: b,
                      style: x,
                      children: E.split("").map(function (e, n) {
                        return st(
                          "span",
                          {
                            css: t
                              ? vt({
                                  keyframes: v,
                                  delay: u + n * f * s,
                                  duration: f,
                                })
                              : At,
                            className: w,
                            style: _,
                            children: e,
                          },
                          n
                        );
                      }),
                    });
                  },
                })
              : st(e, {
                  delay: u,
                  duration: f,
                  fraction: h,
                  keyframes: v,
                  triggerOnce: g,
                  css: y,
                  className: b,
                  style: x,
                  children: E,
                });
          }
          return (0, at.isFragment)(S)
            ? st(rt, {
                threshold: h,
                triggerOnce: g,
                onChange: M,
                children: function (e) {
                  var t = e.inView;
                  return st("div", {
                    ref: e.ref,
                    css: t
                      ? [y, vt({ keyframes: v, delay: u, duration: f })]
                      : At,
                    className: b,
                    style: x,
                    children: S,
                  });
                },
              })
            : st(ot, {
                children: t.Children.map(S, function (t, n) {
                  var r = t,
                    i = r.props.css ? [r.props.css] : [];
                  switch (
                    (i.push(
                      vt({
                        keyframes: v,
                        delay: u + (a ? n * f * s : 0),
                        duration: f,
                      })
                    ),
                    r.type)
                  ) {
                    case "ol":
                    case "ul":
                      return st(qe, {
                        children: function (t) {
                          var n = t.cx;
                          return He(
                            r.type,
                            lt({}, r.props, {
                              className: n(b, r.props.className),
                              style: lt({}, x, r.props.style),
                            }),
                            st(e, {
                              cascade: a,
                              damping: s,
                              delay: u,
                              duration: f,
                              fraction: h,
                              keyframes: v,
                              triggerOnce: g,
                              css: y,
                              childClassName: w,
                              childStyle: _,
                              children: r.props.children,
                            })
                          );
                        },
                      });
                    case "li":
                      return st(rt, {
                        threshold: h,
                        triggerOnce: g,
                        onChange: M,
                        children: function (e) {
                          var t = e.inView,
                            n = e.ref;
                          return st(qe, {
                            children: function (e) {
                              var a = e.cx;
                              return He(
                                r.type,
                                lt({}, r.props, {
                                  ref: n,
                                  css: t ? [y].concat(i) : At,
                                  className: a(w, r.props.className),
                                  style: lt({}, _, r.props.style),
                                })
                              );
                            },
                          });
                        },
                      });
                    default:
                      return st(rt, {
                        threshold: h,
                        triggerOnce: g,
                        onChange: M,
                        children: function (e) {
                          var t = e.inView;
                          return st("div", {
                            ref: e.ref,
                            css: t ? [y].concat(i) : At,
                            className: b,
                            style: x,
                            children: st(qe, {
                              children: function (e) {
                                var t = e.cx;
                                return He(
                                  r.type,
                                  lt({}, r.props, {
                                    className: t(w, r.props.className),
                                    style: lt({}, _, r.props.style),
                                  })
                                );
                              },
                            }),
                          });
                        },
                      });
                  }
                }),
              });
        };
      mt ||
        (mt = ct([
          "\n  from,\n  20%,\n  53%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n    transform: translate3d(0, 0, 0);\n  }\n\n  40%,\n  43% {\n    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n    transform: translate3d(0, -30px, 0) scaleY(1.1);\n  }\n\n  70% {\n    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n    transform: translate3d(0, -15px, 0) scaleY(1.05);\n  }\n\n  80% {\n    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n    transform: translate3d(0, 0, 0) scaleY(0.95);\n  }\n\n  90% {\n    transform: translate3d(0, -4px, 0) scaleY(1.02);\n  }\n",
        ])),
        gt ||
          (gt = ct([
            "\n  from,\n  50%,\n  to {\n    opacity: 1;\n  }\n\n  25%,\n  75% {\n    opacity: 0;\n  }\n",
          ])),
        yt ||
          (yt = ct([
            "\n  0% {\n    transform: translateX(0);\n  }\n\n  6.5% {\n    transform: translateX(-6px) rotateY(-9deg);\n  }\n\n  18.5% {\n    transform: translateX(5px) rotateY(7deg);\n  }\n\n  31.5% {\n    transform: translateX(-3px) rotateY(-5deg);\n  }\n\n  43.5% {\n    transform: translateX(2px) rotateY(3deg);\n  }\n\n  50% {\n    transform: translateX(0);\n  }\n",
          ])),
        bt ||
          (bt = ct([
            "\n  0% {\n    transform: scale(1);\n  }\n\n  14% {\n    transform: scale(1.3);\n  }\n\n  28% {\n    transform: scale(1);\n  }\n\n  42% {\n    transform: scale(1.3);\n  }\n\n  70% {\n    transform: scale(1);\n  }\n",
          ])),
        xt ||
          (xt = ct([
            "\n  from,\n  11.1%,\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n\n  22.2% {\n    transform: skewX(-12.5deg) skewY(-12.5deg);\n  }\n\n  33.3% {\n    transform: skewX(6.25deg) skewY(6.25deg);\n  }\n\n  44.4% {\n    transform: skewX(-3.125deg) skewY(-3.125deg);\n  }\n\n  55.5% {\n    transform: skewX(1.5625deg) skewY(1.5625deg);\n  }\n\n  66.6% {\n    transform: skewX(-0.78125deg) skewY(-0.78125deg);\n  }\n\n  77.7% {\n    transform: skewX(0.390625deg) skewY(0.390625deg);\n  }\n\n  88.8% {\n    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);\n  }\n",
          ])),
        wt ||
          (wt = ct([
            "\n  from {\n    transform: scale3d(1, 1, 1);\n  }\n\n  50% {\n    transform: scale3d(1.05, 1.05, 1.05);\n  }\n\n  to {\n    transform: scale3d(1, 1, 1);\n  }\n",
          ])),
        _t ||
          (_t = ct([
            "\n  from {\n    transform: scale3d(1, 1, 1);\n  }\n\n  30% {\n    transform: scale3d(1.25, 0.75, 1);\n  }\n\n  40% {\n    transform: scale3d(0.75, 1.25, 1);\n  }\n\n  50% {\n    transform: scale3d(1.15, 0.85, 1);\n  }\n\n  65% {\n    transform: scale3d(0.95, 1.05, 1);\n  }\n\n  75% {\n    transform: scale3d(1.05, 0.95, 1);\n  }\n\n  to {\n    transform: scale3d(1, 1, 1);\n  }\n",
          ])),
        St ||
          (St = ct([
            "\n  from,\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translate3d(-10px, 0, 0);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translate3d(10px, 0, 0);\n  }\n",
          ])),
        Mt ||
          (Mt = ct([
            "\n  from,\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translate3d(-10px, 0, 0);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translate3d(10px, 0, 0);\n  }\n",
          ])),
        Et ||
          (Et = ct([
            "\n  from,\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translate3d(0, -10px, 0);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translate3d(0, 10px, 0);\n  }\n",
          ])),
        kt ||
          (kt = ct([
            "\n  20% {\n    transform: rotate3d(0, 0, 1, 15deg);\n  }\n\n  40% {\n    transform: rotate3d(0, 0, 1, -10deg);\n  }\n\n  60% {\n    transform: rotate3d(0, 0, 1, 5deg);\n  }\n\n  80% {\n    transform: rotate3d(0, 0, 1, -5deg);\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, 0deg);\n  }\n",
          ])),
        Tt ||
          (Tt = ct([
            "\n  from {\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%,\n  20% {\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\n  }\n\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\n  }\n\n  40%,\n  60%,\n  80% {\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\n  }\n\n  to {\n    transform: scale3d(1, 1, 1);\n  }\n",
          ])),
        Ct ||
          (Ct = ct([
            "\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  15% {\n    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30% {\n    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);\n  }\n\n  45% {\n    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);\n  }\n\n  60% {\n    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);\n  }\n\n  75% {\n    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n",
          ]));
      var Rt, Ot, zt, Dt, It, Nt, Ft, Bt, Ht, Ut;
      Rt ||
        (Rt = ct([
          "\n  from,\n  20%,\n  40%,\n  60%,\n  80%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  0% {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n\n  20% {\n    transform: scale3d(1.1, 1.1, 1.1);\n  }\n\n  40% {\n    transform: scale3d(0.9, 0.9, 0.9);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(1.03, 1.03, 1.03);\n  }\n\n  80% {\n    transform: scale3d(0.97, 0.97, 0.97);\n  }\n\n  to {\n    opacity: 1;\n    transform: scale3d(1, 1, 1);\n  }\n",
        ])),
        Ot ||
          (Ot = ct([
            "\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  0% {\n    opacity: 0;\n    transform: translate3d(0, -3000px, 0) scaleY(3);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(0, 25px, 0) scaleY(0.9);\n  }\n\n  75% {\n    transform: translate3d(0, -10px, 0) scaleY(0.95);\n  }\n\n  90% {\n    transform: translate3d(0, 5px, 0) scaleY(0.985);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n",
          ])),
        zt ||
          (zt = ct([
            "\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  0% {\n    opacity: 0;\n    transform: translate3d(-3000px, 0, 0) scaleX(3);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(25px, 0, 0) scaleX(1);\n  }\n\n  75% {\n    transform: translate3d(-10px, 0, 0) scaleX(0.98);\n  }\n\n  90% {\n    transform: translate3d(5px, 0, 0) scaleX(0.995);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n",
          ])),
        Dt ||
          (Dt = ct([
            "\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  from {\n    opacity: 0;\n    transform: translate3d(3000px, 0, 0) scaleX(3);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(-25px, 0, 0) scaleX(1);\n  }\n\n  75% {\n    transform: translate3d(10px, 0, 0) scaleX(0.98);\n  }\n\n  90% {\n    transform: translate3d(-5px, 0, 0) scaleX(0.995);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n",
          ])),
        It ||
          (It = ct([
            "\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  from {\n    opacity: 0;\n    transform: translate3d(0, 3000px, 0) scaleY(5);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\n  }\n\n  75% {\n    transform: translate3d(0, 10px, 0) scaleY(0.95);\n  }\n\n  90% {\n    transform: translate3d(0, -5px, 0) scaleY(0.985);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n",
          ])),
        Nt ||
          (Nt = ct([
            "\n  20% {\n    transform: scale3d(0.9, 0.9, 0.9);\n  }\n\n  50%,\n  55% {\n    opacity: 1;\n    transform: scale3d(1.1, 1.1, 1.1);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n",
          ])),
        Ft ||
          (Ft = ct([
            "\n  20% {\n    transform: translate3d(0, 10px, 0) scaleY(0.985);\n  }\n\n  40%,\n  45% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, 2000px, 0) scaleY(3);\n  }\n",
          ])),
        Bt ||
          (Bt = ct([
            "\n  20% {\n    opacity: 1;\n    transform: translate3d(20px, 0, 0) scaleX(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-2000px, 0, 0) scaleX(2);\n  }\n",
          ])),
        Ht ||
          (Ht = ct([
            "\n  20% {\n    opacity: 1;\n    transform: translate3d(-20px, 0, 0) scaleX(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(2000px, 0, 0) scaleX(2);\n  }\n",
          ])),
        Ut ||
          (Ut = ct([
            "\n  20% {\n    transform: translate3d(0, -10px, 0) scaleY(0.985);\n  }\n\n  40%,\n  45% {\n    opacity: 1;\n    transform: translate3d(0, 20px, 0) scaleY(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, -2000px, 0) scaleY(3);\n  }\n",
          ]));
      var jt,
        Gt,
        Wt,
        Vt,
        qt,
        Xt,
        Yt,
        Jt,
        $t,
        Qt,
        Zt,
        Kt,
        en,
        tn,
        nn,
        rn,
        an,
        on,
        sn,
        ln,
        un,
        cn,
        fn,
        dn,
        hn,
        pn = je(
          jt ||
            (jt = ct([
              "\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n",
            ]))
        ),
        vn = je(
          Gt ||
            (Gt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(-100%, 100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        mn = je(
          Wt ||
            (Wt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(100%, 100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        gn = je(
          Vt ||
            (Vt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(0, -100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        yn = je(
          qt ||
            (qt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(0, -2000px, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        bn = je(
          Xt ||
            (Xt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(-2000px, 0, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        xn = je(
          Yt ||
            (Yt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(100%, 0, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        wn = je(
          Jt ||
            (Jt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(2000px, 0, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        _n = je(
          $t ||
            ($t = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(-100%, -100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        Sn = je(
          Qt ||
            (Qt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(100%, -100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        Mn = je(
          Zt ||
            (Zt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(0, 100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        En = je(
          Kt ||
            (Kt = ct([
              "\n  from {\n    opacity: 0;\n    transform: translate3d(0, 2000px, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
            ]))
        ),
        kn = je(
          en ||
            (en = ct([
              "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n",
            ]))
        ),
        Tn = je(
          tn ||
            (tn = ct([
              "\n  from {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-100%, 100%, 0);\n  }\n",
            ]))
        ),
        Cn = je(
          nn ||
            (nn = ct([
              "\n  from {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(100%, 100%, 0);\n  }\n",
            ]))
        ),
        An = je(
          rn ||
            (rn = ct([
              "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, 100%, 0);\n  }\n",
            ]))
        ),
        Pn = je(
          an ||
            (an = ct([
              "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, 2000px, 0);\n  }\n",
            ]))
        ),
        Ln = je(
          on ||
            (on = ct([
              "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-100%, 0, 0);\n  }\n",
            ]))
        ),
        Rn = je(
          sn ||
            (sn = ct([
              "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-2000px, 0, 0);\n  }\n",
            ]))
        ),
        On = je(
          ln ||
            (ln = ct([
              "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(100%, 0, 0);\n  }\n",
            ]))
        ),
        zn = je(
          un ||
            (un = ct([
              "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(2000px, 0, 0);\n  }\n",
            ]))
        ),
        Dn = je(
          cn ||
            (cn = ct([
              "\n  from {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-100%, -100%, 0);\n  }\n",
            ]))
        ),
        In = je(
          fn ||
            (fn = ct([
              "\n  from {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(100%, -100%, 0);\n  }\n",
            ]))
        ),
        Nn = je(
          dn ||
            (dn = ct([
              "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, -100%, 0);\n  }\n",
            ]))
        ),
        Fn = je(
          hn ||
            (hn = ct([
              "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, -2000px, 0);\n  }\n",
            ]))
        ),
        Bn = ["big", "direction", "reverse"];
      function Hn(e, t, n) {
        switch (n) {
          case "bottom-left":
            return t ? Tn : vn;
          case "bottom-right":
            return t ? Cn : mn;
          case "down":
            return e ? (t ? Pn : yn) : t ? An : gn;
          case "left":
            return e ? (t ? Rn : bn) : t ? Ln : pt;
          case "right":
            return e ? (t ? zn : wn) : t ? On : xn;
          case "top-left":
            return t ? Dn : _n;
          case "top-right":
            return t ? In : Sn;
          case "up":
            return e ? (t ? Fn : En) : t ? Nn : Mn;
          default:
            return t ? kn : pn;
        }
      }
      var Un,
        jn,
        Gn,
        Wn,
        Vn,
        qn = function (e) {
          var t = e.big,
            n = void 0 !== t && t,
            r = e.direction,
            i = e.reverse,
            a = void 0 !== i && i,
            o = ut(e, Bn);
          return st(Lt, lt({ keyframes: Hn(n, a, r) }, o));
        };
      Un ||
        (Un = ct([
          "\n  from {\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, -360deg);\n    animation-timing-function: ease-out;\n  }\n\n  40% {\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\n      rotate3d(0, 1, 0, -190deg);\n    animation-timing-function: ease-out;\n  }\n\n  50% {\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\n      rotate3d(0, 1, 0, -170deg);\n    animation-timing-function: ease-in;\n  }\n\n  80% {\n    transform: perspective(400px) scale3d(0.95, 0.95, 0.95) translate3d(0, 0, 0)\n      rotate3d(0, 1, 0, 0deg);\n    animation-timing-function: ease-in;\n  }\n\n  to {\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg);\n    animation-timing-function: ease-in;\n  }\n",
        ])),
        jn ||
          (jn = ct([
            "\n  from {\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n    animation-timing-function: ease-in;\n    opacity: 0;\n  }\n\n  40% {\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n    animation-timing-function: ease-in;\n  }\n\n  60% {\n    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\n    opacity: 1;\n  }\n\n  80% {\n    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\n  }\n\n  to {\n    transform: perspective(400px);\n  }\n",
          ])),
        Gn ||
          (Gn = ct([
            "\n  from {\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n    animation-timing-function: ease-in;\n    opacity: 0;\n  }\n\n  40% {\n    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);\n    animation-timing-function: ease-in;\n  }\n\n  60% {\n    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);\n    opacity: 1;\n  }\n\n  80% {\n    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);\n  }\n\n  to {\n    transform: perspective(400px);\n  }\n",
          ])),
        Wn ||
          (Wn = ct([
            "\n  from {\n    transform: perspective(400px);\n  }\n\n  30% {\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n    opacity: 1;\n  }\n\n  to {\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n    opacity: 0;\n  }\n",
          ])),
        Vn ||
          (Vn = ct([
            "\n  from {\n    transform: perspective(400px);\n  }\n\n  30% {\n    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);\n    opacity: 1;\n  }\n\n  to {\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n    opacity: 0;\n  }\n",
          ]));
      var Xn, Yn, Jn, $n;
      Xn ||
        (Xn = ct([
          "\n  0% {\n    animation-timing-function: ease-in-out;\n  }\n\n  20%,\n  60% {\n    transform: rotate3d(0, 0, 1, 80deg);\n    animation-timing-function: ease-in-out;\n  }\n\n  40%,\n  80% {\n    transform: rotate3d(0, 0, 1, 60deg);\n    animation-timing-function: ease-in-out;\n    opacity: 1;\n  }\n\n  to {\n    transform: translate3d(0, 700px, 0);\n    opacity: 0;\n  }\n",
        ])),
        Yn ||
          (Yn = ct([
            "\n  from {\n    opacity: 0;\n    transform: scale(0.1) rotate(30deg);\n    transform-origin: center bottom;\n  }\n\n  50% {\n    transform: rotate(-10deg);\n  }\n\n  70% {\n    transform: rotate(3deg);\n  }\n\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n",
          ])),
        Jn ||
          (Jn = ct([
            "\n  from {\n    opacity: 0;\n    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n",
          ])),
        $n ||
          ($n = ct([
            "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);\n  }\n",
          ]));
      var Qn, Zn, Kn, er, tr, nr, rr, ir, ar, or;
      Qn ||
        (Qn = ct([
          "\n  from {\n    transform: rotate3d(0, 0, 1, -200deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n",
        ])),
        Zn ||
          (Zn = ct([
            "\n  from {\n    transform: rotate3d(0, 0, 1, -45deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n",
          ])),
        Kn ||
          (Kn = ct([
            "\n  from {\n    transform: rotate3d(0, 0, 1, 45deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n",
          ])),
        er ||
          (er = ct([
            "\n  from {\n    transform: rotate3d(0, 0, 1, 45deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n",
          ])),
        tr ||
          (tr = ct([
            "\n  from {\n    transform: rotate3d(0, 0, 1, -90deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n",
          ])),
        nr ||
          (nr = ct([
            "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, 200deg);\n    opacity: 0;\n  }\n",
          ])),
        rr ||
          (rr = ct([
            "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, 45deg);\n    opacity: 0;\n  }\n",
          ])),
        ir ||
          (ir = ct([
            "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, -45deg);\n    opacity: 0;\n  }\n",
          ])),
        ar ||
          (ar = ct([
            "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, -45deg);\n    opacity: 0;\n  }\n",
          ])),
        or ||
          (or = ct([
            "\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, 90deg);\n    opacity: 0;\n  }\n",
          ]));
      var sr, lr, ur, cr, fr, dr, hr, pr;
      sr ||
        (sr = ct([
          "\n  from {\n    transform: translate3d(0, -100%, 0);\n    visibility: visible;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n",
        ])),
        lr ||
          (lr = ct([
            "\n  from {\n    transform: translate3d(-100%, 0, 0);\n    visibility: visible;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n",
          ])),
        ur ||
          (ur = ct([
            "\n  from {\n    transform: translate3d(100%, 0, 0);\n    visibility: visible;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n",
          ])),
        cr ||
          (cr = ct([
            "\n  from {\n    transform: translate3d(0, 100%, 0);\n    visibility: visible;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n",
          ])),
        fr ||
          (fr = ct([
            "\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    transform: translate3d(0, 100%, 0);\n  }\n",
          ])),
        dr ||
          (dr = ct([
            "\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    transform: translate3d(-100%, 0, 0);\n  }\n",
          ])),
        hr ||
          (hr = ct([
            "\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    transform: translate3d(100%, 0, 0);\n  }\n",
          ])),
        pr ||
          (pr = ct([
            "\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    transform: translate3d(0, -100%, 0);\n  }\n",
          ]));
      var vr, mr, gr, yr, br, xr, wr, _r, Sr, Mr;
      vr ||
        (vr = ct([
          "\n  from {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n\n  50% {\n    opacity: 1;\n  }\n",
        ])),
        mr ||
          (mr = ct([
            "\n  from {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n",
          ])),
        gr ||
          (gr = ct([
            "\n  from {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n",
          ])),
        yr ||
          (yr = ct([
            "\n  from {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n",
          ])),
        br ||
          (br = ct([
            "\n  from {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n",
          ])),
        xr ||
          (xr = ct([
            "\n  from {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n\n  to {\n    opacity: 0;\n  }\n",
          ])),
        wr ||
          (wr = ct([
            "\n  40% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n",
          ])),
        _r ||
          (_r = ct([
            "\n  40% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale(0.1) translate3d(-2000px, 0, 0);\n  }\n",
          ])),
        Sr ||
          (Sr = ct([
            "\n  40% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale(0.1) translate3d(2000px, 0, 0);\n  }\n",
          ])),
        Mr ||
          (Mr = ct([
            "\n  40% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n",
          ]));
      var Er = function (e) {
        var n = e.setAboutActive,
          r = (0, t.useRef)(),
          i = !0,
          a = (0, t.useMemo)(function () {
            return new IntersectionObserver(
              function () {
                i ? (n(!1), (i = !1)) : (n(!0), (i = !0));
              },
              { root: null, rootMargin: "0px", threshold: 0.3 }
            );
          }, []);
        return (
          (0, t.useEffect)(
            function () {
              var e = r.current;
              e && a.observe(e);
            },
            [a]
          ),
          (0, c.jsxs)("div", {
            className: "About",
            id: "2",
            ref: r,
            children: [
              (0, c.jsx)(qn, {
                duration: 1e3,
                children: (0, c.jsx)("div", {
                  className: "title",
                  children: "ABOUT ME.",
                }),
              }),
              (0, c.jsxs)(qn, {
                duration: 1e3,
                children: [
                  (0, c.jsx)("div", {
                    className: "me",
                    children: "\ucd5c\ud0dc\ud638 (1997/02/26)",
                  }),
                  (0, c.jsxs)("div", {
                    className: "school",
                    children: [
                      "\ud55c\uad6d\uacf5\ud559\ub300\ud559\uad50(\u524d\ud55c\uad6d\uc0b0\uc5c5\uae30\uc220\ub300\ud559\uad50) \uac8c\uc784\uacf5\ud559\uacfc \uc218\ub8cc",
                      (0, c.jsx)("a", {
                        style: { color: "grey" },
                        children:
                          "_2022\ub144 8\uc6d4 \uc878\uc5c5 \uc608\uc815",
                      }),
                    ],
                  }),
                  (0, c.jsxs)("div", {
                    className: "info",
                    children: [
                      (0, c.jsx)("br", {}),
                      "\uac10\uac01\uc801\uc778 \ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790\uac00 \ub418\uace0 \uc2f6\uc740 \ucd5c\ud0dc\ud638\uc785\ub2c8\ub2e4.",
                      (0, c.jsx)("br", {}),
                      "\ub9e4\uc77c \uc5b4\uc81c\ubcf4\ub2e4 \ubc1c\uc804\ud55c \uc0ac\ub78c\uc774 \ub418\uace0 \uc2f6\uc5b4 \ud56d\uc0c1 \uc9c4\ucde8\uc801\uc778 \ub9c8\uc778\ub4dc\ub97c \uac00\uc9c0\ub824\uace0 \ub178\ub825\ud569\ub2c8\ub2e4.",
                      (0, c.jsx)("br", {}),
                      "\uac16\uace0 \uc788\ub294 \uc9c0\uc2dd\uc744 \ud1a0\ub860 \ubc0f \ud53c\ub4dc\ubc31\uc744 \ud1b5\ud574 \ub2e4\ub4ec\ub294 \uac83\uc744 \uc911\uc694\ud558\uac8c \uc0dd\uac01\ud558\uace0 \ud65c\ubc1c\ud55c \uc758\uc0ac\uc18c\ud1b5\uc744 \uc990\uae41\ub2c8\ub2e4.",
                      (0, c.jsx)("br", {}),
                      "React\uc640 Firebase\ub97c \ud65c\uc6a9\ud55c \uae30\ud68d, \uac1c\ubc1c, \ubc30\ud3ec \ud504\ub85c\uc138\uc2a4 \uacbd\ud5d8\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.",
                      (0, c.jsx)("br", {}),
                      "OpenGL, Unity Engine, Unreal Engine\uc744 \ud65c\uc6a9\ud55c \uac8c\uc784 \uac1c\ubc1c \uacbd\ud5d8\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.",
                    ],
                  }),
                ],
              }),
              (0, c.jsxs)(qn, {
                duration: 2e3,
                children: [
                  (0, c.jsx)("br", {}),
                  (0, c.jsx)("br", {}),
                  (0, c.jsx)("h3", { children: "\ud83d\udcbb Tech Stack" }),
                  (0, c.jsx)("br", {}),
                  (0, c.jsxs)("p", {
                    children: [
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/HTML5-E34F26?style=flat&logo=HTML5&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/CSS3-1572B6?style=flat&logo=CSS3&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/JavaScript-F7DF1E?style=flat&logo=JavaScript&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/React-61DAFB?style=flat&logo=React&logoColor=white",
                      }),
                    ],
                  }),
                  (0, c.jsx)("br", {}),
                  (0, c.jsx)("br", {}),
                  (0, c.jsx)("h3", {
                    children: "\ud83d\udd0e Used at least once",
                  }),
                  (0, c.jsx)("br", {}),
                  (0, c.jsxs)("p", {
                    children: [
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/HTML5-E34F26?style=flat&logo=HTML5&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/CSS3-1572B6?style=flat&logo=CSS3&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/JavaScript-F7DF1E?style=flat&logo=JavaScript&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/React-61DAFB?style=flat&logo=React&logoColor=white",
                      }),
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/UnrealEngine4-0E1128?style=flat&logo=Unreal Engine&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/Unity-ffffff?style=flat&logo=Unity&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/C++-00599C?style=flat&logo=cplusplus&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/Java-007396?style=flat&logo=Java&logoColor=white",
                      }),
                      " ",
                      (0, c.jsx)("img", {
                        src: "https://img.shields.io/badge/Python-3776AB?style=flat&logo=Python&logoColor=white",
                      }),
                    ],
                  }),
                ],
              }),
            ],
          })
        );
      };
      function kr(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      function Tr(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(e);
          t &&
            (r = r.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, r);
        }
        return n;
      }
      function Cr(e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? Tr(Object(n), !0).forEach(function (t) {
                kr(e, t, n[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
            : Tr(Object(n)).forEach(function (t) {
                Object.defineProperty(
                  e,
                  t,
                  Object.getOwnPropertyDescriptor(n, t)
                );
              });
        }
        return e;
      }
      var Ar = n(5717),
        Pr = function (e) {
          var n = e.setPortfolioActive,
            r = (0, t.useRef)(),
            i = !0,
            a = (0, t.useMemo)(function () {
              return new IntersectionObserver(
                function () {
                  i ? (n(!1), (i = !1)) : (n(!0), (i = !0));
                },
                { root: null, rootMargin: "0px", threshold: 0.35 }
              );
            }, []);
          (0, t.useEffect)(
            function () {
              var e = r.current;
              e && a.observe(e);
            },
            [a]
          );
          return (0, c.jsxs)("div", {
            className: "Portfolio",
            id: "3",
            ref: r,
            children: [
              (0, c.jsx)(qn, {
                duration: 2e3,
                children: (0, c.jsx)("div", {
                  className: "title",
                  children: "PROJECTS.",
                }),
              }),
              (0, c.jsx)(qn, {
                duration: 800,
                children: (0, c.jsx)("div", {
                  className: "list",
                  children: (0, c.jsxs)(
                    Ar.Z,
                    Cr(
                      Cr(
                        {},
                        {
                          dots: !1,
                          infinite: !0,
                          speed: 1e3,
                          slidesToShow: 1,
                          slidesToScroll: 1,
                        }
                      ),
                      {},
                      {
                        children: [
                          (0, c.jsxs)("div", {
                            className: "portfolio1",
                            children: [
                              (0, c.jsx)("div", {
                                className: "name",
                                children:
                                  "\u2022\u3000\uac10\uc815 \uacf5\uc720 \ud648\ud398\uc774\uc9c0 <EMONG>",
                              }),
                              (0, c.jsx)("img", {
                                src: "./portfolio_emong.png",
                              }),
                              (0, c.jsxs)("div", {
                                className: "description",
                                children: [
                                  "\ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\ubb34\ub9ac \ud574\uc8fc\uba74 \ub418\uaca0\uc9c0\ub9cc..!! \ub09c \ucc98\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4. \ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\ubb34\ub9ac \ud574\uc8fc\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4. \ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\ubb34\ub9ac \ud574\uc8fc\uba74 \ub418\uaca0\uc9c0\ub9cc..!! \ub09c \ucc98\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4. \ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4. \ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\ubb34\ub9ac \ud574\uc8fc\uba74 \ub418\uaca0\uc9c0\ub9cc..!! \ub09c \ucc98\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4. \ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\uba74 \ub418\uaca0\uc9c0\ub9cc..!! \ub09c \ucc98\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4. \ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\ubb34\ub9ac \ud574\uc8fc\uba74 \ub418\uaca0\uc9c0\ub9cc..!! \ub09c \ucc98\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4.",
                                  " ",
                                ],
                              }),
                            ],
                          }),
                          (0, c.jsxs)("div", {
                            className: "portfolio1",
                            children: [
                              (0, c.jsx)("div", {
                                className: "name",
                                children:
                                  "\u2022\u3000\uac10\uc815 \uacf5\uc720 \ud648\ud398\uc774\uc9c0 <EMONG>",
                              }),
                              (0, c.jsx)("img", {
                                src: "./portfolio_emong.png",
                              }),
                              (0, c.jsxs)("div", {
                                className: "description",
                                children: [
                                  "\ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\ubb34\ub9ac \ud574\uc8fc\uba74 \ub418\uaca0\uc9c0\ub9cc..!! \ub09c \ucc98\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4. \ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\ubb34\ub9ac \ud574\uc8fc\uba74 \ub418\uaca0\uc9c0\ub9cc..!! \ub09c \ucc98\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4. \ubcf8\uc778 \uc785\ub9db\ub300\ub85c \uc0ac\uc9c4\uc744 \ub123\uc5b4\uc11c \uce90\ub7ec\uc140\uc744 \ub9c8\ubb34\ub9ac \ud574\uc8fc\uba74 \ub418\uaca0\uc9c0\ub9cc..!! \ub09c \ucc98\uc74c\uc5d0 \ub0b4\uac00 \uae30\uc874\uc5d0 \uc9dc\ub47f\ub358 \ud398\uc774\uc9c0\uc758 \ub108\ube44, \ub192\uc774\ub77c\ub358\uc9c0 \uc2a4\ud0c0\uc77c\ub9c1\uc774 \ub2ec\ub77c\uc11c \uadf8\ub7f0\uc9c0 \uc88c\uc6b0 \ubc84\ud2bc\uacfc \uc544\ub798 \uc810 \ud45c\uc2dc (dots) \uac00 \uc548\ubcf4\uc774\uac70\ub098 \uc774\uc0c1\ud55c \uc704\uce58\uc5d0 \uac00\uc788\uc5c8\ub2e4.",
                                  " ",
                                ],
                              }),
                            ],
                          }),
                        ],
                      }
                    )
                  ),
                }),
              }),
            ],
          });
        },
        Lr = {
          color: void 0,
          size: void 0,
          className: void 0,
          style: void 0,
          attr: void 0,
        },
        Rr = t.createContext && t.createContext(Lr),
        Or = function () {
          return (
            (Or =
              Object.assign ||
              function (e) {
                for (var t, n = 1, r = arguments.length; n < r; n++)
                  for (var i in (t = arguments[n]))
                    Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e;
              }),
            Or.apply(this, arguments)
          );
        },
        zr = function (e, t) {
          var n = {};
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) &&
              t.indexOf(r) < 0 &&
              (n[r] = e[r]);
          if (null != e && "function" === typeof Object.getOwnPropertySymbols) {
            var i = 0;
            for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
              t.indexOf(r[i]) < 0 &&
                Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                (n[r[i]] = e[r[i]]);
          }
          return n;
        };
      function Dr(e) {
        return (
          e &&
          e.map(function (e, n) {
            return t.createElement(e.tag, Or({ key: n }, e.attr), Dr(e.child));
          })
        );
      }
      function Ir(e) {
        return function (n) {
          return t.createElement(
            Nr,
            Or({ attr: Or({}, e.attr) }, n),
            Dr(e.child)
          );
        };
      }
      function Nr(e) {
        var n = function (n) {
          var r,
            i = e.attr,
            a = e.size,
            o = e.title,
            s = zr(e, ["attr", "size", "title"]),
            l = a || n.size || "1em";
          return (
            n.className && (r = n.className),
            e.className && (r = (r ? r + " " : "") + e.className),
            t.createElement(
              "svg",
              Or(
                {
                  stroke: "currentColor",
                  fill: "currentColor",
                  strokeWidth: "0",
                },
                n.attr,
                i,
                s,
                {
                  className: r,
                  style: Or(
                    Or({ color: e.color || n.color }, n.style),
                    e.style
                  ),
                  height: l,
                  width: l,
                  xmlns: "http://www.w3.org/2000/svg",
                }
              ),
              o && t.createElement("title", null, o),
              e.children
            )
          );
        };
        return void 0 !== Rr
          ? t.createElement(Rr.Consumer, null, function (e) {
              return n(e);
            })
          : n(Lr);
      }
      function Fr(e) {
        return Ir({
          tag: "svg",
          attr: { viewBox: "0 0 496 512" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z",
              },
            },
          ],
        })(e);
      }
      function Br(e) {
        return Ir({
          tag: "svg",
          attr: { viewBox: "0 0 512 512" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z",
              },
            },
          ],
        })(e);
      }
      function Hr(e) {
        return Ir({
          tag: "svg",
          attr: { viewBox: "0 0 512 512" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M497.39 361.8l-112-48a24 24 0 0 0-28 6.9l-49.6 60.6A370.66 370.66 0 0 1 130.6 204.11l60.6-49.6a23.94 23.94 0 0 0 6.9-28l-48-112A24.16 24.16 0 0 0 122.6.61l-104 24A24 24 0 0 0 0 48c0 256.5 207.9 464 464 464a24 24 0 0 0 23.4-18.6l24-104a24.29 24.29 0 0 0-14.01-27.6z",
              },
            },
          ],
        })(e);
      }
      var Ur = function (e) {
          var n = e.setContactActive,
            r = (0, t.useRef)(),
            i = !0,
            a = (0, t.useMemo)(function () {
              return new IntersectionObserver(
                function () {
                  i
                    ? (n(!1),
                      (i = !1),
                      console.log("\ub514\uc2a4\uc5b4\ud53c\uc5b4"))
                    : (n(!0), (i = !0), console.log("\ub4f1\uc7a5"));
                },
                { root: null, rootMargin: "0px", threshold: 0.35 }
              );
            }, []);
          return (
            (0, t.useEffect)(
              function () {
                var e = r.current;
                e && a.observe(e);
              },
              [a]
            ),
            (0, c.jsxs)("div", {
              className: "Contact",
              id: "4",
              ref: r,
              children: [
                (0, c.jsx)(qn, {
                  duration: 1e3,
                  children: (0, c.jsx)("div", {
                    className: "title",
                    children: "CONTACT.",
                  }),
                }),
                (0, c.jsx)(qn, {
                  duration: 1e3,
                  children: (0, c.jsxs)("div", {
                    className: "info",
                    children: [
                      (0, c.jsx)(Fr, { className: "icon" }),
                      "\u3000",
                      (0, c.jsx)("a", {
                        href: "https://taeho-choi.github.com",
                        children: "https://taeho-choi.github.com",
                      }),
                      (0, c.jsx)("br", {}),
                      (0, c.jsx)(Br, {}),
                      "\u3000abcde@abc.de",
                      (0, c.jsx)("br", {}),
                      (0, c.jsx)(Hr, {}),
                      "\u3000010-0000-0000",
                    ],
                  }),
                }),
              ],
            })
          );
        },
        jr = n(5667);
      function Gr(e) {
        return Ir({
          tag: "svg",
          attr: { viewBox: "0 0 1024 1024" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M859.9 168H164.1c-4.5 0-8.1 3.6-8.1 8v60c0 4.4 3.6 8 8.1 8h695.8c4.5 0 8.1-3.6 8.1-8v-60c0-4.4-3.6-8-8.1-8zM518.3 355a8 8 0 0 0-12.6 0l-112 141.7a7.98 7.98 0 0 0 6.3 12.9h73.9V848c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V509.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 355z",
              },
            },
          ],
        })(e);
      }
      var Wr = function () {
          var e = u((0, t.useState)(0), 2),
            n = e[0],
            r = e[1],
            i = u((0, t.useState)(!1), 2),
            a = i[0],
            o = i[1],
            s = function () {
              r(window.pageYOffset), o(n > 200);
            };
          return (
            (0, t.useEffect)(function () {
              return (
                window.addEventListener("scroll", s),
                function () {
                  window.removeEventListener("scroll", s);
                }
              );
            }),
            (0, c.jsx)("div", {
              className: "TopButton",
              children: (0, c.jsx)("button", {
                className: a ? "visible" : "unvisible",
                onClick: jr.NY.scrollToTop,
                children: (0, c.jsx)(Gr, {}),
              }),
            })
          );
        },
        Vr = function () {
          var e = u((0, t.useState)(0), 2),
            n = e[0],
            r = e[1],
            i = function () {
              r(window.pageYOffset);
            };
          return (
            (0, t.useEffect)(function () {
              return (
                window.addEventListener("scroll", i),
                function () {
                  window.removeEventListener("scroll", i);
                }
              );
            }),
            (0, c.jsxs)("div", {
              className: "ParallaxBG",
              children: [
                (0, c.jsx)("div", {
                  className: "circle1",
                  style: {
                    transform: "translateY(-".concat(0.3 * n, "px)"),
                    left: "10vw",
                    top: "30vh",
                  },
                }),
                (0, c.jsx)("div", {
                  className: "circle2",
                  style: {
                    transform: "translateY(-".concat(0.5 * n, "px)"),
                    left: "55vw",
                    top: "70vh",
                  },
                }),
                (0, c.jsx)("div", {
                  className: "circle3",
                  style: {
                    transform: "translateY(-".concat(0.7 * n, "px)"),
                    left: "50vw",
                    top: "-30vh",
                  },
                }),
                " ",
                (0, c.jsx)("div", {
                  className: "circle1",
                  style: {
                    transform: "translateY(-".concat(0.4 * n, "px)"),
                    left: "20vw",
                    top: "130vh",
                  },
                }),
                (0, c.jsx)("div", {
                  className: "circle1",
                  style: {
                    transform: "translateY(-".concat(0.3 * n, "px)"),
                    left: "70vw",
                    top: "80vh",
                  },
                }),
                (0, c.jsx)("div", {
                  className: "circle3",
                  style: {
                    transform: "translateY(-".concat(0.7 * n, "px)"),
                    left: "40vw",
                    top: "190vh",
                  },
                }),
                (0, c.jsx)("div", {
                  className: "circle1",
                  style: {
                    transform: "translateY(-".concat(0.3 * n, "px)"),
                    left: "20vw",
                    top: "200vh",
                  },
                }),
                (0, c.jsx)("div", {
                  className: "circle2",
                  style: {
                    transform: "translateY(-".concat(0.5 * n, "px)"),
                    left: "50vw",
                    top: "270vh",
                  },
                }),
                (0, c.jsx)("div", {
                  className: "circle1",
                  style: {
                    transform: "translateY(-".concat(0.3 * n, "px)"),
                    left: "30vw",
                    top: "340vh",
                  },
                }),
                (0, c.jsx)("div", {
                  className: "circle2",
                  style: {
                    transform: "translateY(-".concat(0.5 * n, "px)"),
                    left: "10vw",
                    top: "310vh",
                  },
                }),
                (0, c.jsx)("div", {
                  className: "circle3",
                  style: {
                    transform: "translateY(-".concat(0.7 * n, "px)"),
                    left: "70vw",
                    top: "280vh",
                  },
                }),
              ],
            })
          );
        };
      function qr(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = (function (e, t) {
            if (null == e) return {};
            var n,
              r,
              i = {},
              a = Object.keys(e);
            for (r = 0; r < a.length; r++)
              (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
            return i;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var a = Object.getOwnPropertySymbols(e);
          for (r = 0; r < a.length; r++)
            (n = a[r]),
              t.indexOf(n) >= 0 ||
                (Object.prototype.propertyIsEnumerable.call(e, n) &&
                  (i[n] = e[n]));
        }
        return i;
      }
      function Xr(e, t) {
        var n =
          ("undefined" !== typeof Symbol && e[Symbol.iterator]) ||
          e["@@iterator"];
        if (!n) {
          if (
            Array.isArray(e) ||
            (n = s(e)) ||
            (t && e && "number" === typeof e.length)
          ) {
            n && (e = n);
            var r = 0,
              i = function () {};
            return {
              s: i,
              n: function () {
                return r >= e.length
                  ? { done: !0 }
                  : { done: !1, value: e[r++] };
              },
              e: function (e) {
                throw e;
              },
              f: i,
            };
          }
          throw new TypeError(
            "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        }
        var a,
          o = !0,
          l = !1;
        return {
          s: function () {
            n = n.call(e);
          },
          n: function () {
            var e = n.next();
            return (o = e.done), e;
          },
          e: function (e) {
            (l = !0), (a = e);
          },
          f: function () {
            try {
              o || null == n.return || n.return();
            } finally {
              if (l) throw a;
            }
          },
        };
      }
      function Yr(e, t) {
        return (
          (Yr =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            }),
          Yr(e, t)
        );
      }
      function Jr() {
        if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" === typeof Proxy) return !0;
        try {
          return (
            Boolean.prototype.valueOf.call(
              Reflect.construct(Boolean, [], function () {})
            ),
            !0
          );
        } catch ($y) {
          return !1;
        }
      }
      function $r(e, t, n) {
        return (
          ($r = Jr()
            ? Reflect.construct
            : function (e, t, n) {
                var r = [null];
                r.push.apply(r, t);
                var i = new (Function.bind.apply(e, r))();
                return n && Yr(i, n.prototype), i;
              }),
          $r.apply(null, arguments)
        );
      }
      function Qr(e) {
        if (
          ("undefined" !== typeof Symbol && null != e[Symbol.iterator]) ||
          null != e["@@iterator"]
        )
          return Array.from(e);
      }
      function Zr(e) {
        return (
          (function (e) {
            if (Array.isArray(e)) return o(e);
          })(e) ||
          Qr(e) ||
          s(e) ||
          (function () {
            throw new TypeError(
              "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
            );
          })()
        );
      }
      function Kr(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function ei(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          (r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r);
        }
      }
      function ti(e, t, n) {
        return (
          t && ei(e.prototype, t),
          n && ei(e, n),
          Object.defineProperty(e, "prototype", { writable: !1 }),
          e
        );
      }
      function ni(e, t) {
        if ("function" !== typeof t && null !== t)
          throw new TypeError(
            "Super expression must either be null or a function"
          );
        (e.prototype = Object.create(t && t.prototype, {
          constructor: { value: e, writable: !0, configurable: !0 },
        })),
          Object.defineProperty(e, "prototype", { writable: !1 }),
          t && Yr(e, t);
      }
      function ri(e) {
        return (
          (ri = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          ri(e)
        );
      }
      function ii(e) {
        return (
          (ii =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                }),
          ii(e)
        );
      }
      function ai(e) {
        if (void 0 === e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      }
      function oi(e, t) {
        if (t && ("object" === ii(t) || "function" === typeof t)) return t;
        if (void 0 !== t)
          throw new TypeError(
            "Derived constructors may only return object or undefined"
          );
        return ai(e);
      }
      function si(e) {
        var t = Jr();
        return function () {
          var n,
            r = ri(e);
          if (t) {
            var i = ri(this).constructor;
            n = Reflect.construct(r, arguments, i);
          } else n = r.apply(this, arguments);
          return oi(this, n);
        };
      }
      function li(e, t, n, r, i, a, o) {
        try {
          var s = e[a](o),
            l = s.value;
        } catch (u) {
          return void n(u);
        }
        s.done ? t(l) : Promise.resolve(l).then(r, i);
      }
      function ui(e) {
        return function () {
          var t = this,
            n = arguments;
          return new Promise(function (r, i) {
            var a = e.apply(t, n);
            function o(e) {
              li(a, r, i, o, s, "next", e);
            }
            function s(e) {
              li(a, r, i, o, s, "throw", e);
            }
            o(void 0);
          });
        };
      }
      function ci(e, t) {
        for (
          ;
          !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = ri(e));

        );
        return e;
      }
      function fi() {
        return (
          (fi =
            "undefined" !== typeof Reflect && Reflect.get
              ? Reflect.get
              : function (e, t, n) {
                  var r = ci(e, t);
                  if (r) {
                    var i = Object.getOwnPropertyDescriptor(r, t);
                    return i.get
                      ? i.get.call(arguments.length < 3 ? e : n)
                      : i.value;
                  }
                }),
          fi.apply(this, arguments)
        );
      }
      for (
        var di,
          hi = n(7757),
          pi = "139",
          vi = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 },
          mi = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
          gi = 0,
          yi = 1,
          bi = 2,
          xi = 3,
          wi = 0,
          _i = 1,
          Si = 2,
          Mi = 3,
          Ei = 0,
          ki = 1,
          Ti = 2,
          Ci = 1,
          Ai = 2,
          Pi = 0,
          Li = 1,
          Ri = 2,
          Oi = 3,
          zi = 4,
          Di = 5,
          Ii = 100,
          Ni = 101,
          Fi = 102,
          Bi = 103,
          Hi = 104,
          Ui = 200,
          ji = 201,
          Gi = 202,
          Wi = 203,
          Vi = 204,
          qi = 205,
          Xi = 206,
          Yi = 207,
          Ji = 208,
          $i = 209,
          Qi = 210,
          Zi = 0,
          Ki = 1,
          ea = 2,
          ta = 3,
          na = 4,
          ra = 5,
          ia = 6,
          aa = 7,
          oa = 0,
          sa = 1,
          la = 2,
          ua = 0,
          ca = 1,
          fa = 2,
          da = 3,
          ha = 4,
          pa = 5,
          va = 300,
          ma = 301,
          ga = 302,
          ya = 303,
          ba = 304,
          xa = 306,
          wa = 1e3,
          _a = 1001,
          Sa = 1002,
          Ma = 1003,
          Ea = 1004,
          ka = 1004,
          Ta = 1005,
          Ca = 1005,
          Aa = 1006,
          Pa = 1007,
          La = 1007,
          Ra = 1008,
          Oa = 1008,
          za = 1009,
          Da = 1010,
          Ia = 1011,
          Na = 1012,
          Fa = 1013,
          Ba = 1014,
          Ha = 1015,
          Ua = 1016,
          ja = 1017,
          Ga = 1018,
          Wa = 1020,
          Va = 1021,
          qa = 1022,
          Xa = 1023,
          Ya = 1024,
          Ja = 1025,
          $a = 1026,
          Qa = 1027,
          Za = 1028,
          Ka = 1029,
          eo = 1030,
          to = 1031,
          no = 1033,
          ro = 33776,
          io = 33777,
          ao = 33778,
          oo = 33779,
          so = 35840,
          lo = 35841,
          uo = 35842,
          co = 35843,
          fo = 36196,
          ho = 37492,
          po = 37496,
          vo = 37808,
          mo = 37809,
          go = 37810,
          yo = 37811,
          bo = 37812,
          xo = 37813,
          wo = 37814,
          _o = 37815,
          So = 37816,
          Mo = 37817,
          Eo = 37818,
          ko = 37819,
          To = 37820,
          Co = 37821,
          Ao = 36492,
          Po = 2200,
          Lo = 2201,
          Ro = 2202,
          Oo = 2300,
          zo = 2301,
          Do = 2302,
          Io = 2400,
          No = 2401,
          Fo = 2402,
          Bo = 2500,
          Ho = 2501,
          Uo = 0,
          jo = 1,
          Go = 2,
          Wo = 3e3,
          Vo = 3001,
          qo = 3200,
          Xo = 3201,
          Yo = 0,
          Jo = 1,
          $o = "",
          Qo = "srgb",
          Zo = "srgb-linear",
          Ko = 0,
          es = 7680,
          ts = 7681,
          ns = 7682,
          rs = 7683,
          is = 34055,
          as = 34056,
          os = 5386,
          ss = 512,
          ls = 513,
          us = 514,
          cs = 515,
          fs = 516,
          ds = 517,
          hs = 518,
          ps = 519,
          vs = 35044,
          ms = 35048,
          gs = 35040,
          ys = 35045,
          bs = 35049,
          xs = 35041,
          ws = 35046,
          _s = 35050,
          Ss = 35042,
          Ms = "100",
          Es = "300 es",
          ks = 1035,
          Ts = (function () {
            function e() {
              Kr(this, e);
            }
            return (
              ti(e, [
                {
                  key: "addEventListener",
                  value: function (e, t) {
                    void 0 === this._listeners && (this._listeners = {});
                    var n = this._listeners;
                    void 0 === n[e] && (n[e] = []),
                      -1 === n[e].indexOf(t) && n[e].push(t);
                  },
                },
                {
                  key: "hasEventListener",
                  value: function (e, t) {
                    if (void 0 === this._listeners) return !1;
                    var n = this._listeners;
                    return void 0 !== n[e] && -1 !== n[e].indexOf(t);
                  },
                },
                {
                  key: "removeEventListener",
                  value: function (e, t) {
                    if (void 0 !== this._listeners) {
                      var n = this._listeners[e];
                      if (void 0 !== n) {
                        var r = n.indexOf(t);
                        -1 !== r && n.splice(r, 1);
                      }
                    }
                  },
                },
                {
                  key: "dispatchEvent",
                  value: function (e) {
                    if (void 0 !== this._listeners) {
                      var t = this._listeners[e.type];
                      if (void 0 !== t) {
                        e.target = this;
                        for (
                          var n = t.slice(0), r = 0, i = n.length;
                          r < i;
                          r++
                        )
                          n[r].call(this, e);
                        e.target = null;
                      }
                    }
                  },
                },
              ]),
              e
            );
          })(),
          Cs = [],
          As = 0;
        As < 256;
        As++
      )
        Cs[As] = (As < 16 ? "0" : "") + As.toString(16);
      var Ps = 1234567,
        Ls = Math.PI / 180,
        Rs = 180 / Math.PI;
      function Os() {
        var e = (4294967295 * Math.random()) | 0,
          t = (4294967295 * Math.random()) | 0,
          n = (4294967295 * Math.random()) | 0,
          r = (4294967295 * Math.random()) | 0;
        return (
          Cs[255 & e] +
          Cs[(e >> 8) & 255] +
          Cs[(e >> 16) & 255] +
          Cs[(e >> 24) & 255] +
          "-" +
          Cs[255 & t] +
          Cs[(t >> 8) & 255] +
          "-" +
          Cs[((t >> 16) & 15) | 64] +
          Cs[(t >> 24) & 255] +
          "-" +
          Cs[(63 & n) | 128] +
          Cs[(n >> 8) & 255] +
          "-" +
          Cs[(n >> 16) & 255] +
          Cs[(n >> 24) & 255] +
          Cs[255 & r] +
          Cs[(r >> 8) & 255] +
          Cs[(r >> 16) & 255] +
          Cs[(r >> 24) & 255]
        ).toLowerCase();
      }
      function zs(e, t, n) {
        return Math.max(t, Math.min(n, e));
      }
      function Ds(e, t) {
        return ((e % t) + t) % t;
      }
      function Is(e, t, n) {
        return (1 - n) * e + n * t;
      }
      function Ns(e) {
        return 0 === (e & (e - 1)) && 0 !== e;
      }
      function Fs(e) {
        return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));
      }
      function Bs(e) {
        return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
      }
      var Hs = Object.freeze({
          __proto__: null,
          DEG2RAD: Ls,
          RAD2DEG: Rs,
          generateUUID: Os,
          clamp: zs,
          euclideanModulo: Ds,
          mapLinear: function (e, t, n, r, i) {
            return r + ((e - t) * (i - r)) / (n - t);
          },
          inverseLerp: function (e, t, n) {
            return e !== t ? (n - e) / (t - e) : 0;
          },
          lerp: Is,
          damp: function (e, t, n, r) {
            return Is(e, t, 1 - Math.exp(-n * r));
          },
          pingpong: function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
            return t - Math.abs(Ds(e, 2 * t) - t);
          },
          smoothstep: function (e, t, n) {
            return e <= t
              ? 0
              : e >= n
              ? 1
              : (e = (e - t) / (n - t)) * e * (3 - 2 * e);
          },
          smootherstep: function (e, t, n) {
            return e <= t
              ? 0
              : e >= n
              ? 1
              : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10);
          },
          randInt: function (e, t) {
            return e + Math.floor(Math.random() * (t - e + 1));
          },
          randFloat: function (e, t) {
            return e + Math.random() * (t - e);
          },
          randFloatSpread: function (e) {
            return e * (0.5 - Math.random());
          },
          seededRandom: function (e) {
            void 0 !== e && (Ps = e);
            var t = (Ps += 1831565813);
            return (
              (t = Math.imul(t ^ (t >>> 15), 1 | t)),
              (((t ^= t + Math.imul(t ^ (t >>> 7), 61 | t)) ^ (t >>> 14)) >>>
                0) /
                4294967296
            );
          },
          degToRad: function (e) {
            return e * Ls;
          },
          radToDeg: function (e) {
            return e * Rs;
          },
          isPowerOfTwo: Ns,
          ceilPowerOfTwo: Fs,
          floorPowerOfTwo: Bs,
          setQuaternionFromProperEuler: function (e, t, n, r, i) {
            var a = Math.cos,
              o = Math.sin,
              s = a(n / 2),
              l = o(n / 2),
              u = a((t + r) / 2),
              c = o((t + r) / 2),
              f = a((t - r) / 2),
              d = o((t - r) / 2),
              h = a((r - t) / 2),
              p = o((r - t) / 2);
            switch (i) {
              case "XYX":
                e.set(s * c, l * f, l * d, s * u);
                break;
              case "YZY":
                e.set(l * d, s * c, l * f, s * u);
                break;
              case "ZXZ":
                e.set(l * f, l * d, s * c, s * u);
                break;
              case "XZX":
                e.set(s * c, l * p, l * h, s * u);
                break;
              case "YXY":
                e.set(l * h, s * c, l * p, s * u);
                break;
              case "ZYZ":
                e.set(l * p, l * h, s * c, s * u);
                break;
              default:
                console.warn(
                  "THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " +
                    i
                );
            }
          },
          normalize: function (e, t) {
            switch (t.constructor) {
              case Float32Array:
                return e;
              case Uint16Array:
                return Math.round(65535 * e);
              case Uint8Array:
                return Math.round(255 * e);
              case Int16Array:
                return Math.round(32767 * e);
              case Int8Array:
                return Math.round(127 * e);
              default:
                throw new Error("Invalid component type.");
            }
          },
          denormalize: function (e, t) {
            switch (t.constructor) {
              case Float32Array:
                return e;
              case Uint16Array:
                return e / 65535;
              case Uint8Array:
                return e / 255;
              case Int16Array:
                return Math.max(e / 32767, -1);
              case Int8Array:
                return Math.max(e / 127, -1);
              default:
                throw new Error("Invalid component type.");
            }
          },
        }),
        Us = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Kr(this, t), (this.x = e), (this.y = n);
          }
          return (
            ti(t, [
              {
                key: "width",
                get: function () {
                  return this.x;
                },
                set: function (e) {
                  this.x = e;
                },
              },
              {
                key: "height",
                get: function () {
                  return this.y;
                },
                set: function (e) {
                  this.y = e;
                },
              },
              {
                key: "set",
                value: function (e, t) {
                  return (this.x = e), (this.y = t), this;
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.x = e), (this.y = e), this;
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.x = e.x), (this.y = e.y), this;
                },
              },
              {
                key: "add",
                value: function (e, t) {
                  return void 0 !== t
                    ? (console.warn(
                        "THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
                      ),
                      this.addVectors(e, t))
                    : ((this.x += e.x), (this.y += e.y), this);
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.x += e), (this.y += e), this;
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (this.x += e.x * t), (this.y += e.y * t), this;
                },
              },
              {
                key: "sub",
                value: function (e, t) {
                  return void 0 !== t
                    ? (console.warn(
                        "THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
                      ),
                      this.subVectors(e, t))
                    : ((this.x -= e.x), (this.y -= e.y), this);
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (this.x -= e), (this.y -= e), this;
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (this.x *= e.x), (this.y *= e.y), this;
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.x *= e), (this.y *= e), this;
                },
              },
              {
                key: "divide",
                value: function (e) {
                  return (this.x /= e.x), (this.y /= e.y), this;
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = e.elements;
                  return (
                    (this.x = r[0] * t + r[3] * n + r[6]),
                    (this.y = r[1] * t + r[4] * n + r[7]),
                    this
                  );
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x =
                      this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                    (this.y =
                      this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (this.x = -this.x), (this.y = -this.y), this;
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return this.x * e.x + this.y * e.y;
                },
              },
              {
                key: "cross",
                value: function (e) {
                  return this.x * e.y - this.y * e.x;
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return this.x * this.x + this.y * this.y;
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(this.x * this.x + this.y * this.y);
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return Math.abs(this.x) + Math.abs(this.y);
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "angle",
                value: function () {
                  var e = Math.atan2(-this.y, -this.x) + Math.PI;
                  return e;
                },
              },
              {
                key: "distanceTo",
                value: function (e) {
                  return Math.sqrt(this.distanceToSquared(e));
                },
              },
              {
                key: "distanceToSquared",
                value: function (e) {
                  var t = this.x - e.x,
                    n = this.y - e.y;
                  return t * t + n * n;
                },
              },
              {
                key: "manhattanDistanceTo",
                value: function (e) {
                  return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.x === this.x && e.y === this.y;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (this.x = e[t]), (this.y = e[t + 1]), this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (e[t] = this.x), (e[t + 1] = this.y), e;
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t, n) {
                  return (
                    void 0 !== n &&
                      console.warn(
                        "THREE.Vector2: offset has been removed from .fromBufferAttribute()."
                      ),
                    (this.x = e.getX(t)),
                    (this.y = e.getY(t)),
                    this
                  );
                },
              },
              {
                key: "rotateAround",
                value: function (e, t) {
                  var n = Math.cos(t),
                    r = Math.sin(t),
                    i = this.x - e.x,
                    a = this.y - e.y;
                  return (
                    (this.x = i * n - a * r + e.x),
                    (this.y = i * r + a * n + e.y),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()), (this.y = Math.random()), this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: hi.mark(function e() {
                  return hi.wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })();
      Us.prototype.isVector2 = !0;
      var js = (function () {
        function e() {
          Kr(this, e),
            (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
            arguments.length > 0 &&
              console.error(
                "THREE.Matrix3: the constructor no longer reads arguments. use .set() instead."
              );
        }
        return (
          ti(e, [
            {
              key: "set",
              value: function (e, t, n, r, i, a, o, s, l) {
                var u = this.elements;
                return (
                  (u[0] = e),
                  (u[1] = r),
                  (u[2] = o),
                  (u[3] = t),
                  (u[4] = i),
                  (u[5] = s),
                  (u[6] = n),
                  (u[7] = a),
                  (u[8] = l),
                  this
                );
              },
            },
            {
              key: "identity",
              value: function () {
                return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
              },
            },
            {
              key: "copy",
              value: function (e) {
                var t = this.elements,
                  n = e.elements;
                return (
                  (t[0] = n[0]),
                  (t[1] = n[1]),
                  (t[2] = n[2]),
                  (t[3] = n[3]),
                  (t[4] = n[4]),
                  (t[5] = n[5]),
                  (t[6] = n[6]),
                  (t[7] = n[7]),
                  (t[8] = n[8]),
                  this
                );
              },
            },
            {
              key: "extractBasis",
              value: function (e, t, n) {
                return (
                  e.setFromMatrix3Column(this, 0),
                  t.setFromMatrix3Column(this, 1),
                  n.setFromMatrix3Column(this, 2),
                  this
                );
              },
            },
            {
              key: "setFromMatrix4",
              value: function (e) {
                var t = e.elements;
                return (
                  this.set(
                    t[0],
                    t[4],
                    t[8],
                    t[1],
                    t[5],
                    t[9],
                    t[2],
                    t[6],
                    t[10]
                  ),
                  this
                );
              },
            },
            {
              key: "multiply",
              value: function (e) {
                return this.multiplyMatrices(this, e);
              },
            },
            {
              key: "premultiply",
              value: function (e) {
                return this.multiplyMatrices(e, this);
              },
            },
            {
              key: "multiplyMatrices",
              value: function (e, t) {
                var n = e.elements,
                  r = t.elements,
                  i = this.elements,
                  a = n[0],
                  o = n[3],
                  s = n[6],
                  l = n[1],
                  u = n[4],
                  c = n[7],
                  f = n[2],
                  d = n[5],
                  h = n[8],
                  p = r[0],
                  v = r[3],
                  m = r[6],
                  g = r[1],
                  y = r[4],
                  b = r[7],
                  x = r[2],
                  w = r[5],
                  _ = r[8];
                return (
                  (i[0] = a * p + o * g + s * x),
                  (i[3] = a * v + o * y + s * w),
                  (i[6] = a * m + o * b + s * _),
                  (i[1] = l * p + u * g + c * x),
                  (i[4] = l * v + u * y + c * w),
                  (i[7] = l * m + u * b + c * _),
                  (i[2] = f * p + d * g + h * x),
                  (i[5] = f * v + d * y + h * w),
                  (i[8] = f * m + d * b + h * _),
                  this
                );
              },
            },
            {
              key: "multiplyScalar",
              value: function (e) {
                var t = this.elements;
                return (
                  (t[0] *= e),
                  (t[3] *= e),
                  (t[6] *= e),
                  (t[1] *= e),
                  (t[4] *= e),
                  (t[7] *= e),
                  (t[2] *= e),
                  (t[5] *= e),
                  (t[8] *= e),
                  this
                );
              },
            },
            {
              key: "determinant",
              value: function () {
                var e = this.elements,
                  t = e[0],
                  n = e[1],
                  r = e[2],
                  i = e[3],
                  a = e[4],
                  o = e[5],
                  s = e[6],
                  l = e[7],
                  u = e[8];
                return (
                  t * a * u -
                  t * o * l -
                  n * i * u +
                  n * o * s +
                  r * i * l -
                  r * a * s
                );
              },
            },
            {
              key: "invert",
              value: function () {
                var e = this.elements,
                  t = e[0],
                  n = e[1],
                  r = e[2],
                  i = e[3],
                  a = e[4],
                  o = e[5],
                  s = e[6],
                  l = e[7],
                  u = e[8],
                  c = u * a - o * l,
                  f = o * s - u * i,
                  d = l * i - a * s,
                  h = t * c + n * f + r * d;
                if (0 === h) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
                var p = 1 / h;
                return (
                  (e[0] = c * p),
                  (e[1] = (r * l - u * n) * p),
                  (e[2] = (o * n - r * a) * p),
                  (e[3] = f * p),
                  (e[4] = (u * t - r * s) * p),
                  (e[5] = (r * i - o * t) * p),
                  (e[6] = d * p),
                  (e[7] = (n * s - l * t) * p),
                  (e[8] = (a * t - n * i) * p),
                  this
                );
              },
            },
            {
              key: "transpose",
              value: function () {
                var e,
                  t = this.elements;
                return (
                  (e = t[1]),
                  (t[1] = t[3]),
                  (t[3] = e),
                  (e = t[2]),
                  (t[2] = t[6]),
                  (t[6] = e),
                  (e = t[5]),
                  (t[5] = t[7]),
                  (t[7] = e),
                  this
                );
              },
            },
            {
              key: "getNormalMatrix",
              value: function (e) {
                return this.setFromMatrix4(e).invert().transpose();
              },
            },
            {
              key: "transposeIntoArray",
              value: function (e) {
                var t = this.elements;
                return (
                  (e[0] = t[0]),
                  (e[1] = t[3]),
                  (e[2] = t[6]),
                  (e[3] = t[1]),
                  (e[4] = t[4]),
                  (e[5] = t[7]),
                  (e[6] = t[2]),
                  (e[7] = t[5]),
                  (e[8] = t[8]),
                  this
                );
              },
            },
            {
              key: "setUvTransform",
              value: function (e, t, n, r, i, a, o) {
                var s = Math.cos(i),
                  l = Math.sin(i);
                return (
                  this.set(
                    n * s,
                    n * l,
                    -n * (s * a + l * o) + a + e,
                    -r * l,
                    r * s,
                    -r * (-l * a + s * o) + o + t,
                    0,
                    0,
                    1
                  ),
                  this
                );
              },
            },
            {
              key: "scale",
              value: function (e, t) {
                var n = this.elements;
                return (
                  (n[0] *= e),
                  (n[3] *= e),
                  (n[6] *= e),
                  (n[1] *= t),
                  (n[4] *= t),
                  (n[7] *= t),
                  this
                );
              },
            },
            {
              key: "rotate",
              value: function (e) {
                var t = Math.cos(e),
                  n = Math.sin(e),
                  r = this.elements,
                  i = r[0],
                  a = r[3],
                  o = r[6],
                  s = r[1],
                  l = r[4],
                  u = r[7];
                return (
                  (r[0] = t * i + n * s),
                  (r[3] = t * a + n * l),
                  (r[6] = t * o + n * u),
                  (r[1] = -n * i + t * s),
                  (r[4] = -n * a + t * l),
                  (r[7] = -n * o + t * u),
                  this
                );
              },
            },
            {
              key: "translate",
              value: function (e, t) {
                var n = this.elements;
                return (
                  (n[0] += e * n[2]),
                  (n[3] += e * n[5]),
                  (n[6] += e * n[8]),
                  (n[1] += t * n[2]),
                  (n[4] += t * n[5]),
                  (n[7] += t * n[8]),
                  this
                );
              },
            },
            {
              key: "equals",
              value: function (e) {
                for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                  if (t[r] !== n[r]) return !1;
                return !0;
              },
            },
            {
              key: "fromArray",
              value: function (e) {
                for (
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = 0;
                  n < 9;
                  n++
                )
                  this.elements[n] = e[n + t];
                return this;
              },
            },
            {
              key: "toArray",
              value: function () {
                var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : [],
                  t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0,
                  n = this.elements;
                return (
                  (e[t] = n[0]),
                  (e[t + 1] = n[1]),
                  (e[t + 2] = n[2]),
                  (e[t + 3] = n[3]),
                  (e[t + 4] = n[4]),
                  (e[t + 5] = n[5]),
                  (e[t + 6] = n[6]),
                  (e[t + 7] = n[7]),
                  (e[t + 8] = n[8]),
                  e
                );
              },
            },
            {
              key: "clone",
              value: function () {
                return new this.constructor().fromArray(this.elements);
              },
            },
          ]),
          e
        );
      })();
      function Gs(e) {
        for (var t = e.length - 1; t >= 0; --t) if (e[t] > 65535) return !0;
        return !1;
      }
      js.prototype.isMatrix3 = !0;
      var Ws = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: Uint8ClampedArray,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array,
      };
      function Vs(e, t) {
        return new Ws[e](t);
      }
      function qs(e) {
        return document.createElementNS("http://www.w3.org/1999/xhtml", e);
      }
      function Xs(e) {
        return e < 0.04045
          ? 0.0773993808 * e
          : Math.pow(0.9478672986 * e + 0.0521327014, 2.4);
      }
      function Ys(e) {
        return e < 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 0.41666) - 0.055;
      }
      var Js =
          (kr((di = {}), Qo, kr({}, Zo, Xs)), kr(di, Zo, kr({}, Qo, Ys)), di),
        $s = {
          legacyMode: !0,
          get workingColorSpace() {
            return Zo;
          },
          set workingColorSpace(e) {
            console.warn(
              "THREE.ColorManagement: .workingColorSpace is readonly."
            );
          },
          convert: function (e, t, n) {
            if (this.legacyMode || t === n || !t || !n) return e;
            if (Js[t] && void 0 !== Js[t][n]) {
              var r = Js[t][n];
              return (e.r = r(e.r)), (e.g = r(e.g)), (e.b = r(e.b)), e;
            }
            throw new Error("Unsupported color space conversion.");
          },
          fromWorkingColorSpace: function (e, t) {
            return this.convert(e, this.workingColorSpace, t);
          },
          toWorkingColorSpace: function (e, t) {
            return this.convert(e, t, this.workingColorSpace);
          },
        },
        Qs = {
          aliceblue: 15792383,
          antiquewhite: 16444375,
          aqua: 65535,
          aquamarine: 8388564,
          azure: 15794175,
          beige: 16119260,
          bisque: 16770244,
          black: 0,
          blanchedalmond: 16772045,
          blue: 255,
          blueviolet: 9055202,
          brown: 10824234,
          burlywood: 14596231,
          cadetblue: 6266528,
          chartreuse: 8388352,
          chocolate: 13789470,
          coral: 16744272,
          cornflowerblue: 6591981,
          cornsilk: 16775388,
          crimson: 14423100,
          cyan: 65535,
          darkblue: 139,
          darkcyan: 35723,
          darkgoldenrod: 12092939,
          darkgray: 11119017,
          darkgreen: 25600,
          darkgrey: 11119017,
          darkkhaki: 12433259,
          darkmagenta: 9109643,
          darkolivegreen: 5597999,
          darkorange: 16747520,
          darkorchid: 10040012,
          darkred: 9109504,
          darksalmon: 15308410,
          darkseagreen: 9419919,
          darkslateblue: 4734347,
          darkslategray: 3100495,
          darkslategrey: 3100495,
          darkturquoise: 52945,
          darkviolet: 9699539,
          deeppink: 16716947,
          deepskyblue: 49151,
          dimgray: 6908265,
          dimgrey: 6908265,
          dodgerblue: 2003199,
          firebrick: 11674146,
          floralwhite: 16775920,
          forestgreen: 2263842,
          fuchsia: 16711935,
          gainsboro: 14474460,
          ghostwhite: 16316671,
          gold: 16766720,
          goldenrod: 14329120,
          gray: 8421504,
          green: 32768,
          greenyellow: 11403055,
          grey: 8421504,
          honeydew: 15794160,
          hotpink: 16738740,
          indianred: 13458524,
          indigo: 4915330,
          ivory: 16777200,
          khaki: 15787660,
          lavender: 15132410,
          lavenderblush: 16773365,
          lawngreen: 8190976,
          lemonchiffon: 16775885,
          lightblue: 11393254,
          lightcoral: 15761536,
          lightcyan: 14745599,
          lightgoldenrodyellow: 16448210,
          lightgray: 13882323,
          lightgreen: 9498256,
          lightgrey: 13882323,
          lightpink: 16758465,
          lightsalmon: 16752762,
          lightseagreen: 2142890,
          lightskyblue: 8900346,
          lightslategray: 7833753,
          lightslategrey: 7833753,
          lightsteelblue: 11584734,
          lightyellow: 16777184,
          lime: 65280,
          limegreen: 3329330,
          linen: 16445670,
          magenta: 16711935,
          maroon: 8388608,
          mediumaquamarine: 6737322,
          mediumblue: 205,
          mediumorchid: 12211667,
          mediumpurple: 9662683,
          mediumseagreen: 3978097,
          mediumslateblue: 8087790,
          mediumspringgreen: 64154,
          mediumturquoise: 4772300,
          mediumvioletred: 13047173,
          midnightblue: 1644912,
          mintcream: 16121850,
          mistyrose: 16770273,
          moccasin: 16770229,
          navajowhite: 16768685,
          navy: 128,
          oldlace: 16643558,
          olive: 8421376,
          olivedrab: 7048739,
          orange: 16753920,
          orangered: 16729344,
          orchid: 14315734,
          palegoldenrod: 15657130,
          palegreen: 10025880,
          paleturquoise: 11529966,
          palevioletred: 14381203,
          papayawhip: 16773077,
          peachpuff: 16767673,
          peru: 13468991,
          pink: 16761035,
          plum: 14524637,
          powderblue: 11591910,
          purple: 8388736,
          rebeccapurple: 6697881,
          red: 16711680,
          rosybrown: 12357519,
          royalblue: 4286945,
          saddlebrown: 9127187,
          salmon: 16416882,
          sandybrown: 16032864,
          seagreen: 3050327,
          seashell: 16774638,
          sienna: 10506797,
          silver: 12632256,
          skyblue: 8900331,
          slateblue: 6970061,
          slategray: 7372944,
          slategrey: 7372944,
          snow: 16775930,
          springgreen: 65407,
          steelblue: 4620980,
          tan: 13808780,
          teal: 32896,
          thistle: 14204888,
          tomato: 16737095,
          turquoise: 4251856,
          violet: 15631086,
          wheat: 16113331,
          white: 16777215,
          whitesmoke: 16119285,
          yellow: 16776960,
          yellowgreen: 10145074,
        },
        Zs = { r: 0, g: 0, b: 0 },
        Ks = { h: 0, s: 0, l: 0 },
        el = { h: 0, s: 0, l: 0 };
      function tl(e, t, n) {
        return (
          n < 0 && (n += 1),
          n > 1 && (n -= 1),
          n < 1 / 6
            ? e + 6 * (t - e) * n
            : n < 0.5
            ? t
            : n < 2 / 3
            ? e + 6 * (t - e) * (2 / 3 - n)
            : e
        );
      }
      function nl(e, t) {
        return (t.r = e.r), (t.g = e.g), (t.b = e.b), t;
      }
      var rl,
        il = (function () {
          function e(t, n, r) {
            return (
              Kr(this, e),
              void 0 === n && void 0 === r ? this.set(t) : this.setRGB(t, n, r)
            );
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e) {
                  return (
                    e && e.isColor
                      ? this.copy(e)
                      : "number" === typeof e
                      ? this.setHex(e)
                      : "string" === typeof e && this.setStyle(e),
                    this
                  );
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.r = e), (this.g = e), (this.b = e), this;
                },
              },
              {
                key: "setHex",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : Qo;
                  return (
                    (e = Math.floor(e)),
                    (this.r = ((e >> 16) & 255) / 255),
                    (this.g = ((e >> 8) & 255) / 255),
                    (this.b = (255 & e) / 255),
                    $s.toWorkingColorSpace(this, t),
                    this
                  );
                },
              },
              {
                key: "setRGB",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : Zo;
                  return (
                    (this.r = e),
                    (this.g = t),
                    (this.b = n),
                    $s.toWorkingColorSpace(this, r),
                    this
                  );
                },
              },
              {
                key: "setHSL",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : Zo;
                  if (
                    ((e = Ds(e, 1)),
                    (t = zs(t, 0, 1)),
                    (n = zs(n, 0, 1)),
                    0 === t)
                  )
                    this.r = this.g = this.b = n;
                  else {
                    var i = n <= 0.5 ? n * (1 + t) : n + t - n * t,
                      a = 2 * n - i;
                    (this.r = tl(a, i, e + 1 / 3)),
                      (this.g = tl(a, i, e)),
                      (this.b = tl(a, i, e - 1 / 3));
                  }
                  return $s.toWorkingColorSpace(this, r), this;
                },
              },
              {
                key: "setStyle",
                value: function (e) {
                  var t,
                    n =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : Qo;
                  function r(t) {
                    void 0 !== t &&
                      parseFloat(t) < 1 &&
                      console.warn(
                        "THREE.Color: Alpha component of " +
                          e +
                          " will be ignored."
                      );
                  }
                  if ((t = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e))) {
                    var i,
                      a = t[1],
                      o = t[2];
                    switch (a) {
                      case "rgb":
                      case "rgba":
                        if (
                          (i =
                            /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            (this.r = Math.min(255, parseInt(i[1], 10)) / 255),
                            (this.g = Math.min(255, parseInt(i[2], 10)) / 255),
                            (this.b = Math.min(255, parseInt(i[3], 10)) / 255),
                            $s.toWorkingColorSpace(this, n),
                            r(i[4]),
                            this
                          );
                        if (
                          (i =
                            /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            (this.r = Math.min(100, parseInt(i[1], 10)) / 100),
                            (this.g = Math.min(100, parseInt(i[2], 10)) / 100),
                            (this.b = Math.min(100, parseInt(i[3], 10)) / 100),
                            $s.toWorkingColorSpace(this, n),
                            r(i[4]),
                            this
                          );
                        break;
                      case "hsl":
                      case "hsla":
                        if (
                          (i =
                            /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        ) {
                          var s = parseFloat(i[1]) / 360,
                            l = parseInt(i[2], 10) / 100,
                            u = parseInt(i[3], 10) / 100;
                          return r(i[4]), this.setHSL(s, l, u, n);
                        }
                    }
                  } else if ((t = /^\#([A-Fa-f\d]+)$/.exec(e))) {
                    var c = t[1],
                      f = c.length;
                    if (3 === f)
                      return (
                        (this.r =
                          parseInt(c.charAt(0) + c.charAt(0), 16) / 255),
                        (this.g =
                          parseInt(c.charAt(1) + c.charAt(1), 16) / 255),
                        (this.b =
                          parseInt(c.charAt(2) + c.charAt(2), 16) / 255),
                        $s.toWorkingColorSpace(this, n),
                        this
                      );
                    if (6 === f)
                      return (
                        (this.r =
                          parseInt(c.charAt(0) + c.charAt(1), 16) / 255),
                        (this.g =
                          parseInt(c.charAt(2) + c.charAt(3), 16) / 255),
                        (this.b =
                          parseInt(c.charAt(4) + c.charAt(5), 16) / 255),
                        $s.toWorkingColorSpace(this, n),
                        this
                      );
                  }
                  return e && e.length > 0 ? this.setColorName(e, n) : this;
                },
              },
              {
                key: "setColorName",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : Qo,
                    n = Qs[e.toLowerCase()];
                  return (
                    void 0 !== n
                      ? this.setHex(n, t)
                      : console.warn("THREE.Color: Unknown color " + e),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.r, this.g, this.b);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
                },
              },
              {
                key: "copySRGBToLinear",
                value: function (e) {
                  return (
                    (this.r = Xs(e.r)),
                    (this.g = Xs(e.g)),
                    (this.b = Xs(e.b)),
                    this
                  );
                },
              },
              {
                key: "copyLinearToSRGB",
                value: function (e) {
                  return (
                    (this.r = Ys(e.r)),
                    (this.g = Ys(e.g)),
                    (this.b = Ys(e.b)),
                    this
                  );
                },
              },
              {
                key: "convertSRGBToLinear",
                value: function () {
                  return this.copySRGBToLinear(this), this;
                },
              },
              {
                key: "convertLinearToSRGB",
                value: function () {
                  return this.copyLinearToSRGB(this), this;
                },
              },
              {
                key: "getHex",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : Qo;
                  return (
                    $s.fromWorkingColorSpace(nl(this, Zs), e),
                    (zs(255 * Zs.r, 0, 255) << 16) ^
                      (zs(255 * Zs.g, 0, 255) << 8) ^
                      (zs(255 * Zs.b, 0, 255) << 0)
                  );
                },
              },
              {
                key: "getHexString",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : Qo;
                  return ("000000" + this.getHex(e).toString(16)).slice(-6);
                },
              },
              {
                key: "getHSL",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : Zo;
                  $s.fromWorkingColorSpace(nl(this, Zs), t);
                  var n,
                    r,
                    i = Zs.r,
                    a = Zs.g,
                    o = Zs.b,
                    s = Math.max(i, a, o),
                    l = Math.min(i, a, o),
                    u = (l + s) / 2;
                  if (l === s) (n = 0), (r = 0);
                  else {
                    var c = s - l;
                    switch (
                      ((r = u <= 0.5 ? c / (s + l) : c / (2 - s - l)), s)
                    ) {
                      case i:
                        n = (a - o) / c + (a < o ? 6 : 0);
                        break;
                      case a:
                        n = (o - i) / c + 2;
                        break;
                      case o:
                        n = (i - a) / c + 4;
                    }
                    n /= 6;
                  }
                  return (e.h = n), (e.s = r), (e.l = u), e;
                },
              },
              {
                key: "getRGB",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : Zo;
                  return (
                    $s.fromWorkingColorSpace(nl(this, Zs), t),
                    (e.r = Zs.r),
                    (e.g = Zs.g),
                    (e.b = Zs.b),
                    e
                  );
                },
              },
              {
                key: "getStyle",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : Qo;
                  return (
                    $s.fromWorkingColorSpace(nl(this, Zs), e),
                    e !== Qo
                      ? "color("
                          .concat(e, " ")
                          .concat(Zs.r, " ")
                          .concat(Zs.g, " ")
                          .concat(Zs.b, ")")
                      : "rgb("
                          .concat((255 * Zs.r) | 0, ",")
                          .concat((255 * Zs.g) | 0, ",")
                          .concat((255 * Zs.b) | 0, ")")
                  );
                },
              },
              {
                key: "offsetHSL",
                value: function (e, t, n) {
                  return (
                    this.getHSL(Ks),
                    (Ks.h += e),
                    (Ks.s += t),
                    (Ks.l += n),
                    this.setHSL(Ks.h, Ks.s, Ks.l),
                    this
                  );
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.r += e.r), (this.g += e.g), (this.b += e.b), this
                  );
                },
              },
              {
                key: "addColors",
                value: function (e, t) {
                  return (
                    (this.r = e.r + t.r),
                    (this.g = e.g + t.g),
                    (this.b = e.b + t.b),
                    this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.r += e), (this.g += e), (this.b += e), this;
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.r = Math.max(0, this.r - e.r)),
                    (this.g = Math.max(0, this.g - e.g)),
                    (this.b = Math.max(0, this.b - e.b)),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.r *= e), (this.g *= e), (this.b *= e), this;
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.r += (e.r - this.r) * t),
                    (this.g += (e.g - this.g) * t),
                    (this.b += (e.b - this.b) * t),
                    this
                  );
                },
              },
              {
                key: "lerpColors",
                value: function (e, t, n) {
                  return (
                    (this.r = e.r + (t.r - e.r) * n),
                    (this.g = e.g + (t.g - e.g) * n),
                    (this.b = e.b + (t.b - e.b) * n),
                    this
                  );
                },
              },
              {
                key: "lerpHSL",
                value: function (e, t) {
                  this.getHSL(Ks), e.getHSL(el);
                  var n = Is(Ks.h, el.h, t),
                    r = Is(Ks.s, el.s, t),
                    i = Is(Ks.l, el.l, t);
                  return this.setHSL(n, r, i), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.r === this.r && e.g === this.g && e.b === this.b;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.r = e[t]),
                    (this.g = e[t + 1]),
                    (this.b = e[t + 2]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.r), (e[t + 1] = this.g), (e[t + 2] = this.b), e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.r = e.getX(t)),
                    (this.g = e.getY(t)),
                    (this.b = e.getZ(t)),
                    !0 === e.normalized &&
                      ((this.r /= 255), (this.g /= 255), (this.b /= 255)),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return this.getHex();
                },
              },
            ]),
            e
          );
        })();
      (il.NAMES = Qs),
        (il.prototype.isColor = !0),
        (il.prototype.r = 1),
        (il.prototype.g = 1),
        (il.prototype.b = 1);
      var al = (function () {
          function e() {
            Kr(this, e);
          }
          return (
            ti(e, null, [
              {
                key: "getDataURL",
                value: function (e) {
                  if (/^data:/i.test(e.src)) return e.src;
                  if ("undefined" == typeof HTMLCanvasElement) return e.src;
                  var t;
                  if (e instanceof HTMLCanvasElement) t = e;
                  else {
                    void 0 === rl && (rl = qs("canvas")),
                      (rl.width = e.width),
                      (rl.height = e.height);
                    var n = rl.getContext("2d");
                    e instanceof ImageData
                      ? n.putImageData(e, 0, 0)
                      : n.drawImage(e, 0, 0, e.width, e.height),
                      (t = rl);
                  }
                  return t.width > 2048 || t.height > 2048
                    ? (console.warn(
                        "THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",
                        e
                      ),
                      t.toDataURL("image/jpeg", 0.6))
                    : t.toDataURL("image/png");
                },
              },
              {
                key: "sRGBToLinear",
                value: function (e) {
                  if (
                    ("undefined" !== typeof HTMLImageElement &&
                      e instanceof HTMLImageElement) ||
                    ("undefined" !== typeof HTMLCanvasElement &&
                      e instanceof HTMLCanvasElement) ||
                    ("undefined" !== typeof ImageBitmap &&
                      e instanceof ImageBitmap)
                  ) {
                    var t = qs("canvas");
                    (t.width = e.width), (t.height = e.height);
                    var n = t.getContext("2d");
                    n.drawImage(e, 0, 0, e.width, e.height);
                    for (
                      var r = n.getImageData(0, 0, e.width, e.height),
                        i = r.data,
                        a = 0;
                      a < i.length;
                      a++
                    )
                      i[a] = 255 * Xs(i[a] / 255);
                    return n.putImageData(r, 0, 0), t;
                  }
                  if (e.data) {
                    for (var o = e.data.slice(0), s = 0; s < o.length; s++)
                      o instanceof Uint8Array || o instanceof Uint8ClampedArray
                        ? (o[s] = Math.floor(255 * Xs(o[s] / 255)))
                        : (o[s] = Xs(o[s]));
                    return { data: o, width: e.width, height: e.height };
                  }
                  return (
                    console.warn(
                      "THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."
                    ),
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        ol = (function () {
          function e() {
            var t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null;
            Kr(this, e),
              (this.uuid = Os()),
              (this.data = t),
              (this.version = 0);
          }
          return (
            ti(e, [
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  if (!t && void 0 !== e.images[this.uuid])
                    return e.images[this.uuid];
                  var n = { uuid: this.uuid, url: "" },
                    r = this.data;
                  if (null !== r) {
                    var i;
                    if (Array.isArray(r)) {
                      i = [];
                      for (var a = 0, o = r.length; a < o; a++)
                        r[a].isDataTexture
                          ? i.push(sl(r[a].image))
                          : i.push(sl(r[a]));
                    } else i = sl(r);
                    n.url = i;
                  }
                  return t || (e.images[this.uuid] = n), n;
                },
              },
            ]),
            e
          );
        })();
      function sl(e) {
        return ("undefined" !== typeof HTMLImageElement &&
          e instanceof HTMLImageElement) ||
          ("undefined" !== typeof HTMLCanvasElement &&
            e instanceof HTMLCanvasElement) ||
          ("undefined" !== typeof ImageBitmap && e instanceof ImageBitmap)
          ? al.getDataURL(e)
          : e.data
          ? {
              data: Array.prototype.slice.call(e.data),
              width: e.width,
              height: e.height,
              type: e.data.constructor.name,
            }
          : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
      }
      ol.prototype.isSource = !0;
      var ll = 0,
        ul = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : n.DEFAULT_IMAGE,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : n.DEFAULT_MAPPING,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : _a,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : _a,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : Aa,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : Ra,
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : Xa,
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : za,
              f =
                arguments.length > 8 && void 0 !== arguments[8]
                  ? arguments[8]
                  : 1,
              d =
                arguments.length > 9 && void 0 !== arguments[9]
                  ? arguments[9]
                  : Wo;
            return (
              Kr(this, n),
              (e = t.call(this)),
              Object.defineProperty(ai(e), "id", { value: ll++ }),
              (e.uuid = Os()),
              (e.name = ""),
              (e.source = new ol(r)),
              (e.mipmaps = []),
              (e.mapping = i),
              (e.wrapS = a),
              (e.wrapT = o),
              (e.magFilter = s),
              (e.minFilter = l),
              (e.anisotropy = f),
              (e.format = u),
              (e.internalFormat = null),
              (e.type = c),
              (e.offset = new Us(0, 0)),
              (e.repeat = new Us(1, 1)),
              (e.center = new Us(0, 0)),
              (e.rotation = 0),
              (e.matrixAutoUpdate = !0),
              (e.matrix = new js()),
              (e.generateMipmaps = !0),
              (e.premultiplyAlpha = !1),
              (e.flipY = !0),
              (e.unpackAlignment = 4),
              (e.encoding = d),
              (e.userData = {}),
              (e.version = 0),
              (e.onUpdate = null),
              (e.isRenderTargetTexture = !1),
              (e.needsPMREMUpdate = !1),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "image",
                get: function () {
                  return this.source.data;
                },
                set: function (e) {
                  this.source.data = e;
                },
              },
              {
                key: "updateMatrix",
                value: function () {
                  this.matrix.setUvTransform(
                    this.offset.x,
                    this.offset.y,
                    this.repeat.x,
                    this.repeat.y,
                    this.rotation,
                    this.center.x,
                    this.center.y
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.name = e.name),
                    (this.source = e.source),
                    (this.mipmaps = e.mipmaps.slice(0)),
                    (this.mapping = e.mapping),
                    (this.wrapS = e.wrapS),
                    (this.wrapT = e.wrapT),
                    (this.magFilter = e.magFilter),
                    (this.minFilter = e.minFilter),
                    (this.anisotropy = e.anisotropy),
                    (this.format = e.format),
                    (this.internalFormat = e.internalFormat),
                    (this.type = e.type),
                    this.offset.copy(e.offset),
                    this.repeat.copy(e.repeat),
                    this.center.copy(e.center),
                    (this.rotation = e.rotation),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    this.matrix.copy(e.matrix),
                    (this.generateMipmaps = e.generateMipmaps),
                    (this.premultiplyAlpha = e.premultiplyAlpha),
                    (this.flipY = e.flipY),
                    (this.unpackAlignment = e.unpackAlignment),
                    (this.encoding = e.encoding),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    (this.needsUpdate = !0),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  if (!t && void 0 !== e.textures[this.uuid])
                    return e.textures[this.uuid];
                  var n = {
                    metadata: {
                      version: 4.5,
                      type: "Texture",
                      generator: "Texture.toJSON",
                    },
                    uuid: this.uuid,
                    name: this.name,
                    image: this.source.toJSON(e).uuid,
                    mapping: this.mapping,
                    repeat: [this.repeat.x, this.repeat.y],
                    offset: [this.offset.x, this.offset.y],
                    center: [this.center.x, this.center.y],
                    rotation: this.rotation,
                    wrap: [this.wrapS, this.wrapT],
                    format: this.format,
                    type: this.type,
                    encoding: this.encoding,
                    minFilter: this.minFilter,
                    magFilter: this.magFilter,
                    anisotropy: this.anisotropy,
                    flipY: this.flipY,
                    premultiplyAlpha: this.premultiplyAlpha,
                    unpackAlignment: this.unpackAlignment,
                  };
                  return (
                    "{}" !== JSON.stringify(this.userData) &&
                      (n.userData = this.userData),
                    t || (e.textures[this.uuid] = n),
                    n
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
              {
                key: "transformUv",
                value: function (e) {
                  if (this.mapping !== va) return e;
                  if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
                    switch (this.wrapS) {
                      case wa:
                        e.x = e.x - Math.floor(e.x);
                        break;
                      case _a:
                        e.x = e.x < 0 ? 0 : 1;
                        break;
                      case Sa:
                        1 === Math.abs(Math.floor(e.x) % 2)
                          ? (e.x = Math.ceil(e.x) - e.x)
                          : (e.x = e.x - Math.floor(e.x));
                    }
                  if (e.y < 0 || e.y > 1)
                    switch (this.wrapT) {
                      case wa:
                        e.y = e.y - Math.floor(e.y);
                        break;
                      case _a:
                        e.y = e.y < 0 ? 0 : 1;
                        break;
                      case Sa:
                        1 === Math.abs(Math.floor(e.y) % 2)
                          ? (e.y = Math.ceil(e.y) - e.y)
                          : (e.y = e.y - Math.floor(e.y));
                    }
                  return this.flipY && (e.y = 1 - e.y), e;
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && (this.version++, (this.source.needsUpdate = !0));
                },
              },
            ]),
            n
          );
        })(Ts);
      (ul.DEFAULT_IMAGE = null),
        (ul.DEFAULT_MAPPING = va),
        (ul.prototype.isTexture = !0);
      var cl = (function (e) {
        function t() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 0,
            n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0,
            r =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            i =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1;
          Kr(this, t), (this.x = e), (this.y = n), (this.z = r), (this.w = i);
        }
        return (
          ti(t, [
            {
              key: "width",
              get: function () {
                return this.z;
              },
              set: function (e) {
                this.z = e;
              },
            },
            {
              key: "height",
              get: function () {
                return this.w;
              },
              set: function (e) {
                this.w = e;
              },
            },
            {
              key: "set",
              value: function (e, t, n, r) {
                return (
                  (this.x = e), (this.y = t), (this.z = n), (this.w = r), this
                );
              },
            },
            {
              key: "setScalar",
              value: function (e) {
                return (
                  (this.x = e), (this.y = e), (this.z = e), (this.w = e), this
                );
              },
            },
            {
              key: "setX",
              value: function (e) {
                return (this.x = e), this;
              },
            },
            {
              key: "setY",
              value: function (e) {
                return (this.y = e), this;
              },
            },
            {
              key: "setZ",
              value: function (e) {
                return (this.z = e), this;
              },
            },
            {
              key: "setW",
              value: function (e) {
                return (this.w = e), this;
              },
            },
            {
              key: "setComponent",
              value: function (e, t) {
                switch (e) {
                  case 0:
                    this.x = t;
                    break;
                  case 1:
                    this.y = t;
                    break;
                  case 2:
                    this.z = t;
                    break;
                  case 3:
                    this.w = t;
                    break;
                  default:
                    throw new Error("index is out of range: " + e);
                }
                return this;
              },
            },
            {
              key: "getComponent",
              value: function (e) {
                switch (e) {
                  case 0:
                    return this.x;
                  case 1:
                    return this.y;
                  case 2:
                    return this.z;
                  case 3:
                    return this.w;
                  default:
                    throw new Error("index is out of range: " + e);
                }
              },
            },
            {
              key: "clone",
              value: function () {
                return new this.constructor(this.x, this.y, this.z, this.w);
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  (this.x = e.x),
                  (this.y = e.y),
                  (this.z = e.z),
                  (this.w = void 0 !== e.w ? e.w : 1),
                  this
                );
              },
            },
            {
              key: "add",
              value: function (e, t) {
                return void 0 !== t
                  ? (console.warn(
                      "THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
                    ),
                    this.addVectors(e, t))
                  : ((this.x += e.x),
                    (this.y += e.y),
                    (this.z += e.z),
                    (this.w += e.w),
                    this);
              },
            },
            {
              key: "addScalar",
              value: function (e) {
                return (
                  (this.x += e),
                  (this.y += e),
                  (this.z += e),
                  (this.w += e),
                  this
                );
              },
            },
            {
              key: "addVectors",
              value: function (e, t) {
                return (
                  (this.x = e.x + t.x),
                  (this.y = e.y + t.y),
                  (this.z = e.z + t.z),
                  (this.w = e.w + t.w),
                  this
                );
              },
            },
            {
              key: "addScaledVector",
              value: function (e, t) {
                return (
                  (this.x += e.x * t),
                  (this.y += e.y * t),
                  (this.z += e.z * t),
                  (this.w += e.w * t),
                  this
                );
              },
            },
            {
              key: "sub",
              value: function (e, t) {
                return void 0 !== t
                  ? (console.warn(
                      "THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
                    ),
                    this.subVectors(e, t))
                  : ((this.x -= e.x),
                    (this.y -= e.y),
                    (this.z -= e.z),
                    (this.w -= e.w),
                    this);
              },
            },
            {
              key: "subScalar",
              value: function (e) {
                return (
                  (this.x -= e),
                  (this.y -= e),
                  (this.z -= e),
                  (this.w -= e),
                  this
                );
              },
            },
            {
              key: "subVectors",
              value: function (e, t) {
                return (
                  (this.x = e.x - t.x),
                  (this.y = e.y - t.y),
                  (this.z = e.z - t.z),
                  (this.w = e.w - t.w),
                  this
                );
              },
            },
            {
              key: "multiply",
              value: function (e) {
                return (
                  (this.x *= e.x),
                  (this.y *= e.y),
                  (this.z *= e.z),
                  (this.w *= e.w),
                  this
                );
              },
            },
            {
              key: "multiplyScalar",
              value: function (e) {
                return (
                  (this.x *= e),
                  (this.y *= e),
                  (this.z *= e),
                  (this.w *= e),
                  this
                );
              },
            },
            {
              key: "applyMatrix4",
              value: function (e) {
                var t = this.x,
                  n = this.y,
                  r = this.z,
                  i = this.w,
                  a = e.elements;
                return (
                  (this.x = a[0] * t + a[4] * n + a[8] * r + a[12] * i),
                  (this.y = a[1] * t + a[5] * n + a[9] * r + a[13] * i),
                  (this.z = a[2] * t + a[6] * n + a[10] * r + a[14] * i),
                  (this.w = a[3] * t + a[7] * n + a[11] * r + a[15] * i),
                  this
                );
              },
            },
            {
              key: "divideScalar",
              value: function (e) {
                return this.multiplyScalar(1 / e);
              },
            },
            {
              key: "setAxisAngleFromQuaternion",
              value: function (e) {
                this.w = 2 * Math.acos(e.w);
                var t = Math.sqrt(1 - e.w * e.w);
                return (
                  t < 1e-4
                    ? ((this.x = 1), (this.y = 0), (this.z = 0))
                    : ((this.x = e.x / t),
                      (this.y = e.y / t),
                      (this.z = e.z / t)),
                  this
                );
              },
            },
            {
              key: "setAxisAngleFromRotationMatrix",
              value: function (e) {
                var t,
                  n,
                  r,
                  i,
                  a = 0.01,
                  o = 0.1,
                  s = e.elements,
                  l = s[0],
                  u = s[4],
                  c = s[8],
                  f = s[1],
                  d = s[5],
                  h = s[9],
                  p = s[2],
                  v = s[6],
                  m = s[10];
                if (
                  Math.abs(u - f) < a &&
                  Math.abs(c - p) < a &&
                  Math.abs(h - v) < a
                ) {
                  if (
                    Math.abs(u + f) < o &&
                    Math.abs(c + p) < o &&
                    Math.abs(h + v) < o &&
                    Math.abs(l + d + m - 3) < o
                  )
                    return this.set(1, 0, 0, 0), this;
                  t = Math.PI;
                  var g = (l + 1) / 2,
                    y = (d + 1) / 2,
                    b = (m + 1) / 2,
                    x = (u + f) / 4,
                    w = (c + p) / 4,
                    _ = (h + v) / 4;
                  return (
                    g > y && g > b
                      ? g < a
                        ? ((n = 0), (r = 0.707106781), (i = 0.707106781))
                        : ((r = x / (n = Math.sqrt(g))), (i = w / n))
                      : y > b
                      ? y < a
                        ? ((n = 0.707106781), (r = 0), (i = 0.707106781))
                        : ((n = x / (r = Math.sqrt(y))), (i = _ / r))
                      : b < a
                      ? ((n = 0.707106781), (r = 0.707106781), (i = 0))
                      : ((n = w / (i = Math.sqrt(b))), (r = _ / i)),
                    this.set(n, r, i, t),
                    this
                  );
                }
                var S = Math.sqrt(
                  (v - h) * (v - h) + (c - p) * (c - p) + (f - u) * (f - u)
                );
                return (
                  Math.abs(S) < 0.001 && (S = 1),
                  (this.x = (v - h) / S),
                  (this.y = (c - p) / S),
                  (this.z = (f - u) / S),
                  (this.w = Math.acos((l + d + m - 1) / 2)),
                  this
                );
              },
            },
            {
              key: "min",
              value: function (e) {
                return (
                  (this.x = Math.min(this.x, e.x)),
                  (this.y = Math.min(this.y, e.y)),
                  (this.z = Math.min(this.z, e.z)),
                  (this.w = Math.min(this.w, e.w)),
                  this
                );
              },
            },
            {
              key: "max",
              value: function (e) {
                return (
                  (this.x = Math.max(this.x, e.x)),
                  (this.y = Math.max(this.y, e.y)),
                  (this.z = Math.max(this.z, e.z)),
                  (this.w = Math.max(this.w, e.w)),
                  this
                );
              },
            },
            {
              key: "clamp",
              value: function (e, t) {
                return (
                  (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                  (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                  (this.z = Math.max(e.z, Math.min(t.z, this.z))),
                  (this.w = Math.max(e.w, Math.min(t.w, this.w))),
                  this
                );
              },
            },
            {
              key: "clampScalar",
              value: function (e, t) {
                return (
                  (this.x = Math.max(e, Math.min(t, this.x))),
                  (this.y = Math.max(e, Math.min(t, this.y))),
                  (this.z = Math.max(e, Math.min(t, this.z))),
                  (this.w = Math.max(e, Math.min(t, this.w))),
                  this
                );
              },
            },
            {
              key: "clampLength",
              value: function (e, t) {
                var n = this.length();
                return this.divideScalar(n || 1).multiplyScalar(
                  Math.max(e, Math.min(t, n))
                );
              },
            },
            {
              key: "floor",
              value: function () {
                return (
                  (this.x = Math.floor(this.x)),
                  (this.y = Math.floor(this.y)),
                  (this.z = Math.floor(this.z)),
                  (this.w = Math.floor(this.w)),
                  this
                );
              },
            },
            {
              key: "ceil",
              value: function () {
                return (
                  (this.x = Math.ceil(this.x)),
                  (this.y = Math.ceil(this.y)),
                  (this.z = Math.ceil(this.z)),
                  (this.w = Math.ceil(this.w)),
                  this
                );
              },
            },
            {
              key: "round",
              value: function () {
                return (
                  (this.x = Math.round(this.x)),
                  (this.y = Math.round(this.y)),
                  (this.z = Math.round(this.z)),
                  (this.w = Math.round(this.w)),
                  this
                );
              },
            },
            {
              key: "roundToZero",
              value: function () {
                return (
                  (this.x =
                    this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                  (this.y =
                    this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                  (this.z =
                    this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
                  (this.w =
                    this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
                  this
                );
              },
            },
            {
              key: "negate",
              value: function () {
                return (
                  (this.x = -this.x),
                  (this.y = -this.y),
                  (this.z = -this.z),
                  (this.w = -this.w),
                  this
                );
              },
            },
            {
              key: "dot",
              value: function (e) {
                return (
                  this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                );
              },
            },
            {
              key: "lengthSq",
              value: function () {
                return (
                  this.x * this.x +
                  this.y * this.y +
                  this.z * this.z +
                  this.w * this.w
                );
              },
            },
            {
              key: "length",
              value: function () {
                return Math.sqrt(
                  this.x * this.x +
                    this.y * this.y +
                    this.z * this.z +
                    this.w * this.w
                );
              },
            },
            {
              key: "manhattanLength",
              value: function () {
                return (
                  Math.abs(this.x) +
                  Math.abs(this.y) +
                  Math.abs(this.z) +
                  Math.abs(this.w)
                );
              },
            },
            {
              key: "normalize",
              value: function () {
                return this.divideScalar(this.length() || 1);
              },
            },
            {
              key: "setLength",
              value: function (e) {
                return this.normalize().multiplyScalar(e);
              },
            },
            {
              key: "lerp",
              value: function (e, t) {
                return (
                  (this.x += (e.x - this.x) * t),
                  (this.y += (e.y - this.y) * t),
                  (this.z += (e.z - this.z) * t),
                  (this.w += (e.w - this.w) * t),
                  this
                );
              },
            },
            {
              key: "lerpVectors",
              value: function (e, t, n) {
                return (
                  (this.x = e.x + (t.x - e.x) * n),
                  (this.y = e.y + (t.y - e.y) * n),
                  (this.z = e.z + (t.z - e.z) * n),
                  (this.w = e.w + (t.w - e.w) * n),
                  this
                );
              },
            },
            {
              key: "equals",
              value: function (e) {
                return (
                  e.x === this.x &&
                  e.y === this.y &&
                  e.z === this.z &&
                  e.w === this.w
                );
              },
            },
            {
              key: "fromArray",
              value: function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0;
                return (
                  (this.x = e[t]),
                  (this.y = e[t + 1]),
                  (this.z = e[t + 2]),
                  (this.w = e[t + 3]),
                  this
                );
              },
            },
            {
              key: "toArray",
              value: function () {
                var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : [],
                  t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                return (
                  (e[t] = this.x),
                  (e[t + 1] = this.y),
                  (e[t + 2] = this.z),
                  (e[t + 3] = this.w),
                  e
                );
              },
            },
            {
              key: "fromBufferAttribute",
              value: function (e, t, n) {
                return (
                  void 0 !== n &&
                    console.warn(
                      "THREE.Vector4: offset has been removed from .fromBufferAttribute()."
                    ),
                  (this.x = e.getX(t)),
                  (this.y = e.getY(t)),
                  (this.z = e.getZ(t)),
                  (this.w = e.getW(t)),
                  this
                );
              },
            },
            {
              key: "random",
              value: function () {
                return (
                  (this.x = Math.random()),
                  (this.y = Math.random()),
                  (this.z = Math.random()),
                  (this.w = Math.random()),
                  this
                );
              },
            },
            {
              key: Symbol.iterator,
              value: hi.mark(function e() {
                return hi.wrap(
                  function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          return (e.next = 2), this.x;
                        case 2:
                          return (e.next = 4), this.y;
                        case 4:
                          return (e.next = 6), this.z;
                        case 6:
                          return (e.next = 8), this.w;
                        case 8:
                        case "end":
                          return e.stop();
                      }
                  },
                  e,
                  this
                );
              }),
            },
          ]),
          t
        );
      })();
      cl.prototype.isVector4 = !0;
      var fl = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r) {
          var i,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
          Kr(this, n),
            ((i = t.call(this)).width = e),
            (i.height = r),
            (i.depth = 1),
            (i.scissor = new cl(0, 0, e, r)),
            (i.scissorTest = !1),
            (i.viewport = new cl(0, 0, e, r));
          var o = { width: e, height: r, depth: 1 };
          return (
            (i.texture = new ul(
              o,
              a.mapping,
              a.wrapS,
              a.wrapT,
              a.magFilter,
              a.minFilter,
              a.format,
              a.type,
              a.anisotropy,
              a.encoding
            )),
            (i.texture.isRenderTargetTexture = !0),
            (i.texture.flipY = !1),
            (i.texture.generateMipmaps =
              void 0 !== a.generateMipmaps && a.generateMipmaps),
            (i.texture.internalFormat =
              void 0 !== a.internalFormat ? a.internalFormat : null),
            (i.texture.minFilter = void 0 !== a.minFilter ? a.minFilter : Aa),
            (i.depthBuffer = void 0 === a.depthBuffer || a.depthBuffer),
            (i.stencilBuffer = void 0 !== a.stencilBuffer && a.stencilBuffer),
            (i.depthTexture =
              void 0 !== a.depthTexture ? a.depthTexture : null),
            (i.samples = void 0 !== a.samples ? a.samples : 0),
            i
          );
        }
        return (
          ti(n, [
            {
              key: "setSize",
              value: function (e, t) {
                var n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 1;
                (this.width === e && this.height === t && this.depth === n) ||
                  ((this.width = e),
                  (this.height = t),
                  (this.depth = n),
                  (this.texture.image.width = e),
                  (this.texture.image.height = t),
                  (this.texture.image.depth = n),
                  this.dispose()),
                  this.viewport.set(0, 0, e, t),
                  this.scissor.set(0, 0, e, t);
              },
            },
            {
              key: "clone",
              value: function () {
                return new this.constructor().copy(this);
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  (this.width = e.width),
                  (this.height = e.height),
                  (this.depth = e.depth),
                  this.viewport.copy(e.viewport),
                  (this.texture = e.texture.clone()),
                  (this.texture.isRenderTargetTexture = !0),
                  (this.texture.image = Object.assign({}, e.texture.image)),
                  (this.depthBuffer = e.depthBuffer),
                  (this.stencilBuffer = e.stencilBuffer),
                  null !== e.depthTexture &&
                    (this.depthTexture = e.depthTexture.clone()),
                  (this.samples = e.samples),
                  this
                );
              },
            },
            {
              key: "dispose",
              value: function () {
                this.dispatchEvent({ type: "dispose" });
              },
            },
          ]),
          n
        );
      })(Ts);
      fl.prototype.isWebGLRenderTarget = !0;
      var dl = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1;
          return (
            Kr(this, n),
            ((e = t.call(this, null)).image = {
              data: r,
              width: i,
              height: a,
              depth: o,
            }),
            (e.magFilter = Ma),
            (e.minFilter = Ma),
            (e.wrapR = _a),
            (e.generateMipmaps = !1),
            (e.flipY = !1),
            (e.unpackAlignment = 1),
            e
          );
        }
        return ti(n);
      })(ul);
      dl.prototype.isDataArrayTexture = !0;
      var hl = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i) {
          var a;
          return (
            Kr(this, n),
            ((a = t.call(this, e, r)).depth = i),
            (a.texture = new dl(null, e, r, i)),
            (a.texture.isRenderTargetTexture = !0),
            a
          );
        }
        return ti(n);
      })(fl);
      hl.prototype.isWebGLArrayRenderTarget = !0;
      var pl = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1;
          return (
            Kr(this, n),
            ((e = t.call(this, null)).image = {
              data: r,
              width: i,
              height: a,
              depth: o,
            }),
            (e.magFilter = Ma),
            (e.minFilter = Ma),
            (e.wrapR = _a),
            (e.generateMipmaps = !1),
            (e.flipY = !1),
            (e.unpackAlignment = 1),
            e
          );
        }
        return ti(n);
      })(ul);
      pl.prototype.isData3DTexture = !0;
      var vl = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i) {
          var a;
          return (
            Kr(this, n),
            ((a = t.call(this, e, r)).depth = i),
            (a.texture = new pl(null, e, r, i)),
            (a.texture.isRenderTargetTexture = !0),
            a
          );
        }
        return ti(n);
      })(fl);
      vl.prototype.isWebGL3DRenderTarget = !0;
      var ml = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i) {
          var a,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {};
          Kr(this, n);
          var s = (a = t.call(this, e, r, o)).texture;
          a.texture = [];
          for (var l = 0; l < i; l++)
            (a.texture[l] = s.clone()),
              (a.texture[l].isRenderTargetTexture = !0);
          return a;
        }
        return (
          ti(n, [
            {
              key: "setSize",
              value: function (e, t) {
                var n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 1;
                if (this.width !== e || this.height !== t || this.depth !== n) {
                  (this.width = e), (this.height = t), (this.depth = n);
                  for (var r = 0, i = this.texture.length; r < i; r++)
                    (this.texture[r].image.width = e),
                      (this.texture[r].image.height = t),
                      (this.texture[r].image.depth = n);
                  this.dispose();
                }
                return (
                  this.viewport.set(0, 0, e, t),
                  this.scissor.set(0, 0, e, t),
                  this
                );
              },
            },
            {
              key: "copy",
              value: function (e) {
                this.dispose(),
                  (this.width = e.width),
                  (this.height = e.height),
                  (this.depth = e.depth),
                  this.viewport.set(0, 0, this.width, this.height),
                  this.scissor.set(0, 0, this.width, this.height),
                  (this.depthBuffer = e.depthBuffer),
                  (this.stencilBuffer = e.stencilBuffer),
                  (this.depthTexture = e.depthTexture),
                  (this.texture.length = 0);
                for (var t = 0, n = e.texture.length; t < n; t++)
                  this.texture[t] = e.texture[t].clone();
                return this;
              },
            },
          ]),
          n
        );
      })(fl);
      ml.prototype.isWebGLMultipleRenderTargets = !0;
      var gl = (function () {
        function e() {
          var t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 0,
            n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0,
            r =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            i =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1;
          Kr(this, e),
            (this._x = t),
            (this._y = n),
            (this._z = r),
            (this._w = i);
        }
        return (
          ti(
            e,
            [
              {
                key: "x",
                get: function () {
                  return this._x;
                },
                set: function (e) {
                  (this._x = e), this._onChangeCallback();
                },
              },
              {
                key: "y",
                get: function () {
                  return this._y;
                },
                set: function (e) {
                  (this._y = e), this._onChangeCallback();
                },
              },
              {
                key: "z",
                get: function () {
                  return this._z;
                },
                set: function (e) {
                  (this._z = e), this._onChangeCallback();
                },
              },
              {
                key: "w",
                get: function () {
                  return this._w;
                },
                set: function (e) {
                  (this._w = e), this._onChangeCallback();
                },
              },
              {
                key: "set",
                value: function (e, t, n, r) {
                  return (
                    (this._x = e),
                    (this._y = t),
                    (this._z = n),
                    (this._w = r),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(
                    this._x,
                    this._y,
                    this._z,
                    this._w
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this._x = e.x),
                    (this._y = e.y),
                    (this._z = e.z),
                    (this._w = e.w),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromEuler",
                value: function (e, t) {
                  if (!e || !e.isEuler)
                    throw new Error(
                      "THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order."
                    );
                  var n = e._x,
                    r = e._y,
                    i = e._z,
                    a = e._order,
                    o = Math.cos,
                    s = Math.sin,
                    l = o(n / 2),
                    u = o(r / 2),
                    c = o(i / 2),
                    f = s(n / 2),
                    d = s(r / 2),
                    h = s(i / 2);
                  switch (a) {
                    case "XYZ":
                      (this._x = f * u * c + l * d * h),
                        (this._y = l * d * c - f * u * h),
                        (this._z = l * u * h + f * d * c),
                        (this._w = l * u * c - f * d * h);
                      break;
                    case "YXZ":
                      (this._x = f * u * c + l * d * h),
                        (this._y = l * d * c - f * u * h),
                        (this._z = l * u * h - f * d * c),
                        (this._w = l * u * c + f * d * h);
                      break;
                    case "ZXY":
                      (this._x = f * u * c - l * d * h),
                        (this._y = l * d * c + f * u * h),
                        (this._z = l * u * h + f * d * c),
                        (this._w = l * u * c - f * d * h);
                      break;
                    case "ZYX":
                      (this._x = f * u * c - l * d * h),
                        (this._y = l * d * c + f * u * h),
                        (this._z = l * u * h - f * d * c),
                        (this._w = l * u * c + f * d * h);
                      break;
                    case "YZX":
                      (this._x = f * u * c + l * d * h),
                        (this._y = l * d * c + f * u * h),
                        (this._z = l * u * h - f * d * c),
                        (this._w = l * u * c - f * d * h);
                      break;
                    case "XZY":
                      (this._x = f * u * c - l * d * h),
                        (this._y = l * d * c - f * u * h),
                        (this._z = l * u * h + f * d * c),
                        (this._w = l * u * c + f * d * h);
                      break;
                    default:
                      console.warn(
                        "THREE.Quaternion: .setFromEuler() encountered an unknown order: " +
                          a
                      );
                  }
                  return !1 !== t && this._onChangeCallback(), this;
                },
              },
              {
                key: "setFromAxisAngle",
                value: function (e, t) {
                  var n = t / 2,
                    r = Math.sin(n);
                  return (
                    (this._x = e.x * r),
                    (this._y = e.y * r),
                    (this._z = e.z * r),
                    (this._w = Math.cos(n)),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromRotationMatrix",
                value: function (e) {
                  var t = e.elements,
                    n = t[0],
                    r = t[4],
                    i = t[8],
                    a = t[1],
                    o = t[5],
                    s = t[9],
                    l = t[2],
                    u = t[6],
                    c = t[10],
                    f = n + o + c;
                  if (f > 0) {
                    var d = 0.5 / Math.sqrt(f + 1);
                    (this._w = 0.25 / d),
                      (this._x = (u - s) * d),
                      (this._y = (i - l) * d),
                      (this._z = (a - r) * d);
                  } else if (n > o && n > c) {
                    var h = 2 * Math.sqrt(1 + n - o - c);
                    (this._w = (u - s) / h),
                      (this._x = 0.25 * h),
                      (this._y = (r + a) / h),
                      (this._z = (i + l) / h);
                  } else if (o > c) {
                    var p = 2 * Math.sqrt(1 + o - n - c);
                    (this._w = (i - l) / p),
                      (this._x = (r + a) / p),
                      (this._y = 0.25 * p),
                      (this._z = (s + u) / p);
                  } else {
                    var v = 2 * Math.sqrt(1 + c - n - o);
                    (this._w = (a - r) / v),
                      (this._x = (i + l) / v),
                      (this._y = (s + u) / v),
                      (this._z = 0.25 * v);
                  }
                  return this._onChangeCallback(), this;
                },
              },
              {
                key: "setFromUnitVectors",
                value: function (e, t) {
                  var n = e.dot(t) + 1;
                  return (
                    n < Number.EPSILON
                      ? ((n = 0),
                        Math.abs(e.x) > Math.abs(e.z)
                          ? ((this._x = -e.y),
                            (this._y = e.x),
                            (this._z = 0),
                            (this._w = n))
                          : ((this._x = 0),
                            (this._y = -e.z),
                            (this._z = e.y),
                            (this._w = n)))
                      : ((this._x = e.y * t.z - e.z * t.y),
                        (this._y = e.z * t.x - e.x * t.z),
                        (this._z = e.x * t.y - e.y * t.x),
                        (this._w = n)),
                    this.normalize()
                  );
                },
              },
              {
                key: "angleTo",
                value: function (e) {
                  return 2 * Math.acos(Math.abs(zs(this.dot(e), -1, 1)));
                },
              },
              {
                key: "rotateTowards",
                value: function (e, t) {
                  var n = this.angleTo(e);
                  if (0 === n) return this;
                  var r = Math.min(1, t / n);
                  return this.slerp(e, r), this;
                },
              },
              {
                key: "identity",
                value: function () {
                  return this.set(0, 0, 0, 1);
                },
              },
              {
                key: "invert",
                value: function () {
                  return this.conjugate();
                },
              },
              {
                key: "conjugate",
                value: function () {
                  return (
                    (this._x *= -1),
                    (this._y *= -1),
                    (this._z *= -1),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return (
                    this._x * e._x +
                    this._y * e._y +
                    this._z * e._z +
                    this._w * e._w
                  );
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return (
                    this._x * this._x +
                    this._y * this._y +
                    this._z * this._z +
                    this._w * this._w
                  );
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(
                    this._x * this._x +
                      this._y * this._y +
                      this._z * this._z +
                      this._w * this._w
                  );
                },
              },
              {
                key: "normalize",
                value: function () {
                  var e = this.length();
                  return (
                    0 === e
                      ? ((this._x = 0),
                        (this._y = 0),
                        (this._z = 0),
                        (this._w = 1))
                      : ((e = 1 / e),
                        (this._x = this._x * e),
                        (this._y = this._y * e),
                        (this._z = this._z * e),
                        (this._w = this._w * e)),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e, t) {
                  return void 0 !== t
                    ? (console.warn(
                        "THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."
                      ),
                      this.multiplyQuaternions(e, t))
                    : this.multiplyQuaternions(this, e);
                },
              },
              {
                key: "premultiply",
                value: function (e) {
                  return this.multiplyQuaternions(e, this);
                },
              },
              {
                key: "multiplyQuaternions",
                value: function (e, t) {
                  var n = e._x,
                    r = e._y,
                    i = e._z,
                    a = e._w,
                    o = t._x,
                    s = t._y,
                    l = t._z,
                    u = t._w;
                  return (
                    (this._x = n * u + a * o + r * l - i * s),
                    (this._y = r * u + a * s + i * o - n * l),
                    (this._z = i * u + a * l + n * s - r * o),
                    (this._w = a * u - n * o - r * s - i * l),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "slerp",
                value: function (e, t) {
                  if (0 === t) return this;
                  if (1 === t) return this.copy(e);
                  var n = this._x,
                    r = this._y,
                    i = this._z,
                    a = this._w,
                    o = a * e._w + n * e._x + r * e._y + i * e._z;
                  if (
                    (o < 0
                      ? ((this._w = -e._w),
                        (this._x = -e._x),
                        (this._y = -e._y),
                        (this._z = -e._z),
                        (o = -o))
                      : this.copy(e),
                    o >= 1)
                  )
                    return (
                      (this._w = a),
                      (this._x = n),
                      (this._y = r),
                      (this._z = i),
                      this
                    );
                  var s = 1 - o * o;
                  if (s <= Number.EPSILON) {
                    var l = 1 - t;
                    return (
                      (this._w = l * a + t * this._w),
                      (this._x = l * n + t * this._x),
                      (this._y = l * r + t * this._y),
                      (this._z = l * i + t * this._z),
                      this.normalize(),
                      this._onChangeCallback(),
                      this
                    );
                  }
                  var u = Math.sqrt(s),
                    c = Math.atan2(u, o),
                    f = Math.sin((1 - t) * c) / u,
                    d = Math.sin(t * c) / u;
                  return (
                    (this._w = a * f + this._w * d),
                    (this._x = n * f + this._x * d),
                    (this._y = r * f + this._y * d),
                    (this._z = i * f + this._z * d),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "slerpQuaternions",
                value: function (e, t, n) {
                  return this.copy(e).slerp(t, n);
                },
              },
              {
                key: "random",
                value: function () {
                  var e = Math.random(),
                    t = Math.sqrt(1 - e),
                    n = Math.sqrt(e),
                    r = 2 * Math.PI * Math.random(),
                    i = 2 * Math.PI * Math.random();
                  return this.set(
                    t * Math.cos(r),
                    n * Math.sin(i),
                    n * Math.cos(i),
                    t * Math.sin(r)
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e._x === this._x &&
                    e._y === this._y &&
                    e._z === this._z &&
                    e._w === this._w
                  );
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this._x = e[t]),
                    (this._y = e[t + 1]),
                    (this._z = e[t + 2]),
                    (this._w = e[t + 3]),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this._x),
                    (e[t + 1] = this._y),
                    (e[t + 2] = this._z),
                    (e[t + 3] = this._w),
                    e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this._x = e.getX(t)),
                    (this._y = e.getY(t)),
                    (this._z = e.getZ(t)),
                    (this._w = e.getW(t)),
                    this
                  );
                },
              },
              {
                key: "_onChange",
                value: function (e) {
                  return (this._onChangeCallback = e), this;
                },
              },
              { key: "_onChangeCallback", value: function () {} },
            ],
            [
              {
                key: "slerp",
                value: function (e, t, n, r) {
                  return (
                    console.warn(
                      "THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."
                    ),
                    n.slerpQuaternions(e, t, r)
                  );
                },
              },
              {
                key: "slerpFlat",
                value: function (e, t, n, r, i, a, o) {
                  var s = n[r + 0],
                    l = n[r + 1],
                    u = n[r + 2],
                    c = n[r + 3],
                    f = i[a + 0],
                    d = i[a + 1],
                    h = i[a + 2],
                    p = i[a + 3];
                  if (0 === o)
                    return (
                      (e[t + 0] = s),
                      (e[t + 1] = l),
                      (e[t + 2] = u),
                      void (e[t + 3] = c)
                    );
                  if (1 === o)
                    return (
                      (e[t + 0] = f),
                      (e[t + 1] = d),
                      (e[t + 2] = h),
                      void (e[t + 3] = p)
                    );
                  if (c !== p || s !== f || l !== d || u !== h) {
                    var v = 1 - o,
                      m = s * f + l * d + u * h + c * p,
                      g = m >= 0 ? 1 : -1,
                      y = 1 - m * m;
                    if (y > Number.EPSILON) {
                      var b = Math.sqrt(y),
                        x = Math.atan2(b, m * g);
                      (v = Math.sin(v * x) / b), (o = Math.sin(o * x) / b);
                    }
                    var w = o * g;
                    if (
                      ((s = s * v + f * w),
                      (l = l * v + d * w),
                      (u = u * v + h * w),
                      (c = c * v + p * w),
                      v === 1 - o)
                    ) {
                      var _ = 1 / Math.sqrt(s * s + l * l + u * u + c * c);
                      (s *= _), (l *= _), (u *= _), (c *= _);
                    }
                  }
                  (e[t] = s), (e[t + 1] = l), (e[t + 2] = u), (e[t + 3] = c);
                },
              },
              {
                key: "multiplyQuaternionsFlat",
                value: function (e, t, n, r, i, a) {
                  var o = n[r],
                    s = n[r + 1],
                    l = n[r + 2],
                    u = n[r + 3],
                    c = i[a],
                    f = i[a + 1],
                    d = i[a + 2],
                    h = i[a + 3];
                  return (
                    (e[t] = o * h + u * c + s * d - l * f),
                    (e[t + 1] = s * h + u * f + l * c - o * d),
                    (e[t + 2] = l * h + u * d + o * f - s * c),
                    (e[t + 3] = u * h - o * c - s * f - l * d),
                    e
                  );
                },
              },
            ]
          ),
          e
        );
      })();
      gl.prototype.isQuaternion = !0;
      var yl = (function (e) {
        function t() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 0,
            n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0,
            r =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0;
          Kr(this, t), (this.x = e), (this.y = n), (this.z = r);
        }
        return (
          ti(t, [
            {
              key: "set",
              value: function (e, t, n) {
                return (
                  void 0 === n && (n = this.z),
                  (this.x = e),
                  (this.y = t),
                  (this.z = n),
                  this
                );
              },
            },
            {
              key: "setScalar",
              value: function (e) {
                return (this.x = e), (this.y = e), (this.z = e), this;
              },
            },
            {
              key: "setX",
              value: function (e) {
                return (this.x = e), this;
              },
            },
            {
              key: "setY",
              value: function (e) {
                return (this.y = e), this;
              },
            },
            {
              key: "setZ",
              value: function (e) {
                return (this.z = e), this;
              },
            },
            {
              key: "setComponent",
              value: function (e, t) {
                switch (e) {
                  case 0:
                    this.x = t;
                    break;
                  case 1:
                    this.y = t;
                    break;
                  case 2:
                    this.z = t;
                    break;
                  default:
                    throw new Error("index is out of range: " + e);
                }
                return this;
              },
            },
            {
              key: "getComponent",
              value: function (e) {
                switch (e) {
                  case 0:
                    return this.x;
                  case 1:
                    return this.y;
                  case 2:
                    return this.z;
                  default:
                    throw new Error("index is out of range: " + e);
                }
              },
            },
            {
              key: "clone",
              value: function () {
                return new this.constructor(this.x, this.y, this.z);
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
              },
            },
            {
              key: "add",
              value: function (e, t) {
                return void 0 !== t
                  ? (console.warn(
                      "THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
                    ),
                    this.addVectors(e, t))
                  : ((this.x += e.x), (this.y += e.y), (this.z += e.z), this);
              },
            },
            {
              key: "addScalar",
              value: function (e) {
                return (this.x += e), (this.y += e), (this.z += e), this;
              },
            },
            {
              key: "addVectors",
              value: function (e, t) {
                return (
                  (this.x = e.x + t.x),
                  (this.y = e.y + t.y),
                  (this.z = e.z + t.z),
                  this
                );
              },
            },
            {
              key: "addScaledVector",
              value: function (e, t) {
                return (
                  (this.x += e.x * t),
                  (this.y += e.y * t),
                  (this.z += e.z * t),
                  this
                );
              },
            },
            {
              key: "sub",
              value: function (e, t) {
                return void 0 !== t
                  ? (console.warn(
                      "THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
                    ),
                    this.subVectors(e, t))
                  : ((this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this);
              },
            },
            {
              key: "subScalar",
              value: function (e) {
                return (this.x -= e), (this.y -= e), (this.z -= e), this;
              },
            },
            {
              key: "subVectors",
              value: function (e, t) {
                return (
                  (this.x = e.x - t.x),
                  (this.y = e.y - t.y),
                  (this.z = e.z - t.z),
                  this
                );
              },
            },
            {
              key: "multiply",
              value: function (e, t) {
                return void 0 !== t
                  ? (console.warn(
                      "THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."
                    ),
                    this.multiplyVectors(e, t))
                  : ((this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this);
              },
            },
            {
              key: "multiplyScalar",
              value: function (e) {
                return (this.x *= e), (this.y *= e), (this.z *= e), this;
              },
            },
            {
              key: "multiplyVectors",
              value: function (e, t) {
                return (
                  (this.x = e.x * t.x),
                  (this.y = e.y * t.y),
                  (this.z = e.z * t.z),
                  this
                );
              },
            },
            {
              key: "applyEuler",
              value: function (e) {
                return (
                  (e && e.isEuler) ||
                    console.error(
                      "THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."
                    ),
                  this.applyQuaternion(xl.setFromEuler(e))
                );
              },
            },
            {
              key: "applyAxisAngle",
              value: function (e, t) {
                return this.applyQuaternion(xl.setFromAxisAngle(e, t));
              },
            },
            {
              key: "applyMatrix3",
              value: function (e) {
                var t = this.x,
                  n = this.y,
                  r = this.z,
                  i = e.elements;
                return (
                  (this.x = i[0] * t + i[3] * n + i[6] * r),
                  (this.y = i[1] * t + i[4] * n + i[7] * r),
                  (this.z = i[2] * t + i[5] * n + i[8] * r),
                  this
                );
              },
            },
            {
              key: "applyNormalMatrix",
              value: function (e) {
                return this.applyMatrix3(e).normalize();
              },
            },
            {
              key: "applyMatrix4",
              value: function (e) {
                var t = this.x,
                  n = this.y,
                  r = this.z,
                  i = e.elements,
                  a = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
                return (
                  (this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * a),
                  (this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * a),
                  (this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * a),
                  this
                );
              },
            },
            {
              key: "applyQuaternion",
              value: function (e) {
                var t = this.x,
                  n = this.y,
                  r = this.z,
                  i = e.x,
                  a = e.y,
                  o = e.z,
                  s = e.w,
                  l = s * t + a * r - o * n,
                  u = s * n + o * t - i * r,
                  c = s * r + i * n - a * t,
                  f = -i * t - a * n - o * r;
                return (
                  (this.x = l * s + f * -i + u * -o - c * -a),
                  (this.y = u * s + f * -a + c * -i - l * -o),
                  (this.z = c * s + f * -o + l * -a - u * -i),
                  this
                );
              },
            },
            {
              key: "project",
              value: function (e) {
                return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
                  e.projectionMatrix
                );
              },
            },
            {
              key: "unproject",
              value: function (e) {
                return this.applyMatrix4(
                  e.projectionMatrixInverse
                ).applyMatrix4(e.matrixWorld);
              },
            },
            {
              key: "transformDirection",
              value: function (e) {
                var t = this.x,
                  n = this.y,
                  r = this.z,
                  i = e.elements;
                return (
                  (this.x = i[0] * t + i[4] * n + i[8] * r),
                  (this.y = i[1] * t + i[5] * n + i[9] * r),
                  (this.z = i[2] * t + i[6] * n + i[10] * r),
                  this.normalize()
                );
              },
            },
            {
              key: "divide",
              value: function (e) {
                return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
              },
            },
            {
              key: "divideScalar",
              value: function (e) {
                return this.multiplyScalar(1 / e);
              },
            },
            {
              key: "min",
              value: function (e) {
                return (
                  (this.x = Math.min(this.x, e.x)),
                  (this.y = Math.min(this.y, e.y)),
                  (this.z = Math.min(this.z, e.z)),
                  this
                );
              },
            },
            {
              key: "max",
              value: function (e) {
                return (
                  (this.x = Math.max(this.x, e.x)),
                  (this.y = Math.max(this.y, e.y)),
                  (this.z = Math.max(this.z, e.z)),
                  this
                );
              },
            },
            {
              key: "clamp",
              value: function (e, t) {
                return (
                  (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                  (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                  (this.z = Math.max(e.z, Math.min(t.z, this.z))),
                  this
                );
              },
            },
            {
              key: "clampScalar",
              value: function (e, t) {
                return (
                  (this.x = Math.max(e, Math.min(t, this.x))),
                  (this.y = Math.max(e, Math.min(t, this.y))),
                  (this.z = Math.max(e, Math.min(t, this.z))),
                  this
                );
              },
            },
            {
              key: "clampLength",
              value: function (e, t) {
                var n = this.length();
                return this.divideScalar(n || 1).multiplyScalar(
                  Math.max(e, Math.min(t, n))
                );
              },
            },
            {
              key: "floor",
              value: function () {
                return (
                  (this.x = Math.floor(this.x)),
                  (this.y = Math.floor(this.y)),
                  (this.z = Math.floor(this.z)),
                  this
                );
              },
            },
            {
              key: "ceil",
              value: function () {
                return (
                  (this.x = Math.ceil(this.x)),
                  (this.y = Math.ceil(this.y)),
                  (this.z = Math.ceil(this.z)),
                  this
                );
              },
            },
            {
              key: "round",
              value: function () {
                return (
                  (this.x = Math.round(this.x)),
                  (this.y = Math.round(this.y)),
                  (this.z = Math.round(this.z)),
                  this
                );
              },
            },
            {
              key: "roundToZero",
              value: function () {
                return (
                  (this.x =
                    this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                  (this.y =
                    this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                  (this.z =
                    this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
                  this
                );
              },
            },
            {
              key: "negate",
              value: function () {
                return (
                  (this.x = -this.x),
                  (this.y = -this.y),
                  (this.z = -this.z),
                  this
                );
              },
            },
            {
              key: "dot",
              value: function (e) {
                return this.x * e.x + this.y * e.y + this.z * e.z;
              },
            },
            {
              key: "lengthSq",
              value: function () {
                return this.x * this.x + this.y * this.y + this.z * this.z;
              },
            },
            {
              key: "length",
              value: function () {
                return Math.sqrt(
                  this.x * this.x + this.y * this.y + this.z * this.z
                );
              },
            },
            {
              key: "manhattanLength",
              value: function () {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
              },
            },
            {
              key: "normalize",
              value: function () {
                return this.divideScalar(this.length() || 1);
              },
            },
            {
              key: "setLength",
              value: function (e) {
                return this.normalize().multiplyScalar(e);
              },
            },
            {
              key: "lerp",
              value: function (e, t) {
                return (
                  (this.x += (e.x - this.x) * t),
                  (this.y += (e.y - this.y) * t),
                  (this.z += (e.z - this.z) * t),
                  this
                );
              },
            },
            {
              key: "lerpVectors",
              value: function (e, t, n) {
                return (
                  (this.x = e.x + (t.x - e.x) * n),
                  (this.y = e.y + (t.y - e.y) * n),
                  (this.z = e.z + (t.z - e.z) * n),
                  this
                );
              },
            },
            {
              key: "cross",
              value: function (e, t) {
                return void 0 !== t
                  ? (console.warn(
                      "THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."
                    ),
                    this.crossVectors(e, t))
                  : this.crossVectors(this, e);
              },
            },
            {
              key: "crossVectors",
              value: function (e, t) {
                var n = e.x,
                  r = e.y,
                  i = e.z,
                  a = t.x,
                  o = t.y,
                  s = t.z;
                return (
                  (this.x = r * s - i * o),
                  (this.y = i * a - n * s),
                  (this.z = n * o - r * a),
                  this
                );
              },
            },
            {
              key: "projectOnVector",
              value: function (e) {
                var t = e.lengthSq();
                if (0 === t) return this.set(0, 0, 0);
                var n = e.dot(this) / t;
                return this.copy(e).multiplyScalar(n);
              },
            },
            {
              key: "projectOnPlane",
              value: function (e) {
                return bl.copy(this).projectOnVector(e), this.sub(bl);
              },
            },
            {
              key: "reflect",
              value: function (e) {
                return this.sub(bl.copy(e).multiplyScalar(2 * this.dot(e)));
              },
            },
            {
              key: "angleTo",
              value: function (e) {
                var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                if (0 === t) return Math.PI / 2;
                var n = this.dot(e) / t;
                return Math.acos(zs(n, -1, 1));
              },
            },
            {
              key: "distanceTo",
              value: function (e) {
                return Math.sqrt(this.distanceToSquared(e));
              },
            },
            {
              key: "distanceToSquared",
              value: function (e) {
                var t = this.x - e.x,
                  n = this.y - e.y,
                  r = this.z - e.z;
                return t * t + n * n + r * r;
              },
            },
            {
              key: "manhattanDistanceTo",
              value: function (e) {
                return (
                  Math.abs(this.x - e.x) +
                  Math.abs(this.y - e.y) +
                  Math.abs(this.z - e.z)
                );
              },
            },
            {
              key: "setFromSpherical",
              value: function (e) {
                return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
              },
            },
            {
              key: "setFromSphericalCoords",
              value: function (e, t, n) {
                var r = Math.sin(t) * e;
                return (
                  (this.x = r * Math.sin(n)),
                  (this.y = Math.cos(t) * e),
                  (this.z = r * Math.cos(n)),
                  this
                );
              },
            },
            {
              key: "setFromCylindrical",
              value: function (e) {
                return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
              },
            },
            {
              key: "setFromCylindricalCoords",
              value: function (e, t, n) {
                return (
                  (this.x = e * Math.sin(t)),
                  (this.y = n),
                  (this.z = e * Math.cos(t)),
                  this
                );
              },
            },
            {
              key: "setFromMatrixPosition",
              value: function (e) {
                var t = e.elements;
                return (
                  (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this
                );
              },
            },
            {
              key: "setFromMatrixScale",
              value: function (e) {
                var t = this.setFromMatrixColumn(e, 0).length(),
                  n = this.setFromMatrixColumn(e, 1).length(),
                  r = this.setFromMatrixColumn(e, 2).length();
                return (this.x = t), (this.y = n), (this.z = r), this;
              },
            },
            {
              key: "setFromMatrixColumn",
              value: function (e, t) {
                return this.fromArray(e.elements, 4 * t);
              },
            },
            {
              key: "setFromMatrix3Column",
              value: function (e, t) {
                return this.fromArray(e.elements, 3 * t);
              },
            },
            {
              key: "setFromEuler",
              value: function (e) {
                return (this.x = e._x), (this.y = e._y), (this.z = e._z), this;
              },
            },
            {
              key: "equals",
              value: function (e) {
                return e.x === this.x && e.y === this.y && e.z === this.z;
              },
            },
            {
              key: "fromArray",
              value: function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0;
                return (
                  (this.x = e[t]),
                  (this.y = e[t + 1]),
                  (this.z = e[t + 2]),
                  this
                );
              },
            },
            {
              key: "toArray",
              value: function () {
                var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : [],
                  t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                return (
                  (e[t] = this.x), (e[t + 1] = this.y), (e[t + 2] = this.z), e
                );
              },
            },
            {
              key: "fromBufferAttribute",
              value: function (e, t, n) {
                return (
                  void 0 !== n &&
                    console.warn(
                      "THREE.Vector3: offset has been removed from .fromBufferAttribute()."
                    ),
                  (this.x = e.getX(t)),
                  (this.y = e.getY(t)),
                  (this.z = e.getZ(t)),
                  this
                );
              },
            },
            {
              key: "random",
              value: function () {
                return (
                  (this.x = Math.random()),
                  (this.y = Math.random()),
                  (this.z = Math.random()),
                  this
                );
              },
            },
            {
              key: "randomDirection",
              value: function () {
                var e = 2 * (Math.random() - 0.5),
                  t = Math.random() * Math.PI * 2,
                  n = Math.sqrt(1 - Math.pow(e, 2));
                return (
                  (this.x = n * Math.cos(t)),
                  (this.y = n * Math.sin(t)),
                  (this.z = e),
                  this
                );
              },
            },
            {
              key: Symbol.iterator,
              value: hi.mark(function e() {
                return hi.wrap(
                  function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          return (e.next = 2), this.x;
                        case 2:
                          return (e.next = 4), this.y;
                        case 4:
                          return (e.next = 6), this.z;
                        case 6:
                        case "end":
                          return e.stop();
                      }
                  },
                  e,
                  this
                );
              }),
            },
          ]),
          t
        );
      })();
      yl.prototype.isVector3 = !0;
      var bl = new yl(),
        xl = new gl(),
        wl = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new yl(1 / 0, 1 / 0, 1 / 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new yl(-1 / 0, -1 / 0, -1 / 0);
            Kr(this, e), (this.min = t), (this.max = n);
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.min.copy(e), this.max.copy(t), this;
                },
              },
              {
                key: "setFromArray",
                value: function (e) {
                  for (
                    var t = 1 / 0,
                      n = 1 / 0,
                      r = 1 / 0,
                      i = -1 / 0,
                      a = -1 / 0,
                      o = -1 / 0,
                      s = 0,
                      l = e.length;
                    s < l;
                    s += 3
                  ) {
                    var u = e[s],
                      c = e[s + 1],
                      f = e[s + 2];
                    u < t && (t = u),
                      c < n && (n = c),
                      f < r && (r = f),
                      u > i && (i = u),
                      c > a && (a = c),
                      f > o && (o = f);
                  }
                  return this.min.set(t, n, r), this.max.set(i, a, o), this;
                },
              },
              {
                key: "setFromBufferAttribute",
                value: function (e) {
                  for (
                    var t = 1 / 0,
                      n = 1 / 0,
                      r = 1 / 0,
                      i = -1 / 0,
                      a = -1 / 0,
                      o = -1 / 0,
                      s = 0,
                      l = e.count;
                    s < l;
                    s++
                  ) {
                    var u = e.getX(s),
                      c = e.getY(s),
                      f = e.getZ(s);
                    u < t && (t = u),
                      c < n && (n = c),
                      f < r && (r = f),
                      u > i && (i = u),
                      c > a && (a = c),
                      f > o && (o = f);
                  }
                  return this.min.set(t, n, r), this.max.set(i, a, o), this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.length; t < n; t++)
                    this.expandByPoint(e[t]);
                  return this;
                },
              },
              {
                key: "setFromCenterAndSize",
                value: function (e, t) {
                  var n = Sl.copy(t).multiplyScalar(0.5);
                  return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
                },
              },
              {
                key: "setFromObject",
                value: function (e) {
                  var t =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  return this.makeEmpty(), this.expandByObject(e, t);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.min.copy(e.min), this.max.copy(e.max), this;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return (
                    (this.min.x = this.min.y = this.min.z = 1 / 0),
                    (this.max.x = this.max.y = this.max.z = -1 / 0),
                    this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return (
                    this.max.x < this.min.x ||
                    this.max.y < this.min.y ||
                    this.max.z < this.min.z
                  );
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0, 0)
                    : e.addVectors(this.min, this.max).multiplyScalar(0.5);
                },
              },
              {
                key: "getSize",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0, 0)
                    : e.subVectors(this.max, this.min);
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  return this.min.min(e), this.max.max(e), this;
                },
              },
              {
                key: "expandByVector",
                value: function (e) {
                  return this.min.sub(e), this.max.add(e), this;
                },
              },
              {
                key: "expandByScalar",
                value: function (e) {
                  return this.min.addScalar(-e), this.max.addScalar(e), this;
                },
              },
              {
                key: "expandByObject",
                value: function (e) {
                  var t =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  e.updateWorldMatrix(!1, !1);
                  var n = e.geometry;
                  if (void 0 !== n)
                    if (
                      t &&
                      void 0 != n.attributes &&
                      void 0 !== n.attributes.position
                    )
                      for (
                        var r = n.attributes.position, i = 0, a = r.count;
                        i < a;
                        i++
                      )
                        Sl.fromBufferAttribute(r, i).applyMatrix4(
                          e.matrixWorld
                        ),
                          this.expandByPoint(Sl);
                    else
                      null === n.boundingBox && n.computeBoundingBox(),
                        Ml.copy(n.boundingBox),
                        Ml.applyMatrix4(e.matrixWorld),
                        this.union(Ml);
                  for (var o = e.children, s = 0, l = o.length; s < l; s++)
                    this.expandByObject(o[s], t);
                  return this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return !(
                    e.x < this.min.x ||
                    e.x > this.max.x ||
                    e.y < this.min.y ||
                    e.y > this.max.y ||
                    e.z < this.min.z ||
                    e.z > this.max.z
                  );
                },
              },
              {
                key: "containsBox",
                value: function (e) {
                  return (
                    this.min.x <= e.min.x &&
                    e.max.x <= this.max.x &&
                    this.min.y <= e.min.y &&
                    e.max.y <= this.max.y &&
                    this.min.z <= e.min.z &&
                    e.max.z <= this.max.z
                  );
                },
              },
              {
                key: "getParameter",
                value: function (e, t) {
                  return t.set(
                    (e.x - this.min.x) / (this.max.x - this.min.x),
                    (e.y - this.min.y) / (this.max.y - this.min.y),
                    (e.z - this.min.z) / (this.max.z - this.min.z)
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return !(
                    e.max.x < this.min.x ||
                    e.min.x > this.max.x ||
                    e.max.y < this.min.y ||
                    e.min.y > this.max.y ||
                    e.max.z < this.min.z ||
                    e.min.z > this.max.z
                  );
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return (
                    this.clampPoint(e.center, Sl),
                    Sl.distanceToSquared(e.center) <= e.radius * e.radius
                  );
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  var t, n;
                  return (
                    e.normal.x > 0
                      ? ((t = e.normal.x * this.min.x),
                        (n = e.normal.x * this.max.x))
                      : ((t = e.normal.x * this.max.x),
                        (n = e.normal.x * this.min.x)),
                    e.normal.y > 0
                      ? ((t += e.normal.y * this.min.y),
                        (n += e.normal.y * this.max.y))
                      : ((t += e.normal.y * this.max.y),
                        (n += e.normal.y * this.min.y)),
                    e.normal.z > 0
                      ? ((t += e.normal.z * this.min.z),
                        (n += e.normal.z * this.max.z))
                      : ((t += e.normal.z * this.max.z),
                        (n += e.normal.z * this.min.z)),
                    t <= -e.constant && n >= -e.constant
                  );
                },
              },
              {
                key: "intersectsTriangle",
                value: function (e) {
                  if (this.isEmpty()) return !1;
                  this.getCenter(Ll),
                    Rl.subVectors(this.max, Ll),
                    El.subVectors(e.a, Ll),
                    kl.subVectors(e.b, Ll),
                    Tl.subVectors(e.c, Ll),
                    Cl.subVectors(kl, El),
                    Al.subVectors(Tl, kl),
                    Pl.subVectors(El, Tl);
                  var t = [
                    0,
                    -Cl.z,
                    Cl.y,
                    0,
                    -Al.z,
                    Al.y,
                    0,
                    -Pl.z,
                    Pl.y,
                    Cl.z,
                    0,
                    -Cl.x,
                    Al.z,
                    0,
                    -Al.x,
                    Pl.z,
                    0,
                    -Pl.x,
                    -Cl.y,
                    Cl.x,
                    0,
                    -Al.y,
                    Al.x,
                    0,
                    -Pl.y,
                    Pl.x,
                    0,
                  ];
                  return (
                    !!Dl(t, El, kl, Tl, Rl) &&
                    !!Dl((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]), El, kl, Tl, Rl) &&
                    (Ol.crossVectors(Cl, Al),
                    Dl((t = [Ol.x, Ol.y, Ol.z]), El, kl, Tl, Rl))
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  return t.copy(e).clamp(this.min, this.max);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return Sl.copy(e).clamp(this.min, this.max).sub(e).length();
                },
              },
              {
                key: "getBoundingSphere",
                value: function (e) {
                  return (
                    this.getCenter(e.center),
                    (e.radius = 0.5 * this.getSize(Sl).length()),
                    e
                  );
                },
              },
              {
                key: "intersect",
                value: function (e) {
                  return (
                    this.min.max(e.min),
                    this.max.min(e.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                  );
                },
              },
              {
                key: "union",
                value: function (e) {
                  return this.min.min(e.min), this.max.max(e.max), this;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.isEmpty() ||
                      (_l[0]
                        .set(this.min.x, this.min.y, this.min.z)
                        .applyMatrix4(e),
                      _l[1]
                        .set(this.min.x, this.min.y, this.max.z)
                        .applyMatrix4(e),
                      _l[2]
                        .set(this.min.x, this.max.y, this.min.z)
                        .applyMatrix4(e),
                      _l[3]
                        .set(this.min.x, this.max.y, this.max.z)
                        .applyMatrix4(e),
                      _l[4]
                        .set(this.max.x, this.min.y, this.min.z)
                        .applyMatrix4(e),
                      _l[5]
                        .set(this.max.x, this.min.y, this.max.z)
                        .applyMatrix4(e),
                      _l[6]
                        .set(this.max.x, this.max.y, this.min.z)
                        .applyMatrix4(e),
                      _l[7]
                        .set(this.max.x, this.max.y, this.max.z)
                        .applyMatrix4(e),
                      this.setFromPoints(_l)),
                    this
                  );
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.min.add(e), this.max.add(e), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.min.equals(this.min) && e.max.equals(this.max);
                },
              },
            ]),
            e
          );
        })();
      wl.prototype.isBox3 = !0;
      var _l = [
          new yl(),
          new yl(),
          new yl(),
          new yl(),
          new yl(),
          new yl(),
          new yl(),
          new yl(),
        ],
        Sl = new yl(),
        Ml = new wl(),
        El = new yl(),
        kl = new yl(),
        Tl = new yl(),
        Cl = new yl(),
        Al = new yl(),
        Pl = new yl(),
        Ll = new yl(),
        Rl = new yl(),
        Ol = new yl(),
        zl = new yl();
      function Dl(e, t, n, r, i) {
        for (var a = 0, o = e.length - 3; a <= o; a += 3) {
          zl.fromArray(e, a);
          var s =
              i.x * Math.abs(zl.x) +
              i.y * Math.abs(zl.y) +
              i.z * Math.abs(zl.z),
            l = t.dot(zl),
            u = n.dot(zl),
            c = r.dot(zl);
          if (Math.max(-Math.max(l, u, c), Math.min(l, u, c)) > s) return !1;
        }
        return !0;
      }
      var Il = new wl(),
        Nl = new yl(),
        Fl = new yl(),
        Bl = new yl(),
        Hl = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new yl(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : -1;
            Kr(this, e), (this.center = t), (this.radius = n);
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.center.copy(e), (this.radius = t), this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e, t) {
                  var n = this.center;
                  void 0 !== t ? n.copy(t) : Il.setFromPoints(e).getCenter(n);
                  for (var r = 0, i = 0, a = e.length; i < a; i++)
                    r = Math.max(r, n.distanceToSquared(e[i]));
                  return (this.radius = Math.sqrt(r)), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.center.copy(e.center), (this.radius = e.radius), this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return this.radius < 0;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return this.center.set(0, 0, 0), (this.radius = -1), this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return (
                    e.distanceToSquared(this.center) <=
                    this.radius * this.radius
                  );
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return e.distanceTo(this.center) - this.radius;
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  var t = this.radius + e.radius;
                  return e.center.distanceToSquared(this.center) <= t * t;
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return e.intersectsSphere(this);
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  return (
                    Math.abs(e.distanceToPoint(this.center)) <= this.radius
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  var n = this.center.distanceToSquared(e);
                  return (
                    t.copy(e),
                    n > this.radius * this.radius &&
                      (t.sub(this.center).normalize(),
                      t.multiplyScalar(this.radius).add(this.center)),
                    t
                  );
                },
              },
              {
                key: "getBoundingBox",
                value: function (e) {
                  return this.isEmpty()
                    ? (e.makeEmpty(), e)
                    : (e.set(this.center, this.center),
                      e.expandByScalar(this.radius),
                      e);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.center.applyMatrix4(e),
                    (this.radius = this.radius * e.getMaxScaleOnAxis()),
                    this
                  );
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.center.add(e), this;
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  Bl.subVectors(e, this.center);
                  var t = Bl.lengthSq();
                  if (t > this.radius * this.radius) {
                    var n = Math.sqrt(t),
                      r = 0.5 * (n - this.radius);
                    this.center.add(Bl.multiplyScalar(r / n)),
                      (this.radius += r);
                  }
                  return this;
                },
              },
              {
                key: "union",
                value: function (e) {
                  return (
                    !0 === this.center.equals(e.center)
                      ? Fl.set(0, 0, 1).multiplyScalar(e.radius)
                      : Fl.subVectors(e.center, this.center)
                          .normalize()
                          .multiplyScalar(e.radius),
                    this.expandByPoint(Nl.copy(e.center).add(Fl)),
                    this.expandByPoint(Nl.copy(e.center).sub(Fl)),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.center.equals(this.center) && e.radius === this.radius
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        Ul = new yl(),
        jl = new yl(),
        Gl = new yl(),
        Wl = new yl(),
        Vl = new yl(),
        ql = new yl(),
        Xl = new yl(),
        Yl = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new yl(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new yl(0, 0, -1);
            Kr(this, e), (this.origin = t), (this.direction = n);
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.origin.copy(e), this.direction.copy(t), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.origin.copy(e.origin),
                    this.direction.copy(e.direction),
                    this
                  );
                },
              },
              {
                key: "at",
                value: function (e, t) {
                  return t
                    .copy(this.direction)
                    .multiplyScalar(e)
                    .add(this.origin);
                },
              },
              {
                key: "lookAt",
                value: function (e) {
                  return (
                    this.direction.copy(e).sub(this.origin).normalize(), this
                  );
                },
              },
              {
                key: "recast",
                value: function (e) {
                  return this.origin.copy(this.at(e, Ul)), this;
                },
              },
              {
                key: "closestPointToPoint",
                value: function (e, t) {
                  t.subVectors(e, this.origin);
                  var n = t.dot(this.direction);
                  return n < 0
                    ? t.copy(this.origin)
                    : t.copy(this.direction).multiplyScalar(n).add(this.origin);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return Math.sqrt(this.distanceSqToPoint(e));
                },
              },
              {
                key: "distanceSqToPoint",
                value: function (e) {
                  var t = Ul.subVectors(e, this.origin).dot(this.direction);
                  return t < 0
                    ? this.origin.distanceToSquared(e)
                    : (Ul.copy(this.direction)
                        .multiplyScalar(t)
                        .add(this.origin),
                      Ul.distanceToSquared(e));
                },
              },
              {
                key: "distanceSqToSegment",
                value: function (e, t, n, r) {
                  jl.copy(e).add(t).multiplyScalar(0.5),
                    Gl.copy(t).sub(e).normalize(),
                    Wl.copy(this.origin).sub(jl);
                  var i,
                    a,
                    o,
                    s,
                    l = 0.5 * e.distanceTo(t),
                    u = -this.direction.dot(Gl),
                    c = Wl.dot(this.direction),
                    f = -Wl.dot(Gl),
                    d = Wl.lengthSq(),
                    h = Math.abs(1 - u * u);
                  if (h > 0)
                    if (((a = u * c - f), (s = l * h), (i = u * f - c) >= 0))
                      if (a >= -s)
                        if (a <= s) {
                          var p = 1 / h;
                          o =
                            (i *= p) * (i + u * (a *= p) + 2 * c) +
                            a * (u * i + a + 2 * f) +
                            d;
                        } else
                          (a = l),
                            (o =
                              -(i = Math.max(0, -(u * a + c))) * i +
                              a * (a + 2 * f) +
                              d);
                      else
                        (a = -l),
                          (o =
                            -(i = Math.max(0, -(u * a + c))) * i +
                            a * (a + 2 * f) +
                            d);
                    else
                      a <= -s
                        ? (o =
                            -(i = Math.max(0, -(-u * l + c))) * i +
                            (a = i > 0 ? -l : Math.min(Math.max(-l, -f), l)) *
                              (a + 2 * f) +
                            d)
                        : a <= s
                        ? ((i = 0),
                          (o =
                            (a = Math.min(Math.max(-l, -f), l)) * (a + 2 * f) +
                            d))
                        : (o =
                            -(i = Math.max(0, -(u * l + c))) * i +
                            (a = i > 0 ? l : Math.min(Math.max(-l, -f), l)) *
                              (a + 2 * f) +
                            d);
                  else
                    (a = u > 0 ? -l : l),
                      (o =
                        -(i = Math.max(0, -(u * a + c))) * i +
                        a * (a + 2 * f) +
                        d);
                  return (
                    n &&
                      n.copy(this.direction).multiplyScalar(i).add(this.origin),
                    r && r.copy(Gl).multiplyScalar(a).add(jl),
                    o
                  );
                },
              },
              {
                key: "intersectSphere",
                value: function (e, t) {
                  Ul.subVectors(e.center, this.origin);
                  var n = Ul.dot(this.direction),
                    r = Ul.dot(Ul) - n * n,
                    i = e.radius * e.radius;
                  if (r > i) return null;
                  var a = Math.sqrt(i - r),
                    o = n - a,
                    s = n + a;
                  return o < 0 && s < 0
                    ? null
                    : o < 0
                    ? this.at(s, t)
                    : this.at(o, t);
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return (
                    this.distanceSqToPoint(e.center) <= e.radius * e.radius
                  );
                },
              },
              {
                key: "distanceToPlane",
                value: function (e) {
                  var t = e.normal.dot(this.direction);
                  if (0 === t)
                    return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                  var n = -(this.origin.dot(e.normal) + e.constant) / t;
                  return n >= 0 ? n : null;
                },
              },
              {
                key: "intersectPlane",
                value: function (e, t) {
                  var n = this.distanceToPlane(e);
                  return null === n ? null : this.at(n, t);
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  var t = e.distanceToPoint(this.origin);
                  return 0 === t || e.normal.dot(this.direction) * t < 0;
                },
              },
              {
                key: "intersectBox",
                value: function (e, t) {
                  var n,
                    r,
                    i,
                    a,
                    o,
                    s,
                    l = 1 / this.direction.x,
                    u = 1 / this.direction.y,
                    c = 1 / this.direction.z,
                    f = this.origin;
                  return (
                    l >= 0
                      ? ((n = (e.min.x - f.x) * l), (r = (e.max.x - f.x) * l))
                      : ((n = (e.max.x - f.x) * l), (r = (e.min.x - f.x) * l)),
                    u >= 0
                      ? ((i = (e.min.y - f.y) * u), (a = (e.max.y - f.y) * u))
                      : ((i = (e.max.y - f.y) * u), (a = (e.min.y - f.y) * u)),
                    n > a || i > r
                      ? null
                      : ((i > n || n !== n) && (n = i),
                        (a < r || r !== r) && (r = a),
                        c >= 0
                          ? ((o = (e.min.z - f.z) * c),
                            (s = (e.max.z - f.z) * c))
                          : ((o = (e.max.z - f.z) * c),
                            (s = (e.min.z - f.z) * c)),
                        n > s || o > r
                          ? null
                          : ((o > n || n !== n) && (n = o),
                            (s < r || r !== r) && (r = s),
                            r < 0 ? null : this.at(n >= 0 ? n : r, t)))
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return null !== this.intersectBox(e, Ul);
                },
              },
              {
                key: "intersectTriangle",
                value: function (e, t, n, r, i) {
                  Vl.subVectors(t, e),
                    ql.subVectors(n, e),
                    Xl.crossVectors(Vl, ql);
                  var a,
                    o = this.direction.dot(Xl);
                  if (o > 0) {
                    if (r) return null;
                    a = 1;
                  } else {
                    if (!(o < 0)) return null;
                    (a = -1), (o = -o);
                  }
                  Wl.subVectors(this.origin, e);
                  var s = a * this.direction.dot(ql.crossVectors(Wl, ql));
                  if (s < 0) return null;
                  var l = a * this.direction.dot(Vl.cross(Wl));
                  if (l < 0) return null;
                  if (s + l > o) return null;
                  var u = -a * Wl.dot(Xl);
                  return u < 0 ? null : this.at(u / o, i);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.origin.applyMatrix4(e),
                    this.direction.transformDirection(e),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.origin.equals(this.origin) &&
                    e.direction.equals(this.direction)
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        Jl = (function () {
          function e() {
            Kr(this, e),
              (this.elements = [
                1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
              ]),
              arguments.length > 0 &&
                console.error(
                  "THREE.Matrix4: the constructor no longer reads arguments. use .set() instead."
                );
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (
                  e,
                  t,
                  n,
                  r,
                  i,
                  a,
                  o,
                  s,
                  l,
                  u,
                  c,
                  f,
                  d,
                  h,
                  p,
                  v
                ) {
                  var m = this.elements;
                  return (
                    (m[0] = e),
                    (m[4] = t),
                    (m[8] = n),
                    (m[12] = r),
                    (m[1] = i),
                    (m[5] = a),
                    (m[9] = o),
                    (m[13] = s),
                    (m[2] = l),
                    (m[6] = u),
                    (m[10] = c),
                    (m[14] = f),
                    (m[3] = d),
                    (m[7] = h),
                    (m[11] = p),
                    (m[15] = v),
                    this
                  );
                },
              },
              {
                key: "identity",
                value: function () {
                  return (
                    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new e().fromArray(this.elements);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[0] = n[0]),
                    (t[1] = n[1]),
                    (t[2] = n[2]),
                    (t[3] = n[3]),
                    (t[4] = n[4]),
                    (t[5] = n[5]),
                    (t[6] = n[6]),
                    (t[7] = n[7]),
                    (t[8] = n[8]),
                    (t[9] = n[9]),
                    (t[10] = n[10]),
                    (t[11] = n[11]),
                    (t[12] = n[12]),
                    (t[13] = n[13]),
                    (t[14] = n[14]),
                    (t[15] = n[15]),
                    this
                  );
                },
              },
              {
                key: "copyPosition",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this
                  );
                },
              },
              {
                key: "setFromMatrix3",
                value: function (e) {
                  var t = e.elements;
                  return (
                    this.set(
                      t[0],
                      t[3],
                      t[6],
                      0,
                      t[1],
                      t[4],
                      t[7],
                      0,
                      t[2],
                      t[5],
                      t[8],
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "extractBasis",
                value: function (e, t, n) {
                  return (
                    e.setFromMatrixColumn(this, 0),
                    t.setFromMatrixColumn(this, 1),
                    n.setFromMatrixColumn(this, 2),
                    this
                  );
                },
              },
              {
                key: "makeBasis",
                value: function (e, t, n) {
                  return (
                    this.set(
                      e.x,
                      t.x,
                      n.x,
                      0,
                      e.y,
                      t.y,
                      n.y,
                      0,
                      e.z,
                      t.z,
                      n.z,
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "extractRotation",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements,
                    r = 1 / $l.setFromMatrixColumn(e, 0).length(),
                    i = 1 / $l.setFromMatrixColumn(e, 1).length(),
                    a = 1 / $l.setFromMatrixColumn(e, 2).length();
                  return (
                    (t[0] = n[0] * r),
                    (t[1] = n[1] * r),
                    (t[2] = n[2] * r),
                    (t[3] = 0),
                    (t[4] = n[4] * i),
                    (t[5] = n[5] * i),
                    (t[6] = n[6] * i),
                    (t[7] = 0),
                    (t[8] = n[8] * a),
                    (t[9] = n[9] * a),
                    (t[10] = n[10] * a),
                    (t[11] = 0),
                    (t[12] = 0),
                    (t[13] = 0),
                    (t[14] = 0),
                    (t[15] = 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationFromEuler",
                value: function (e) {
                  (e && e.isEuler) ||
                    console.error(
                      "THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order."
                    );
                  var t = this.elements,
                    n = e.x,
                    r = e.y,
                    i = e.z,
                    a = Math.cos(n),
                    o = Math.sin(n),
                    s = Math.cos(r),
                    l = Math.sin(r),
                    u = Math.cos(i),
                    c = Math.sin(i);
                  if ("XYZ" === e.order) {
                    var f = a * u,
                      d = a * c,
                      h = o * u,
                      p = o * c;
                    (t[0] = s * u),
                      (t[4] = -s * c),
                      (t[8] = l),
                      (t[1] = d + h * l),
                      (t[5] = f - p * l),
                      (t[9] = -o * s),
                      (t[2] = p - f * l),
                      (t[6] = h + d * l),
                      (t[10] = a * s);
                  } else if ("YXZ" === e.order) {
                    var v = s * u,
                      m = s * c,
                      g = l * u,
                      y = l * c;
                    (t[0] = v + y * o),
                      (t[4] = g * o - m),
                      (t[8] = a * l),
                      (t[1] = a * c),
                      (t[5] = a * u),
                      (t[9] = -o),
                      (t[2] = m * o - g),
                      (t[6] = y + v * o),
                      (t[10] = a * s);
                  } else if ("ZXY" === e.order) {
                    var b = s * u,
                      x = s * c,
                      w = l * u,
                      _ = l * c;
                    (t[0] = b - _ * o),
                      (t[4] = -a * c),
                      (t[8] = w + x * o),
                      (t[1] = x + w * o),
                      (t[5] = a * u),
                      (t[9] = _ - b * o),
                      (t[2] = -a * l),
                      (t[6] = o),
                      (t[10] = a * s);
                  } else if ("ZYX" === e.order) {
                    var S = a * u,
                      M = a * c,
                      E = o * u,
                      k = o * c;
                    (t[0] = s * u),
                      (t[4] = E * l - M),
                      (t[8] = S * l + k),
                      (t[1] = s * c),
                      (t[5] = k * l + S),
                      (t[9] = M * l - E),
                      (t[2] = -l),
                      (t[6] = o * s),
                      (t[10] = a * s);
                  } else if ("YZX" === e.order) {
                    var T = a * s,
                      C = a * l,
                      A = o * s,
                      P = o * l;
                    (t[0] = s * u),
                      (t[4] = P - T * c),
                      (t[8] = A * c + C),
                      (t[1] = c),
                      (t[5] = a * u),
                      (t[9] = -o * u),
                      (t[2] = -l * u),
                      (t[6] = C * c + A),
                      (t[10] = T - P * c);
                  } else if ("XZY" === e.order) {
                    var L = a * s,
                      R = a * l,
                      O = o * s,
                      z = o * l;
                    (t[0] = s * u),
                      (t[4] = -c),
                      (t[8] = l * u),
                      (t[1] = L * c + z),
                      (t[5] = a * u),
                      (t[9] = R * c - O),
                      (t[2] = O * c - R),
                      (t[6] = o * u),
                      (t[10] = z * c + L);
                  }
                  return (
                    (t[3] = 0),
                    (t[7] = 0),
                    (t[11] = 0),
                    (t[12] = 0),
                    (t[13] = 0),
                    (t[14] = 0),
                    (t[15] = 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationFromQuaternion",
                value: function (e) {
                  return this.compose(Zl, e, Kl);
                },
              },
              {
                key: "lookAt",
                value: function (e, t, n) {
                  var r = this.elements;
                  return (
                    nu.subVectors(e, t),
                    0 === nu.lengthSq() && (nu.z = 1),
                    nu.normalize(),
                    eu.crossVectors(n, nu),
                    0 === eu.lengthSq() &&
                      (1 === Math.abs(n.z) ? (nu.x += 1e-4) : (nu.z += 1e-4),
                      nu.normalize(),
                      eu.crossVectors(n, nu)),
                    eu.normalize(),
                    tu.crossVectors(nu, eu),
                    (r[0] = eu.x),
                    (r[4] = tu.x),
                    (r[8] = nu.x),
                    (r[1] = eu.y),
                    (r[5] = tu.y),
                    (r[9] = nu.y),
                    (r[2] = eu.z),
                    (r[6] = tu.z),
                    (r[10] = nu.z),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e, t) {
                  return void 0 !== t
                    ? (console.warn(
                        "THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."
                      ),
                      this.multiplyMatrices(e, t))
                    : this.multiplyMatrices(this, e);
                },
              },
              {
                key: "premultiply",
                value: function (e) {
                  return this.multiplyMatrices(e, this);
                },
              },
              {
                key: "multiplyMatrices",
                value: function (e, t) {
                  var n = e.elements,
                    r = t.elements,
                    i = this.elements,
                    a = n[0],
                    o = n[4],
                    s = n[8],
                    l = n[12],
                    u = n[1],
                    c = n[5],
                    f = n[9],
                    d = n[13],
                    h = n[2],
                    p = n[6],
                    v = n[10],
                    m = n[14],
                    g = n[3],
                    y = n[7],
                    b = n[11],
                    x = n[15],
                    w = r[0],
                    _ = r[4],
                    S = r[8],
                    M = r[12],
                    E = r[1],
                    k = r[5],
                    T = r[9],
                    C = r[13],
                    A = r[2],
                    P = r[6],
                    L = r[10],
                    R = r[14],
                    O = r[3],
                    z = r[7],
                    D = r[11],
                    I = r[15];
                  return (
                    (i[0] = a * w + o * E + s * A + l * O),
                    (i[4] = a * _ + o * k + s * P + l * z),
                    (i[8] = a * S + o * T + s * L + l * D),
                    (i[12] = a * M + o * C + s * R + l * I),
                    (i[1] = u * w + c * E + f * A + d * O),
                    (i[5] = u * _ + c * k + f * P + d * z),
                    (i[9] = u * S + c * T + f * L + d * D),
                    (i[13] = u * M + c * C + f * R + d * I),
                    (i[2] = h * w + p * E + v * A + m * O),
                    (i[6] = h * _ + p * k + v * P + m * z),
                    (i[10] = h * S + p * T + v * L + m * D),
                    (i[14] = h * M + p * C + v * R + m * I),
                    (i[3] = g * w + y * E + b * A + x * O),
                    (i[7] = g * _ + y * k + b * P + x * z),
                    (i[11] = g * S + y * T + b * L + x * D),
                    (i[15] = g * M + y * C + b * R + x * I),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (t[0] *= e),
                    (t[4] *= e),
                    (t[8] *= e),
                    (t[12] *= e),
                    (t[1] *= e),
                    (t[5] *= e),
                    (t[9] *= e),
                    (t[13] *= e),
                    (t[2] *= e),
                    (t[6] *= e),
                    (t[10] *= e),
                    (t[14] *= e),
                    (t[3] *= e),
                    (t[7] *= e),
                    (t[11] *= e),
                    (t[15] *= e),
                    this
                  );
                },
              },
              {
                key: "determinant",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[4],
                    r = e[8],
                    i = e[12],
                    a = e[1],
                    o = e[5],
                    s = e[9],
                    l = e[13],
                    u = e[2],
                    c = e[6],
                    f = e[10],
                    d = e[14];
                  return (
                    e[3] *
                      (+i * s * c -
                        r * l * c -
                        i * o * f +
                        n * l * f +
                        r * o * d -
                        n * s * d) +
                    e[7] *
                      (+t * s * d -
                        t * l * f +
                        i * a * f -
                        r * a * d +
                        r * l * u -
                        i * s * u) +
                    e[11] *
                      (+t * l * c -
                        t * o * d -
                        i * a * c +
                        n * a * d +
                        i * o * u -
                        n * l * u) +
                    e[15] *
                      (-r * o * u -
                        t * s * c +
                        t * o * f +
                        r * a * c -
                        n * a * f +
                        n * s * u)
                  );
                },
              },
              {
                key: "transpose",
                value: function () {
                  var e,
                    t = this.elements;
                  return (
                    (e = t[1]),
                    (t[1] = t[4]),
                    (t[4] = e),
                    (e = t[2]),
                    (t[2] = t[8]),
                    (t[8] = e),
                    (e = t[6]),
                    (t[6] = t[9]),
                    (t[9] = e),
                    (e = t[3]),
                    (t[3] = t[12]),
                    (t[12] = e),
                    (e = t[7]),
                    (t[7] = t[13]),
                    (t[13] = e),
                    (e = t[11]),
                    (t[11] = t[14]),
                    (t[14] = e),
                    this
                  );
                },
              },
              {
                key: "setPosition",
                value: function (e, t, n) {
                  var r = this.elements;
                  return (
                    e.isVector3
                      ? ((r[12] = e.x), (r[13] = e.y), (r[14] = e.z))
                      : ((r[12] = e), (r[13] = t), (r[14] = n)),
                    this
                  );
                },
              },
              {
                key: "invert",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    i = e[3],
                    a = e[4],
                    o = e[5],
                    s = e[6],
                    l = e[7],
                    u = e[8],
                    c = e[9],
                    f = e[10],
                    d = e[11],
                    h = e[12],
                    p = e[13],
                    v = e[14],
                    m = e[15],
                    g =
                      c * v * l -
                      p * f * l +
                      p * s * d -
                      o * v * d -
                      c * s * m +
                      o * f * m,
                    y =
                      h * f * l -
                      u * v * l -
                      h * s * d +
                      a * v * d +
                      u * s * m -
                      a * f * m,
                    b =
                      u * p * l -
                      h * c * l +
                      h * o * d -
                      a * p * d -
                      u * o * m +
                      a * c * m,
                    x =
                      h * c * s -
                      u * p * s -
                      h * o * f +
                      a * p * f +
                      u * o * v -
                      a * c * v,
                    w = t * g + n * y + r * b + i * x;
                  if (0 === w)
                    return this.set(
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    );
                  var _ = 1 / w;
                  return (
                    (e[0] = g * _),
                    (e[1] =
                      (p * f * i -
                        c * v * i -
                        p * r * d +
                        n * v * d +
                        c * r * m -
                        n * f * m) *
                      _),
                    (e[2] =
                      (o * v * i -
                        p * s * i +
                        p * r * l -
                        n * v * l -
                        o * r * m +
                        n * s * m) *
                      _),
                    (e[3] =
                      (c * s * i -
                        o * f * i -
                        c * r * l +
                        n * f * l +
                        o * r * d -
                        n * s * d) *
                      _),
                    (e[4] = y * _),
                    (e[5] =
                      (u * v * i -
                        h * f * i +
                        h * r * d -
                        t * v * d -
                        u * r * m +
                        t * f * m) *
                      _),
                    (e[6] =
                      (h * s * i -
                        a * v * i -
                        h * r * l +
                        t * v * l +
                        a * r * m -
                        t * s * m) *
                      _),
                    (e[7] =
                      (a * f * i -
                        u * s * i +
                        u * r * l -
                        t * f * l -
                        a * r * d +
                        t * s * d) *
                      _),
                    (e[8] = b * _),
                    (e[9] =
                      (h * c * i -
                        u * p * i -
                        h * n * d +
                        t * p * d +
                        u * n * m -
                        t * c * m) *
                      _),
                    (e[10] =
                      (a * p * i -
                        h * o * i +
                        h * n * l -
                        t * p * l -
                        a * n * m +
                        t * o * m) *
                      _),
                    (e[11] =
                      (u * o * i -
                        a * c * i -
                        u * n * l +
                        t * c * l +
                        a * n * d -
                        t * o * d) *
                      _),
                    (e[12] = x * _),
                    (e[13] =
                      (u * p * r -
                        h * c * r +
                        h * n * f -
                        t * p * f -
                        u * n * v +
                        t * c * v) *
                      _),
                    (e[14] =
                      (h * o * r -
                        a * p * r -
                        h * n * s +
                        t * p * s +
                        a * n * v -
                        t * o * v) *
                      _),
                    (e[15] =
                      (a * c * r -
                        u * o * r +
                        u * n * s -
                        t * c * s -
                        a * n * f +
                        t * o * f) *
                      _),
                    this
                  );
                },
              },
              {
                key: "scale",
                value: function (e) {
                  var t = this.elements,
                    n = e.x,
                    r = e.y,
                    i = e.z;
                  return (
                    (t[0] *= n),
                    (t[4] *= r),
                    (t[8] *= i),
                    (t[1] *= n),
                    (t[5] *= r),
                    (t[9] *= i),
                    (t[2] *= n),
                    (t[6] *= r),
                    (t[10] *= i),
                    (t[3] *= n),
                    (t[7] *= r),
                    (t[11] *= i),
                    this
                  );
                },
              },
              {
                key: "getMaxScaleOnAxis",
                value: function () {
                  var e = this.elements,
                    t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                    n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                    r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                  return Math.sqrt(Math.max(t, n, r));
                },
              },
              {
                key: "makeTranslation",
                value: function (e, t, n) {
                  return (
                    this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationX",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationY",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationZ",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationAxis",
                value: function (e, t) {
                  var n = Math.cos(t),
                    r = Math.sin(t),
                    i = 1 - n,
                    a = e.x,
                    o = e.y,
                    s = e.z,
                    l = i * a,
                    u = i * o;
                  return (
                    this.set(
                      l * a + n,
                      l * o - r * s,
                      l * s + r * o,
                      0,
                      l * o + r * s,
                      u * o + n,
                      u * s - r * a,
                      0,
                      l * s - r * o,
                      u * s + r * a,
                      i * s * s + n,
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "makeScale",
                value: function (e, t, n) {
                  return (
                    this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeShear",
                value: function (e, t, n, r, i, a) {
                  return (
                    this.set(1, n, i, 0, e, 1, a, 0, t, r, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "compose",
                value: function (e, t, n) {
                  var r = this.elements,
                    i = t._x,
                    a = t._y,
                    o = t._z,
                    s = t._w,
                    l = i + i,
                    u = a + a,
                    c = o + o,
                    f = i * l,
                    d = i * u,
                    h = i * c,
                    p = a * u,
                    v = a * c,
                    m = o * c,
                    g = s * l,
                    y = s * u,
                    b = s * c,
                    x = n.x,
                    w = n.y,
                    _ = n.z;
                  return (
                    (r[0] = (1 - (p + m)) * x),
                    (r[1] = (d + b) * x),
                    (r[2] = (h - y) * x),
                    (r[3] = 0),
                    (r[4] = (d - b) * w),
                    (r[5] = (1 - (f + m)) * w),
                    (r[6] = (v + g) * w),
                    (r[7] = 0),
                    (r[8] = (h + y) * _),
                    (r[9] = (v - g) * _),
                    (r[10] = (1 - (f + p)) * _),
                    (r[11] = 0),
                    (r[12] = e.x),
                    (r[13] = e.y),
                    (r[14] = e.z),
                    (r[15] = 1),
                    this
                  );
                },
              },
              {
                key: "decompose",
                value: function (e, t, n) {
                  var r = this.elements,
                    i = $l.set(r[0], r[1], r[2]).length(),
                    a = $l.set(r[4], r[5], r[6]).length(),
                    o = $l.set(r[8], r[9], r[10]).length();
                  this.determinant() < 0 && (i = -i),
                    (e.x = r[12]),
                    (e.y = r[13]),
                    (e.z = r[14]),
                    Ql.copy(this);
                  var s = 1 / i,
                    l = 1 / a,
                    u = 1 / o;
                  return (
                    (Ql.elements[0] *= s),
                    (Ql.elements[1] *= s),
                    (Ql.elements[2] *= s),
                    (Ql.elements[4] *= l),
                    (Ql.elements[5] *= l),
                    (Ql.elements[6] *= l),
                    (Ql.elements[8] *= u),
                    (Ql.elements[9] *= u),
                    (Ql.elements[10] *= u),
                    t.setFromRotationMatrix(Ql),
                    (n.x = i),
                    (n.y = a),
                    (n.z = o),
                    this
                  );
                },
              },
              {
                key: "makePerspective",
                value: function (e, t, n, r, i, a) {
                  void 0 === a &&
                    console.warn(
                      "THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs."
                    );
                  var o = this.elements,
                    s = (2 * i) / (t - e),
                    l = (2 * i) / (n - r),
                    u = (t + e) / (t - e),
                    c = (n + r) / (n - r),
                    f = -(a + i) / (a - i),
                    d = (-2 * a * i) / (a - i);
                  return (
                    (o[0] = s),
                    (o[4] = 0),
                    (o[8] = u),
                    (o[12] = 0),
                    (o[1] = 0),
                    (o[5] = l),
                    (o[9] = c),
                    (o[13] = 0),
                    (o[2] = 0),
                    (o[6] = 0),
                    (o[10] = f),
                    (o[14] = d),
                    (o[3] = 0),
                    (o[7] = 0),
                    (o[11] = -1),
                    (o[15] = 0),
                    this
                  );
                },
              },
              {
                key: "makeOrthographic",
                value: function (e, t, n, r, i, a) {
                  var o = this.elements,
                    s = 1 / (t - e),
                    l = 1 / (n - r),
                    u = 1 / (a - i),
                    c = (t + e) * s,
                    f = (n + r) * l,
                    d = (a + i) * u;
                  return (
                    (o[0] = 2 * s),
                    (o[4] = 0),
                    (o[8] = 0),
                    (o[12] = -c),
                    (o[1] = 0),
                    (o[5] = 2 * l),
                    (o[9] = 0),
                    (o[13] = -f),
                    (o[2] = 0),
                    (o[6] = 0),
                    (o[10] = -2 * u),
                    (o[14] = -d),
                    (o[3] = 0),
                    (o[7] = 0),
                    (o[11] = 0),
                    (o[15] = 1),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  for (
                    var t = this.elements, n = e.elements, r = 0;
                    r < 16;
                    r++
                  )
                    if (t[r] !== n[r]) return !1;
                  return !0;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  for (
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n = 0;
                    n < 16;
                    n++
                  )
                    this.elements[n] = e[n + t];
                  return this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.elements;
                  return (
                    (e[t] = n[0]),
                    (e[t + 1] = n[1]),
                    (e[t + 2] = n[2]),
                    (e[t + 3] = n[3]),
                    (e[t + 4] = n[4]),
                    (e[t + 5] = n[5]),
                    (e[t + 6] = n[6]),
                    (e[t + 7] = n[7]),
                    (e[t + 8] = n[8]),
                    (e[t + 9] = n[9]),
                    (e[t + 10] = n[10]),
                    (e[t + 11] = n[11]),
                    (e[t + 12] = n[12]),
                    (e[t + 13] = n[13]),
                    (e[t + 14] = n[14]),
                    (e[t + 15] = n[15]),
                    e
                  );
                },
              },
            ]),
            e
          );
        })();
      Jl.prototype.isMatrix4 = !0;
      var $l = new yl(),
        Ql = new Jl(),
        Zl = new yl(0, 0, 0),
        Kl = new yl(1, 1, 1),
        eu = new yl(),
        tu = new yl(),
        nu = new yl(),
        ru = new Jl(),
        iu = new gl(),
        au = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : e.DefaultOrder;
            Kr(this, e),
              (this._x = t),
              (this._y = n),
              (this._z = r),
              (this._order = i);
          }
          return (
            ti(e, [
              {
                key: "x",
                get: function () {
                  return this._x;
                },
                set: function (e) {
                  (this._x = e), this._onChangeCallback();
                },
              },
              {
                key: "y",
                get: function () {
                  return this._y;
                },
                set: function (e) {
                  (this._y = e), this._onChangeCallback();
                },
              },
              {
                key: "z",
                get: function () {
                  return this._z;
                },
                set: function (e) {
                  (this._z = e), this._onChangeCallback();
                },
              },
              {
                key: "order",
                get: function () {
                  return this._order;
                },
                set: function (e) {
                  (this._order = e), this._onChangeCallback();
                },
              },
              {
                key: "set",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : this._order;
                  return (
                    (this._x = e),
                    (this._y = t),
                    (this._z = n),
                    (this._order = r),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(
                    this._x,
                    this._y,
                    this._z,
                    this._order
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this._x = e._x),
                    (this._y = e._y),
                    (this._z = e._z),
                    (this._order = e._order),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromRotationMatrix",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this._order,
                    n =
                      !(arguments.length > 2 && void 0 !== arguments[2]) ||
                      arguments[2],
                    r = e.elements,
                    i = r[0],
                    a = r[4],
                    o = r[8],
                    s = r[1],
                    l = r[5],
                    u = r[9],
                    c = r[2],
                    f = r[6],
                    d = r[10];
                  switch (t) {
                    case "XYZ":
                      (this._y = Math.asin(zs(o, -1, 1))),
                        Math.abs(o) < 0.9999999
                          ? ((this._x = Math.atan2(-u, d)),
                            (this._z = Math.atan2(-a, i)))
                          : ((this._x = Math.atan2(f, l)), (this._z = 0));
                      break;
                    case "YXZ":
                      (this._x = Math.asin(-zs(u, -1, 1))),
                        Math.abs(u) < 0.9999999
                          ? ((this._y = Math.atan2(o, d)),
                            (this._z = Math.atan2(s, l)))
                          : ((this._y = Math.atan2(-c, i)), (this._z = 0));
                      break;
                    case "ZXY":
                      (this._x = Math.asin(zs(f, -1, 1))),
                        Math.abs(f) < 0.9999999
                          ? ((this._y = Math.atan2(-c, d)),
                            (this._z = Math.atan2(-a, l)))
                          : ((this._y = 0), (this._z = Math.atan2(s, i)));
                      break;
                    case "ZYX":
                      (this._y = Math.asin(-zs(c, -1, 1))),
                        Math.abs(c) < 0.9999999
                          ? ((this._x = Math.atan2(f, d)),
                            (this._z = Math.atan2(s, i)))
                          : ((this._x = 0), (this._z = Math.atan2(-a, l)));
                      break;
                    case "YZX":
                      (this._z = Math.asin(zs(s, -1, 1))),
                        Math.abs(s) < 0.9999999
                          ? ((this._x = Math.atan2(-u, l)),
                            (this._y = Math.atan2(-c, i)))
                          : ((this._x = 0), (this._y = Math.atan2(o, d)));
                      break;
                    case "XZY":
                      (this._z = Math.asin(-zs(a, -1, 1))),
                        Math.abs(a) < 0.9999999
                          ? ((this._x = Math.atan2(f, l)),
                            (this._y = Math.atan2(o, i)))
                          : ((this._x = Math.atan2(-u, d)), (this._y = 0));
                      break;
                    default:
                      console.warn(
                        "THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " +
                          t
                      );
                  }
                  return (
                    (this._order = t),
                    !0 === n && this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromQuaternion",
                value: function (e, t, n) {
                  return (
                    ru.makeRotationFromQuaternion(e),
                    this.setFromRotationMatrix(ru, t, n)
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : this._order;
                  return this.set(e.x, e.y, e.z, t);
                },
              },
              {
                key: "reorder",
                value: function (e) {
                  return iu.setFromEuler(this), this.setFromQuaternion(iu, e);
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e._x === this._x &&
                    e._y === this._y &&
                    e._z === this._z &&
                    e._order === this._order
                  );
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  return (
                    (this._x = e[0]),
                    (this._y = e[1]),
                    (this._z = e[2]),
                    void 0 !== e[3] && (this._order = e[3]),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this._x),
                    (e[t + 1] = this._y),
                    (e[t + 2] = this._z),
                    (e[t + 3] = this._order),
                    e
                  );
                },
              },
              {
                key: "_onChange",
                value: function (e) {
                  return (this._onChangeCallback = e), this;
                },
              },
              { key: "_onChangeCallback", value: function () {} },
            ]),
            e
          );
        })();
      (au.prototype.isEuler = !0),
        (au.DefaultOrder = "XYZ"),
        (au.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"]);
      var ou = (function () {
          function e() {
            Kr(this, e), (this.mask = 1);
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e) {
                  this.mask = ((1 << e) | 0) >>> 0;
                },
              },
              {
                key: "enable",
                value: function (e) {
                  this.mask |= (1 << e) | 0;
                },
              },
              {
                key: "enableAll",
                value: function () {
                  this.mask = -1;
                },
              },
              {
                key: "toggle",
                value: function (e) {
                  this.mask ^= (1 << e) | 0;
                },
              },
              {
                key: "disable",
                value: function (e) {
                  this.mask &= ~((1 << e) | 0);
                },
              },
              {
                key: "disableAll",
                value: function () {
                  this.mask = 0;
                },
              },
              {
                key: "test",
                value: function (e) {
                  return 0 !== (this.mask & e.mask);
                },
              },
              {
                key: "isEnabled",
                value: function (e) {
                  return 0 !== (this.mask & ((1 << e) | 0));
                },
              },
            ]),
            e
          );
        })(),
        su = 0,
        lu = new yl(),
        uu = new gl(),
        cu = new Jl(),
        fu = new yl(),
        du = new yl(),
        hu = new yl(),
        pu = new gl(),
        vu = new yl(1, 0, 0),
        mu = new yl(0, 1, 0),
        gu = new yl(0, 0, 1),
        yu = { type: "added" },
        bu = { type: "removed" },
        xu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e;
            Kr(this, n),
              (e = t.call(this)),
              Object.defineProperty(ai(e), "id", { value: su++ }),
              (e.uuid = Os()),
              (e.name = ""),
              (e.type = "Object3D"),
              (e.parent = null),
              (e.children = []),
              (e.up = n.DefaultUp.clone());
            var r = new yl(),
              i = new au(),
              a = new gl(),
              o = new yl(1, 1, 1);
            return (
              i._onChange(function () {
                a.setFromEuler(i, !1);
              }),
              a._onChange(function () {
                i.setFromQuaternion(a, void 0, !1);
              }),
              Object.defineProperties(ai(e), {
                position: { configurable: !0, enumerable: !0, value: r },
                rotation: { configurable: !0, enumerable: !0, value: i },
                quaternion: { configurable: !0, enumerable: !0, value: a },
                scale: { configurable: !0, enumerable: !0, value: o },
                modelViewMatrix: { value: new Jl() },
                normalMatrix: { value: new js() },
              }),
              (e.matrix = new Jl()),
              (e.matrixWorld = new Jl()),
              (e.matrixAutoUpdate = n.DefaultMatrixAutoUpdate),
              (e.matrixWorldNeedsUpdate = !1),
              (e.layers = new ou()),
              (e.visible = !0),
              (e.castShadow = !1),
              (e.receiveShadow = !1),
              (e.frustumCulled = !0),
              (e.renderOrder = 0),
              (e.animations = []),
              (e.userData = {}),
              e
            );
          }
          return (
            ti(n, [
              { key: "onBeforeRender", value: function () {} },
              { key: "onAfterRender", value: function () {} },
              {
                key: "applyMatrix4",
                value: function (e) {
                  this.matrixAutoUpdate && this.updateMatrix(),
                    this.matrix.premultiply(e),
                    this.matrix.decompose(
                      this.position,
                      this.quaternion,
                      this.scale
                    );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  return this.quaternion.premultiply(e), this;
                },
              },
              {
                key: "setRotationFromAxisAngle",
                value: function (e, t) {
                  this.quaternion.setFromAxisAngle(e, t);
                },
              },
              {
                key: "setRotationFromEuler",
                value: function (e) {
                  this.quaternion.setFromEuler(e, !0);
                },
              },
              {
                key: "setRotationFromMatrix",
                value: function (e) {
                  this.quaternion.setFromRotationMatrix(e);
                },
              },
              {
                key: "setRotationFromQuaternion",
                value: function (e) {
                  this.quaternion.copy(e);
                },
              },
              {
                key: "rotateOnAxis",
                value: function (e, t) {
                  return (
                    uu.setFromAxisAngle(e, t),
                    this.quaternion.multiply(uu),
                    this
                  );
                },
              },
              {
                key: "rotateOnWorldAxis",
                value: function (e, t) {
                  return (
                    uu.setFromAxisAngle(e, t),
                    this.quaternion.premultiply(uu),
                    this
                  );
                },
              },
              {
                key: "rotateX",
                value: function (e) {
                  return this.rotateOnAxis(vu, e);
                },
              },
              {
                key: "rotateY",
                value: function (e) {
                  return this.rotateOnAxis(mu, e);
                },
              },
              {
                key: "rotateZ",
                value: function (e) {
                  return this.rotateOnAxis(gu, e);
                },
              },
              {
                key: "translateOnAxis",
                value: function (e, t) {
                  return (
                    lu.copy(e).applyQuaternion(this.quaternion),
                    this.position.add(lu.multiplyScalar(t)),
                    this
                  );
                },
              },
              {
                key: "translateX",
                value: function (e) {
                  return this.translateOnAxis(vu, e);
                },
              },
              {
                key: "translateY",
                value: function (e) {
                  return this.translateOnAxis(mu, e);
                },
              },
              {
                key: "translateZ",
                value: function (e) {
                  return this.translateOnAxis(gu, e);
                },
              },
              {
                key: "localToWorld",
                value: function (e) {
                  return e.applyMatrix4(this.matrixWorld);
                },
              },
              {
                key: "worldToLocal",
                value: function (e) {
                  return e.applyMatrix4(cu.copy(this.matrixWorld).invert());
                },
              },
              {
                key: "lookAt",
                value: function (e, t, n) {
                  e.isVector3 ? fu.copy(e) : fu.set(e, t, n);
                  var r = this.parent;
                  this.updateWorldMatrix(!0, !1),
                    du.setFromMatrixPosition(this.matrixWorld),
                    this.isCamera || this.isLight
                      ? cu.lookAt(du, fu, this.up)
                      : cu.lookAt(fu, du, this.up),
                    this.quaternion.setFromRotationMatrix(cu),
                    r &&
                      (cu.extractRotation(r.matrixWorld),
                      uu.setFromRotationMatrix(cu),
                      this.quaternion.premultiply(uu.invert()));
                },
              },
              {
                key: "add",
                value: function (e) {
                  if (arguments.length > 1) {
                    for (var t = 0; t < arguments.length; t++)
                      this.add(arguments[t]);
                    return this;
                  }
                  return e === this
                    ? (console.error(
                        "THREE.Object3D.add: object can't be added as a child of itself.",
                        e
                      ),
                      this)
                    : (e && e.isObject3D
                        ? (null !== e.parent && e.parent.remove(e),
                          (e.parent = this),
                          this.children.push(e),
                          e.dispatchEvent(yu))
                        : console.error(
                            "THREE.Object3D.add: object not an instance of THREE.Object3D.",
                            e
                          ),
                      this);
                },
              },
              {
                key: "remove",
                value: function (e) {
                  if (arguments.length > 1) {
                    for (var t = 0; t < arguments.length; t++)
                      this.remove(arguments[t]);
                    return this;
                  }
                  var n = this.children.indexOf(e);
                  return (
                    -1 !== n &&
                      ((e.parent = null),
                      this.children.splice(n, 1),
                      e.dispatchEvent(bu)),
                    this
                  );
                },
              },
              {
                key: "removeFromParent",
                value: function () {
                  var e = this.parent;
                  return null !== e && e.remove(this), this;
                },
              },
              {
                key: "clear",
                value: function () {
                  for (var e = 0; e < this.children.length; e++) {
                    var t = this.children[e];
                    (t.parent = null), t.dispatchEvent(bu);
                  }
                  return (this.children.length = 0), this;
                },
              },
              {
                key: "attach",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    cu.copy(this.matrixWorld).invert(),
                    null !== e.parent &&
                      (e.parent.updateWorldMatrix(!0, !1),
                      cu.multiply(e.parent.matrixWorld)),
                    e.applyMatrix4(cu),
                    this.add(e),
                    e.updateWorldMatrix(!1, !0),
                    this
                  );
                },
              },
              {
                key: "getObjectById",
                value: function (e) {
                  return this.getObjectByProperty("id", e);
                },
              },
              {
                key: "getObjectByName",
                value: function (e) {
                  return this.getObjectByProperty("name", e);
                },
              },
              {
                key: "getObjectByProperty",
                value: function (e, t) {
                  if (this[e] === t) return this;
                  for (var n = 0, r = this.children.length; n < r; n++) {
                    var i = this.children[n].getObjectByProperty(e, t);
                    if (void 0 !== i) return i;
                  }
                },
              },
              {
                key: "getWorldPosition",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    e.setFromMatrixPosition(this.matrixWorld)
                  );
                },
              },
              {
                key: "getWorldQuaternion",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(du, e, hu),
                    e
                  );
                },
              },
              {
                key: "getWorldScale",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(du, pu, e),
                    e
                  );
                },
              },
              {
                key: "getWorldDirection",
                value: function (e) {
                  this.updateWorldMatrix(!0, !1);
                  var t = this.matrixWorld.elements;
                  return e.set(t[8], t[9], t[10]).normalize();
                },
              },
              { key: "raycast", value: function () {} },
              {
                key: "traverse",
                value: function (e) {
                  e(this);
                  for (var t = this.children, n = 0, r = t.length; n < r; n++)
                    t[n].traverse(e);
                },
              },
              {
                key: "traverseVisible",
                value: function (e) {
                  if (!1 !== this.visible) {
                    e(this);
                    for (var t = this.children, n = 0, r = t.length; n < r; n++)
                      t[n].traverseVisible(e);
                  }
                },
              },
              {
                key: "traverseAncestors",
                value: function (e) {
                  var t = this.parent;
                  null !== t && (e(t), t.traverseAncestors(e));
                },
              },
              {
                key: "updateMatrix",
                value: function () {
                  this.matrix.compose(
                    this.position,
                    this.quaternion,
                    this.scale
                  ),
                    (this.matrixWorldNeedsUpdate = !0);
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  this.matrixAutoUpdate && this.updateMatrix(),
                    (this.matrixWorldNeedsUpdate || e) &&
                      (null === this.parent
                        ? this.matrixWorld.copy(this.matrix)
                        : this.matrixWorld.multiplyMatrices(
                            this.parent.matrixWorld,
                            this.matrix
                          ),
                      (this.matrixWorldNeedsUpdate = !1),
                      (e = !0));
                  for (var t = this.children, n = 0, r = t.length; n < r; n++)
                    t[n].updateMatrixWorld(e);
                },
              },
              {
                key: "updateWorldMatrix",
                value: function (e, t) {
                  var n = this.parent;
                  if (
                    (!0 === e && null !== n && n.updateWorldMatrix(!0, !1),
                    this.matrixAutoUpdate && this.updateMatrix(),
                    null === this.parent
                      ? this.matrixWorld.copy(this.matrix)
                      : this.matrixWorld.multiplyMatrices(
                          this.parent.matrixWorld,
                          this.matrix
                        ),
                    !0 === t)
                  )
                    for (var r = this.children, i = 0, a = r.length; i < a; i++)
                      r[i].updateWorldMatrix(!1, !0);
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e,
                    n = {};
                  t &&
                    ((e = {
                      geometries: {},
                      materials: {},
                      textures: {},
                      images: {},
                      shapes: {},
                      skeletons: {},
                      animations: {},
                      nodes: {},
                    }),
                    (n.metadata = {
                      version: 4.5,
                      type: "Object",
                      generator: "Object3D.toJSON",
                    }));
                  var r = {};
                  function i(t, n) {
                    return (
                      void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid
                    );
                  }
                  if (
                    ((r.uuid = this.uuid),
                    (r.type = this.type),
                    "" !== this.name && (r.name = this.name),
                    !0 === this.castShadow && (r.castShadow = !0),
                    !0 === this.receiveShadow && (r.receiveShadow = !0),
                    !1 === this.visible && (r.visible = !1),
                    !1 === this.frustumCulled && (r.frustumCulled = !1),
                    0 !== this.renderOrder &&
                      (r.renderOrder = this.renderOrder),
                    "{}" !== JSON.stringify(this.userData) &&
                      (r.userData = this.userData),
                    (r.layers = this.layers.mask),
                    (r.matrix = this.matrix.toArray()),
                    !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
                    this.isInstancedMesh &&
                      ((r.type = "InstancedMesh"),
                      (r.count = this.count),
                      (r.instanceMatrix = this.instanceMatrix.toJSON()),
                      null !== this.instanceColor &&
                        (r.instanceColor = this.instanceColor.toJSON())),
                    this.isScene)
                  )
                    this.background &&
                      (this.background.isColor
                        ? (r.background = this.background.toJSON())
                        : this.background.isTexture &&
                          (r.background = this.background.toJSON(e).uuid)),
                      this.environment &&
                        this.environment.isTexture &&
                        (r.environment = this.environment.toJSON(e).uuid);
                  else if (this.isMesh || this.isLine || this.isPoints) {
                    r.geometry = i(e.geometries, this.geometry);
                    var a = this.geometry.parameters;
                    if (void 0 !== a && void 0 !== a.shapes) {
                      var o = a.shapes;
                      if (Array.isArray(o))
                        for (var s = 0, l = o.length; s < l; s++) {
                          var u = o[s];
                          i(e.shapes, u);
                        }
                      else i(e.shapes, o);
                    }
                  }
                  if (
                    (this.isSkinnedMesh &&
                      ((r.bindMode = this.bindMode),
                      (r.bindMatrix = this.bindMatrix.toArray()),
                      void 0 !== this.skeleton &&
                        (i(e.skeletons, this.skeleton),
                        (r.skeleton = this.skeleton.uuid))),
                    void 0 !== this.material)
                  )
                    if (Array.isArray(this.material)) {
                      for (
                        var c = [], f = 0, d = this.material.length;
                        f < d;
                        f++
                      )
                        c.push(i(e.materials, this.material[f]));
                      r.material = c;
                    } else r.material = i(e.materials, this.material);
                  if (this.children.length > 0) {
                    r.children = [];
                    for (var h = 0; h < this.children.length; h++)
                      r.children.push(this.children[h].toJSON(e).object);
                  }
                  if (this.animations.length > 0) {
                    r.animations = [];
                    for (var p = 0; p < this.animations.length; p++) {
                      var v = this.animations[p];
                      r.animations.push(i(e.animations, v));
                    }
                  }
                  if (t) {
                    var m = M(e.geometries),
                      g = M(e.materials),
                      y = M(e.textures),
                      b = M(e.images),
                      x = M(e.shapes),
                      w = M(e.skeletons),
                      _ = M(e.animations),
                      S = M(e.nodes);
                    m.length > 0 && (n.geometries = m),
                      g.length > 0 && (n.materials = g),
                      y.length > 0 && (n.textures = y),
                      b.length > 0 && (n.images = b),
                      x.length > 0 && (n.shapes = x),
                      w.length > 0 && (n.skeletons = w),
                      _.length > 0 && (n.animations = _),
                      S.length > 0 && (n.nodes = S);
                  }
                  return (n.object = r), n;
                  function M(e) {
                    var t = [];
                    for (var n in e) {
                      var r = e[n];
                      delete r.metadata, t.push(r);
                    }
                    return t;
                  }
                },
              },
              {
                key: "clone",
                value: function (e) {
                  return new this.constructor().copy(this, e);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t =
                    !(arguments.length > 1 && void 0 !== arguments[1]) ||
                    arguments[1];
                  if (
                    ((this.name = e.name),
                    this.up.copy(e.up),
                    this.position.copy(e.position),
                    (this.rotation.order = e.rotation.order),
                    this.quaternion.copy(e.quaternion),
                    this.scale.copy(e.scale),
                    this.matrix.copy(e.matrix),
                    this.matrixWorld.copy(e.matrixWorld),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
                    (this.layers.mask = e.layers.mask),
                    (this.visible = e.visible),
                    (this.castShadow = e.castShadow),
                    (this.receiveShadow = e.receiveShadow),
                    (this.frustumCulled = e.frustumCulled),
                    (this.renderOrder = e.renderOrder),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    !0 === t)
                  )
                    for (var n = 0; n < e.children.length; n++) {
                      var r = e.children[n];
                      this.add(r.clone());
                    }
                  return this;
                },
              },
            ]),
            n
          );
        })(Ts);
      (xu.DefaultUp = new yl(0, 1, 0)),
        (xu.DefaultMatrixAutoUpdate = !0),
        (xu.prototype.isObject3D = !0);
      var wu = new yl(),
        _u = new yl(),
        Su = new yl(),
        Mu = new yl(),
        Eu = new yl(),
        ku = new yl(),
        Tu = new yl(),
        Cu = new yl(),
        Au = new yl(),
        Pu = new yl(),
        Lu = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new yl(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new yl(),
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new yl();
            Kr(this, e), (this.a = t), (this.b = n), (this.c = r);
          }
          return (
            ti(
              e,
              [
                {
                  key: "set",
                  value: function (e, t, n) {
                    return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
                  },
                },
                {
                  key: "setFromPointsAndIndices",
                  value: function (e, t, n, r) {
                    return (
                      this.a.copy(e[t]),
                      this.b.copy(e[n]),
                      this.c.copy(e[r]),
                      this
                    );
                  },
                },
                {
                  key: "setFromAttributeAndIndices",
                  value: function (e, t, n, r) {
                    return (
                      this.a.fromBufferAttribute(e, t),
                      this.b.fromBufferAttribute(e, n),
                      this.c.fromBufferAttribute(e, r),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    return new this.constructor().copy(this);
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
                    );
                  },
                },
                {
                  key: "getArea",
                  value: function () {
                    return (
                      wu.subVectors(this.c, this.b),
                      _u.subVectors(this.a, this.b),
                      0.5 * wu.cross(_u).length()
                    );
                  },
                },
                {
                  key: "getMidpoint",
                  value: function (e) {
                    return e
                      .addVectors(this.a, this.b)
                      .add(this.c)
                      .multiplyScalar(1 / 3);
                  },
                },
                {
                  key: "getNormal",
                  value: function (t) {
                    return e.getNormal(this.a, this.b, this.c, t);
                  },
                },
                {
                  key: "getPlane",
                  value: function (e) {
                    return e.setFromCoplanarPoints(this.a, this.b, this.c);
                  },
                },
                {
                  key: "getBarycoord",
                  value: function (t, n) {
                    return e.getBarycoord(t, this.a, this.b, this.c, n);
                  },
                },
                {
                  key: "getUV",
                  value: function (t, n, r, i, a) {
                    return e.getUV(t, this.a, this.b, this.c, n, r, i, a);
                  },
                },
                {
                  key: "containsPoint",
                  value: function (t) {
                    return e.containsPoint(t, this.a, this.b, this.c);
                  },
                },
                {
                  key: "isFrontFacing",
                  value: function (t) {
                    return e.isFrontFacing(this.a, this.b, this.c, t);
                  },
                },
                {
                  key: "intersectsBox",
                  value: function (e) {
                    return e.intersectsTriangle(this);
                  },
                },
                {
                  key: "closestPointToPoint",
                  value: function (e, t) {
                    var n,
                      r,
                      i = this.a,
                      a = this.b,
                      o = this.c;
                    Eu.subVectors(a, i),
                      ku.subVectors(o, i),
                      Cu.subVectors(e, i);
                    var s = Eu.dot(Cu),
                      l = ku.dot(Cu);
                    if (s <= 0 && l <= 0) return t.copy(i);
                    Au.subVectors(e, a);
                    var u = Eu.dot(Au),
                      c = ku.dot(Au);
                    if (u >= 0 && c <= u) return t.copy(a);
                    var f = s * c - u * l;
                    if (f <= 0 && s >= 0 && u <= 0)
                      return (
                        (n = s / (s - u)), t.copy(i).addScaledVector(Eu, n)
                      );
                    Pu.subVectors(e, o);
                    var d = Eu.dot(Pu),
                      h = ku.dot(Pu);
                    if (h >= 0 && d <= h) return t.copy(o);
                    var p = d * l - s * h;
                    if (p <= 0 && l >= 0 && h <= 0)
                      return (
                        (r = l / (l - h)), t.copy(i).addScaledVector(ku, r)
                      );
                    var v = u * h - d * c;
                    if (v <= 0 && c - u >= 0 && d - h >= 0)
                      return (
                        Tu.subVectors(o, a),
                        (r = (c - u) / (c - u + (d - h))),
                        t.copy(a).addScaledVector(Tu, r)
                      );
                    var m = 1 / (v + p + f);
                    return (
                      (n = p * m),
                      (r = f * m),
                      t.copy(i).addScaledVector(Eu, n).addScaledVector(ku, r)
                    );
                  },
                },
                {
                  key: "equals",
                  value: function (e) {
                    return (
                      e.a.equals(this.a) &&
                      e.b.equals(this.b) &&
                      e.c.equals(this.c)
                    );
                  },
                },
              ],
              [
                {
                  key: "getNormal",
                  value: function (e, t, n, r) {
                    r.subVectors(n, t), wu.subVectors(e, t), r.cross(wu);
                    var i = r.lengthSq();
                    return i > 0
                      ? r.multiplyScalar(1 / Math.sqrt(i))
                      : r.set(0, 0, 0);
                  },
                },
                {
                  key: "getBarycoord",
                  value: function (e, t, n, r, i) {
                    wu.subVectors(r, t),
                      _u.subVectors(n, t),
                      Su.subVectors(e, t);
                    var a = wu.dot(wu),
                      o = wu.dot(_u),
                      s = wu.dot(Su),
                      l = _u.dot(_u),
                      u = _u.dot(Su),
                      c = a * l - o * o;
                    if (0 === c) return i.set(-2, -1, -1);
                    var f = 1 / c,
                      d = (l * s - o * u) * f,
                      h = (a * u - o * s) * f;
                    return i.set(1 - d - h, h, d);
                  },
                },
                {
                  key: "containsPoint",
                  value: function (e, t, n, r) {
                    return (
                      this.getBarycoord(e, t, n, r, Mu),
                      Mu.x >= 0 && Mu.y >= 0 && Mu.x + Mu.y <= 1
                    );
                  },
                },
                {
                  key: "getUV",
                  value: function (e, t, n, r, i, a, o, s) {
                    return (
                      this.getBarycoord(e, t, n, r, Mu),
                      s.set(0, 0),
                      s.addScaledVector(i, Mu.x),
                      s.addScaledVector(a, Mu.y),
                      s.addScaledVector(o, Mu.z),
                      s
                    );
                  },
                },
                {
                  key: "isFrontFacing",
                  value: function (e, t, n, r) {
                    return (
                      wu.subVectors(n, t),
                      _u.subVectors(e, t),
                      wu.cross(_u).dot(r) < 0
                    );
                  },
                },
              ]
            ),
            e
          );
        })(),
        Ru = 0,
        Ou = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e;
            return (
              Kr(this, n),
              (e = t.call(this)),
              Object.defineProperty(ai(e), "id", { value: Ru++ }),
              (e.uuid = Os()),
              (e.name = ""),
              (e.type = "Material"),
              (e.fog = !0),
              (e.blending = Li),
              (e.side = Ei),
              (e.vertexColors = !1),
              (e.opacity = 1),
              (e.transparent = !1),
              (e.blendSrc = Vi),
              (e.blendDst = qi),
              (e.blendEquation = Ii),
              (e.blendSrcAlpha = null),
              (e.blendDstAlpha = null),
              (e.blendEquationAlpha = null),
              (e.depthFunc = ta),
              (e.depthTest = !0),
              (e.depthWrite = !0),
              (e.stencilWriteMask = 255),
              (e.stencilFunc = ps),
              (e.stencilRef = 0),
              (e.stencilFuncMask = 255),
              (e.stencilFail = es),
              (e.stencilZFail = es),
              (e.stencilZPass = es),
              (e.stencilWrite = !1),
              (e.clippingPlanes = null),
              (e.clipIntersection = !1),
              (e.clipShadows = !1),
              (e.shadowSide = null),
              (e.colorWrite = !0),
              (e.precision = null),
              (e.polygonOffset = !1),
              (e.polygonOffsetFactor = 0),
              (e.polygonOffsetUnits = 0),
              (e.dithering = !1),
              (e.alphaToCoverage = !1),
              (e.premultipliedAlpha = !1),
              (e.visible = !0),
              (e.toneMapped = !0),
              (e.userData = {}),
              (e.version = 0),
              (e._alphaTest = 0),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "alphaTest",
                get: function () {
                  return this._alphaTest;
                },
                set: function (e) {
                  this._alphaTest > 0 !== e > 0 && this.version++,
                    (this._alphaTest = e);
                },
              },
              { key: "onBuild", value: function () {} },
              { key: "onBeforeRender", value: function () {} },
              { key: "onBeforeCompile", value: function () {} },
              {
                key: "customProgramCacheKey",
                value: function () {
                  return this.onBeforeCompile.toString();
                },
              },
              {
                key: "setValues",
                value: function (e) {
                  if (void 0 !== e)
                    for (var t in e) {
                      var n = e[t];
                      if (void 0 !== n)
                        if ("shading" !== t) {
                          var r = this[t];
                          void 0 !== r
                            ? r && r.isColor
                              ? r.set(n)
                              : r && r.isVector3 && n && n.isVector3
                              ? r.copy(n)
                              : (this[t] = n)
                            : console.warn(
                                "THREE." +
                                  this.type +
                                  ": '" +
                                  t +
                                  "' is not a property of this material."
                              );
                        } else
                          console.warn(
                            "THREE." +
                              this.type +
                              ": .shading has been removed. Use the boolean .flatShading instead."
                          ),
                            (this.flatShading = n === Ci);
                      else
                        console.warn(
                          "THREE.Material: '" + t + "' parameter is undefined."
                        );
                    }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  t && (e = { textures: {}, images: {} });
                  var n = {
                    metadata: {
                      version: 4.5,
                      type: "Material",
                      generator: "Material.toJSON",
                    },
                  };
                  function r(e) {
                    var t = [];
                    for (var n in e) {
                      var r = e[n];
                      delete r.metadata, t.push(r);
                    }
                    return t;
                  }
                  if (
                    ((n.uuid = this.uuid),
                    (n.type = this.type),
                    "" !== this.name && (n.name = this.name),
                    this.color &&
                      this.color.isColor &&
                      (n.color = this.color.getHex()),
                    void 0 !== this.roughness && (n.roughness = this.roughness),
                    void 0 !== this.metalness && (n.metalness = this.metalness),
                    void 0 !== this.sheen && (n.sheen = this.sheen),
                    this.sheenColor &&
                      this.sheenColor.isColor &&
                      (n.sheenColor = this.sheenColor.getHex()),
                    void 0 !== this.sheenRoughness &&
                      (n.sheenRoughness = this.sheenRoughness),
                    this.emissive &&
                      this.emissive.isColor &&
                      (n.emissive = this.emissive.getHex()),
                    this.emissiveIntensity &&
                      1 !== this.emissiveIntensity &&
                      (n.emissiveIntensity = this.emissiveIntensity),
                    this.specular &&
                      this.specular.isColor &&
                      (n.specular = this.specular.getHex()),
                    void 0 !== this.specularIntensity &&
                      (n.specularIntensity = this.specularIntensity),
                    this.specularColor &&
                      this.specularColor.isColor &&
                      (n.specularColor = this.specularColor.getHex()),
                    void 0 !== this.shininess && (n.shininess = this.shininess),
                    void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
                    void 0 !== this.clearcoatRoughness &&
                      (n.clearcoatRoughness = this.clearcoatRoughness),
                    this.clearcoatMap &&
                      this.clearcoatMap.isTexture &&
                      (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
                    this.clearcoatRoughnessMap &&
                      this.clearcoatRoughnessMap.isTexture &&
                      (n.clearcoatRoughnessMap =
                        this.clearcoatRoughnessMap.toJSON(e).uuid),
                    this.clearcoatNormalMap &&
                      this.clearcoatNormalMap.isTexture &&
                      ((n.clearcoatNormalMap =
                        this.clearcoatNormalMap.toJSON(e).uuid),
                      (n.clearcoatNormalScale =
                        this.clearcoatNormalScale.toArray())),
                    this.map &&
                      this.map.isTexture &&
                      (n.map = this.map.toJSON(e).uuid),
                    this.matcap &&
                      this.matcap.isTexture &&
                      (n.matcap = this.matcap.toJSON(e).uuid),
                    this.alphaMap &&
                      this.alphaMap.isTexture &&
                      (n.alphaMap = this.alphaMap.toJSON(e).uuid),
                    this.lightMap &&
                      this.lightMap.isTexture &&
                      ((n.lightMap = this.lightMap.toJSON(e).uuid),
                      (n.lightMapIntensity = this.lightMapIntensity)),
                    this.aoMap &&
                      this.aoMap.isTexture &&
                      ((n.aoMap = this.aoMap.toJSON(e).uuid),
                      (n.aoMapIntensity = this.aoMapIntensity)),
                    this.bumpMap &&
                      this.bumpMap.isTexture &&
                      ((n.bumpMap = this.bumpMap.toJSON(e).uuid),
                      (n.bumpScale = this.bumpScale)),
                    this.normalMap &&
                      this.normalMap.isTexture &&
                      ((n.normalMap = this.normalMap.toJSON(e).uuid),
                      (n.normalMapType = this.normalMapType),
                      (n.normalScale = this.normalScale.toArray())),
                    this.displacementMap &&
                      this.displacementMap.isTexture &&
                      ((n.displacementMap =
                        this.displacementMap.toJSON(e).uuid),
                      (n.displacementScale = this.displacementScale),
                      (n.displacementBias = this.displacementBias)),
                    this.roughnessMap &&
                      this.roughnessMap.isTexture &&
                      (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
                    this.metalnessMap &&
                      this.metalnessMap.isTexture &&
                      (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
                    this.emissiveMap &&
                      this.emissiveMap.isTexture &&
                      (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
                    this.specularMap &&
                      this.specularMap.isTexture &&
                      (n.specularMap = this.specularMap.toJSON(e).uuid),
                    this.specularIntensityMap &&
                      this.specularIntensityMap.isTexture &&
                      (n.specularIntensityMap =
                        this.specularIntensityMap.toJSON(e).uuid),
                    this.specularColorMap &&
                      this.specularColorMap.isTexture &&
                      (n.specularColorMap =
                        this.specularColorMap.toJSON(e).uuid),
                    this.envMap &&
                      this.envMap.isTexture &&
                      ((n.envMap = this.envMap.toJSON(e).uuid),
                      void 0 !== this.combine && (n.combine = this.combine)),
                    void 0 !== this.envMapIntensity &&
                      (n.envMapIntensity = this.envMapIntensity),
                    void 0 !== this.reflectivity &&
                      (n.reflectivity = this.reflectivity),
                    void 0 !== this.refractionRatio &&
                      (n.refractionRatio = this.refractionRatio),
                    this.gradientMap &&
                      this.gradientMap.isTexture &&
                      (n.gradientMap = this.gradientMap.toJSON(e).uuid),
                    void 0 !== this.transmission &&
                      (n.transmission = this.transmission),
                    this.transmissionMap &&
                      this.transmissionMap.isTexture &&
                      (n.transmissionMap = this.transmissionMap.toJSON(e).uuid),
                    void 0 !== this.thickness && (n.thickness = this.thickness),
                    this.thicknessMap &&
                      this.thicknessMap.isTexture &&
                      (n.thicknessMap = this.thicknessMap.toJSON(e).uuid),
                    void 0 !== this.attenuationDistance &&
                      (n.attenuationDistance = this.attenuationDistance),
                    void 0 !== this.attenuationColor &&
                      (n.attenuationColor = this.attenuationColor.getHex()),
                    void 0 !== this.size && (n.size = this.size),
                    null !== this.shadowSide &&
                      (n.shadowSide = this.shadowSide),
                    void 0 !== this.sizeAttenuation &&
                      (n.sizeAttenuation = this.sizeAttenuation),
                    this.blending !== Li && (n.blending = this.blending),
                    this.side !== Ei && (n.side = this.side),
                    this.vertexColors && (n.vertexColors = !0),
                    this.opacity < 1 && (n.opacity = this.opacity),
                    !0 === this.transparent &&
                      (n.transparent = this.transparent),
                    (n.depthFunc = this.depthFunc),
                    (n.depthTest = this.depthTest),
                    (n.depthWrite = this.depthWrite),
                    (n.colorWrite = this.colorWrite),
                    (n.stencilWrite = this.stencilWrite),
                    (n.stencilWriteMask = this.stencilWriteMask),
                    (n.stencilFunc = this.stencilFunc),
                    (n.stencilRef = this.stencilRef),
                    (n.stencilFuncMask = this.stencilFuncMask),
                    (n.stencilFail = this.stencilFail),
                    (n.stencilZFail = this.stencilZFail),
                    (n.stencilZPass = this.stencilZPass),
                    void 0 !== this.rotation &&
                      0 !== this.rotation &&
                      (n.rotation = this.rotation),
                    !0 === this.polygonOffset && (n.polygonOffset = !0),
                    0 !== this.polygonOffsetFactor &&
                      (n.polygonOffsetFactor = this.polygonOffsetFactor),
                    0 !== this.polygonOffsetUnits &&
                      (n.polygonOffsetUnits = this.polygonOffsetUnits),
                    void 0 !== this.linewidth &&
                      1 !== this.linewidth &&
                      (n.linewidth = this.linewidth),
                    void 0 !== this.dashSize && (n.dashSize = this.dashSize),
                    void 0 !== this.gapSize && (n.gapSize = this.gapSize),
                    void 0 !== this.scale && (n.scale = this.scale),
                    !0 === this.dithering && (n.dithering = !0),
                    this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
                    !0 === this.alphaToCoverage &&
                      (n.alphaToCoverage = this.alphaToCoverage),
                    !0 === this.premultipliedAlpha &&
                      (n.premultipliedAlpha = this.premultipliedAlpha),
                    !0 === this.wireframe && (n.wireframe = this.wireframe),
                    this.wireframeLinewidth > 1 &&
                      (n.wireframeLinewidth = this.wireframeLinewidth),
                    "round" !== this.wireframeLinecap &&
                      (n.wireframeLinecap = this.wireframeLinecap),
                    "round" !== this.wireframeLinejoin &&
                      (n.wireframeLinejoin = this.wireframeLinejoin),
                    !0 === this.flatShading &&
                      (n.flatShading = this.flatShading),
                    !1 === this.visible && (n.visible = !1),
                    !1 === this.toneMapped && (n.toneMapped = !1),
                    "{}" !== JSON.stringify(this.userData) &&
                      (n.userData = this.userData),
                    t)
                  ) {
                    var i = r(e.textures),
                      a = r(e.images);
                    i.length > 0 && (n.textures = i),
                      a.length > 0 && (n.images = a);
                  }
                  return n;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.name = e.name),
                    (this.fog = e.fog),
                    (this.blending = e.blending),
                    (this.side = e.side),
                    (this.vertexColors = e.vertexColors),
                    (this.opacity = e.opacity),
                    (this.transparent = e.transparent),
                    (this.blendSrc = e.blendSrc),
                    (this.blendDst = e.blendDst),
                    (this.blendEquation = e.blendEquation),
                    (this.blendSrcAlpha = e.blendSrcAlpha),
                    (this.blendDstAlpha = e.blendDstAlpha),
                    (this.blendEquationAlpha = e.blendEquationAlpha),
                    (this.depthFunc = e.depthFunc),
                    (this.depthTest = e.depthTest),
                    (this.depthWrite = e.depthWrite),
                    (this.stencilWriteMask = e.stencilWriteMask),
                    (this.stencilFunc = e.stencilFunc),
                    (this.stencilRef = e.stencilRef),
                    (this.stencilFuncMask = e.stencilFuncMask),
                    (this.stencilFail = e.stencilFail),
                    (this.stencilZFail = e.stencilZFail),
                    (this.stencilZPass = e.stencilZPass),
                    (this.stencilWrite = e.stencilWrite);
                  var t = e.clippingPlanes,
                    n = null;
                  if (null !== t) {
                    var r = t.length;
                    n = new Array(r);
                    for (var i = 0; i !== r; ++i) n[i] = t[i].clone();
                  }
                  return (
                    (this.clippingPlanes = n),
                    (this.clipIntersection = e.clipIntersection),
                    (this.clipShadows = e.clipShadows),
                    (this.shadowSide = e.shadowSide),
                    (this.colorWrite = e.colorWrite),
                    (this.precision = e.precision),
                    (this.polygonOffset = e.polygonOffset),
                    (this.polygonOffsetFactor = e.polygonOffsetFactor),
                    (this.polygonOffsetUnits = e.polygonOffsetUnits),
                    (this.dithering = e.dithering),
                    (this.alphaTest = e.alphaTest),
                    (this.alphaToCoverage = e.alphaToCoverage),
                    (this.premultipliedAlpha = e.premultipliedAlpha),
                    (this.visible = e.visible),
                    (this.toneMapped = e.toneMapped),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
            ]),
            n
          );
        })(Ts);
      (Ou.prototype.isMaterial = !0),
        (Ou.fromType = function () {
          return null;
        });
      var zu = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).type = "MeshBasicMaterial"),
            (r.color = new il(16777215)),
            (r.map = null),
            (r.lightMap = null),
            (r.lightMapIntensity = 1),
            (r.aoMap = null),
            (r.aoMapIntensity = 1),
            (r.specularMap = null),
            (r.alphaMap = null),
            (r.envMap = null),
            (r.combine = oa),
            (r.reflectivity = 1),
            (r.refractionRatio = 0.98),
            (r.wireframe = !1),
            (r.wireframeLinewidth = 1),
            (r.wireframeLinecap = "round"),
            (r.wireframeLinejoin = "round"),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.color.copy(e.color),
                  (this.map = e.map),
                  (this.lightMap = e.lightMap),
                  (this.lightMapIntensity = e.lightMapIntensity),
                  (this.aoMap = e.aoMap),
                  (this.aoMapIntensity = e.aoMapIntensity),
                  (this.specularMap = e.specularMap),
                  (this.alphaMap = e.alphaMap),
                  (this.envMap = e.envMap),
                  (this.combine = e.combine),
                  (this.reflectivity = e.reflectivity),
                  (this.refractionRatio = e.refractionRatio),
                  (this.wireframe = e.wireframe),
                  (this.wireframeLinewidth = e.wireframeLinewidth),
                  (this.wireframeLinecap = e.wireframeLinecap),
                  (this.wireframeLinejoin = e.wireframeLinejoin),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      zu.prototype.isMeshBasicMaterial = !0;
      var Du = new yl(),
        Iu = new Us(),
        Nu = (function () {
          function e(t, n, r) {
            if ((Kr(this, e), Array.isArray(t)))
              throw new TypeError(
                "THREE.BufferAttribute: array should be a Typed Array."
              );
            (this.name = ""),
              (this.array = t),
              (this.itemSize = n),
              (this.count = void 0 !== t ? t.length / n : 0),
              (this.normalized = !0 === r),
              (this.usage = vs),
              (this.updateRange = { offset: 0, count: -1 }),
              (this.version = 0);
          }
          return (
            ti(e, [
              { key: "onUploadCallback", value: function () {} },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
              {
                key: "setUsage",
                value: function (e) {
                  return (this.usage = e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.name = e.name),
                    (this.array = new e.array.constructor(e.array)),
                    (this.itemSize = e.itemSize),
                    (this.count = e.count),
                    (this.normalized = e.normalized),
                    (this.usage = e.usage),
                    this
                  );
                },
              },
              {
                key: "copyAt",
                value: function (e, t, n) {
                  (e *= this.itemSize), (n *= t.itemSize);
                  for (var r = 0, i = this.itemSize; r < i; r++)
                    this.array[e + r] = t.array[n + r];
                  return this;
                },
              },
              {
                key: "copyArray",
                value: function (e) {
                  return this.array.set(e), this;
                },
              },
              {
                key: "copyColorsArray",
                value: function (e) {
                  for (
                    var t = this.array, n = 0, r = 0, i = e.length;
                    r < i;
                    r++
                  ) {
                    var a = e[r];
                    void 0 === a &&
                      (console.warn(
                        "THREE.BufferAttribute.copyColorsArray(): color is undefined",
                        r
                      ),
                      (a = new il())),
                      (t[n++] = a.r),
                      (t[n++] = a.g),
                      (t[n++] = a.b);
                  }
                  return this;
                },
              },
              {
                key: "copyVector2sArray",
                value: function (e) {
                  for (
                    var t = this.array, n = 0, r = 0, i = e.length;
                    r < i;
                    r++
                  ) {
                    var a = e[r];
                    void 0 === a &&
                      (console.warn(
                        "THREE.BufferAttribute.copyVector2sArray(): vector is undefined",
                        r
                      ),
                      (a = new Us())),
                      (t[n++] = a.x),
                      (t[n++] = a.y);
                  }
                  return this;
                },
              },
              {
                key: "copyVector3sArray",
                value: function (e) {
                  for (
                    var t = this.array, n = 0, r = 0, i = e.length;
                    r < i;
                    r++
                  ) {
                    var a = e[r];
                    void 0 === a &&
                      (console.warn(
                        "THREE.BufferAttribute.copyVector3sArray(): vector is undefined",
                        r
                      ),
                      (a = new yl())),
                      (t[n++] = a.x),
                      (t[n++] = a.y),
                      (t[n++] = a.z);
                  }
                  return this;
                },
              },
              {
                key: "copyVector4sArray",
                value: function (e) {
                  for (
                    var t = this.array, n = 0, r = 0, i = e.length;
                    r < i;
                    r++
                  ) {
                    var a = e[r];
                    void 0 === a &&
                      (console.warn(
                        "THREE.BufferAttribute.copyVector4sArray(): vector is undefined",
                        r
                      ),
                      (a = new cl())),
                      (t[n++] = a.x),
                      (t[n++] = a.y),
                      (t[n++] = a.z),
                      (t[n++] = a.w);
                  }
                  return this;
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  if (2 === this.itemSize)
                    for (var t = 0, n = this.count; t < n; t++)
                      Iu.fromBufferAttribute(this, t),
                        Iu.applyMatrix3(e),
                        this.setXY(t, Iu.x, Iu.y);
                  else if (3 === this.itemSize)
                    for (var r = 0, i = this.count; r < i; r++)
                      Du.fromBufferAttribute(this, r),
                        Du.applyMatrix3(e),
                        this.setXYZ(r, Du.x, Du.y, Du.z);
                  return this;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Du.fromBufferAttribute(this, t),
                      Du.applyMatrix4(e),
                      this.setXYZ(t, Du.x, Du.y, Du.z);
                  return this;
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Du.fromBufferAttribute(this, t),
                      Du.applyNormalMatrix(e),
                      this.setXYZ(t, Du.x, Du.y, Du.z);
                  return this;
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Du.fromBufferAttribute(this, t),
                      Du.transformDirection(e),
                      this.setXYZ(t, Du.x, Du.y, Du.z);
                  return this;
                },
              },
              {
                key: "set",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return this.array.set(e, t), this;
                },
              },
              {
                key: "getX",
                value: function (e) {
                  return this.array[e * this.itemSize];
                },
              },
              {
                key: "setX",
                value: function (e, t) {
                  return (this.array[e * this.itemSize] = t), this;
                },
              },
              {
                key: "getY",
                value: function (e) {
                  return this.array[e * this.itemSize + 1];
                },
              },
              {
                key: "setY",
                value: function (e, t) {
                  return (this.array[e * this.itemSize + 1] = t), this;
                },
              },
              {
                key: "getZ",
                value: function (e) {
                  return this.array[e * this.itemSize + 2];
                },
              },
              {
                key: "setZ",
                value: function (e, t) {
                  return (this.array[e * this.itemSize + 2] = t), this;
                },
              },
              {
                key: "getW",
                value: function (e) {
                  return this.array[e * this.itemSize + 3];
                },
              },
              {
                key: "setW",
                value: function (e, t) {
                  return (this.array[e * this.itemSize + 3] = t), this;
                },
              },
              {
                key: "setXY",
                value: function (e, t, n) {
                  return (
                    (e *= this.itemSize),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    this
                  );
                },
              },
              {
                key: "setXYZ",
                value: function (e, t, n, r) {
                  return (
                    (e *= this.itemSize),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    (this.array[e + 2] = r),
                    this
                  );
                },
              },
              {
                key: "setXYZW",
                value: function (e, t, n, r, i) {
                  return (
                    (e *= this.itemSize),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    (this.array[e + 2] = r),
                    (this.array[e + 3] = i),
                    this
                  );
                },
              },
              {
                key: "onUpload",
                value: function (e) {
                  return (this.onUploadCallback = e), this;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.array, this.itemSize).copy(
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    itemSize: this.itemSize,
                    type: this.array.constructor.name,
                    array: Array.prototype.slice.call(this.array),
                    normalized: this.normalized,
                  };
                  return (
                    "" !== this.name && (e.name = this.name),
                    this.usage !== vs && (e.usage = this.usage),
                    (0 === this.updateRange.offset &&
                      -1 === this.updateRange.count) ||
                      (e.updateRange = this.updateRange),
                    e
                  );
                },
              },
            ]),
            e
          );
        })();
      Nu.prototype.isBufferAttribute = !0;
      var Fu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Int8Array(e), r, i);
          }
          return ti(n);
        })(Nu),
        Bu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Uint8Array(e), r, i);
          }
          return ti(n);
        })(Nu),
        Hu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Uint8ClampedArray(e), r, i);
          }
          return ti(n);
        })(Nu),
        Uu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Int16Array(e), r, i);
          }
          return ti(n);
        })(Nu),
        ju = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Uint16Array(e), r, i);
          }
          return ti(n);
        })(Nu),
        Gu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Int32Array(e), r, i);
          }
          return ti(n);
        })(Nu),
        Wu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Uint32Array(e), r, i);
          }
          return ti(n);
        })(Nu),
        Vu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Uint16Array(e), r, i);
          }
          return ti(n);
        })(Nu);
      Vu.prototype.isFloat16BufferAttribute = !0;
      var qu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Float32Array(e), r, i);
          }
          return ti(n);
        })(Nu),
        Xu = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return Kr(this, n), t.call(this, new Float64Array(e), r, i);
          }
          return ti(n);
        })(Nu),
        Yu = 0,
        Ju = new Jl(),
        $u = new xu(),
        Qu = new yl(),
        Zu = new wl(),
        Ku = new wl(),
        ec = new yl(),
        tc = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e;
            return (
              Kr(this, n),
              (e = t.call(this)),
              Object.defineProperty(ai(e), "id", { value: Yu++ }),
              (e.uuid = Os()),
              (e.name = ""),
              (e.type = "BufferGeometry"),
              (e.index = null),
              (e.attributes = {}),
              (e.morphAttributes = {}),
              (e.morphTargetsRelative = !1),
              (e.groups = []),
              (e.boundingBox = null),
              (e.boundingSphere = null),
              (e.drawRange = { start: 0, count: 1 / 0 }),
              (e.userData = {}),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "getIndex",
                value: function () {
                  return this.index;
                },
              },
              {
                key: "setIndex",
                value: function (e) {
                  return (
                    Array.isArray(e)
                      ? (this.index = new (Gs(e) ? Wu : ju)(e, 1))
                      : (this.index = e),
                    this
                  );
                },
              },
              {
                key: "getAttribute",
                value: function (e) {
                  return this.attributes[e];
                },
              },
              {
                key: "setAttribute",
                value: function (e, t) {
                  return (this.attributes[e] = t), this;
                },
              },
              {
                key: "deleteAttribute",
                value: function (e) {
                  return delete this.attributes[e], this;
                },
              },
              {
                key: "hasAttribute",
                value: function (e) {
                  return void 0 !== this.attributes[e];
                },
              },
              {
                key: "addGroup",
                value: function (e, t) {
                  var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0;
                  this.groups.push({ start: e, count: t, materialIndex: n });
                },
              },
              {
                key: "clearGroups",
                value: function () {
                  this.groups = [];
                },
              },
              {
                key: "setDrawRange",
                value: function (e, t) {
                  (this.drawRange.start = e), (this.drawRange.count = t);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.attributes.position;
                  void 0 !== t && (t.applyMatrix4(e), (t.needsUpdate = !0));
                  var n = this.attributes.normal;
                  if (void 0 !== n) {
                    var r = new js().getNormalMatrix(e);
                    n.applyNormalMatrix(r), (n.needsUpdate = !0);
                  }
                  var i = this.attributes.tangent;
                  return (
                    void 0 !== i &&
                      (i.transformDirection(e), (i.needsUpdate = !0)),
                    null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere &&
                      this.computeBoundingSphere(),
                    this
                  );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  return (
                    Ju.makeRotationFromQuaternion(e),
                    this.applyMatrix4(Ju),
                    this
                  );
                },
              },
              {
                key: "rotateX",
                value: function (e) {
                  return Ju.makeRotationX(e), this.applyMatrix4(Ju), this;
                },
              },
              {
                key: "rotateY",
                value: function (e) {
                  return Ju.makeRotationY(e), this.applyMatrix4(Ju), this;
                },
              },
              {
                key: "rotateZ",
                value: function (e) {
                  return Ju.makeRotationZ(e), this.applyMatrix4(Ju), this;
                },
              },
              {
                key: "translate",
                value: function (e, t, n) {
                  return (
                    Ju.makeTranslation(e, t, n), this.applyMatrix4(Ju), this
                  );
                },
              },
              {
                key: "scale",
                value: function (e, t, n) {
                  return Ju.makeScale(e, t, n), this.applyMatrix4(Ju), this;
                },
              },
              {
                key: "lookAt",
                value: function (e) {
                  return (
                    $u.lookAt(e),
                    $u.updateMatrix(),
                    this.applyMatrix4($u.matrix),
                    this
                  );
                },
              },
              {
                key: "center",
                value: function () {
                  return (
                    this.computeBoundingBox(),
                    this.boundingBox.getCenter(Qu).negate(),
                    this.translate(Qu.x, Qu.y, Qu.z),
                    this
                  );
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  for (var t = [], n = 0, r = e.length; n < r; n++) {
                    var i = e[n];
                    t.push(i.x, i.y, i.z || 0);
                  }
                  return this.setAttribute("position", new qu(t, 3)), this;
                },
              },
              {
                key: "computeBoundingBox",
                value: function () {
                  null === this.boundingBox && (this.boundingBox = new wl());
                  var e = this.attributes.position,
                    t = this.morphAttributes.position;
                  if (e && e.isGLBufferAttribute)
                    return (
                      console.error(
                        'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
                        this
                      ),
                      void this.boundingBox.set(
                        new yl(-1 / 0, -1 / 0, -1 / 0),
                        new yl(1 / 0, 1 / 0, 1 / 0)
                      )
                    );
                  if (void 0 !== e) {
                    if ((this.boundingBox.setFromBufferAttribute(e), t))
                      for (var n = 0, r = t.length; n < r; n++) {
                        var i = t[n];
                        Zu.setFromBufferAttribute(i),
                          this.morphTargetsRelative
                            ? (ec.addVectors(this.boundingBox.min, Zu.min),
                              this.boundingBox.expandByPoint(ec),
                              ec.addVectors(this.boundingBox.max, Zu.max),
                              this.boundingBox.expandByPoint(ec))
                            : (this.boundingBox.expandByPoint(Zu.min),
                              this.boundingBox.expandByPoint(Zu.max));
                      }
                  } else this.boundingBox.makeEmpty();
                  (isNaN(this.boundingBox.min.x) ||
                    isNaN(this.boundingBox.min.y) ||
                    isNaN(this.boundingBox.min.z)) &&
                    console.error(
                      'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
                      this
                    );
                },
              },
              {
                key: "computeBoundingSphere",
                value: function () {
                  null === this.boundingSphere &&
                    (this.boundingSphere = new Hl());
                  var e = this.attributes.position,
                    t = this.morphAttributes.position;
                  if (e && e.isGLBufferAttribute)
                    return (
                      console.error(
                        'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
                        this
                      ),
                      void this.boundingSphere.set(new yl(), 1 / 0)
                    );
                  if (e) {
                    var n = this.boundingSphere.center;
                    if ((Zu.setFromBufferAttribute(e), t))
                      for (var r = 0, i = t.length; r < i; r++) {
                        var a = t[r];
                        Ku.setFromBufferAttribute(a),
                          this.morphTargetsRelative
                            ? (ec.addVectors(Zu.min, Ku.min),
                              Zu.expandByPoint(ec),
                              ec.addVectors(Zu.max, Ku.max),
                              Zu.expandByPoint(ec))
                            : (Zu.expandByPoint(Ku.min),
                              Zu.expandByPoint(Ku.max));
                      }
                    Zu.getCenter(n);
                    for (var o = 0, s = 0, l = e.count; s < l; s++)
                      ec.fromBufferAttribute(e, s),
                        (o = Math.max(o, n.distanceToSquared(ec)));
                    if (t)
                      for (var u = 0, c = t.length; u < c; u++)
                        for (
                          var f = t[u],
                            d = this.morphTargetsRelative,
                            h = 0,
                            p = f.count;
                          h < p;
                          h++
                        )
                          ec.fromBufferAttribute(f, h),
                            d && (Qu.fromBufferAttribute(e, h), ec.add(Qu)),
                            (o = Math.max(o, n.distanceToSquared(ec)));
                    (this.boundingSphere.radius = Math.sqrt(o)),
                      isNaN(this.boundingSphere.radius) &&
                        console.error(
                          'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                          this
                        );
                  }
                },
              },
              {
                key: "computeTangents",
                value: function () {
                  var e = this.index,
                    t = this.attributes;
                  if (
                    null !== e &&
                    void 0 !== t.position &&
                    void 0 !== t.normal &&
                    void 0 !== t.uv
                  ) {
                    var n = e.array,
                      r = t.position.array,
                      i = t.normal.array,
                      a = t.uv.array,
                      o = r.length / 3;
                    !1 === this.hasAttribute("tangent") &&
                      this.setAttribute(
                        "tangent",
                        new Nu(new Float32Array(4 * o), 4)
                      );
                    for (
                      var s = this.getAttribute("tangent").array,
                        l = [],
                        u = [],
                        c = 0;
                      c < o;
                      c++
                    )
                      (l[c] = new yl()), (u[c] = new yl());
                    var f = new yl(),
                      d = new yl(),
                      h = new yl(),
                      p = new Us(),
                      v = new Us(),
                      m = new Us(),
                      g = new yl(),
                      y = new yl(),
                      b = this.groups;
                    0 === b.length && (b = [{ start: 0, count: n.length }]);
                    for (var x = 0, w = b.length; x < w; ++x)
                      for (
                        var _ = b[x], S = _.start, M = S, E = S + _.count;
                        M < E;
                        M += 3
                      )
                        I(n[M + 0], n[M + 1], n[M + 2]);
                    for (
                      var k = new yl(),
                        T = new yl(),
                        C = new yl(),
                        A = new yl(),
                        P = 0,
                        L = b.length;
                      P < L;
                      ++P
                    )
                      for (
                        var R = b[P], O = R.start, z = O, D = O + R.count;
                        z < D;
                        z += 3
                      )
                        N(n[z + 0]), N(n[z + 1]), N(n[z + 2]);
                  } else
                    console.error(
                      "THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)"
                    );
                  function I(e, t, n) {
                    f.fromArray(r, 3 * e),
                      d.fromArray(r, 3 * t),
                      h.fromArray(r, 3 * n),
                      p.fromArray(a, 2 * e),
                      v.fromArray(a, 2 * t),
                      m.fromArray(a, 2 * n),
                      d.sub(f),
                      h.sub(f),
                      v.sub(p),
                      m.sub(p);
                    var i = 1 / (v.x * m.y - m.x * v.y);
                    isFinite(i) &&
                      (g
                        .copy(d)
                        .multiplyScalar(m.y)
                        .addScaledVector(h, -v.y)
                        .multiplyScalar(i),
                      y
                        .copy(h)
                        .multiplyScalar(v.x)
                        .addScaledVector(d, -m.x)
                        .multiplyScalar(i),
                      l[e].add(g),
                      l[t].add(g),
                      l[n].add(g),
                      u[e].add(y),
                      u[t].add(y),
                      u[n].add(y));
                  }
                  function N(e) {
                    C.fromArray(i, 3 * e), A.copy(C);
                    var t = l[e];
                    k.copy(t),
                      k.sub(C.multiplyScalar(C.dot(t))).normalize(),
                      T.crossVectors(A, t);
                    var n = T.dot(u[e]) < 0 ? -1 : 1;
                    (s[4 * e] = k.x),
                      (s[4 * e + 1] = k.y),
                      (s[4 * e + 2] = k.z),
                      (s[4 * e + 3] = n);
                  }
                },
              },
              {
                key: "computeVertexNormals",
                value: function () {
                  var e = this.index,
                    t = this.getAttribute("position");
                  if (void 0 !== t) {
                    var n = this.getAttribute("normal");
                    if (void 0 === n)
                      (n = new Nu(new Float32Array(3 * t.count), 3)),
                        this.setAttribute("normal", n);
                    else
                      for (var r = 0, i = n.count; r < i; r++)
                        n.setXYZ(r, 0, 0, 0);
                    var a = new yl(),
                      o = new yl(),
                      s = new yl(),
                      l = new yl(),
                      u = new yl(),
                      c = new yl(),
                      f = new yl(),
                      d = new yl();
                    if (e)
                      for (var h = 0, p = e.count; h < p; h += 3) {
                        var v = e.getX(h + 0),
                          m = e.getX(h + 1),
                          g = e.getX(h + 2);
                        a.fromBufferAttribute(t, v),
                          o.fromBufferAttribute(t, m),
                          s.fromBufferAttribute(t, g),
                          f.subVectors(s, o),
                          d.subVectors(a, o),
                          f.cross(d),
                          l.fromBufferAttribute(n, v),
                          u.fromBufferAttribute(n, m),
                          c.fromBufferAttribute(n, g),
                          l.add(f),
                          u.add(f),
                          c.add(f),
                          n.setXYZ(v, l.x, l.y, l.z),
                          n.setXYZ(m, u.x, u.y, u.z),
                          n.setXYZ(g, c.x, c.y, c.z);
                      }
                    else
                      for (var y = 0, b = t.count; y < b; y += 3)
                        a.fromBufferAttribute(t, y + 0),
                          o.fromBufferAttribute(t, y + 1),
                          s.fromBufferAttribute(t, y + 2),
                          f.subVectors(s, o),
                          d.subVectors(a, o),
                          f.cross(d),
                          n.setXYZ(y + 0, f.x, f.y, f.z),
                          n.setXYZ(y + 1, f.x, f.y, f.z),
                          n.setXYZ(y + 2, f.x, f.y, f.z);
                    this.normalizeNormals(), (n.needsUpdate = !0);
                  }
                },
              },
              {
                key: "merge",
                value: function (e, t) {
                  if (e && e.isBufferGeometry) {
                    void 0 === t &&
                      ((t = 0),
                      console.warn(
                        "THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."
                      ));
                    var n = this.attributes;
                    for (var r in n)
                      if (void 0 !== e.attributes[r])
                        for (
                          var i = n[r].array,
                            a = e.attributes[r],
                            o = a.array,
                            s = a.itemSize * t,
                            l = Math.min(o.length, i.length - s),
                            u = 0,
                            c = s;
                          u < l;
                          u++, c++
                        )
                          i[c] = o[u];
                    return this;
                  }
                  console.error(
                    "THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",
                    e
                  );
                },
              },
              {
                key: "normalizeNormals",
                value: function () {
                  for (
                    var e = this.attributes.normal, t = 0, n = e.count;
                    t < n;
                    t++
                  )
                    ec.fromBufferAttribute(e, t),
                      ec.normalize(),
                      e.setXYZ(t, ec.x, ec.y, ec.z);
                },
              },
              {
                key: "toNonIndexed",
                value: function () {
                  function e(e, t) {
                    for (
                      var n = e.array,
                        r = e.itemSize,
                        i = e.normalized,
                        a = new n.constructor(t.length * r),
                        o = 0,
                        s = 0,
                        l = 0,
                        u = t.length;
                      l < u;
                      l++
                    ) {
                      o = e.isInterleavedBufferAttribute
                        ? t[l] * e.data.stride + e.offset
                        : t[l] * r;
                      for (var c = 0; c < r; c++) a[s++] = n[o++];
                    }
                    return new Nu(a, r, i);
                  }
                  if (null === this.index)
                    return (
                      console.warn(
                        "THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."
                      ),
                      this
                    );
                  var t = new n(),
                    r = this.index.array,
                    i = this.attributes;
                  for (var a in i) {
                    var o = e(i[a], r);
                    t.setAttribute(a, o);
                  }
                  var s = this.morphAttributes;
                  for (var l in s) {
                    for (
                      var u = [], c = s[l], f = 0, d = c.length;
                      f < d;
                      f++
                    ) {
                      var h = e(c[f], r);
                      u.push(h);
                    }
                    t.morphAttributes[l] = u;
                  }
                  t.morphTargetsRelative = this.morphTargetsRelative;
                  for (var p = this.groups, v = 0, m = p.length; v < m; v++) {
                    var g = p[v];
                    t.addGroup(g.start, g.count, g.materialIndex);
                  }
                  return t;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.5,
                      type: "BufferGeometry",
                      generator: "BufferGeometry.toJSON",
                    },
                  };
                  if (
                    ((e.uuid = this.uuid),
                    (e.type = this.type),
                    "" !== this.name && (e.name = this.name),
                    Object.keys(this.userData).length > 0 &&
                      (e.userData = this.userData),
                    void 0 !== this.parameters)
                  ) {
                    var t = this.parameters;
                    for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
                    return e;
                  }
                  e.data = { attributes: {} };
                  var r = this.index;
                  null !== r &&
                    (e.data.index = {
                      type: r.array.constructor.name,
                      array: Array.prototype.slice.call(r.array),
                    });
                  var i = this.attributes;
                  for (var a in i) {
                    var o = i[a];
                    e.data.attributes[a] = o.toJSON(e.data);
                  }
                  var s = {},
                    l = !1;
                  for (var u in this.morphAttributes) {
                    for (
                      var c = this.morphAttributes[u],
                        f = [],
                        d = 0,
                        h = c.length;
                      d < h;
                      d++
                    ) {
                      var p = c[d];
                      f.push(p.toJSON(e.data));
                    }
                    f.length > 0 && ((s[u] = f), (l = !0));
                  }
                  l &&
                    ((e.data.morphAttributes = s),
                    (e.data.morphTargetsRelative = this.morphTargetsRelative));
                  var v = this.groups;
                  v.length > 0 &&
                    (e.data.groups = JSON.parse(JSON.stringify(v)));
                  var m = this.boundingSphere;
                  return (
                    null !== m &&
                      (e.data.boundingSphere = {
                        center: m.center.toArray(),
                        radius: m.radius,
                      }),
                    e
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.index = null),
                    (this.attributes = {}),
                    (this.morphAttributes = {}),
                    (this.groups = []),
                    (this.boundingBox = null),
                    (this.boundingSphere = null);
                  var t = {};
                  this.name = e.name;
                  var n = e.index;
                  null !== n && this.setIndex(n.clone(t));
                  var r = e.attributes;
                  for (var i in r) {
                    var a = r[i];
                    this.setAttribute(i, a.clone(t));
                  }
                  var o = e.morphAttributes;
                  for (var s in o) {
                    for (var l = [], u = o[s], c = 0, f = u.length; c < f; c++)
                      l.push(u[c].clone(t));
                    this.morphAttributes[s] = l;
                  }
                  this.morphTargetsRelative = e.morphTargetsRelative;
                  for (var d = e.groups, h = 0, p = d.length; h < p; h++) {
                    var v = d[h];
                    this.addGroup(v.start, v.count, v.materialIndex);
                  }
                  var m = e.boundingBox;
                  null !== m && (this.boundingBox = m.clone());
                  var g = e.boundingSphere;
                  return (
                    null !== g && (this.boundingSphere = g.clone()),
                    (this.drawRange.start = e.drawRange.start),
                    (this.drawRange.count = e.drawRange.count),
                    (this.userData = e.userData),
                    void 0 !== e.parameters &&
                      (this.parameters = Object.assign({}, e.parameters)),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            n
          );
        })(Ts);
      tc.prototype.isBufferGeometry = !0;
      var nc = new Jl(),
        rc = new Yl(),
        ic = new Hl(),
        ac = new yl(),
        oc = new yl(),
        sc = new yl(),
        lc = new yl(),
        uc = new yl(),
        cc = new yl(),
        fc = new yl(),
        dc = new yl(),
        hc = new yl(),
        pc = new Us(),
        vc = new Us(),
        mc = new Us(),
        gc = new yl(),
        yc = new yl(),
        bc = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new tc(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new zu();
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "Mesh"),
              (e.geometry = r),
              (e.material = i),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    void 0 !== e.morphTargetInfluences &&
                      (this.morphTargetInfluences =
                        e.morphTargetInfluences.slice()),
                    void 0 !== e.morphTargetDictionary &&
                      (this.morphTargetDictionary = Object.assign(
                        {},
                        e.morphTargetDictionary
                      )),
                    (this.material = e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry;
                  if (e.isBufferGeometry) {
                    var t = e.morphAttributes,
                      n = Object.keys(t);
                    if (n.length > 0) {
                      var r = t[n[0]];
                      if (void 0 !== r) {
                        (this.morphTargetInfluences = []),
                          (this.morphTargetDictionary = {});
                        for (var i = 0, a = r.length; i < a; i++) {
                          var o = r[i].name || String(i);
                          this.morphTargetInfluences.push(0),
                            (this.morphTargetDictionary[o] = i);
                        }
                      }
                    }
                  } else {
                    var s = e.morphTargets;
                    void 0 !== s &&
                      s.length > 0 &&
                      console.error(
                        "THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."
                      );
                  }
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n,
                    r = this.geometry,
                    i = this.material,
                    a = this.matrixWorld;
                  if (
                    void 0 !== i &&
                    (null === r.boundingSphere && r.computeBoundingSphere(),
                    ic.copy(r.boundingSphere),
                    ic.applyMatrix4(a),
                    !1 !== e.ray.intersectsSphere(ic) &&
                      (nc.copy(a).invert(),
                      rc.copy(e.ray).applyMatrix4(nc),
                      null === r.boundingBox ||
                        !1 !== rc.intersectsBox(r.boundingBox)))
                  )
                    if (r.isBufferGeometry) {
                      var o = r.index,
                        s = r.attributes.position,
                        l = r.morphAttributes.position,
                        u = r.morphTargetsRelative,
                        c = r.attributes.uv,
                        f = r.attributes.uv2,
                        d = r.groups,
                        h = r.drawRange;
                      if (null !== o)
                        if (Array.isArray(i))
                          for (var p = 0, v = d.length; p < v; p++)
                            for (
                              var m = d[p],
                                g = i[m.materialIndex],
                                y = Math.max(m.start, h.start),
                                b = Math.min(
                                  o.count,
                                  Math.min(m.start + m.count, h.start + h.count)
                                );
                              y < b;
                              y += 3
                            ) {
                              var x = o.getX(y),
                                w = o.getX(y + 1),
                                _ = o.getX(y + 2);
                              (n = xc(
                                this,
                                g,
                                e,
                                rc,
                                s,
                                l,
                                u,
                                c,
                                f,
                                x,
                                w,
                                _
                              )) &&
                                ((n.faceIndex = Math.floor(y / 3)),
                                (n.face.materialIndex = m.materialIndex),
                                t.push(n));
                            }
                        else
                          for (
                            var S = Math.max(0, h.start),
                              M = Math.min(o.count, h.start + h.count);
                            S < M;
                            S += 3
                          ) {
                            var E = o.getX(S),
                              k = o.getX(S + 1),
                              T = o.getX(S + 2);
                            (n = xc(this, i, e, rc, s, l, u, c, f, E, k, T)) &&
                              ((n.faceIndex = Math.floor(S / 3)), t.push(n));
                          }
                      else if (void 0 !== s)
                        if (Array.isArray(i))
                          for (var C = 0, A = d.length; C < A; C++)
                            for (
                              var P = d[C],
                                L = i[P.materialIndex],
                                R = Math.max(P.start, h.start),
                                O = Math.min(
                                  s.count,
                                  Math.min(P.start + P.count, h.start + h.count)
                                );
                              R < O;
                              R += 3
                            ) {
                              (n = xc(
                                this,
                                L,
                                e,
                                rc,
                                s,
                                l,
                                u,
                                c,
                                f,
                                R,
                                R + 1,
                                R + 2
                              )) &&
                                ((n.faceIndex = Math.floor(R / 3)),
                                (n.face.materialIndex = P.materialIndex),
                                t.push(n));
                            }
                        else
                          for (
                            var z = Math.max(0, h.start),
                              D = Math.min(s.count, h.start + h.count);
                            z < D;
                            z += 3
                          ) {
                            (n = xc(
                              this,
                              i,
                              e,
                              rc,
                              s,
                              l,
                              u,
                              c,
                              f,
                              z,
                              z + 1,
                              z + 2
                            )) &&
                              ((n.faceIndex = Math.floor(z / 3)), t.push(n));
                          }
                    } else
                      r.isGeometry &&
                        console.error(
                          "THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."
                        );
                },
              },
            ]),
            n
          );
        })(xu);
      function xc(e, t, n, r, i, a, o, s, l, u, c, f) {
        ac.fromBufferAttribute(i, u),
          oc.fromBufferAttribute(i, c),
          sc.fromBufferAttribute(i, f);
        var d = e.morphTargetInfluences;
        if (a && d) {
          fc.set(0, 0, 0), dc.set(0, 0, 0), hc.set(0, 0, 0);
          for (var h = 0, p = a.length; h < p; h++) {
            var v = d[h],
              m = a[h];
            0 !== v &&
              (lc.fromBufferAttribute(m, u),
              uc.fromBufferAttribute(m, c),
              cc.fromBufferAttribute(m, f),
              o
                ? (fc.addScaledVector(lc, v),
                  dc.addScaledVector(uc, v),
                  hc.addScaledVector(cc, v))
                : (fc.addScaledVector(lc.sub(ac), v),
                  dc.addScaledVector(uc.sub(oc), v),
                  hc.addScaledVector(cc.sub(sc), v)));
          }
          ac.add(fc), oc.add(dc), sc.add(hc);
        }
        e.isSkinnedMesh &&
          (e.boneTransform(u, ac),
          e.boneTransform(c, oc),
          e.boneTransform(f, sc));
        var g = (function (e, t, n, r, i, a, o, s) {
          if (
            null ===
            (t.side === ki
              ? r.intersectTriangle(o, a, i, !0, s)
              : r.intersectTriangle(i, a, o, t.side !== Ti, s))
          )
            return null;
          yc.copy(s), yc.applyMatrix4(e.matrixWorld);
          var l = n.ray.origin.distanceTo(yc);
          return l < n.near || l > n.far
            ? null
            : { distance: l, point: yc.clone(), object: e };
        })(e, t, n, r, ac, oc, sc, gc);
        if (g) {
          s &&
            (pc.fromBufferAttribute(s, u),
            vc.fromBufferAttribute(s, c),
            mc.fromBufferAttribute(s, f),
            (g.uv = Lu.getUV(gc, ac, oc, sc, pc, vc, mc, new Us()))),
            l &&
              (pc.fromBufferAttribute(l, u),
              vc.fromBufferAttribute(l, c),
              mc.fromBufferAttribute(l, f),
              (g.uv2 = Lu.getUV(gc, ac, oc, sc, pc, vc, mc, new Us())));
          var y = { a: u, b: c, c: f, normal: new yl(), materialIndex: 0 };
          Lu.getNormal(ac, oc, sc, y.normal), (g.face = y);
        }
        return g;
      }
      bc.prototype.isMesh = !0;
      var wc = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 1,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1,
            s =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 1,
            l =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : 1;
          Kr(this, n),
            ((e = t.call(this)).type = "BoxGeometry"),
            (e.parameters = {
              width: r,
              height: i,
              depth: a,
              widthSegments: o,
              heightSegments: s,
              depthSegments: l,
            });
          var u = ai(e);
          (o = Math.floor(o)), (s = Math.floor(s)), (l = Math.floor(l));
          var c = [],
            f = [],
            d = [],
            h = [],
            p = 0,
            v = 0;
          function m(e, t, n, r, i, a, o, s, l, m, g) {
            for (
              var y = a / l,
                b = o / m,
                x = a / 2,
                w = o / 2,
                _ = s / 2,
                S = l + 1,
                M = m + 1,
                E = 0,
                k = 0,
                T = new yl(),
                C = 0;
              C < M;
              C++
            )
              for (var A = C * b - w, P = 0; P < S; P++) {
                var L = P * y - x;
                (T[e] = L * r),
                  (T[t] = A * i),
                  (T[n] = _),
                  f.push(T.x, T.y, T.z),
                  (T[e] = 0),
                  (T[t] = 0),
                  (T[n] = s > 0 ? 1 : -1),
                  d.push(T.x, T.y, T.z),
                  h.push(P / l),
                  h.push(1 - C / m),
                  (E += 1);
              }
            for (var R = 0; R < m; R++)
              for (var O = 0; O < l; O++) {
                var z = p + O + S * R,
                  D = p + O + S * (R + 1),
                  I = p + (O + 1) + S * (R + 1),
                  N = p + (O + 1) + S * R;
                c.push(z, D, N), c.push(D, I, N), (k += 6);
              }
            u.addGroup(v, k, g), (v += k), (p += E);
          }
          return (
            m("z", "y", "x", -1, -1, a, i, r, l, s, 0),
            m("z", "y", "x", 1, -1, a, i, -r, l, s, 1),
            m("x", "z", "y", 1, 1, r, a, i, o, l, 2),
            m("x", "z", "y", 1, -1, r, a, -i, o, l, 3),
            m("x", "y", "z", 1, -1, r, i, a, o, s, 4),
            m("x", "y", "z", -1, -1, r, i, -a, o, s, 5),
            e.setIndex(c),
            e.setAttribute("position", new qu(f, 3)),
            e.setAttribute("normal", new qu(d, 3)),
            e.setAttribute("uv", new qu(h, 2)),
            e
          );
        }
        return (
          ti(n, null, [
            {
              key: "fromJSON",
              value: function (e) {
                return new n(
                  e.width,
                  e.height,
                  e.depth,
                  e.widthSegments,
                  e.heightSegments,
                  e.depthSegments
                );
              },
            },
          ]),
          n
        );
      })(tc);
      function _c(e) {
        var t = {};
        for (var n in e)
          for (var r in ((t[n] = {}), e[n])) {
            var i = e[n][r];
            i &&
            (i.isColor ||
              i.isMatrix3 ||
              i.isMatrix4 ||
              i.isVector2 ||
              i.isVector3 ||
              i.isVector4 ||
              i.isTexture ||
              i.isQuaternion)
              ? (t[n][r] = i.clone())
              : Array.isArray(i)
              ? (t[n][r] = i.slice())
              : (t[n][r] = i);
          }
        return t;
      }
      function Sc(e) {
        for (var t = {}, n = 0; n < e.length; n++) {
          var r = _c(e[n]);
          for (var i in r) t[i] = r[i];
        }
        return t;
      }
      var Mc = { clone: _c, merge: Sc },
        Ec = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return (
              Kr(this, n),
              ((r = t.call(this)).type = "ShaderMaterial"),
              (r.defines = {}),
              (r.uniforms = {}),
              (r.vertexShader =
                "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"),
              (r.fragmentShader =
                "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}"),
              (r.linewidth = 1),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.fog = !1),
              (r.lights = !1),
              (r.clipping = !1),
              (r.extensions = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1,
              }),
              (r.defaultAttributeValues = {
                color: [1, 1, 1],
                uv: [0, 0],
                uv2: [0, 0],
              }),
              (r.index0AttributeName = void 0),
              (r.uniformsNeedUpdate = !1),
              (r.glslVersion = null),
              void 0 !== e &&
                (void 0 !== e.attributes &&
                  console.error(
                    "THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."
                  ),
                r.setValues(e)),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.fragmentShader = e.fragmentShader),
                    (this.vertexShader = e.vertexShader),
                    (this.uniforms = _c(e.uniforms)),
                    (this.defines = Object.assign({}, e.defines)),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.lights = e.lights),
                    (this.clipping = e.clipping),
                    (this.extensions = Object.assign({}, e.extensions)),
                    (this.glslVersion = e.glslVersion),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = fi(ri(n.prototype), "toJSON", this).call(this, e);
                  for (var r in ((t.glslVersion = this.glslVersion),
                  (t.uniforms = {}),
                  this.uniforms)) {
                    var i = this.uniforms[r].value;
                    i && i.isTexture
                      ? (t.uniforms[r] = { type: "t", value: i.toJSON(e).uuid })
                      : i && i.isColor
                      ? (t.uniforms[r] = { type: "c", value: i.getHex() })
                      : i && i.isVector2
                      ? (t.uniforms[r] = { type: "v2", value: i.toArray() })
                      : i && i.isVector3
                      ? (t.uniforms[r] = { type: "v3", value: i.toArray() })
                      : i && i.isVector4
                      ? (t.uniforms[r] = { type: "v4", value: i.toArray() })
                      : i && i.isMatrix3
                      ? (t.uniforms[r] = { type: "m3", value: i.toArray() })
                      : i && i.isMatrix4
                      ? (t.uniforms[r] = { type: "m4", value: i.toArray() })
                      : (t.uniforms[r] = { value: i });
                  }
                  Object.keys(this.defines).length > 0 &&
                    (t.defines = this.defines),
                    (t.vertexShader = this.vertexShader),
                    (t.fragmentShader = this.fragmentShader);
                  var a = {};
                  for (var o in this.extensions)
                    !0 === this.extensions[o] && (a[o] = !0);
                  return Object.keys(a).length > 0 && (t.extensions = a), t;
                },
              },
            ]),
            n
          );
        })(Ou);
      Ec.prototype.isShaderMaterial = !0;
      var kc = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e;
          return (
            Kr(this, n),
            ((e = t.call(this)).type = "Camera"),
            (e.matrixWorldInverse = new Jl()),
            (e.projectionMatrix = new Jl()),
            (e.projectionMatrixInverse = new Jl()),
            e
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e, t) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e, t),
                  this.matrixWorldInverse.copy(e.matrixWorldInverse),
                  this.projectionMatrix.copy(e.projectionMatrix),
                  this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
                  this
                );
              },
            },
            {
              key: "getWorldDirection",
              value: function (e) {
                this.updateWorldMatrix(!0, !1);
                var t = this.matrixWorld.elements;
                return e.set(-t[8], -t[9], -t[10]).normalize();
              },
            },
            {
              key: "updateMatrixWorld",
              value: function (e) {
                fi(ri(n.prototype), "updateMatrixWorld", this).call(this, e),
                  this.matrixWorldInverse.copy(this.matrixWorld).invert();
              },
            },
            {
              key: "updateWorldMatrix",
              value: function (e, t) {
                fi(ri(n.prototype), "updateWorldMatrix", this).call(this, e, t),
                  this.matrixWorldInverse.copy(this.matrixWorld).invert();
              },
            },
            {
              key: "clone",
              value: function () {
                return new this.constructor().copy(this);
              },
            },
          ]),
          n
        );
      })(xu);
      kc.prototype.isCamera = !0;
      var Tc = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 50,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0.1,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 2e3;
          return (
            Kr(this, n),
            ((e = t.call(this)).type = "PerspectiveCamera"),
            (e.fov = r),
            (e.zoom = 1),
            (e.near = a),
            (e.far = o),
            (e.focus = 10),
            (e.aspect = i),
            (e.view = null),
            (e.filmGauge = 35),
            (e.filmOffset = 0),
            e.updateProjectionMatrix(),
            e
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e, t) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e, t),
                  (this.fov = e.fov),
                  (this.zoom = e.zoom),
                  (this.near = e.near),
                  (this.far = e.far),
                  (this.focus = e.focus),
                  (this.aspect = e.aspect),
                  (this.view =
                    null === e.view ? null : Object.assign({}, e.view)),
                  (this.filmGauge = e.filmGauge),
                  (this.filmOffset = e.filmOffset),
                  this
                );
              },
            },
            {
              key: "setFocalLength",
              value: function (e) {
                var t = (0.5 * this.getFilmHeight()) / e;
                (this.fov = 2 * Rs * Math.atan(t)),
                  this.updateProjectionMatrix();
              },
            },
            {
              key: "getFocalLength",
              value: function () {
                var e = Math.tan(0.5 * Ls * this.fov);
                return (0.5 * this.getFilmHeight()) / e;
              },
            },
            {
              key: "getEffectiveFOV",
              value: function () {
                return (
                  2 * Rs * Math.atan(Math.tan(0.5 * Ls * this.fov) / this.zoom)
                );
              },
            },
            {
              key: "getFilmWidth",
              value: function () {
                return this.filmGauge * Math.min(this.aspect, 1);
              },
            },
            {
              key: "getFilmHeight",
              value: function () {
                return this.filmGauge / Math.max(this.aspect, 1);
              },
            },
            {
              key: "setViewOffset",
              value: function (e, t, n, r, i, a) {
                (this.aspect = e / t),
                  null === this.view &&
                    (this.view = {
                      enabled: !0,
                      fullWidth: 1,
                      fullHeight: 1,
                      offsetX: 0,
                      offsetY: 0,
                      width: 1,
                      height: 1,
                    }),
                  (this.view.enabled = !0),
                  (this.view.fullWidth = e),
                  (this.view.fullHeight = t),
                  (this.view.offsetX = n),
                  (this.view.offsetY = r),
                  (this.view.width = i),
                  (this.view.height = a),
                  this.updateProjectionMatrix();
              },
            },
            {
              key: "clearViewOffset",
              value: function () {
                null !== this.view && (this.view.enabled = !1),
                  this.updateProjectionMatrix();
              },
            },
            {
              key: "updateProjectionMatrix",
              value: function () {
                var e = this.near,
                  t = (e * Math.tan(0.5 * Ls * this.fov)) / this.zoom,
                  n = 2 * t,
                  r = this.aspect * n,
                  i = -0.5 * r,
                  a = this.view;
                if (null !== this.view && this.view.enabled) {
                  var o = a.fullWidth,
                    s = a.fullHeight;
                  (i += (a.offsetX * r) / o),
                    (t -= (a.offsetY * n) / s),
                    (r *= a.width / o),
                    (n *= a.height / s);
                }
                var l = this.filmOffset;
                0 !== l && (i += (e * l) / this.getFilmWidth()),
                  this.projectionMatrix.makePerspective(
                    i,
                    i + r,
                    t,
                    t - n,
                    e,
                    this.far
                  ),
                  this.projectionMatrixInverse
                    .copy(this.projectionMatrix)
                    .invert();
              },
            },
            {
              key: "toJSON",
              value: function (e) {
                var t = fi(ri(n.prototype), "toJSON", this).call(this, e);
                return (
                  (t.object.fov = this.fov),
                  (t.object.zoom = this.zoom),
                  (t.object.near = this.near),
                  (t.object.far = this.far),
                  (t.object.focus = this.focus),
                  (t.object.aspect = this.aspect),
                  null !== this.view &&
                    (t.object.view = Object.assign({}, this.view)),
                  (t.object.filmGauge = this.filmGauge),
                  (t.object.filmOffset = this.filmOffset),
                  t
                );
              },
            },
          ]),
          n
        );
      })(kc);
      Tc.prototype.isPerspectiveCamera = !0;
      var Cc = 90,
        Ac = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            var a;
            if (
              (Kr(this, n),
              ((a = t.call(this)).type = "CubeCamera"),
              !0 !== i.isWebGLCubeRenderTarget)
            )
              return (
                console.error(
                  "THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter."
                ),
                oi(a)
              );
            a.renderTarget = i;
            var o = new Tc(Cc, 1, e, r);
            (o.layers = a.layers),
              o.up.set(0, -1, 0),
              o.lookAt(new yl(1, 0, 0)),
              a.add(o);
            var s = new Tc(Cc, 1, e, r);
            (s.layers = a.layers),
              s.up.set(0, -1, 0),
              s.lookAt(new yl(-1, 0, 0)),
              a.add(s);
            var l = new Tc(Cc, 1, e, r);
            (l.layers = a.layers),
              l.up.set(0, 0, 1),
              l.lookAt(new yl(0, 1, 0)),
              a.add(l);
            var u = new Tc(Cc, 1, e, r);
            (u.layers = a.layers),
              u.up.set(0, 0, -1),
              u.lookAt(new yl(0, -1, 0)),
              a.add(u);
            var c = new Tc(Cc, 1, e, r);
            (c.layers = a.layers),
              c.up.set(0, -1, 0),
              c.lookAt(new yl(0, 0, 1)),
              a.add(c);
            var f = new Tc(Cc, 1, e, r);
            return (
              (f.layers = a.layers),
              f.up.set(0, -1, 0),
              f.lookAt(new yl(0, 0, -1)),
              a.add(f),
              a
            );
          }
          return (
            ti(n, [
              {
                key: "update",
                value: function (e, t) {
                  null === this.parent && this.updateMatrixWorld();
                  var n = this.renderTarget,
                    r = u(this.children, 6),
                    i = r[0],
                    a = r[1],
                    o = r[2],
                    s = r[3],
                    l = r[4],
                    c = r[5],
                    f = e.getRenderTarget(),
                    d = e.outputEncoding,
                    h = e.toneMapping,
                    p = e.xr.enabled;
                  (e.outputEncoding = Wo),
                    (e.toneMapping = ua),
                    (e.xr.enabled = !1);
                  var v = n.texture.generateMipmaps;
                  (n.texture.generateMipmaps = !1),
                    e.setRenderTarget(n, 0),
                    e.render(t, i),
                    e.setRenderTarget(n, 1),
                    e.render(t, a),
                    e.setRenderTarget(n, 2),
                    e.render(t, o),
                    e.setRenderTarget(n, 3),
                    e.render(t, s),
                    e.setRenderTarget(n, 4),
                    e.render(t, l),
                    (n.texture.generateMipmaps = v),
                    e.setRenderTarget(n, 5),
                    e.render(t, c),
                    e.setRenderTarget(f),
                    (e.outputEncoding = d),
                    (e.toneMapping = h),
                    (e.xr.enabled = p),
                    (n.texture.needsPMREMUpdate = !0);
                },
              },
            ]),
            n
          );
        })(xu),
        Pc = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i, a, o, s, l, u, c, f) {
            var d;
            return (
              Kr(this, n),
              (e = void 0 !== e ? e : []),
              (r = void 0 !== r ? r : ma),
              ((d = t.call(this, e, r, i, a, o, s, l, u, c, f)).flipY = !1),
              d
            );
          }
          return (
            ti(n, [
              {
                key: "images",
                get: function () {
                  return this.image;
                },
                set: function (e) {
                  this.image = e;
                },
              },
            ]),
            n
          );
        })(ul);
      Pc.prototype.isCubeTexture = !0;
      var Lc = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
          Kr(this, n);
          var a = { width: e, height: e, depth: 1 },
            o = [a, a, a, a, a, a];
          return (
            ((r = t.call(this, e, e, i)).texture = new Pc(
              o,
              i.mapping,
              i.wrapS,
              i.wrapT,
              i.magFilter,
              i.minFilter,
              i.format,
              i.type,
              i.anisotropy,
              i.encoding
            )),
            (r.texture.isRenderTargetTexture = !0),
            (r.texture.generateMipmaps =
              void 0 !== i.generateMipmaps && i.generateMipmaps),
            (r.texture.minFilter = void 0 !== i.minFilter ? i.minFilter : Aa),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "fromEquirectangularTexture",
              value: function (e, t) {
                (this.texture.type = t.type),
                  (this.texture.encoding = t.encoding),
                  (this.texture.generateMipmaps = t.generateMipmaps),
                  (this.texture.minFilter = t.minFilter),
                  (this.texture.magFilter = t.magFilter);
                var n = { tEquirect: { value: null } },
                  r =
                    "\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",
                  i =
                    "\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",
                  a = new wc(5, 5, 5),
                  o = new Ec({
                    name: "CubemapFromEquirect",
                    uniforms: _c(n),
                    vertexShader: r,
                    fragmentShader: i,
                    side: ki,
                    blending: Pi,
                  });
                o.uniforms.tEquirect.value = t;
                var s = new bc(a, o),
                  l = t.minFilter;
                return (
                  t.minFilter === Ra && (t.minFilter = Aa),
                  new Ac(1, 10, this).update(e, s),
                  (t.minFilter = l),
                  s.geometry.dispose(),
                  s.material.dispose(),
                  this
                );
              },
            },
            {
              key: "clear",
              value: function (e, t, n, r) {
                for (var i = e.getRenderTarget(), a = 0; a < 6; a++)
                  e.setRenderTarget(this, a), e.clear(t, n, r);
                e.setRenderTarget(i);
              },
            },
          ]),
          n
        );
      })(fl);
      Lc.prototype.isWebGLCubeRenderTarget = !0;
      var Rc = new yl(),
        Oc = new yl(),
        zc = new js(),
        Dc = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new yl(1, 0, 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Kr(this, e), (this.normal = t), (this.constant = n);
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.normal.copy(e), (this.constant = t), this;
                },
              },
              {
                key: "setComponents",
                value: function (e, t, n, r) {
                  return this.normal.set(e, t, n), (this.constant = r), this;
                },
              },
              {
                key: "setFromNormalAndCoplanarPoint",
                value: function (e, t) {
                  return (
                    this.normal.copy(e),
                    (this.constant = -t.dot(this.normal)),
                    this
                  );
                },
              },
              {
                key: "setFromCoplanarPoints",
                value: function (e, t, n) {
                  var r = Rc.subVectors(n, t)
                    .cross(Oc.subVectors(e, t))
                    .normalize();
                  return this.setFromNormalAndCoplanarPoint(r, e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.normal.copy(e.normal),
                    (this.constant = e.constant),
                    this
                  );
                },
              },
              {
                key: "normalize",
                value: function () {
                  var e = 1 / this.normal.length();
                  return (
                    this.normal.multiplyScalar(e), (this.constant *= e), this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (this.constant *= -1), this.normal.negate(), this;
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return this.normal.dot(e) + this.constant;
                },
              },
              {
                key: "distanceToSphere",
                value: function (e) {
                  return this.distanceToPoint(e.center) - e.radius;
                },
              },
              {
                key: "projectPoint",
                value: function (e, t) {
                  return t
                    .copy(this.normal)
                    .multiplyScalar(-this.distanceToPoint(e))
                    .add(e);
                },
              },
              {
                key: "intersectLine",
                value: function (e, t) {
                  var n = e.delta(Rc),
                    r = this.normal.dot(n);
                  if (0 === r)
                    return 0 === this.distanceToPoint(e.start)
                      ? t.copy(e.start)
                      : null;
                  var i = -(e.start.dot(this.normal) + this.constant) / r;
                  return i < 0 || i > 1
                    ? null
                    : t.copy(n).multiplyScalar(i).add(e.start);
                },
              },
              {
                key: "intersectsLine",
                value: function (e) {
                  var t = this.distanceToPoint(e.start),
                    n = this.distanceToPoint(e.end);
                  return (t < 0 && n > 0) || (n < 0 && t > 0);
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return e.intersectsPlane(this);
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return e.intersectsPlane(this);
                },
              },
              {
                key: "coplanarPoint",
                value: function (e) {
                  return e.copy(this.normal).multiplyScalar(-this.constant);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e, t) {
                  var n = t || zc.getNormalMatrix(e),
                    r = this.coplanarPoint(Rc).applyMatrix4(e),
                    i = this.normal.applyMatrix3(n).normalize();
                  return (this.constant = -r.dot(i)), this;
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return (this.constant -= e.dot(this.normal)), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.normal.equals(this.normal) && e.constant === this.constant
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })();
      Dc.prototype.isPlane = !0;
      var Ic = new Hl(),
        Nc = new yl(),
        Fc = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Dc(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Dc(),
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Dc(),
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : new Dc(),
              a =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : new Dc(),
              o =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : new Dc();
            Kr(this, e), (this.planes = [t, n, r, i, a, o]);
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e, t, n, r, i, a) {
                  var o = this.planes;
                  return (
                    o[0].copy(e),
                    o[1].copy(t),
                    o[2].copy(n),
                    o[3].copy(r),
                    o[4].copy(i),
                    o[5].copy(a),
                    this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++)
                    t[n].copy(e.planes[n]);
                  return this;
                },
              },
              {
                key: "setFromProjectionMatrix",
                value: function (e) {
                  var t = this.planes,
                    n = e.elements,
                    r = n[0],
                    i = n[1],
                    a = n[2],
                    o = n[3],
                    s = n[4],
                    l = n[5],
                    u = n[6],
                    c = n[7],
                    f = n[8],
                    d = n[9],
                    h = n[10],
                    p = n[11],
                    v = n[12],
                    m = n[13],
                    g = n[14],
                    y = n[15];
                  return (
                    t[0].setComponents(o - r, c - s, p - f, y - v).normalize(),
                    t[1].setComponents(o + r, c + s, p + f, y + v).normalize(),
                    t[2].setComponents(o + i, c + l, p + d, y + m).normalize(),
                    t[3].setComponents(o - i, c - l, p - d, y - m).normalize(),
                    t[4].setComponents(o - a, c - u, p - h, y - g).normalize(),
                    t[5].setComponents(o + a, c + u, p + h, y + g).normalize(),
                    this
                  );
                },
              },
              {
                key: "intersectsObject",
                value: function (e) {
                  var t = e.geometry;
                  return (
                    null === t.boundingSphere && t.computeBoundingSphere(),
                    Ic.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(Ic)
                  );
                },
              },
              {
                key: "intersectsSprite",
                value: function (e) {
                  return (
                    Ic.center.set(0, 0, 0),
                    (Ic.radius = 0.7071067811865476),
                    Ic.applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(Ic)
                  );
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  for (
                    var t = this.planes, n = e.center, r = -e.radius, i = 0;
                    i < 6;
                    i++
                  ) {
                    if (t[i].distanceToPoint(n) < r) return !1;
                  }
                  return !0;
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++) {
                    var r = t[n];
                    if (
                      ((Nc.x = r.normal.x > 0 ? e.max.x : e.min.x),
                      (Nc.y = r.normal.y > 0 ? e.max.y : e.min.y),
                      (Nc.z = r.normal.z > 0 ? e.max.z : e.min.z),
                      r.distanceToPoint(Nc) < 0)
                    )
                      return !1;
                  }
                  return !0;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++)
                    if (t[n].distanceToPoint(e) < 0) return !1;
                  return !0;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })();
      function Bc() {
        var e = null,
          t = !1,
          n = null,
          r = null;
        function i(t, a) {
          n(t, a), (r = e.requestAnimationFrame(i));
        }
        return {
          start: function () {
            !0 !== t &&
              null !== n &&
              ((r = e.requestAnimationFrame(i)), (t = !0));
          },
          stop: function () {
            e.cancelAnimationFrame(r), (t = !1);
          },
          setAnimationLoop: function (e) {
            n = e;
          },
          setContext: function (t) {
            e = t;
          },
        };
      }
      function Hc(e, t) {
        var n = t.isWebGL2,
          r = new WeakMap();
        return {
          get: function (e) {
            return e.isInterleavedBufferAttribute && (e = e.data), r.get(e);
          },
          remove: function (t) {
            t.isInterleavedBufferAttribute && (t = t.data);
            var n = r.get(t);
            n && (e.deleteBuffer(n.buffer), r.delete(t));
          },
          update: function (t, i) {
            if (t.isGLBufferAttribute) {
              var a = r.get(t);
              (!a || a.version < t.version) &&
                r.set(t, {
                  buffer: t.buffer,
                  type: t.type,
                  bytesPerElement: t.elementSize,
                  version: t.version,
                });
            } else {
              t.isInterleavedBufferAttribute && (t = t.data);
              var o = r.get(t);
              void 0 === o
                ? r.set(
                    t,
                    (function (t, r) {
                      var i,
                        a = t.array,
                        o = t.usage,
                        s = e.createBuffer();
                      if (
                        (e.bindBuffer(r, s),
                        e.bufferData(r, a, o),
                        t.onUploadCallback(),
                        a instanceof Float32Array)
                      )
                        i = 5126;
                      else if (a instanceof Uint16Array)
                        if (t.isFloat16BufferAttribute) {
                          if (!n)
                            throw new Error(
                              "THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."
                            );
                          i = 5131;
                        } else i = 5123;
                      else if (a instanceof Int16Array) i = 5122;
                      else if (a instanceof Uint32Array) i = 5125;
                      else if (a instanceof Int32Array) i = 5124;
                      else if (a instanceof Int8Array) i = 5120;
                      else if (a instanceof Uint8Array) i = 5121;
                      else {
                        if (!(a instanceof Uint8ClampedArray))
                          throw new Error(
                            "THREE.WebGLAttributes: Unsupported buffer data format: " +
                              a
                          );
                        i = 5121;
                      }
                      return {
                        buffer: s,
                        type: i,
                        bytesPerElement: a.BYTES_PER_ELEMENT,
                        version: t.version,
                      };
                    })(t, i)
                  )
                : o.version < t.version &&
                  (!(function (t, r, i) {
                    var a = r.array,
                      o = r.updateRange;
                    e.bindBuffer(i, t),
                      -1 === o.count
                        ? e.bufferSubData(i, 0, a)
                        : (n
                            ? e.bufferSubData(
                                i,
                                o.offset * a.BYTES_PER_ELEMENT,
                                a,
                                o.offset,
                                o.count
                              )
                            : e.bufferSubData(
                                i,
                                o.offset * a.BYTES_PER_ELEMENT,
                                a.subarray(o.offset, o.offset + o.count)
                              ),
                          (o.count = -1));
                  })(o.buffer, t, i),
                  (o.version = t.version));
            }
          },
        };
      }
      var Uc = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            Kr(this, n),
              ((e = t.call(this)).type = "PlaneGeometry"),
              (e.parameters = {
                width: r,
                height: i,
                widthSegments: a,
                heightSegments: o,
              });
            for (
              var s = r / 2,
                l = i / 2,
                u = Math.floor(a),
                c = Math.floor(o),
                f = u + 1,
                d = c + 1,
                h = r / u,
                p = i / c,
                v = [],
                m = [],
                g = [],
                y = [],
                b = 0;
              b < d;
              b++
            )
              for (var x = b * p - l, w = 0; w < f; w++) {
                var _ = w * h - s;
                m.push(_, -x, 0),
                  g.push(0, 0, 1),
                  y.push(w / u),
                  y.push(1 - b / c);
              }
            for (var S = 0; S < c; S++)
              for (var M = 0; M < u; M++) {
                var E = M + f * S,
                  k = M + f * (S + 1),
                  T = M + 1 + f * (S + 1),
                  C = M + 1 + f * S;
                v.push(E, k, C), v.push(k, T, C);
              }
            return (
              e.setIndex(v),
              e.setAttribute("position", new qu(m, 3)),
              e.setAttribute("normal", new qu(g, 3)),
              e.setAttribute("uv", new qu(y, 2)),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.width,
                    e.height,
                    e.widthSegments,
                    e.heightSegments
                  );
                },
              },
            ]),
            n
          );
        })(tc),
        jc = {
          alphamap_fragment:
            "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
          alphamap_pars_fragment:
            "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
          alphatest_fragment:
            "#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",
          alphatest_pars_fragment:
            "#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",
          aomap_fragment:
            "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",
          aomap_pars_fragment:
            "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
          begin_vertex: "vec3 transformed = vec3( position );",
          beginnormal_vertex:
            "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
          bsdfs:
            "vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",
          bumpmap_pars_fragment:
            "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
          clipping_planes_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
          clipping_planes_pars_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
          clipping_planes_pars_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
          clipping_planes_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
          color_fragment:
            "#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",
          color_pars_fragment:
            "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",
          color_pars_vertex:
            "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",
          color_vertex:
            "#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",
          common:
            "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",
          cube_uv_reflection_fragment:
            "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
          defaultnormal_vertex:
            "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
          displacementmap_pars_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
          displacementmap_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
          emissivemap_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
          emissivemap_pars_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
          encodings_fragment:
            "gl_FragColor = linearToOutputTexel( gl_FragColor );",
          encodings_pars_fragment:
            "vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",
          envmap_fragment:
            "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
          envmap_common_pars_fragment:
            "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
          envmap_pars_fragment:
            "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
          envmap_pars_vertex:
            "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
          envmap_physical_pars_fragment:
            "#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",
          envmap_vertex:
            "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
          fog_vertex: "#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",
          fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",
          fog_fragment:
            "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
          fog_pars_fragment:
            "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
          gradientmap_pars_fragment:
            "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
          lightmap_fragment:
            "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",
          lightmap_pars_fragment:
            "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
          lights_lambert_vertex:
            "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
          lights_pars_begin:
            "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",
          lights_toon_fragment:
            "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
          lights_toon_pars_fragment:
            "varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
          lights_phong_fragment:
            "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
          lights_phong_pars_fragment:
            "varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
          lights_physical_fragment:
            "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",
          lights_physical_pars_fragment:
            "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
          lights_fragment_begin:
            "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
          lights_fragment_maps:
            "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",
          lights_fragment_end:
            "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
          logdepthbuf_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
          logdepthbuf_pars_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
          logdepthbuf_pars_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
          logdepthbuf_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
          map_fragment:
            "#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",
          map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
          map_particle_fragment:
            "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
          map_particle_pars_fragment:
            "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
          metalnessmap_fragment:
            "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
          metalnessmap_pars_fragment:
            "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
          morphcolor_vertex:
            "#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",
          morphnormal_vertex:
            "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",
          morphtarget_pars_vertex:
            "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",
          morphtarget_vertex:
            "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",
          normal_fragment_begin:
            "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
          normal_fragment_maps:
            "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",
          normal_pars_fragment:
            "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
          normal_pars_vertex:
            "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
          normal_vertex:
            "#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",
          normalmap_pars_fragment:
            "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",
          clearcoat_normal_fragment_begin:
            "#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
          clearcoat_normal_fragment_maps:
            "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",
          clearcoat_pars_fragment:
            "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
          output_fragment:
            "#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",
          packing:
            "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
          premultiplied_alpha_fragment:
            "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
          project_vertex:
            "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
          dithering_fragment:
            "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
          dithering_pars_fragment:
            "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
          roughnessmap_fragment:
            "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
          roughnessmap_pars_fragment:
            "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
          shadowmap_pars_fragment:
            "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
          shadowmap_pars_vertex:
            "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
          shadowmap_vertex:
            "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
          shadowmask_pars_fragment:
            "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
          skinbase_vertex:
            "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
          skinning_pars_vertex:
            "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
          skinning_vertex:
            "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
          skinnormal_vertex:
            "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
          specularmap_fragment:
            "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
          specularmap_pars_fragment:
            "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
          tonemapping_fragment:
            "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
          tonemapping_pars_fragment:
            "#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
          transmission_fragment:
            "#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",
          transmission_pars_fragment:
            "#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",
          uv_pars_fragment:
            "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
          uv_pars_vertex:
            "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
          uv_vertex:
            "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
          uv2_pars_fragment:
            "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
          uv2_pars_vertex:
            "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
          uv2_vertex:
            "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
          worldpos_vertex:
            "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
          background_vert:
            "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
          background_frag:
            "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          cube_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
          cube_frag:
            "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          depth_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
          depth_frag:
            "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
          distanceRGBA_vert:
            "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
          distanceRGBA_frag:
            "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
          equirect_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
          equirect_frag:
            "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          linedashed_vert:
            "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
          linedashed_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
          meshbasic_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
          meshbasic_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshlambert_vert:
            "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshlambert_frag:
            "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshmatcap_vert:
            "#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
          meshmatcap_frag:
            "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshnormal_vert:
            "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
          meshnormal_frag:
            "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",
          meshphong_vert:
            "#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshphong_frag:
            "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshphysical_vert:
            "#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",
          meshphysical_frag:
            "#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshtoon_vert:
            "#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshtoon_frag:
            "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          points_vert:
            "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
          points_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
          shadow_vert:
            "#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          shadow_frag:
            "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
          sprite_vert:
            "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
          sprite_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        },
        Gc = {
          common: {
            diffuse: { value: new il(16777215) },
            opacity: { value: 1 },
            map: { value: null },
            uvTransform: { value: new js() },
            uv2Transform: { value: new js() },
            alphaMap: { value: null },
            alphaTest: { value: 0 },
          },
          specularmap: { specularMap: { value: null } },
          envmap: {
            envMap: { value: null },
            flipEnvMap: { value: -1 },
            reflectivity: { value: 1 },
            ior: { value: 1.5 },
            refractionRatio: { value: 0.98 },
          },
          aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } },
          lightmap: {
            lightMap: { value: null },
            lightMapIntensity: { value: 1 },
          },
          emissivemap: { emissiveMap: { value: null } },
          bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } },
          normalmap: {
            normalMap: { value: null },
            normalScale: { value: new Us(1, 1) },
          },
          displacementmap: {
            displacementMap: { value: null },
            displacementScale: { value: 1 },
            displacementBias: { value: 0 },
          },
          roughnessmap: { roughnessMap: { value: null } },
          metalnessmap: { metalnessMap: { value: null } },
          gradientmap: { gradientMap: { value: null } },
          fog: {
            fogDensity: { value: 25e-5 },
            fogNear: { value: 1 },
            fogFar: { value: 2e3 },
            fogColor: { value: new il(16777215) },
          },
          lights: {
            ambientLightColor: { value: [] },
            lightProbe: { value: [] },
            directionalLights: {
              value: [],
              properties: { direction: {}, color: {} },
            },
            directionalLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            directionalShadowMap: { value: [] },
            directionalShadowMatrix: { value: [] },
            spotLights: {
              value: [],
              properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {},
              },
            },
            spotLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            spotShadowMap: { value: [] },
            spotShadowMatrix: { value: [] },
            pointLights: {
              value: [],
              properties: { color: {}, position: {}, decay: {}, distance: {} },
            },
            pointLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {},
              },
            },
            pointShadowMap: { value: [] },
            pointShadowMatrix: { value: [] },
            hemisphereLights: {
              value: [],
              properties: { direction: {}, skyColor: {}, groundColor: {} },
            },
            rectAreaLights: {
              value: [],
              properties: { color: {}, position: {}, width: {}, height: {} },
            },
            ltc_1: { value: null },
            ltc_2: { value: null },
          },
          points: {
            diffuse: { value: new il(16777215) },
            opacity: { value: 1 },
            size: { value: 1 },
            scale: { value: 1 },
            map: { value: null },
            alphaMap: { value: null },
            alphaTest: { value: 0 },
            uvTransform: { value: new js() },
          },
          sprite: {
            diffuse: { value: new il(16777215) },
            opacity: { value: 1 },
            center: { value: new Us(0.5, 0.5) },
            rotation: { value: 0 },
            map: { value: null },
            alphaMap: { value: null },
            alphaTest: { value: 0 },
            uvTransform: { value: new js() },
          },
        },
        Wc = {
          basic: {
            uniforms: Sc([
              Gc.common,
              Gc.specularmap,
              Gc.envmap,
              Gc.aomap,
              Gc.lightmap,
              Gc.fog,
            ]),
            vertexShader: jc.meshbasic_vert,
            fragmentShader: jc.meshbasic_frag,
          },
          lambert: {
            uniforms: Sc([
              Gc.common,
              Gc.specularmap,
              Gc.envmap,
              Gc.aomap,
              Gc.lightmap,
              Gc.emissivemap,
              Gc.fog,
              Gc.lights,
              { emissive: { value: new il(0) } },
            ]),
            vertexShader: jc.meshlambert_vert,
            fragmentShader: jc.meshlambert_frag,
          },
          phong: {
            uniforms: Sc([
              Gc.common,
              Gc.specularmap,
              Gc.envmap,
              Gc.aomap,
              Gc.lightmap,
              Gc.emissivemap,
              Gc.bumpmap,
              Gc.normalmap,
              Gc.displacementmap,
              Gc.fog,
              Gc.lights,
              {
                emissive: { value: new il(0) },
                specular: { value: new il(1118481) },
                shininess: { value: 30 },
              },
            ]),
            vertexShader: jc.meshphong_vert,
            fragmentShader: jc.meshphong_frag,
          },
          standard: {
            uniforms: Sc([
              Gc.common,
              Gc.envmap,
              Gc.aomap,
              Gc.lightmap,
              Gc.emissivemap,
              Gc.bumpmap,
              Gc.normalmap,
              Gc.displacementmap,
              Gc.roughnessmap,
              Gc.metalnessmap,
              Gc.fog,
              Gc.lights,
              {
                emissive: { value: new il(0) },
                roughness: { value: 1 },
                metalness: { value: 0 },
                envMapIntensity: { value: 1 },
              },
            ]),
            vertexShader: jc.meshphysical_vert,
            fragmentShader: jc.meshphysical_frag,
          },
          toon: {
            uniforms: Sc([
              Gc.common,
              Gc.aomap,
              Gc.lightmap,
              Gc.emissivemap,
              Gc.bumpmap,
              Gc.normalmap,
              Gc.displacementmap,
              Gc.gradientmap,
              Gc.fog,
              Gc.lights,
              { emissive: { value: new il(0) } },
            ]),
            vertexShader: jc.meshtoon_vert,
            fragmentShader: jc.meshtoon_frag,
          },
          matcap: {
            uniforms: Sc([
              Gc.common,
              Gc.bumpmap,
              Gc.normalmap,
              Gc.displacementmap,
              Gc.fog,
              { matcap: { value: null } },
            ]),
            vertexShader: jc.meshmatcap_vert,
            fragmentShader: jc.meshmatcap_frag,
          },
          points: {
            uniforms: Sc([Gc.points, Gc.fog]),
            vertexShader: jc.points_vert,
            fragmentShader: jc.points_frag,
          },
          dashed: {
            uniforms: Sc([
              Gc.common,
              Gc.fog,
              {
                scale: { value: 1 },
                dashSize: { value: 1 },
                totalSize: { value: 2 },
              },
            ]),
            vertexShader: jc.linedashed_vert,
            fragmentShader: jc.linedashed_frag,
          },
          depth: {
            uniforms: Sc([Gc.common, Gc.displacementmap]),
            vertexShader: jc.depth_vert,
            fragmentShader: jc.depth_frag,
          },
          normal: {
            uniforms: Sc([
              Gc.common,
              Gc.bumpmap,
              Gc.normalmap,
              Gc.displacementmap,
              { opacity: { value: 1 } },
            ]),
            vertexShader: jc.meshnormal_vert,
            fragmentShader: jc.meshnormal_frag,
          },
          sprite: {
            uniforms: Sc([Gc.sprite, Gc.fog]),
            vertexShader: jc.sprite_vert,
            fragmentShader: jc.sprite_frag,
          },
          background: {
            uniforms: {
              uvTransform: { value: new js() },
              t2D: { value: null },
            },
            vertexShader: jc.background_vert,
            fragmentShader: jc.background_frag,
          },
          cube: {
            uniforms: Sc([Gc.envmap, { opacity: { value: 1 } }]),
            vertexShader: jc.cube_vert,
            fragmentShader: jc.cube_frag,
          },
          equirect: {
            uniforms: { tEquirect: { value: null } },
            vertexShader: jc.equirect_vert,
            fragmentShader: jc.equirect_frag,
          },
          distanceRGBA: {
            uniforms: Sc([
              Gc.common,
              Gc.displacementmap,
              {
                referencePosition: { value: new yl() },
                nearDistance: { value: 1 },
                farDistance: { value: 1e3 },
              },
            ]),
            vertexShader: jc.distanceRGBA_vert,
            fragmentShader: jc.distanceRGBA_frag,
          },
          shadow: {
            uniforms: Sc([
              Gc.lights,
              Gc.fog,
              { color: { value: new il(0) }, opacity: { value: 1 } },
            ]),
            vertexShader: jc.shadow_vert,
            fragmentShader: jc.shadow_frag,
          },
        };
      function Vc(e, t, n, r, i, a) {
        var o,
          s,
          l = new il(0),
          u = !0 === i ? 0 : 1,
          c = null,
          f = 0,
          d = null;
        function h(e, t) {
          n.buffers.color.setClear(e.r, e.g, e.b, t, a);
        }
        return {
          getClearColor: function () {
            return l;
          },
          setClearColor: function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
            l.set(e), h(l, (u = t));
          },
          getClearAlpha: function () {
            return u;
          },
          setClearAlpha: function (e) {
            h(l, (u = e));
          },
          render: function (n, i) {
            var a = !1,
              p = !0 === i.isScene ? i.background : null;
            p && p.isTexture && (p = t.get(p));
            var v = e.xr,
              m = v.getSession && v.getSession();
            m && "additive" === m.environmentBlendMode && (p = null),
              null === p ? h(l, u) : p && p.isColor && (h(p, 1), (a = !0)),
              (e.autoClear || a) &&
                e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
              p && (p.isCubeTexture || p.mapping === xa)
                ? (void 0 === s &&
                    ((s = new bc(
                      new wc(1, 1, 1),
                      new Ec({
                        name: "BackgroundCubeMaterial",
                        uniforms: _c(Wc.cube.uniforms),
                        vertexShader: Wc.cube.vertexShader,
                        fragmentShader: Wc.cube.fragmentShader,
                        side: ki,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    s.geometry.deleteAttribute("uv"),
                    (s.onBeforeRender = function (e, t, n) {
                      this.matrixWorld.copyPosition(n.matrixWorld);
                    }),
                    Object.defineProperty(s.material, "envMap", {
                      get: function () {
                        return this.uniforms.envMap.value;
                      },
                    }),
                    r.update(s)),
                  (s.material.uniforms.envMap.value = p),
                  (s.material.uniforms.flipEnvMap.value =
                    p.isCubeTexture && !1 === p.isRenderTargetTexture ? -1 : 1),
                  (c === p && f === p.version && d === e.toneMapping) ||
                    ((s.material.needsUpdate = !0),
                    (c = p),
                    (f = p.version),
                    (d = e.toneMapping)),
                  n.unshift(s, s.geometry, s.material, 0, 0, null))
                : p &&
                  p.isTexture &&
                  (void 0 === o &&
                    ((o = new bc(
                      new Uc(2, 2),
                      new Ec({
                        name: "BackgroundMaterial",
                        uniforms: _c(Wc.background.uniforms),
                        vertexShader: Wc.background.vertexShader,
                        fragmentShader: Wc.background.fragmentShader,
                        side: Ei,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    Object.defineProperty(o.material, "map", {
                      get: function () {
                        return this.uniforms.t2D.value;
                      },
                    }),
                    r.update(o)),
                  (o.material.uniforms.t2D.value = p),
                  !0 === p.matrixAutoUpdate && p.updateMatrix(),
                  o.material.uniforms.uvTransform.value.copy(p.matrix),
                  (c === p && f === p.version && d === e.toneMapping) ||
                    ((o.material.needsUpdate = !0),
                    (c = p),
                    (f = p.version),
                    (d = e.toneMapping)),
                  n.unshift(o, o.geometry, o.material, 0, 0, null));
          },
        };
      }
      function qc(e, t, n, r) {
        var i = e.getParameter(34921),
          a = r.isWebGL2 ? null : t.get("OES_vertex_array_object"),
          o = r.isWebGL2 || null !== a,
          s = {},
          l = h(null),
          u = l,
          c = !1;
        function f(t) {
          return r.isWebGL2 ? e.bindVertexArray(t) : a.bindVertexArrayOES(t);
        }
        function d(t) {
          return r.isWebGL2
            ? e.deleteVertexArray(t)
            : a.deleteVertexArrayOES(t);
        }
        function h(e) {
          for (var t = [], n = [], r = [], a = 0; a < i; a++)
            (t[a] = 0), (n[a] = 0), (r[a] = 0);
          return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: t,
            enabledAttributes: n,
            attributeDivisors: r,
            object: e,
            attributes: {},
            index: null,
          };
        }
        function p() {
          for (var e = u.newAttributes, t = 0, n = e.length; t < n; t++)
            e[t] = 0;
        }
        function v(e) {
          m(e, 0);
        }
        function m(n, i) {
          var a = u.newAttributes,
            o = u.enabledAttributes,
            s = u.attributeDivisors;
          ((a[n] = 1),
          0 === o[n] && (e.enableVertexAttribArray(n), (o[n] = 1)),
          s[n] !== i) &&
            ((r.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[
              r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"
            ](n, i),
            (s[n] = i));
        }
        function g() {
          for (
            var t = u.newAttributes,
              n = u.enabledAttributes,
              r = 0,
              i = n.length;
            r < i;
            r++
          )
            n[r] !== t[r] && (e.disableVertexAttribArray(r), (n[r] = 0));
        }
        function y(t, n, i, a, o, s) {
          !0 !== r.isWebGL2 || (5124 !== i && 5125 !== i)
            ? e.vertexAttribPointer(t, n, i, a, o, s)
            : e.vertexAttribIPointer(t, n, i, o, s);
        }
        function b() {
          x(), (c = !0), u !== l && f((u = l).object);
        }
        function x() {
          (l.geometry = null), (l.program = null), (l.wireframe = !1);
        }
        return {
          setup: function (i, l, d, b, x) {
            var w = !1;
            if (o) {
              var _ = (function (t, n, i) {
                var o = !0 === i.wireframe,
                  l = s[t.id];
                void 0 === l && ((l = {}), (s[t.id] = l));
                var u = l[n.id];
                void 0 === u && ((u = {}), (l[n.id] = u));
                var c = u[o];
                void 0 === c &&
                  ((c = h(
                    r.isWebGL2
                      ? e.createVertexArray()
                      : a.createVertexArrayOES()
                  )),
                  (u[o] = c));
                return c;
              })(b, d, l);
              u !== _ && f((u = _).object),
                (w = (function (e, t) {
                  var n = u.attributes,
                    r = e.attributes,
                    i = 0;
                  for (var a in r) {
                    var o = n[a],
                      s = r[a];
                    if (void 0 === o) return !0;
                    if (o.attribute !== s) return !0;
                    if (o.data !== s.data) return !0;
                    i++;
                  }
                  return u.attributesNum !== i || u.index !== t;
                })(b, x)),
                w &&
                  (function (e, t) {
                    var n = {},
                      r = e.attributes,
                      i = 0;
                    for (var a in r) {
                      var o = r[a],
                        s = {};
                      (s.attribute = o),
                        o.data && (s.data = o.data),
                        (n[a] = s),
                        i++;
                    }
                    (u.attributes = n), (u.attributesNum = i), (u.index = t);
                  })(b, x);
            } else {
              var S = !0 === l.wireframe;
              (u.geometry === b.id &&
                u.program === d.id &&
                u.wireframe === S) ||
                ((u.geometry = b.id),
                (u.program = d.id),
                (u.wireframe = S),
                (w = !0));
            }
            !0 === i.isInstancedMesh && (w = !0),
              null !== x && n.update(x, 34963),
              (w || c) &&
                ((c = !1),
                (function (i, a, o, s) {
                  if (
                    !1 === r.isWebGL2 &&
                    (i.isInstancedMesh || s.isInstancedBufferGeometry) &&
                    null === t.get("ANGLE_instanced_arrays")
                  )
                    return;
                  p();
                  var l = s.attributes,
                    u = o.getAttributes(),
                    c = a.defaultAttributeValues;
                  for (var f in u) {
                    var d = u[f];
                    if (d.location >= 0) {
                      var h = l[f];
                      if (
                        (void 0 === h &&
                          ("instanceMatrix" === f &&
                            i.instanceMatrix &&
                            (h = i.instanceMatrix),
                          "instanceColor" === f &&
                            i.instanceColor &&
                            (h = i.instanceColor)),
                        void 0 !== h)
                      ) {
                        var b = h.normalized,
                          x = h.itemSize,
                          w = n.get(h);
                        if (void 0 === w) continue;
                        var _ = w.buffer,
                          S = w.type,
                          M = w.bytesPerElement;
                        if (h.isInterleavedBufferAttribute) {
                          var E = h.data,
                            k = E.stride,
                            T = h.offset;
                          if (E.isInstancedInterleavedBuffer) {
                            for (var C = 0; C < d.locationSize; C++)
                              m(d.location + C, E.meshPerAttribute);
                            !0 !== i.isInstancedMesh &&
                              void 0 === s._maxInstanceCount &&
                              (s._maxInstanceCount =
                                E.meshPerAttribute * E.count);
                          } else
                            for (var A = 0; A < d.locationSize; A++)
                              v(d.location + A);
                          e.bindBuffer(34962, _);
                          for (var P = 0; P < d.locationSize; P++)
                            y(
                              d.location + P,
                              x / d.locationSize,
                              S,
                              b,
                              k * M,
                              (T + (x / d.locationSize) * P) * M
                            );
                        } else {
                          if (h.isInstancedBufferAttribute) {
                            for (var L = 0; L < d.locationSize; L++)
                              m(d.location + L, h.meshPerAttribute);
                            !0 !== i.isInstancedMesh &&
                              void 0 === s._maxInstanceCount &&
                              (s._maxInstanceCount =
                                h.meshPerAttribute * h.count);
                          } else
                            for (var R = 0; R < d.locationSize; R++)
                              v(d.location + R);
                          e.bindBuffer(34962, _);
                          for (var O = 0; O < d.locationSize; O++)
                            y(
                              d.location + O,
                              x / d.locationSize,
                              S,
                              b,
                              x * M,
                              (x / d.locationSize) * O * M
                            );
                        }
                      } else if (void 0 !== c) {
                        var z = c[f];
                        if (void 0 !== z)
                          switch (z.length) {
                            case 2:
                              e.vertexAttrib2fv(d.location, z);
                              break;
                            case 3:
                              e.vertexAttrib3fv(d.location, z);
                              break;
                            case 4:
                              e.vertexAttrib4fv(d.location, z);
                              break;
                            default:
                              e.vertexAttrib1fv(d.location, z);
                          }
                      }
                    }
                  }
                  g();
                })(i, l, d, b),
                null !== x && e.bindBuffer(34963, n.get(x).buffer));
          },
          reset: b,
          resetDefaultState: x,
          dispose: function () {
            for (var e in (b(), s)) {
              var t = s[e];
              for (var n in t) {
                var r = t[n];
                for (var i in r) d(r[i].object), delete r[i];
                delete t[n];
              }
              delete s[e];
            }
          },
          releaseStatesOfGeometry: function (e) {
            if (void 0 !== s[e.id]) {
              var t = s[e.id];
              for (var n in t) {
                var r = t[n];
                for (var i in r) d(r[i].object), delete r[i];
                delete t[n];
              }
              delete s[e.id];
            }
          },
          releaseStatesOfProgram: function (e) {
            for (var t in s) {
              var n = s[t];
              if (void 0 !== n[e.id]) {
                var r = n[e.id];
                for (var i in r) d(r[i].object), delete r[i];
                delete n[e.id];
              }
            }
          },
          initAttributes: p,
          enableAttribute: v,
          disableUnusedAttributes: g,
        };
      }
      function Xc(e, t, n, r) {
        var i,
          a = r.isWebGL2;
        (this.setMode = function (e) {
          i = e;
        }),
          (this.render = function (t, r) {
            e.drawArrays(i, t, r), n.update(r, i, 1);
          }),
          (this.renderInstances = function (r, o, s) {
            if (0 !== s) {
              var l, u;
              if (a) (l = e), (u = "drawArraysInstanced");
              else if (
                ((u = "drawArraysInstancedANGLE"),
                null === (l = t.get("ANGLE_instanced_arrays")))
              )
                return void console.error(
                  "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
              l[u](i, r, o, s), n.update(o, i, s);
            }
          });
      }
      function Yc(e, t, n) {
        var r;
        function i(t) {
          if ("highp" === t) {
            if (
              e.getShaderPrecisionFormat(35633, 36338).precision > 0 &&
              e.getShaderPrecisionFormat(35632, 36338).precision > 0
            )
              return "highp";
            t = "mediump";
          }
          return "mediump" === t &&
            e.getShaderPrecisionFormat(35633, 36337).precision > 0 &&
            e.getShaderPrecisionFormat(35632, 36337).precision > 0
            ? "mediump"
            : "lowp";
        }
        var a =
            ("undefined" !== typeof WebGL2RenderingContext &&
              e instanceof WebGL2RenderingContext) ||
            ("undefined" !== typeof WebGL2ComputeRenderingContext &&
              e instanceof WebGL2ComputeRenderingContext),
          o = void 0 !== n.precision ? n.precision : "highp",
          s = i(o);
        s !== o &&
          (console.warn(
            "THREE.WebGLRenderer:",
            o,
            "not supported, using",
            s,
            "instead."
          ),
          (o = s));
        var l = a || t.has("WEBGL_draw_buffers"),
          u = !0 === n.logarithmicDepthBuffer,
          c = e.getParameter(34930),
          f = e.getParameter(35660),
          d = e.getParameter(3379),
          h = e.getParameter(34076),
          p = e.getParameter(34921),
          v = e.getParameter(36347),
          m = e.getParameter(36348),
          g = e.getParameter(36349),
          y = f > 0,
          b = a || t.has("OES_texture_float");
        return {
          isWebGL2: a,
          drawBuffers: l,
          getMaxAnisotropy: function () {
            if (void 0 !== r) return r;
            if (!0 === t.has("EXT_texture_filter_anisotropic")) {
              var n = t.get("EXT_texture_filter_anisotropic");
              r = e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
            } else r = 0;
            return r;
          },
          getMaxPrecision: i,
          precision: o,
          logarithmicDepthBuffer: u,
          maxTextures: c,
          maxVertexTextures: f,
          maxTextureSize: d,
          maxCubemapSize: h,
          maxAttributes: p,
          maxVertexUniforms: v,
          maxVaryings: m,
          maxFragmentUniforms: g,
          vertexTextures: y,
          floatFragmentTextures: b,
          floatVertexTextures: y && b,
          maxSamples: a ? e.getParameter(36183) : 0,
        };
      }
      function Jc(e) {
        var t = this,
          n = null,
          r = 0,
          i = !1,
          a = !1,
          o = new Dc(),
          s = new js(),
          l = { value: null, needsUpdate: !1 };
        function u() {
          l.value !== n && ((l.value = n), (l.needsUpdate = r > 0)),
            (t.numPlanes = r),
            (t.numIntersection = 0);
        }
        function c(e, n, r, i) {
          var a = null !== e ? e.length : 0,
            u = null;
          if (0 !== a) {
            if (((u = l.value), !0 !== i || null === u)) {
              var c = r + 4 * a,
                f = n.matrixWorldInverse;
              s.getNormalMatrix(f),
                (null === u || u.length < c) && (u = new Float32Array(c));
              for (var d = 0, h = r; d !== a; ++d, h += 4)
                o.copy(e[d]).applyMatrix4(f, s),
                  o.normal.toArray(u, h),
                  (u[h + 3] = o.constant);
            }
            (l.value = u), (l.needsUpdate = !0);
          }
          return (t.numPlanes = a), (t.numIntersection = 0), u;
        }
        (this.uniform = l),
          (this.numPlanes = 0),
          (this.numIntersection = 0),
          (this.init = function (e, t, a) {
            var o = 0 !== e.length || t || 0 !== r || i;
            return (i = t), (n = c(e, a, 0)), (r = e.length), o;
          }),
          (this.beginShadows = function () {
            (a = !0), c(null);
          }),
          (this.endShadows = function () {
            (a = !1), u();
          }),
          (this.setState = function (t, o, s) {
            var f = t.clippingPlanes,
              d = t.clipIntersection,
              h = t.clipShadows,
              p = e.get(t);
            if (!i || null === f || 0 === f.length || (a && !h))
              a ? c(null) : u();
            else {
              var v = a ? 0 : r,
                m = 4 * v,
                g = p.clippingState || null;
              (l.value = g), (g = c(f, o, m, s));
              for (var y = 0; y !== m; ++y) g[y] = n[y];
              (p.clippingState = g),
                (this.numIntersection = d ? this.numPlanes : 0),
                (this.numPlanes += v);
            }
          });
      }
      function $c(e) {
        var t = new WeakMap();
        function n(e, t) {
          return t === ya ? (e.mapping = ma) : t === ba && (e.mapping = ga), e;
        }
        function r(e) {
          var n = e.target;
          n.removeEventListener("dispose", r);
          var i = t.get(n);
          void 0 !== i && (t.delete(n), i.dispose());
        }
        return {
          get: function (i) {
            if (i && i.isTexture && !1 === i.isRenderTargetTexture) {
              var a = i.mapping;
              if (a === ya || a === ba) {
                if (t.has(i)) return n(t.get(i).texture, i.mapping);
                var o = i.image;
                if (o && o.height > 0) {
                  var s = new Lc(o.height / 2);
                  return (
                    s.fromEquirectangularTexture(e, i),
                    t.set(i, s),
                    i.addEventListener("dispose", r),
                    n(s.texture, i.mapping)
                  );
                }
                return null;
              }
            }
            return i;
          },
          dispose: function () {
            t = new WeakMap();
          },
        };
      }
      Wc.physical = {
        uniforms: Sc([
          Wc.standard.uniforms,
          {
            clearcoat: { value: 0 },
            clearcoatMap: { value: null },
            clearcoatRoughness: { value: 0 },
            clearcoatRoughnessMap: { value: null },
            clearcoatNormalScale: { value: new Us(1, 1) },
            clearcoatNormalMap: { value: null },
            sheen: { value: 0 },
            sheenColor: { value: new il(0) },
            sheenColorMap: { value: null },
            sheenRoughness: { value: 1 },
            sheenRoughnessMap: { value: null },
            transmission: { value: 0 },
            transmissionMap: { value: null },
            transmissionSamplerSize: { value: new Us() },
            transmissionSamplerMap: { value: null },
            thickness: { value: 0 },
            thicknessMap: { value: null },
            attenuationDistance: { value: 0 },
            attenuationColor: { value: new il(0) },
            specularIntensity: { value: 1 },
            specularIntensityMap: { value: null },
            specularColor: { value: new il(1, 1, 1) },
            specularColorMap: { value: null },
          },
        ]),
        vertexShader: jc.meshphysical_vert,
        fragmentShader: jc.meshphysical_frag,
      };
      var Qc = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : -1,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : -1,
            s =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 0.1,
            l =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : 2e3;
          return (
            Kr(this, n),
            ((e = t.call(this)).type = "OrthographicCamera"),
            (e.zoom = 1),
            (e.view = null),
            (e.left = r),
            (e.right = i),
            (e.top = a),
            (e.bottom = o),
            (e.near = s),
            (e.far = l),
            e.updateProjectionMatrix(),
            e
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e, t) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e, t),
                  (this.left = e.left),
                  (this.right = e.right),
                  (this.top = e.top),
                  (this.bottom = e.bottom),
                  (this.near = e.near),
                  (this.far = e.far),
                  (this.zoom = e.zoom),
                  (this.view =
                    null === e.view ? null : Object.assign({}, e.view)),
                  this
                );
              },
            },
            {
              key: "setViewOffset",
              value: function (e, t, n, r, i, a) {
                null === this.view &&
                  (this.view = {
                    enabled: !0,
                    fullWidth: 1,
                    fullHeight: 1,
                    offsetX: 0,
                    offsetY: 0,
                    width: 1,
                    height: 1,
                  }),
                  (this.view.enabled = !0),
                  (this.view.fullWidth = e),
                  (this.view.fullHeight = t),
                  (this.view.offsetX = n),
                  (this.view.offsetY = r),
                  (this.view.width = i),
                  (this.view.height = a),
                  this.updateProjectionMatrix();
              },
            },
            {
              key: "clearViewOffset",
              value: function () {
                null !== this.view && (this.view.enabled = !1),
                  this.updateProjectionMatrix();
              },
            },
            {
              key: "updateProjectionMatrix",
              value: function () {
                var e = (this.right - this.left) / (2 * this.zoom),
                  t = (this.top - this.bottom) / (2 * this.zoom),
                  n = (this.right + this.left) / 2,
                  r = (this.top + this.bottom) / 2,
                  i = n - e,
                  a = n + e,
                  o = r + t,
                  s = r - t;
                if (null !== this.view && this.view.enabled) {
                  var l =
                      (this.right - this.left) /
                      this.view.fullWidth /
                      this.zoom,
                    u =
                      (this.top - this.bottom) /
                      this.view.fullHeight /
                      this.zoom;
                  (a = (i += l * this.view.offsetX) + l * this.view.width),
                    (s = (o -= u * this.view.offsetY) - u * this.view.height);
                }
                this.projectionMatrix.makeOrthographic(
                  i,
                  a,
                  o,
                  s,
                  this.near,
                  this.far
                ),
                  this.projectionMatrixInverse
                    .copy(this.projectionMatrix)
                    .invert();
              },
            },
            {
              key: "toJSON",
              value: function (e) {
                var t = fi(ri(n.prototype), "toJSON", this).call(this, e);
                return (
                  (t.object.zoom = this.zoom),
                  (t.object.left = this.left),
                  (t.object.right = this.right),
                  (t.object.top = this.top),
                  (t.object.bottom = this.bottom),
                  (t.object.near = this.near),
                  (t.object.far = this.far),
                  null !== this.view &&
                    (t.object.view = Object.assign({}, this.view)),
                  t
                );
              },
            },
          ]),
          n
        );
      })(kc);
      Qc.prototype.isOrthographicCamera = !0;
      var Zc = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
        Kc = 20,
        ef = new Qc(),
        tf = new il(),
        nf = null,
        rf = (1 + Math.sqrt(5)) / 2,
        af = 1 / rf,
        of = [
          new yl(1, 1, 1),
          new yl(-1, 1, 1),
          new yl(1, 1, -1),
          new yl(-1, 1, -1),
          new yl(0, rf, af),
          new yl(0, rf, -af),
          new yl(af, 0, rf),
          new yl(-af, 0, rf),
          new yl(rf, af, 0),
          new yl(-rf, af, 0),
        ],
        sf = (function () {
          function e(t) {
            Kr(this, e),
              (this._renderer = t),
              (this._pingPongRenderTarget = null),
              (this._lodMax = 0),
              (this._cubeSize = 0),
              (this._lodPlanes = []),
              (this._sizeLods = []),
              (this._sigmas = []),
              (this._blurMaterial = null),
              (this._cubemapMaterial = null),
              (this._equirectMaterial = null),
              this._compileMaterial(this._blurMaterial);
          }
          return (
            ti(e, [
              {
                key: "fromScene",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 0.1,
                    r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : 100;
                  (nf = this._renderer.getRenderTarget()), this._setSize(256);
                  var i = this._allocateTargets();
                  return (
                    (i.depthBuffer = !0),
                    this._sceneToCubeUV(e, n, r, i),
                    t > 0 && this._blur(i, 0, 0, t),
                    this._applyPMREM(i),
                    this._cleanup(i),
                    i
                  );
                },
              },
              {
                key: "fromEquirectangular",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null;
                  return this._fromTexture(e, t);
                },
              },
              {
                key: "fromCubemap",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null;
                  return this._fromTexture(e, t);
                },
              },
              {
                key: "compileCubemapShader",
                value: function () {
                  null === this._cubemapMaterial &&
                    ((this._cubemapMaterial = ff()),
                    this._compileMaterial(this._cubemapMaterial));
                },
              },
              {
                key: "compileEquirectangularShader",
                value: function () {
                  null === this._equirectMaterial &&
                    ((this._equirectMaterial = cf()),
                    this._compileMaterial(this._equirectMaterial));
                },
              },
              {
                key: "dispose",
                value: function () {
                  this._dispose(),
                    null !== this._cubemapMaterial &&
                      this._cubemapMaterial.dispose(),
                    null !== this._equirectMaterial &&
                      this._equirectMaterial.dispose();
                },
              },
              {
                key: "_setSize",
                value: function (e) {
                  (this._lodMax = Math.floor(Math.log2(e))),
                    (this._cubeSize = Math.pow(2, this._lodMax));
                },
              },
              {
                key: "_dispose",
                value: function () {
                  null !== this._blurMaterial && this._blurMaterial.dispose(),
                    null !== this._pingPongRenderTarget &&
                      this._pingPongRenderTarget.dispose();
                  for (var e = 0; e < this._lodPlanes.length; e++)
                    this._lodPlanes[e].dispose();
                },
              },
              {
                key: "_cleanup",
                value: function (e) {
                  this._renderer.setRenderTarget(nf),
                    (e.scissorTest = !1),
                    uf(e, 0, 0, e.width, e.height);
                },
              },
              {
                key: "_fromTexture",
                value: function (e, t) {
                  e.mapping === ma || e.mapping === ga
                    ? this._setSize(
                        0 === e.image.length
                          ? 16
                          : e.image[0].width || e.image[0].image.width
                      )
                    : this._setSize(e.image.width / 4),
                    (nf = this._renderer.getRenderTarget());
                  var n = t || this._allocateTargets();
                  return (
                    this._textureToCubeUV(e, n),
                    this._applyPMREM(n),
                    this._cleanup(n),
                    n
                  );
                },
              },
              {
                key: "_allocateTargets",
                value: function () {
                  var e = 3 * Math.max(this._cubeSize, 112),
                    t = 4 * this._cubeSize - 32,
                    n = {
                      magFilter: Aa,
                      minFilter: Aa,
                      generateMipmaps: !1,
                      type: Ua,
                      format: Xa,
                      encoding: Wo,
                      depthBuffer: !1,
                    },
                    r = lf(e, t, n);
                  if (
                    null === this._pingPongRenderTarget ||
                    this._pingPongRenderTarget.width !== e
                  ) {
                    null !== this._pingPongRenderTarget && this._dispose(),
                      (this._pingPongRenderTarget = lf(e, t, n));
                    var i = this._lodMax,
                      a = (function (e) {
                        for (
                          var t = [],
                            n = [],
                            r = [],
                            i = e,
                            a = e - 4 + 1 + Zc.length,
                            o = 0;
                          o < a;
                          o++
                        ) {
                          var s = Math.pow(2, i);
                          n.push(s);
                          var l = 1 / s;
                          o > e - 4
                            ? (l = Zc[o - e + 4 - 1])
                            : 0 === o && (l = 0),
                            r.push(l);
                          for (
                            var u = 1 / (s - 1),
                              c = -u / 2,
                              f = 1 + u / 2,
                              d = [c, c, f, c, f, f, c, c, f, f, c, f],
                              h = 6,
                              p = 6,
                              v = 3,
                              m = 2,
                              g = 1,
                              y = new Float32Array(v * p * h),
                              b = new Float32Array(m * p * h),
                              x = new Float32Array(g * p * h),
                              w = 0;
                            w < h;
                            w++
                          ) {
                            var _ = ((w % 3) * 2) / 3 - 1,
                              S = w > 2 ? 0 : -1,
                              M = [
                                _,
                                S,
                                0,
                                _ + 2 / 3,
                                S,
                                0,
                                _ + 2 / 3,
                                S + 1,
                                0,
                                _,
                                S,
                                0,
                                _ + 2 / 3,
                                S + 1,
                                0,
                                _,
                                S + 1,
                                0,
                              ];
                            y.set(M, v * p * w), b.set(d, m * p * w);
                            var E = [w, w, w, w, w, w];
                            x.set(E, g * p * w);
                          }
                          var k = new tc();
                          k.setAttribute("position", new Nu(y, v)),
                            k.setAttribute("uv", new Nu(b, m)),
                            k.setAttribute("faceIndex", new Nu(x, g)),
                            t.push(k),
                            i > 4 && i--;
                        }
                        return { lodPlanes: t, sizeLods: n, sigmas: r };
                      })(i);
                    (this._sizeLods = a.sizeLods),
                      (this._lodPlanes = a.lodPlanes),
                      (this._sigmas = a.sigmas),
                      (this._blurMaterial = (function (e, t, n) {
                        var r = new Float32Array(Kc),
                          i = new yl(0, 1, 0);
                        return new Ec({
                          name: "SphericalGaussianBlur",
                          defines: {
                            n: Kc,
                            CUBEUV_TEXEL_WIDTH: 1 / t,
                            CUBEUV_TEXEL_HEIGHT: 1 / n,
                            CUBEUV_MAX_MIP: "".concat(e, ".0"),
                          },
                          uniforms: {
                            envMap: { value: null },
                            samples: { value: 1 },
                            weights: { value: r },
                            latitudinal: { value: !1 },
                            dTheta: { value: 0 },
                            mipInt: { value: 0 },
                            poleAxis: { value: i },
                          },
                          vertexShader:
                            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                          fragmentShader:
                            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",
                          blending: Pi,
                          depthTest: !1,
                          depthWrite: !1,
                        });
                      })(i, e, t));
                  }
                  return r;
                },
              },
              {
                key: "_compileMaterial",
                value: function (e) {
                  var t = new bc(this._lodPlanes[0], e);
                  this._renderer.compile(t, ef);
                },
              },
              {
                key: "_sceneToCubeUV",
                value: function (e, t, n, r) {
                  var i = new Tc(90, 1, t, n),
                    a = [1, -1, 1, 1, 1, 1],
                    o = [1, 1, 1, -1, -1, -1],
                    s = this._renderer,
                    l = s.autoClear,
                    u = s.toneMapping;
                  s.getClearColor(tf), (s.toneMapping = ua), (s.autoClear = !1);
                  var c = new zu({
                      name: "PMREM.Background",
                      side: ki,
                      depthWrite: !1,
                      depthTest: !1,
                    }),
                    f = new bc(new wc(), c),
                    d = !1,
                    h = e.background;
                  h
                    ? h.isColor &&
                      (c.color.copy(h), (e.background = null), (d = !0))
                    : (c.color.copy(tf), (d = !0));
                  for (var p = 0; p < 6; p++) {
                    var v = p % 3;
                    0 === v
                      ? (i.up.set(0, a[p], 0), i.lookAt(o[p], 0, 0))
                      : 1 === v
                      ? (i.up.set(0, 0, a[p]), i.lookAt(0, o[p], 0))
                      : (i.up.set(0, a[p], 0), i.lookAt(0, 0, o[p]));
                    var m = this._cubeSize;
                    uf(r, v * m, p > 2 ? m : 0, m, m),
                      s.setRenderTarget(r),
                      d && s.render(f, i),
                      s.render(e, i);
                  }
                  f.geometry.dispose(),
                    f.material.dispose(),
                    (s.toneMapping = u),
                    (s.autoClear = l),
                    (e.background = h);
                },
              },
              {
                key: "_textureToCubeUV",
                value: function (e, t) {
                  var n = this._renderer,
                    r = e.mapping === ma || e.mapping === ga;
                  r
                    ? (null === this._cubemapMaterial &&
                        (this._cubemapMaterial = ff()),
                      (this._cubemapMaterial.uniforms.flipEnvMap.value =
                        !1 === e.isRenderTargetTexture ? -1 : 1))
                    : null === this._equirectMaterial &&
                      (this._equirectMaterial = cf());
                  var i = r ? this._cubemapMaterial : this._equirectMaterial,
                    a = new bc(this._lodPlanes[0], i);
                  i.uniforms.envMap.value = e;
                  var o = this._cubeSize;
                  uf(t, 0, 0, 3 * o, 2 * o),
                    n.setRenderTarget(t),
                    n.render(a, ef);
                },
              },
              {
                key: "_applyPMREM",
                value: function (e) {
                  var t = this._renderer,
                    n = t.autoClear;
                  t.autoClear = !1;
                  for (var r = 1; r < this._lodPlanes.length; r++) {
                    var i = Math.sqrt(
                        this._sigmas[r] * this._sigmas[r] -
                          this._sigmas[r - 1] * this._sigmas[r - 1]
                      ),
                      a = of[(r - 1) % of.length];
                    this._blur(e, r - 1, r, i, a);
                  }
                  t.autoClear = n;
                },
              },
              {
                key: "_blur",
                value: function (e, t, n, r, i) {
                  var a = this._pingPongRenderTarget;
                  this._halfBlur(e, a, t, n, r, "latitudinal", i),
                    this._halfBlur(a, e, n, n, r, "longitudinal", i);
                },
              },
              {
                key: "_halfBlur",
                value: function (e, t, n, r, i, a, o) {
                  var s = this._renderer,
                    l = this._blurMaterial;
                  "latitudinal" !== a &&
                    "longitudinal" !== a &&
                    console.error(
                      "blur direction must be either latitudinal or longitudinal!"
                    );
                  var u = new bc(this._lodPlanes[r], l),
                    c = l.uniforms,
                    f = this._sizeLods[n] - 1,
                    d = isFinite(i) ? Math.PI / (2 * f) : (2 * Math.PI) / 39,
                    h = i / d,
                    p = isFinite(i) ? 1 + Math.floor(3 * h) : Kc;
                  p > Kc &&
                    console.warn(
                      "sigmaRadians, "
                        .concat(
                          i,
                          ", is too large and will clip, as it requested "
                        )
                        .concat(p, " samples when the maximum is set to ")
                        .concat(Kc)
                    );
                  for (var v = [], m = 0, g = 0; g < Kc; ++g) {
                    var y = g / h,
                      b = Math.exp((-y * y) / 2);
                    v.push(b), 0 === g ? (m += b) : g < p && (m += 2 * b);
                  }
                  for (var x = 0; x < v.length; x++) v[x] = v[x] / m;
                  (c.envMap.value = e.texture),
                    (c.samples.value = p),
                    (c.weights.value = v),
                    (c.latitudinal.value = "latitudinal" === a),
                    o && (c.poleAxis.value = o);
                  var w = this._lodMax;
                  (c.dTheta.value = d), (c.mipInt.value = w - n);
                  var _ = this._sizeLods[r];
                  uf(
                    t,
                    3 * _ * (r > w - 4 ? r - w + 4 : 0),
                    4 * (this._cubeSize - _),
                    3 * _,
                    2 * _
                  ),
                    s.setRenderTarget(t),
                    s.render(u, ef);
                },
              },
            ]),
            e
          );
        })();
      function lf(e, t, n) {
        var r = new fl(e, t, n);
        return (
          (r.texture.mapping = xa),
          (r.texture.name = "PMREM.cubeUv"),
          (r.scissorTest = !0),
          r
        );
      }
      function uf(e, t, n, r, i) {
        e.viewport.set(t, n, r, i), e.scissor.set(t, n, r, i);
      }
      function cf() {
        return new Ec({
          name: "EquirectangularToCubeUV",
          uniforms: { envMap: { value: null } },
          vertexShader:
            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
          fragmentShader:
            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",
          blending: Pi,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function ff() {
        return new Ec({
          name: "CubemapToCubeUV",
          uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
          vertexShader:
            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
          fragmentShader:
            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",
          blending: Pi,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function df(e) {
        var t = new WeakMap(),
          n = null;
        function r(e) {
          var n = e.target;
          n.removeEventListener("dispose", r);
          var i = t.get(n);
          void 0 !== i && (t.delete(n), i.dispose());
        }
        return {
          get: function (i) {
            if (i && i.isTexture) {
              var a = i.mapping,
                o = a === ya || a === ba,
                s = a === ma || a === ga;
              if (o || s) {
                if (i.isRenderTargetTexture && !0 === i.needsPMREMUpdate) {
                  i.needsPMREMUpdate = !1;
                  var l = t.get(i);
                  return (
                    null === n && (n = new sf(e)),
                    (l = o ? n.fromEquirectangular(i, l) : n.fromCubemap(i, l)),
                    t.set(i, l),
                    l.texture
                  );
                }
                if (t.has(i)) return t.get(i).texture;
                var u = i.image;
                if (
                  (o && u && u.height > 0) ||
                  (s &&
                    u &&
                    (function (e) {
                      for (var t = 0, n = 6, r = 0; r < n; r++)
                        void 0 !== e[r] && t++;
                      return t === n;
                    })(u))
                ) {
                  null === n && (n = new sf(e));
                  var c = o ? n.fromEquirectangular(i) : n.fromCubemap(i);
                  return (
                    t.set(i, c), i.addEventListener("dispose", r), c.texture
                  );
                }
                return null;
              }
            }
            return i;
          },
          dispose: function () {
            (t = new WeakMap()), null !== n && (n.dispose(), (n = null));
          },
        };
      }
      function hf(e) {
        var t = {};
        function n(n) {
          if (void 0 !== t[n]) return t[n];
          var r;
          switch (n) {
            case "WEBGL_depth_texture":
              r =
                e.getExtension("WEBGL_depth_texture") ||
                e.getExtension("MOZ_WEBGL_depth_texture") ||
                e.getExtension("WEBKIT_WEBGL_depth_texture");
              break;
            case "EXT_texture_filter_anisotropic":
              r =
                e.getExtension("EXT_texture_filter_anisotropic") ||
                e.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
                e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
              break;
            case "WEBGL_compressed_texture_s3tc":
              r =
                e.getExtension("WEBGL_compressed_texture_s3tc") ||
                e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
              break;
            case "WEBGL_compressed_texture_pvrtc":
              r =
                e.getExtension("WEBGL_compressed_texture_pvrtc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
              break;
            default:
              r = e.getExtension(n);
          }
          return (t[n] = r), r;
        }
        return {
          has: function (e) {
            return null !== n(e);
          },
          init: function (e) {
            e.isWebGL2
              ? n("EXT_color_buffer_float")
              : (n("WEBGL_depth_texture"),
                n("OES_texture_float"),
                n("OES_texture_half_float"),
                n("OES_texture_half_float_linear"),
                n("OES_standard_derivatives"),
                n("OES_element_index_uint"),
                n("OES_vertex_array_object"),
                n("ANGLE_instanced_arrays")),
              n("OES_texture_float_linear"),
              n("EXT_color_buffer_half_float"),
              n("WEBGL_multisampled_render_to_texture");
          },
          get: function (e) {
            var t = n(e);
            return (
              null === t &&
                console.warn(
                  "THREE.WebGLRenderer: " + e + " extension not supported."
                ),
              t
            );
          },
        };
      }
      function pf(e, t, n, r) {
        var i = {},
          a = new WeakMap();
        function o(e) {
          var s = e.target;
          for (var l in (null !== s.index && t.remove(s.index), s.attributes))
            t.remove(s.attributes[l]);
          s.removeEventListener("dispose", o), delete i[s.id];
          var u = a.get(s);
          u && (t.remove(u), a.delete(s)),
            r.releaseStatesOfGeometry(s),
            !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount,
            n.memory.geometries--;
        }
        function s(e) {
          var n = [],
            r = e.index,
            i = e.attributes.position,
            o = 0;
          if (null !== r) {
            var s = r.array;
            o = r.version;
            for (var l = 0, u = s.length; l < u; l += 3) {
              var c = s[l + 0],
                f = s[l + 1],
                d = s[l + 2];
              n.push(c, f, f, d, d, c);
            }
          } else {
            var h = i.array;
            o = i.version;
            for (var p = 0, v = h.length / 3 - 1; p < v; p += 3) {
              var m = p + 0,
                g = p + 1,
                y = p + 2;
              n.push(m, g, g, y, y, m);
            }
          }
          var b = new (Gs(n) ? Wu : ju)(n, 1);
          b.version = o;
          var x = a.get(e);
          x && t.remove(x), a.set(e, b);
        }
        return {
          get: function (e, t) {
            return (
              !0 === i[t.id] ||
                (t.addEventListener("dispose", o),
                (i[t.id] = !0),
                n.memory.geometries++),
              t
            );
          },
          update: function (e) {
            var n = e.attributes;
            for (var r in n) t.update(n[r], 34962);
            var i = e.morphAttributes;
            for (var a in i)
              for (var o = i[a], s = 0, l = o.length; s < l; s++)
                t.update(o[s], 34962);
          },
          getWireframeAttribute: function (e) {
            var t = a.get(e);
            if (t) {
              var n = e.index;
              null !== n && t.version < n.version && s(e);
            } else s(e);
            return a.get(e);
          },
        };
      }
      function vf(e, t, n, r) {
        var i,
          a,
          o,
          s = r.isWebGL2;
        (this.setMode = function (e) {
          i = e;
        }),
          (this.setIndex = function (e) {
            (a = e.type), (o = e.bytesPerElement);
          }),
          (this.render = function (t, r) {
            e.drawElements(i, r, a, t * o), n.update(r, i, 1);
          }),
          (this.renderInstances = function (r, l, u) {
            if (0 !== u) {
              var c, f;
              if (s) (c = e), (f = "drawElementsInstanced");
              else if (
                ((f = "drawElementsInstancedANGLE"),
                null === (c = t.get("ANGLE_instanced_arrays")))
              )
                return void console.error(
                  "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
              c[f](i, l, a, r * o, u), n.update(l, i, u);
            }
          });
      }
      function mf(e) {
        var t = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
        return {
          memory: { geometries: 0, textures: 0 },
          render: t,
          programs: null,
          autoReset: !0,
          reset: function () {
            t.frame++,
              (t.calls = 0),
              (t.triangles = 0),
              (t.points = 0),
              (t.lines = 0);
          },
          update: function (e, n, r) {
            switch ((t.calls++, n)) {
              case 4:
                t.triangles += r * (e / 3);
                break;
              case 1:
                t.lines += r * (e / 2);
                break;
              case 3:
                t.lines += r * (e - 1);
                break;
              case 2:
                t.lines += r * e;
                break;
              case 0:
                t.points += r * e;
                break;
              default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", n);
            }
          },
        };
      }
      function gf(e, t) {
        return e[0] - t[0];
      }
      function yf(e, t) {
        return Math.abs(t[1]) - Math.abs(e[1]);
      }
      function bf(e, t) {
        var n = 1,
          r = t.isInterleavedBufferAttribute ? t.data.array : t.array;
        r instanceof Int8Array
          ? (n = 127)
          : r instanceof Int16Array
          ? (n = 32767)
          : r instanceof Int32Array
          ? (n = 2147483647)
          : console.error(
              "THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",
              r
            ),
          e.divideScalar(n);
      }
      function xf(e, t, n) {
        for (
          var r = {},
            i = new Float32Array(8),
            a = new WeakMap(),
            o = new cl(),
            s = [],
            l = 0;
          l < 8;
          l++
        )
          s[l] = [l, 0];
        return {
          update: function (l, u, c, f) {
            var d = l.morphTargetInfluences;
            if (!0 === t.isWebGL2) {
              var h =
                  u.morphAttributes.position ||
                  u.morphAttributes.normal ||
                  u.morphAttributes.color,
                p = void 0 !== h ? h.length : 0,
                v = a.get(u);
              if (void 0 === v || v.count !== p) {
                void 0 !== v && v.texture.dispose();
                var m = void 0 !== u.morphAttributes.position,
                  g = void 0 !== u.morphAttributes.normal,
                  y = void 0 !== u.morphAttributes.color,
                  b = u.morphAttributes.position || [],
                  x = u.morphAttributes.normal || [],
                  w = u.morphAttributes.color || [],
                  _ = 0;
                !0 === m && (_ = 1), !0 === g && (_ = 2), !0 === y && (_ = 3);
                var S = u.attributes.position.count * _,
                  M = 1;
                S > t.maxTextureSize &&
                  ((M = Math.ceil(S / t.maxTextureSize)),
                  (S = t.maxTextureSize));
                var E = new Float32Array(S * M * 4 * p),
                  k = new dl(E, S, M, p);
                (k.type = Ha), (k.needsUpdate = !0);
                for (var T = 4 * _, C = 0; C < p; C++)
                  for (
                    var A = b[C], P = x[C], L = w[C], R = S * M * 4 * C, O = 0;
                    O < A.count;
                    O++
                  ) {
                    var z = O * T;
                    !0 === m &&
                      (o.fromBufferAttribute(A, O),
                      !0 === A.normalized && bf(o, A),
                      (E[R + z + 0] = o.x),
                      (E[R + z + 1] = o.y),
                      (E[R + z + 2] = o.z),
                      (E[R + z + 3] = 0)),
                      !0 === g &&
                        (o.fromBufferAttribute(P, O),
                        !0 === P.normalized && bf(o, P),
                        (E[R + z + 4] = o.x),
                        (E[R + z + 5] = o.y),
                        (E[R + z + 6] = o.z),
                        (E[R + z + 7] = 0)),
                      !0 === y &&
                        (o.fromBufferAttribute(L, O),
                        !0 === L.normalized && bf(o, L),
                        (E[R + z + 8] = o.x),
                        (E[R + z + 9] = o.y),
                        (E[R + z + 10] = o.z),
                        (E[R + z + 11] = 4 === L.itemSize ? o.w : 1));
                  }
                (v = { count: p, texture: k, size: new Us(S, M) }),
                  a.set(u, v),
                  u.addEventListener("dispose", function e() {
                    k.dispose(),
                      a.delete(u),
                      u.removeEventListener("dispose", e);
                  });
              }
              for (var D = 0, I = 0; I < d.length; I++) D += d[I];
              var N = u.morphTargetsRelative ? 1 : 1 - D;
              f.getUniforms().setValue(e, "morphTargetBaseInfluence", N),
                f.getUniforms().setValue(e, "morphTargetInfluences", d),
                f
                  .getUniforms()
                  .setValue(e, "morphTargetsTexture", v.texture, n),
                f.getUniforms().setValue(e, "morphTargetsTextureSize", v.size);
            } else {
              var F = void 0 === d ? 0 : d.length,
                B = r[u.id];
              if (void 0 === B || B.length !== F) {
                B = [];
                for (var H = 0; H < F; H++) B[H] = [H, 0];
                r[u.id] = B;
              }
              for (var U = 0; U < F; U++) {
                var j = B[U];
                (j[0] = U), (j[1] = d[U]);
              }
              B.sort(yf);
              for (var G = 0; G < 8; G++)
                G < F && B[G][1]
                  ? ((s[G][0] = B[G][0]), (s[G][1] = B[G][1]))
                  : ((s[G][0] = Number.MAX_SAFE_INTEGER), (s[G][1] = 0));
              s.sort(gf);
              for (
                var W = u.morphAttributes.position,
                  V = u.morphAttributes.normal,
                  q = 0,
                  X = 0;
                X < 8;
                X++
              ) {
                var Y = s[X],
                  J = Y[0],
                  $ = Y[1];
                J !== Number.MAX_SAFE_INTEGER && $
                  ? (W &&
                      u.getAttribute("morphTarget" + X) !== W[J] &&
                      u.setAttribute("morphTarget" + X, W[J]),
                    V &&
                      u.getAttribute("morphNormal" + X) !== V[J] &&
                      u.setAttribute("morphNormal" + X, V[J]),
                    (i[X] = $),
                    (q += $))
                  : (W &&
                      !0 === u.hasAttribute("morphTarget" + X) &&
                      u.deleteAttribute("morphTarget" + X),
                    V &&
                      !0 === u.hasAttribute("morphNormal" + X) &&
                      u.deleteAttribute("morphNormal" + X),
                    (i[X] = 0));
              }
              var Q = u.morphTargetsRelative ? 1 : 1 - q;
              f.getUniforms().setValue(e, "morphTargetBaseInfluence", Q),
                f.getUniforms().setValue(e, "morphTargetInfluences", i);
            }
          },
        };
      }
      function wf(e, t, n, r) {
        var i = new WeakMap();
        function a(e) {
          var t = e.target;
          t.removeEventListener("dispose", a),
            n.remove(t.instanceMatrix),
            null !== t.instanceColor && n.remove(t.instanceColor);
        }
        return {
          update: function (e) {
            var o = r.render.frame,
              s = e.geometry,
              l = t.get(e, s);
            return (
              i.get(l) !== o && (t.update(l), i.set(l, o)),
              e.isInstancedMesh &&
                (!1 === e.hasEventListener("dispose", a) &&
                  e.addEventListener("dispose", a),
                n.update(e.instanceMatrix, 34962),
                null !== e.instanceColor && n.update(e.instanceColor, 34962)),
              l
            );
          },
          dispose: function () {
            i = new WeakMap();
          },
        };
      }
      var _f = new ul(),
        Sf = new dl(),
        Mf = new pl(),
        Ef = new Pc(),
        kf = [],
        Tf = [],
        Cf = new Float32Array(16),
        Af = new Float32Array(9),
        Pf = new Float32Array(4);
      function Lf(e, t, n) {
        var r = e[0];
        if (r <= 0 || r > 0) return e;
        var i = t * n,
          a = kf[i];
        if (
          (void 0 === a && ((a = new Float32Array(i)), (kf[i] = a)), 0 !== t)
        ) {
          r.toArray(a, 0);
          for (var o = 1, s = 0; o !== t; ++o) (s += n), e[o].toArray(a, s);
        }
        return a;
      }
      function Rf(e, t) {
        if (e.length !== t.length) return !1;
        for (var n = 0, r = e.length; n < r; n++) if (e[n] !== t[n]) return !1;
        return !0;
      }
      function Of(e, t) {
        for (var n = 0, r = t.length; n < r; n++) e[n] = t[n];
      }
      function zf(e, t) {
        var n = Tf[t];
        void 0 === n && ((n = new Int32Array(t)), (Tf[t] = n));
        for (var r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
        return n;
      }
      function Df(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1f(this.addr, t), (n[0] = t));
      }
      function If(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y) ||
            (e.uniform2f(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (Rf(n, t)) return;
          e.uniform2fv(this.addr, t), Of(n, t);
        }
      }
      function Nf(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z) ||
            (e.uniform3f(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else if (void 0 !== t.r)
          (n[0] === t.r && n[1] === t.g && n[2] === t.b) ||
            (e.uniform3f(this.addr, t.r, t.g, t.b),
            (n[0] = t.r),
            (n[1] = t.g),
            (n[2] = t.b));
        else {
          if (Rf(n, t)) return;
          e.uniform3fv(this.addr, t), Of(n, t);
        }
      }
      function Ff(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w) ||
            (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (Rf(n, t)) return;
          e.uniform4fv(this.addr, t), Of(n, t);
        }
      }
      function Bf(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (Rf(n, t)) return;
          e.uniformMatrix2fv(this.addr, !1, t), Of(n, t);
        } else {
          if (Rf(n, r)) return;
          Pf.set(r), e.uniformMatrix2fv(this.addr, !1, Pf), Of(n, r);
        }
      }
      function Hf(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (Rf(n, t)) return;
          e.uniformMatrix3fv(this.addr, !1, t), Of(n, t);
        } else {
          if (Rf(n, r)) return;
          Af.set(r), e.uniformMatrix3fv(this.addr, !1, Af), Of(n, r);
        }
      }
      function Uf(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (Rf(n, t)) return;
          e.uniformMatrix4fv(this.addr, !1, t), Of(n, t);
        } else {
          if (Rf(n, r)) return;
          Cf.set(r), e.uniformMatrix4fv(this.addr, !1, Cf), Of(n, r);
        }
      }
      function jf(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1i(this.addr, t), (n[0] = t));
      }
      function Gf(e, t) {
        var n = this.cache;
        Rf(n, t) || (e.uniform2iv(this.addr, t), Of(n, t));
      }
      function Wf(e, t) {
        var n = this.cache;
        Rf(n, t) || (e.uniform3iv(this.addr, t), Of(n, t));
      }
      function Vf(e, t) {
        var n = this.cache;
        Rf(n, t) || (e.uniform4iv(this.addr, t), Of(n, t));
      }
      function qf(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1ui(this.addr, t), (n[0] = t));
      }
      function Xf(e, t) {
        var n = this.cache;
        Rf(n, t) || (e.uniform2uiv(this.addr, t), Of(n, t));
      }
      function Yf(e, t) {
        var n = this.cache;
        Rf(n, t) || (e.uniform3uiv(this.addr, t), Of(n, t));
      }
      function Jf(e, t) {
        var n = this.cache;
        Rf(n, t) || (e.uniform4uiv(this.addr, t), Of(n, t));
      }
      function $f(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture2D(t || _f, i);
      }
      function Qf(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture3D(t || Mf, i);
      }
      function Zf(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTextureCube(t || Ef, i);
      }
      function Kf(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture2DArray(t || Sf, i);
      }
      function ed(e, t) {
        e.uniform1fv(this.addr, t);
      }
      function td(e, t) {
        var n = Lf(t, this.size, 2);
        e.uniform2fv(this.addr, n);
      }
      function nd(e, t) {
        var n = Lf(t, this.size, 3);
        e.uniform3fv(this.addr, n);
      }
      function rd(e, t) {
        var n = Lf(t, this.size, 4);
        e.uniform4fv(this.addr, n);
      }
      function id(e, t) {
        var n = Lf(t, this.size, 4);
        e.uniformMatrix2fv(this.addr, !1, n);
      }
      function ad(e, t) {
        var n = Lf(t, this.size, 9);
        e.uniformMatrix3fv(this.addr, !1, n);
      }
      function od(e, t) {
        var n = Lf(t, this.size, 16);
        e.uniformMatrix4fv(this.addr, !1, n);
      }
      function sd(e, t) {
        e.uniform1iv(this.addr, t);
      }
      function ld(e, t) {
        e.uniform2iv(this.addr, t);
      }
      function ud(e, t) {
        e.uniform3iv(this.addr, t);
      }
      function cd(e, t) {
        e.uniform4iv(this.addr, t);
      }
      function fd(e, t) {
        e.uniform1uiv(this.addr, t);
      }
      function dd(e, t) {
        e.uniform2uiv(this.addr, t);
      }
      function hd(e, t) {
        e.uniform3uiv(this.addr, t);
      }
      function pd(e, t) {
        e.uniform4uiv(this.addr, t);
      }
      function vd(e, t, n) {
        var r = t.length,
          i = zf(n, r);
        e.uniform1iv(this.addr, i);
        for (var a = 0; a !== r; ++a) n.setTexture2D(t[a] || _f, i[a]);
      }
      function md(e, t, n) {
        var r = t.length,
          i = zf(n, r);
        e.uniform1iv(this.addr, i);
        for (var a = 0; a !== r; ++a) n.setTexture3D(t[a] || Mf, i[a]);
      }
      function gd(e, t, n) {
        var r = t.length,
          i = zf(n, r);
        e.uniform1iv(this.addr, i);
        for (var a = 0; a !== r; ++a) n.setTextureCube(t[a] || Ef, i[a]);
      }
      function yd(e, t, n) {
        var r = t.length,
          i = zf(n, r);
        e.uniform1iv(this.addr, i);
        for (var a = 0; a !== r; ++a) n.setTexture2DArray(t[a] || Sf, i[a]);
      }
      function bd(e, t, n) {
        (this.id = e),
          (this.addr = n),
          (this.cache = []),
          (this.setValue = (function (e) {
            switch (e) {
              case 5126:
                return Df;
              case 35664:
                return If;
              case 35665:
                return Nf;
              case 35666:
                return Ff;
              case 35674:
                return Bf;
              case 35675:
                return Hf;
              case 35676:
                return Uf;
              case 5124:
              case 35670:
                return jf;
              case 35667:
              case 35671:
                return Gf;
              case 35668:
              case 35672:
                return Wf;
              case 35669:
              case 35673:
                return Vf;
              case 5125:
                return qf;
              case 36294:
                return Xf;
              case 36295:
                return Yf;
              case 36296:
                return Jf;
              case 35678:
              case 36198:
              case 36298:
              case 36306:
              case 35682:
                return $f;
              case 35679:
              case 36299:
              case 36307:
                return Qf;
              case 35680:
              case 36300:
              case 36308:
              case 36293:
                return Zf;
              case 36289:
              case 36303:
              case 36311:
              case 36292:
                return Kf;
            }
          })(t.type));
      }
      function xd(e, t, n) {
        (this.id = e),
          (this.addr = n),
          (this.cache = []),
          (this.size = t.size),
          (this.setValue = (function (e) {
            switch (e) {
              case 5126:
                return ed;
              case 35664:
                return td;
              case 35665:
                return nd;
              case 35666:
                return rd;
              case 35674:
                return id;
              case 35675:
                return ad;
              case 35676:
                return od;
              case 5124:
              case 35670:
                return sd;
              case 35667:
              case 35671:
                return ld;
              case 35668:
              case 35672:
                return ud;
              case 35669:
              case 35673:
                return cd;
              case 5125:
                return fd;
              case 36294:
                return dd;
              case 36295:
                return hd;
              case 36296:
                return pd;
              case 35678:
              case 36198:
              case 36298:
              case 36306:
              case 35682:
                return vd;
              case 35679:
              case 36299:
              case 36307:
                return md;
              case 35680:
              case 36300:
              case 36308:
              case 36293:
                return gd;
              case 36289:
              case 36303:
              case 36311:
              case 36292:
                return yd;
            }
          })(t.type));
      }
      function wd(e) {
        (this.id = e), (this.seq = []), (this.map = {});
      }
      (xd.prototype.updateCache = function (e) {
        var t = this.cache;
        e instanceof Float32Array &&
          t.length !== e.length &&
          (this.cache = new Float32Array(e.length)),
          Of(t, e);
      }),
        (wd.prototype.setValue = function (e, t, n) {
          for (var r = this.seq, i = 0, a = r.length; i !== a; ++i) {
            var o = r[i];
            o.setValue(e, t[o.id], n);
          }
        });
      var _d = /(\w+)(\])?(\[|\.)?/g;
      function Sd(e, t) {
        e.seq.push(t), (e.map[t.id] = t);
      }
      function Md(e, t, n) {
        var r = e.name,
          i = r.length;
        for (_d.lastIndex = 0; ; ) {
          var a = _d.exec(r),
            o = _d.lastIndex,
            s = a[1],
            l = "]" === a[2],
            u = a[3];
          if ((l && (s |= 0), void 0 === u || ("[" === u && o + 2 === i))) {
            Sd(n, void 0 === u ? new bd(s, e, t) : new xd(s, e, t));
            break;
          }
          var c = n.map[s];
          void 0 === c && Sd(n, (c = new wd(s))), (n = c);
        }
      }
      function Ed(e, t) {
        (this.seq = []), (this.map = {});
        for (var n = e.getProgramParameter(t, 35718), r = 0; r < n; ++r) {
          var i = e.getActiveUniform(t, r);
          Md(i, e.getUniformLocation(t, i.name), this);
        }
      }
      function kd(e, t, n) {
        var r = e.createShader(t);
        return e.shaderSource(r, n), e.compileShader(r), r;
      }
      (Ed.prototype.setValue = function (e, t, n, r) {
        var i = this.map[t];
        void 0 !== i && i.setValue(e, n, r);
      }),
        (Ed.prototype.setOptional = function (e, t, n) {
          var r = t[n];
          void 0 !== r && this.setValue(e, n, r);
        }),
        (Ed.upload = function (e, t, n, r) {
          for (var i = 0, a = t.length; i !== a; ++i) {
            var o = t[i],
              s = n[o.id];
            !1 !== s.needsUpdate && o.setValue(e, s.value, r);
          }
        }),
        (Ed.seqWithValue = function (e, t) {
          for (var n = [], r = 0, i = e.length; r !== i; ++r) {
            var a = e[r];
            a.id in t && n.push(a);
          }
          return n;
        });
      var Td = 0;
      function Cd(e, t, n) {
        var r = e.getShaderParameter(t, 35713),
          i = e.getShaderInfoLog(t).trim();
        if (r && "" === i) return "";
        var a = parseInt(/ERROR: 0:(\d+)/.exec(i)[1]);
        return (
          n.toUpperCase() +
          "\n\n" +
          i +
          "\n\n" +
          (function (e, t) {
            for (
              var n = e.split("\n"),
                r = [],
                i = Math.max(t - 6, 0),
                a = Math.min(t + 6, n.length),
                o = i;
              o < a;
              o++
            )
              r.push(o + 1 + ": " + n[o]);
            return r.join("\n");
          })(e.getShaderSource(t), a)
        );
      }
      function Ad(e, t) {
        var n = (function (e) {
          switch (e) {
            case Wo:
              return ["Linear", "( value )"];
            case Vo:
              return ["sRGB", "( value )"];
            default:
              return (
                console.warn("THREE.WebGLProgram: Unsupported encoding:", e),
                ["Linear", "( value )"]
              );
          }
        })(t);
        return (
          "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
        );
      }
      function Pd(e, t) {
        var n;
        switch (t) {
          case ca:
            n = "Linear";
            break;
          case fa:
            n = "Reinhard";
            break;
          case da:
            n = "OptimizedCineon";
            break;
          case ha:
            n = "ACESFilmic";
            break;
          case pa:
            n = "Custom";
            break;
          default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t),
              (n = "Linear");
        }
        return (
          "vec3 " +
          e +
          "( vec3 color ) { return " +
          n +
          "ToneMapping( color ); }"
        );
      }
      function Ld(e) {
        return "" !== e;
      }
      function Rd(e, t) {
        return e
          .replace(/NUM_DIR_LIGHTS/g, t.numDirLights)
          .replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights)
          .replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights)
          .replace(/NUM_POINT_LIGHTS/g, t.numPointLights)
          .replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights)
          .replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows)
          .replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows)
          .replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
      }
      function Od(e, t) {
        return e
          .replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes)
          .replace(
            /UNION_CLIPPING_PLANES/g,
            t.numClippingPlanes - t.numClipIntersection
          );
      }
      var zd = /^[ \t]*#include +<([\w\d./]+)>/gm;
      function Dd(e) {
        return e.replace(zd, Id);
      }
      function Id(e, t) {
        var n = jc[t];
        if (void 0 === n)
          throw new Error("Can not resolve #include <" + t + ">");
        return Dd(n);
      }
      var Nd =
          /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,
        Fd =
          /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
      function Bd(e) {
        return e.replace(Fd, Ud).replace(Nd, Hd);
      }
      function Hd(e, t, n, r) {
        return (
          console.warn(
            "WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."
          ),
          Ud(e, t, n, r)
        );
      }
      function Ud(e, t, n, r) {
        for (var i = "", a = parseInt(t); a < parseInt(n); a++)
          i += r
            .replace(/\[\s*i\s*\]/g, "[ " + a + " ]")
            .replace(/UNROLLED_LOOP_INDEX/g, a);
        return i;
      }
      function jd(e) {
        var t =
          "precision " +
          e.precision +
          " float;\nprecision " +
          e.precision +
          " int;";
        return (
          "highp" === e.precision
            ? (t += "\n#define HIGH_PRECISION")
            : "mediump" === e.precision
            ? (t += "\n#define MEDIUM_PRECISION")
            : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"),
          t
        );
      }
      function Gd(e, t, n, r) {
        var i,
          a,
          o = e.getContext(),
          s = n.defines,
          l = n.vertexShader,
          u = n.fragmentShader,
          c = (function (e) {
            var t = "SHADOWMAP_TYPE_BASIC";
            return (
              e.shadowMapType === _i
                ? (t = "SHADOWMAP_TYPE_PCF")
                : e.shadowMapType === Si
                ? (t = "SHADOWMAP_TYPE_PCF_SOFT")
                : e.shadowMapType === Mi && (t = "SHADOWMAP_TYPE_VSM"),
              t
            );
          })(n),
          f = (function (e) {
            var t = "ENVMAP_TYPE_CUBE";
            if (e.envMap)
              switch (e.envMapMode) {
                case ma:
                case ga:
                  t = "ENVMAP_TYPE_CUBE";
                  break;
                case xa:
                  t = "ENVMAP_TYPE_CUBE_UV";
              }
            return t;
          })(n),
          d = (function (e) {
            var t = "ENVMAP_MODE_REFLECTION";
            e.envMap && e.envMapMode === ga && (t = "ENVMAP_MODE_REFRACTION");
            return t;
          })(n),
          h = (function (e) {
            var t = "ENVMAP_BLENDING_NONE";
            if (e.envMap)
              switch (e.combine) {
                case oa:
                  t = "ENVMAP_BLENDING_MULTIPLY";
                  break;
                case sa:
                  t = "ENVMAP_BLENDING_MIX";
                  break;
                case la:
                  t = "ENVMAP_BLENDING_ADD";
              }
            return t;
          })(n),
          p = (function (e) {
            var t = e.envMapCubeUVHeight;
            if (null === t) return null;
            var n = Math.log2(t / 32 + 1) + 3,
              r = 1 / t;
            return {
              texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 112)),
              texelHeight: r,
              maxMip: n,
            };
          })(n),
          v = n.isWebGL2
            ? ""
            : (function (e) {
                return [
                  e.extensionDerivatives ||
                  e.envMapCubeUVHeight ||
                  e.bumpMap ||
                  e.tangentSpaceNormalMap ||
                  e.clearcoatNormalMap ||
                  e.flatShading ||
                  "physical" === e.shaderID
                    ? "#extension GL_OES_standard_derivatives : enable"
                    : "",
                  (e.extensionFragDepth || e.logarithmicDepthBuffer) &&
                  e.rendererExtensionFragDepth
                    ? "#extension GL_EXT_frag_depth : enable"
                    : "",
                  e.extensionDrawBuffers && e.rendererExtensionDrawBuffers
                    ? "#extension GL_EXT_draw_buffers : require"
                    : "",
                  (e.extensionShaderTextureLOD || e.envMap || e.transmission) &&
                  e.rendererExtensionShaderTextureLod
                    ? "#extension GL_EXT_shader_texture_lod : enable"
                    : "",
                ]
                  .filter(Ld)
                  .join("\n");
              })(n),
          m = (function (e) {
            var t = [];
            for (var n in e) {
              var r = e[n];
              !1 !== r && t.push("#define " + n + " " + r);
            }
            return t.join("\n");
          })(s),
          g = o.createProgram(),
          y = n.glslVersion ? "#version " + n.glslVersion + "\n" : "";
        n.isRawShaderMaterial
          ? ((i = [m].filter(Ld).join("\n")).length > 0 && (i += "\n"),
            (a = [v, m].filter(Ld).join("\n")).length > 0 && (a += "\n"))
          : ((i = [
              jd(n),
              "#define SHADER_NAME " + n.shaderName,
              m,
              n.instancing ? "#define USE_INSTANCING" : "",
              n.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
              n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
              "#define MAX_BONES " + n.maxBones,
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + d : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMap && n.objectSpaceNormalMap
                ? "#define OBJECTSPACE_NORMALMAP"
                : "",
              n.normalMap && n.tangentSpaceNormalMap
                ? "#define TANGENTSPACE_NORMALMAP"
                : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.displacementMap && n.supportsVertexTextures
                ? "#define USE_DISPLACEMENTMAP"
                : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
              n.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
              n.vertexTangents ? "#define USE_TANGENT" : "",
              n.vertexColors ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUvs ? "#define USE_UV" : "",
              n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.skinning ? "#define USE_SKINNING" : "",
              n.useVertexTexture ? "#define BONE_TEXTURE" : "",
              n.morphTargets ? "#define USE_MORPHTARGETS" : "",
              n.morphNormals && !1 === n.flatShading
                ? "#define USE_MORPHNORMALS"
                : "",
              n.morphColors && n.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE"
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount
                : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + c : "",
              n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 modelMatrix;",
              "uniform mat4 modelViewMatrix;",
              "uniform mat4 projectionMatrix;",
              "uniform mat4 viewMatrix;",
              "uniform mat3 normalMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              "#ifdef USE_INSTANCING",
              "\tattribute mat4 instanceMatrix;",
              "#endif",
              "#ifdef USE_INSTANCING_COLOR",
              "\tattribute vec3 instanceColor;",
              "#endif",
              "attribute vec3 position;",
              "attribute vec3 normal;",
              "attribute vec2 uv;",
              "#ifdef USE_TANGENT",
              "\tattribute vec4 tangent;",
              "#endif",
              "#if defined( USE_COLOR_ALPHA )",
              "\tattribute vec4 color;",
              "#elif defined( USE_COLOR )",
              "\tattribute vec3 color;",
              "#endif",
              "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
              "\tattribute vec3 morphTarget0;",
              "\tattribute vec3 morphTarget1;",
              "\tattribute vec3 morphTarget2;",
              "\tattribute vec3 morphTarget3;",
              "\t#ifdef USE_MORPHNORMALS",
              "\t\tattribute vec3 morphNormal0;",
              "\t\tattribute vec3 morphNormal1;",
              "\t\tattribute vec3 morphNormal2;",
              "\t\tattribute vec3 morphNormal3;",
              "\t#else",
              "\t\tattribute vec3 morphTarget4;",
              "\t\tattribute vec3 morphTarget5;",
              "\t\tattribute vec3 morphTarget6;",
              "\t\tattribute vec3 morphTarget7;",
              "\t#endif",
              "#endif",
              "#ifdef USE_SKINNING",
              "\tattribute vec4 skinIndex;",
              "\tattribute vec4 skinWeight;",
              "#endif",
              "\n",
            ]
              .filter(Ld)
              .join("\n")),
            (a = [
              v,
              jd(n),
              "#define SHADER_NAME " + n.shaderName,
              m,
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.matcap ? "#define USE_MATCAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + f : "",
              n.envMap ? "#define " + d : "",
              n.envMap ? "#define " + h : "",
              p ? "#define CUBEUV_TEXEL_WIDTH " + p.texelWidth : "",
              p ? "#define CUBEUV_TEXEL_HEIGHT " + p.texelHeight : "",
              p ? "#define CUBEUV_MAX_MIP " + p.maxMip + ".0" : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMap && n.objectSpaceNormalMap
                ? "#define OBJECTSPACE_NORMALMAP"
                : "",
              n.normalMap && n.tangentSpaceNormalMap
                ? "#define TANGENTSPACE_NORMALMAP"
                : "",
              n.clearcoat ? "#define USE_CLEARCOAT" : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
              n.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.alphaTest ? "#define USE_ALPHATEST" : "",
              n.sheen ? "#define USE_SHEEN" : "",
              n.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
              n.vertexTangents ? "#define USE_TANGENT" : "",
              n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUvs ? "#define USE_UV" : "",
              n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
              n.gradientMap ? "#define USE_GRADIENTMAP" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + c : "",
              n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
              n.physicallyCorrectLights
                ? "#define PHYSICALLY_CORRECT_LIGHTS"
                : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 viewMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              n.toneMapping !== ua ? "#define TONE_MAPPING" : "",
              n.toneMapping !== ua ? jc.tonemapping_pars_fragment : "",
              n.toneMapping !== ua ? Pd("toneMapping", n.toneMapping) : "",
              n.dithering ? "#define DITHERING" : "",
              n.opaque ? "#define OPAQUE" : "",
              jc.encodings_pars_fragment,
              Ad("linearToOutputTexel", n.outputEncoding),
              n.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "",
              "\n",
            ]
              .filter(Ld)
              .join("\n"))),
          (l = Od((l = Rd((l = Dd(l)), n)), n)),
          (u = Od((u = Rd((u = Dd(u)), n)), n)),
          (l = Bd(l)),
          (u = Bd(u)),
          n.isWebGL2 &&
            !0 !== n.isRawShaderMaterial &&
            ((y = "#version 300 es\n"),
            (i =
              [
                "precision mediump sampler2DArray;",
                "#define attribute in",
                "#define varying out",
                "#define texture2D texture",
              ].join("\n") +
              "\n" +
              i),
            (a =
              [
                "#define varying in",
                n.glslVersion === Es
                  ? ""
                  : "layout(location = 0) out highp vec4 pc_fragColor;",
                n.glslVersion === Es ? "" : "#define gl_FragColor pc_fragColor",
                "#define gl_FragDepthEXT gl_FragDepth",
                "#define texture2D texture",
                "#define textureCube texture",
                "#define texture2DProj textureProj",
                "#define texture2DLodEXT textureLod",
                "#define texture2DProjLodEXT textureProjLod",
                "#define textureCubeLodEXT textureLod",
                "#define texture2DGradEXT textureGrad",
                "#define texture2DProjGradEXT textureProjGrad",
                "#define textureCubeGradEXT textureGrad",
              ].join("\n") +
              "\n" +
              a));
        var b,
          x,
          w = y + a + u,
          _ = kd(o, 35633, y + i + l),
          S = kd(o, 35632, w);
        if (
          (o.attachShader(g, _),
          o.attachShader(g, S),
          void 0 !== n.index0AttributeName
            ? o.bindAttribLocation(g, 0, n.index0AttributeName)
            : !0 === n.morphTargets && o.bindAttribLocation(g, 0, "position"),
          o.linkProgram(g),
          e.debug.checkShaderErrors)
        ) {
          var M = o.getProgramInfoLog(g).trim(),
            E = o.getShaderInfoLog(_).trim(),
            k = o.getShaderInfoLog(S).trim(),
            T = !0,
            C = !0;
          if (!1 === o.getProgramParameter(g, 35714)) {
            T = !1;
            var A = Cd(o, _, "vertex"),
              P = Cd(o, S, "fragment");
            console.error(
              "THREE.WebGLProgram: Shader Error " +
                o.getError() +
                " - VALIDATE_STATUS " +
                o.getProgramParameter(g, 35715) +
                "\n\nProgram Info Log: " +
                M +
                "\n" +
                A +
                "\n" +
                P
            );
          } else
            "" !== M
              ? console.warn("THREE.WebGLProgram: Program Info Log:", M)
              : ("" !== E && "" !== k) || (C = !1);
          C &&
            (this.diagnostics = {
              runnable: T,
              programLog: M,
              vertexShader: { log: E, prefix: i },
              fragmentShader: { log: k, prefix: a },
            });
        }
        return (
          o.deleteShader(_),
          o.deleteShader(S),
          (this.getUniforms = function () {
            return void 0 === b && (b = new Ed(o, g)), b;
          }),
          (this.getAttributes = function () {
            return (
              void 0 === x &&
                (x = (function (e, t) {
                  for (
                    var n = {}, r = e.getProgramParameter(t, 35721), i = 0;
                    i < r;
                    i++
                  ) {
                    var a = e.getActiveAttrib(t, i),
                      o = a.name,
                      s = 1;
                    35674 === a.type && (s = 2),
                      35675 === a.type && (s = 3),
                      35676 === a.type && (s = 4),
                      (n[o] = {
                        type: a.type,
                        location: e.getAttribLocation(t, o),
                        locationSize: s,
                      });
                  }
                  return n;
                })(o, g)),
              x
            );
          }),
          (this.destroy = function () {
            r.releaseStatesOfProgram(this),
              o.deleteProgram(g),
              (this.program = void 0);
          }),
          (this.name = n.shaderName),
          (this.id = Td++),
          (this.cacheKey = t),
          (this.usedTimes = 1),
          (this.program = g),
          (this.vertexShader = _),
          (this.fragmentShader = S),
          this
        );
      }
      var Wd = 0,
        Vd = (function () {
          function e() {
            Kr(this, e),
              (this.shaderCache = new Map()),
              (this.materialCache = new Map());
          }
          return (
            ti(e, [
              {
                key: "update",
                value: function (e) {
                  var t = e.vertexShader,
                    n = e.fragmentShader,
                    r = this._getShaderStage(t),
                    i = this._getShaderStage(n),
                    a = this._getShaderCacheForMaterial(e);
                  return (
                    !1 === a.has(r) && (a.add(r), r.usedTimes++),
                    !1 === a.has(i) && (a.add(i), i.usedTimes++),
                    this
                  );
                },
              },
              {
                key: "remove",
                value: function (e) {
                  var t,
                    n = Xr(this.materialCache.get(e));
                  try {
                    for (n.s(); !(t = n.n()).done; ) {
                      var r = t.value;
                      r.usedTimes--,
                        0 === r.usedTimes && this.shaderCache.delete(r.code);
                    }
                  } catch (i) {
                    n.e(i);
                  } finally {
                    n.f();
                  }
                  return this.materialCache.delete(e), this;
                },
              },
              {
                key: "getVertexShaderID",
                value: function (e) {
                  return this._getShaderStage(e.vertexShader).id;
                },
              },
              {
                key: "getFragmentShaderID",
                value: function (e) {
                  return this._getShaderStage(e.fragmentShader).id;
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.shaderCache.clear(), this.materialCache.clear();
                },
              },
              {
                key: "_getShaderCacheForMaterial",
                value: function (e) {
                  var t = this.materialCache;
                  return !1 === t.has(e) && t.set(e, new Set()), t.get(e);
                },
              },
              {
                key: "_getShaderStage",
                value: function (e) {
                  var t = this.shaderCache;
                  if (!1 === t.has(e)) {
                    var n = new qd(e);
                    t.set(e, n);
                  }
                  return t.get(e);
                },
              },
            ]),
            e
          );
        })(),
        qd = ti(function e(t) {
          Kr(this, e), (this.id = Wd++), (this.code = t), (this.usedTimes = 0);
        });
      function Xd(e, t, n, r, i, a, o) {
        var s = new ou(),
          l = new Vd(),
          u = [],
          c = i.isWebGL2,
          f = i.logarithmicDepthBuffer,
          d = i.floatVertexTextures,
          h = i.maxVertexUniforms,
          p = i.vertexTextures,
          v = i.precision,
          m = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite",
          };
        return {
          getParameters: function (a, s, u, g, y) {
            var b = g.fog,
              x = y.geometry,
              w = a.isMeshStandardMaterial ? g.environment : null,
              _ = (a.isMeshStandardMaterial ? n : t).get(a.envMap || w),
              S = _ && _.mapping === xa ? _.image.height : null,
              M = m[a.type],
              E = y.isSkinnedMesh
                ? (function (e) {
                    var t = e.skeleton.bones;
                    if (d) return 1024;
                    var n = h,
                      r = Math.floor((n - 20) / 4),
                      i = Math.min(r, t.length);
                    return i < t.length
                      ? (console.warn(
                          "THREE.WebGLRenderer: Skeleton has " +
                            t.length +
                            " bones. This GPU supports " +
                            i +
                            "."
                        ),
                        0)
                      : i;
                  })(y)
                : 0;
            null !== a.precision &&
              (v = i.getMaxPrecision(a.precision)) !== a.precision &&
              console.warn(
                "THREE.WebGLProgram.getParameters:",
                a.precision,
                "not supported, using",
                v,
                "instead."
              );
            var k,
              T,
              C,
              A,
              P =
                x.morphAttributes.position ||
                x.morphAttributes.normal ||
                x.morphAttributes.color,
              L = void 0 !== P ? P.length : 0,
              R = 0;
            if (
              (void 0 !== x.morphAttributes.position && (R = 1),
              void 0 !== x.morphAttributes.normal && (R = 2),
              void 0 !== x.morphAttributes.color && (R = 3),
              M)
            ) {
              var O = Wc[M];
              (k = O.vertexShader), (T = O.fragmentShader);
            } else
              (k = a.vertexShader),
                (T = a.fragmentShader),
                l.update(a),
                (C = l.getVertexShaderID(a)),
                (A = l.getFragmentShaderID(a));
            var z = e.getRenderTarget(),
              D = a.alphaTest > 0,
              I = a.clearcoat > 0;
            return {
              isWebGL2: c,
              shaderID: M,
              shaderName: a.type,
              vertexShader: k,
              fragmentShader: T,
              defines: a.defines,
              customVertexShaderID: C,
              customFragmentShaderID: A,
              isRawShaderMaterial: !0 === a.isRawShaderMaterial,
              glslVersion: a.glslVersion,
              precision: v,
              instancing: !0 === y.isInstancedMesh,
              instancingColor:
                !0 === y.isInstancedMesh && null !== y.instanceColor,
              supportsVertexTextures: p,
              outputEncoding:
                null === z
                  ? e.outputEncoding
                  : !0 === z.isXRRenderTarget
                  ? z.texture.encoding
                  : Wo,
              map: !!a.map,
              matcap: !!a.matcap,
              envMap: !!_,
              envMapMode: _ && _.mapping,
              envMapCubeUVHeight: S,
              lightMap: !!a.lightMap,
              aoMap: !!a.aoMap,
              emissiveMap: !!a.emissiveMap,
              bumpMap: !!a.bumpMap,
              normalMap: !!a.normalMap,
              objectSpaceNormalMap: a.normalMapType === Jo,
              tangentSpaceNormalMap: a.normalMapType === Yo,
              decodeVideoTexture:
                !!a.map && !0 === a.map.isVideoTexture && a.map.encoding === Vo,
              clearcoat: I,
              clearcoatMap: I && !!a.clearcoatMap,
              clearcoatRoughnessMap: I && !!a.clearcoatRoughnessMap,
              clearcoatNormalMap: I && !!a.clearcoatNormalMap,
              displacementMap: !!a.displacementMap,
              roughnessMap: !!a.roughnessMap,
              metalnessMap: !!a.metalnessMap,
              specularMap: !!a.specularMap,
              specularIntensityMap: !!a.specularIntensityMap,
              specularColorMap: !!a.specularColorMap,
              opaque: !1 === a.transparent && a.blending === Li,
              alphaMap: !!a.alphaMap,
              alphaTest: D,
              gradientMap: !!a.gradientMap,
              sheen: a.sheen > 0,
              sheenColorMap: !!a.sheenColorMap,
              sheenRoughnessMap: !!a.sheenRoughnessMap,
              transmission: a.transmission > 0,
              transmissionMap: !!a.transmissionMap,
              thicknessMap: !!a.thicknessMap,
              combine: a.combine,
              vertexTangents: !!a.normalMap && !!x.attributes.tangent,
              vertexColors: a.vertexColors,
              vertexAlphas:
                !0 === a.vertexColors &&
                !!x.attributes.color &&
                4 === x.attributes.color.itemSize,
              vertexUvs:
                !!a.map ||
                !!a.bumpMap ||
                !!a.normalMap ||
                !!a.specularMap ||
                !!a.alphaMap ||
                !!a.emissiveMap ||
                !!a.roughnessMap ||
                !!a.metalnessMap ||
                !!a.clearcoatMap ||
                !!a.clearcoatRoughnessMap ||
                !!a.clearcoatNormalMap ||
                !!a.displacementMap ||
                !!a.transmissionMap ||
                !!a.thicknessMap ||
                !!a.specularIntensityMap ||
                !!a.specularColorMap ||
                !!a.sheenColorMap ||
                !!a.sheenRoughnessMap,
              uvsVertexOnly:
                !(
                  a.map ||
                  a.bumpMap ||
                  a.normalMap ||
                  a.specularMap ||
                  a.alphaMap ||
                  a.emissiveMap ||
                  a.roughnessMap ||
                  a.metalnessMap ||
                  a.clearcoatNormalMap ||
                  a.transmission > 0 ||
                  a.transmissionMap ||
                  a.thicknessMap ||
                  a.specularIntensityMap ||
                  a.specularColorMap ||
                  a.sheen > 0 ||
                  a.sheenColorMap ||
                  a.sheenRoughnessMap
                ) && !!a.displacementMap,
              fog: !!b,
              useFog: a.fog,
              fogExp2: b && b.isFogExp2,
              flatShading: !!a.flatShading,
              sizeAttenuation: a.sizeAttenuation,
              logarithmicDepthBuffer: f,
              skinning: !0 === y.isSkinnedMesh && E > 0,
              maxBones: E,
              useVertexTexture: d,
              morphTargets: void 0 !== x.morphAttributes.position,
              morphNormals: void 0 !== x.morphAttributes.normal,
              morphColors: void 0 !== x.morphAttributes.color,
              morphTargetsCount: L,
              morphTextureStride: R,
              numDirLights: s.directional.length,
              numPointLights: s.point.length,
              numSpotLights: s.spot.length,
              numRectAreaLights: s.rectArea.length,
              numHemiLights: s.hemi.length,
              numDirLightShadows: s.directionalShadowMap.length,
              numPointLightShadows: s.pointShadowMap.length,
              numSpotLightShadows: s.spotShadowMap.length,
              numClippingPlanes: o.numPlanes,
              numClipIntersection: o.numIntersection,
              dithering: a.dithering,
              shadowMapEnabled: e.shadowMap.enabled && u.length > 0,
              shadowMapType: e.shadowMap.type,
              toneMapping: a.toneMapped ? e.toneMapping : ua,
              physicallyCorrectLights: e.physicallyCorrectLights,
              premultipliedAlpha: a.premultipliedAlpha,
              doubleSided: a.side === Ti,
              flipSided: a.side === ki,
              depthPacking: void 0 !== a.depthPacking && a.depthPacking,
              index0AttributeName: a.index0AttributeName,
              extensionDerivatives: a.extensions && a.extensions.derivatives,
              extensionFragDepth: a.extensions && a.extensions.fragDepth,
              extensionDrawBuffers: a.extensions && a.extensions.drawBuffers,
              extensionShaderTextureLOD:
                a.extensions && a.extensions.shaderTextureLOD,
              rendererExtensionFragDepth: c || r.has("EXT_frag_depth"),
              rendererExtensionDrawBuffers: c || r.has("WEBGL_draw_buffers"),
              rendererExtensionShaderTextureLod:
                c || r.has("EXT_shader_texture_lod"),
              customProgramCacheKey: a.customProgramCacheKey(),
            };
          },
          getProgramCacheKey: function (t) {
            var n = [];
            if (
              (t.shaderID
                ? n.push(t.shaderID)
                : (n.push(t.customVertexShaderID),
                  n.push(t.customFragmentShaderID)),
              void 0 !== t.defines)
            )
              for (var r in t.defines) n.push(r), n.push(t.defines[r]);
            return (
              !1 === t.isRawShaderMaterial &&
                (!(function (e, t) {
                  e.push(t.precision),
                    e.push(t.outputEncoding),
                    e.push(t.envMapMode),
                    e.push(t.envMapCubeUVHeight),
                    e.push(t.combine),
                    e.push(t.vertexUvs),
                    e.push(t.fogExp2),
                    e.push(t.sizeAttenuation),
                    e.push(t.maxBones),
                    e.push(t.morphTargetsCount),
                    e.push(t.morphAttributeCount),
                    e.push(t.numDirLights),
                    e.push(t.numPointLights),
                    e.push(t.numSpotLights),
                    e.push(t.numHemiLights),
                    e.push(t.numRectAreaLights),
                    e.push(t.numDirLightShadows),
                    e.push(t.numPointLightShadows),
                    e.push(t.numSpotLightShadows),
                    e.push(t.shadowMapType),
                    e.push(t.toneMapping),
                    e.push(t.numClippingPlanes),
                    e.push(t.numClipIntersection);
                })(n, t),
                (function (e, t) {
                  s.disableAll(), t.isWebGL2 && s.enable(0);
                  t.supportsVertexTextures && s.enable(1);
                  t.instancing && s.enable(2);
                  t.instancingColor && s.enable(3);
                  t.map && s.enable(4);
                  t.matcap && s.enable(5);
                  t.envMap && s.enable(6);
                  t.lightMap && s.enable(7);
                  t.aoMap && s.enable(8);
                  t.emissiveMap && s.enable(9);
                  t.bumpMap && s.enable(10);
                  t.normalMap && s.enable(11);
                  t.objectSpaceNormalMap && s.enable(12);
                  t.tangentSpaceNormalMap && s.enable(13);
                  t.clearcoat && s.enable(14);
                  t.clearcoatMap && s.enable(15);
                  t.clearcoatRoughnessMap && s.enable(16);
                  t.clearcoatNormalMap && s.enable(17);
                  t.displacementMap && s.enable(18);
                  t.specularMap && s.enable(19);
                  t.roughnessMap && s.enable(20);
                  t.metalnessMap && s.enable(21);
                  t.gradientMap && s.enable(22);
                  t.alphaMap && s.enable(23);
                  t.alphaTest && s.enable(24);
                  t.vertexColors && s.enable(25);
                  t.vertexAlphas && s.enable(26);
                  t.vertexUvs && s.enable(27);
                  t.vertexTangents && s.enable(28);
                  t.uvsVertexOnly && s.enable(29);
                  t.fog && s.enable(30);
                  e.push(s.mask), s.disableAll(), t.useFog && s.enable(0);
                  t.flatShading && s.enable(1);
                  t.logarithmicDepthBuffer && s.enable(2);
                  t.skinning && s.enable(3);
                  t.useVertexTexture && s.enable(4);
                  t.morphTargets && s.enable(5);
                  t.morphNormals && s.enable(6);
                  t.morphColors && s.enable(7);
                  t.premultipliedAlpha && s.enable(8);
                  t.shadowMapEnabled && s.enable(9);
                  t.physicallyCorrectLights && s.enable(10);
                  t.doubleSided && s.enable(11);
                  t.flipSided && s.enable(12);
                  t.depthPacking && s.enable(13);
                  t.dithering && s.enable(14);
                  t.specularIntensityMap && s.enable(15);
                  t.specularColorMap && s.enable(16);
                  t.transmission && s.enable(17);
                  t.transmissionMap && s.enable(18);
                  t.thicknessMap && s.enable(19);
                  t.sheen && s.enable(20);
                  t.sheenColorMap && s.enable(21);
                  t.sheenRoughnessMap && s.enable(22);
                  t.decodeVideoTexture && s.enable(23);
                  t.opaque && s.enable(24);
                  e.push(s.mask);
                })(n, t),
                n.push(e.outputEncoding)),
              n.push(t.customProgramCacheKey),
              n.join()
            );
          },
          getUniforms: function (e) {
            var t,
              n = m[e.type];
            if (n) {
              var r = Wc[n];
              t = Mc.clone(r.uniforms);
            } else t = e.uniforms;
            return t;
          },
          acquireProgram: function (t, n) {
            for (var r, i = 0, o = u.length; i < o; i++) {
              var s = u[i];
              if (s.cacheKey === n) {
                ++(r = s).usedTimes;
                break;
              }
            }
            return void 0 === r && ((r = new Gd(e, n, t, a)), u.push(r)), r;
          },
          releaseProgram: function (e) {
            if (0 === --e.usedTimes) {
              var t = u.indexOf(e);
              (u[t] = u[u.length - 1]), u.pop(), e.destroy();
            }
          },
          releaseShaderCache: function (e) {
            l.remove(e);
          },
          programs: u,
          dispose: function () {
            l.dispose();
          },
        };
      }
      function Yd() {
        var e = new WeakMap();
        return {
          get: function (t) {
            var n = e.get(t);
            return void 0 === n && ((n = {}), e.set(t, n)), n;
          },
          remove: function (t) {
            e.delete(t);
          },
          update: function (t, n, r) {
            e.get(t)[n] = r;
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function Jd(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.material.id !== t.material.id
          ? e.material.id - t.material.id
          : e.z !== t.z
          ? e.z - t.z
          : e.id - t.id;
      }
      function $d(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.z !== t.z
          ? t.z - e.z
          : e.id - t.id;
      }
      function Qd() {
        var e = [],
          t = 0,
          n = [],
          r = [],
          i = [];
        function a(n, r, i, a, o, s) {
          var l = e[t];
          return (
            void 0 === l
              ? ((l = {
                  id: n.id,
                  object: n,
                  geometry: r,
                  material: i,
                  groupOrder: a,
                  renderOrder: n.renderOrder,
                  z: o,
                  group: s,
                }),
                (e[t] = l))
              : ((l.id = n.id),
                (l.object = n),
                (l.geometry = r),
                (l.material = i),
                (l.groupOrder = a),
                (l.renderOrder = n.renderOrder),
                (l.z = o),
                (l.group = s)),
            t++,
            l
          );
        }
        return {
          opaque: n,
          transmissive: r,
          transparent: i,
          init: function () {
            (t = 0), (n.length = 0), (r.length = 0), (i.length = 0);
          },
          push: function (e, t, o, s, l, u) {
            var c = a(e, t, o, s, l, u);
            o.transmission > 0
              ? r.push(c)
              : !0 === o.transparent
              ? i.push(c)
              : n.push(c);
          },
          unshift: function (e, t, o, s, l, u) {
            var c = a(e, t, o, s, l, u);
            o.transmission > 0
              ? r.unshift(c)
              : !0 === o.transparent
              ? i.unshift(c)
              : n.unshift(c);
          },
          finish: function () {
            for (var n = t, r = e.length; n < r; n++) {
              var i = e[n];
              if (null === i.id) break;
              (i.id = null),
                (i.object = null),
                (i.geometry = null),
                (i.material = null),
                (i.group = null);
            }
          },
          sort: function (e, t) {
            n.length > 1 && n.sort(e || Jd),
              r.length > 1 && r.sort(t || $d),
              i.length > 1 && i.sort(t || $d);
          },
        };
      }
      function Zd() {
        var e = new WeakMap();
        return {
          get: function (t, n) {
            var r;
            return (
              !1 === e.has(t)
                ? ((r = new Qd()), e.set(t, [r]))
                : n >= e.get(t).length
                ? ((r = new Qd()), e.get(t).push(r))
                : (r = e.get(t)[n]),
              r
            );
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function Kd() {
        var e = {};
        return {
          get: function (t) {
            if (void 0 !== e[t.id]) return e[t.id];
            var n;
            switch (t.type) {
              case "DirectionalLight":
                n = { direction: new yl(), color: new il() };
                break;
              case "SpotLight":
                n = {
                  position: new yl(),
                  direction: new yl(),
                  color: new il(),
                  distance: 0,
                  coneCos: 0,
                  penumbraCos: 0,
                  decay: 0,
                };
                break;
              case "PointLight":
                n = {
                  position: new yl(),
                  color: new il(),
                  distance: 0,
                  decay: 0,
                };
                break;
              case "HemisphereLight":
                n = {
                  direction: new yl(),
                  skyColor: new il(),
                  groundColor: new il(),
                };
                break;
              case "RectAreaLight":
                n = {
                  color: new il(),
                  position: new yl(),
                  halfWidth: new yl(),
                  halfHeight: new yl(),
                };
            }
            return (e[t.id] = n), n;
          },
        };
      }
      var eh = 0;
      function th(e, t) {
        return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0);
      }
      function nh(e, t) {
        for (
          var n = new Kd(),
            r = (function () {
              var e = {};
              return {
                get: function (t) {
                  if (void 0 !== e[t.id]) return e[t.id];
                  var n;
                  switch (t.type) {
                    case "DirectionalLight":
                    case "SpotLight":
                      n = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Us(),
                      };
                      break;
                    case "PointLight":
                      n = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Us(),
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3,
                      };
                  }
                  return (e[t.id] = n), n;
                },
              };
            })(),
            i = {
              version: 0,
              hash: {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1,
              },
              ambient: [0, 0, 0],
              probe: [],
              directional: [],
              directionalShadow: [],
              directionalShadowMap: [],
              directionalShadowMatrix: [],
              spot: [],
              spotShadow: [],
              spotShadowMap: [],
              spotShadowMatrix: [],
              rectArea: [],
              rectAreaLTC1: null,
              rectAreaLTC2: null,
              point: [],
              pointShadow: [],
              pointShadowMap: [],
              pointShadowMatrix: [],
              hemi: [],
            },
            a = 0;
          a < 9;
          a++
        )
          i.probe.push(new yl());
        var o = new yl(),
          s = new Jl(),
          l = new Jl();
        return {
          setup: function (a, o) {
            for (var s = 0, l = 0, u = 0, c = 0; c < 9; c++)
              i.probe[c].set(0, 0, 0);
            var f = 0,
              d = 0,
              h = 0,
              p = 0,
              v = 0,
              m = 0,
              g = 0,
              y = 0;
            a.sort(th);
            for (
              var b = !0 !== o ? Math.PI : 1, x = 0, w = a.length;
              x < w;
              x++
            ) {
              var _ = a[x],
                S = _.color,
                M = _.intensity,
                E = _.distance,
                k = _.shadow && _.shadow.map ? _.shadow.map.texture : null;
              if (_.isAmbientLight)
                (s += S.r * M * b), (l += S.g * M * b), (u += S.b * M * b);
              else if (_.isLightProbe)
                for (var T = 0; T < 9; T++)
                  i.probe[T].addScaledVector(_.sh.coefficients[T], M);
              else if (_.isDirectionalLight) {
                var C = n.get(_);
                if (
                  (C.color.copy(_.color).multiplyScalar(_.intensity * b),
                  _.castShadow)
                ) {
                  var A = _.shadow,
                    P = r.get(_);
                  (P.shadowBias = A.bias),
                    (P.shadowNormalBias = A.normalBias),
                    (P.shadowRadius = A.radius),
                    (P.shadowMapSize = A.mapSize),
                    (i.directionalShadow[f] = P),
                    (i.directionalShadowMap[f] = k),
                    (i.directionalShadowMatrix[f] = _.shadow.matrix),
                    m++;
                }
                (i.directional[f] = C), f++;
              } else if (_.isSpotLight) {
                var L = n.get(_);
                if (
                  (L.position.setFromMatrixPosition(_.matrixWorld),
                  L.color.copy(S).multiplyScalar(M * b),
                  (L.distance = E),
                  (L.coneCos = Math.cos(_.angle)),
                  (L.penumbraCos = Math.cos(_.angle * (1 - _.penumbra))),
                  (L.decay = _.decay),
                  _.castShadow)
                ) {
                  var R = _.shadow,
                    O = r.get(_);
                  (O.shadowBias = R.bias),
                    (O.shadowNormalBias = R.normalBias),
                    (O.shadowRadius = R.radius),
                    (O.shadowMapSize = R.mapSize),
                    (i.spotShadow[h] = O),
                    (i.spotShadowMap[h] = k),
                    (i.spotShadowMatrix[h] = _.shadow.matrix),
                    y++;
                }
                (i.spot[h] = L), h++;
              } else if (_.isRectAreaLight) {
                var z = n.get(_);
                z.color.copy(S).multiplyScalar(M),
                  z.halfWidth.set(0.5 * _.width, 0, 0),
                  z.halfHeight.set(0, 0.5 * _.height, 0),
                  (i.rectArea[p] = z),
                  p++;
              } else if (_.isPointLight) {
                var D = n.get(_);
                if (
                  (D.color.copy(_.color).multiplyScalar(_.intensity * b),
                  (D.distance = _.distance),
                  (D.decay = _.decay),
                  _.castShadow)
                ) {
                  var I = _.shadow,
                    N = r.get(_);
                  (N.shadowBias = I.bias),
                    (N.shadowNormalBias = I.normalBias),
                    (N.shadowRadius = I.radius),
                    (N.shadowMapSize = I.mapSize),
                    (N.shadowCameraNear = I.camera.near),
                    (N.shadowCameraFar = I.camera.far),
                    (i.pointShadow[d] = N),
                    (i.pointShadowMap[d] = k),
                    (i.pointShadowMatrix[d] = _.shadow.matrix),
                    g++;
                }
                (i.point[d] = D), d++;
              } else if (_.isHemisphereLight) {
                var F = n.get(_);
                F.skyColor.copy(_.color).multiplyScalar(M * b),
                  F.groundColor.copy(_.groundColor).multiplyScalar(M * b),
                  (i.hemi[v] = F),
                  v++;
              }
            }
            p > 0 &&
              (t.isWebGL2 || !0 === e.has("OES_texture_float_linear")
                ? ((i.rectAreaLTC1 = Gc.LTC_FLOAT_1),
                  (i.rectAreaLTC2 = Gc.LTC_FLOAT_2))
                : !0 === e.has("OES_texture_half_float_linear")
                ? ((i.rectAreaLTC1 = Gc.LTC_HALF_1),
                  (i.rectAreaLTC2 = Gc.LTC_HALF_2))
                : console.error(
                    "THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions."
                  )),
              (i.ambient[0] = s),
              (i.ambient[1] = l),
              (i.ambient[2] = u);
            var B = i.hash;
            (B.directionalLength === f &&
              B.pointLength === d &&
              B.spotLength === h &&
              B.rectAreaLength === p &&
              B.hemiLength === v &&
              B.numDirectionalShadows === m &&
              B.numPointShadows === g &&
              B.numSpotShadows === y) ||
              ((i.directional.length = f),
              (i.spot.length = h),
              (i.rectArea.length = p),
              (i.point.length = d),
              (i.hemi.length = v),
              (i.directionalShadow.length = m),
              (i.directionalShadowMap.length = m),
              (i.pointShadow.length = g),
              (i.pointShadowMap.length = g),
              (i.spotShadow.length = y),
              (i.spotShadowMap.length = y),
              (i.directionalShadowMatrix.length = m),
              (i.pointShadowMatrix.length = g),
              (i.spotShadowMatrix.length = y),
              (B.directionalLength = f),
              (B.pointLength = d),
              (B.spotLength = h),
              (B.rectAreaLength = p),
              (B.hemiLength = v),
              (B.numDirectionalShadows = m),
              (B.numPointShadows = g),
              (B.numSpotShadows = y),
              (i.version = eh++));
          },
          setupView: function (e, t) {
            for (
              var n = 0,
                r = 0,
                a = 0,
                u = 0,
                c = 0,
                f = t.matrixWorldInverse,
                d = 0,
                h = e.length;
              d < h;
              d++
            ) {
              var p = e[d];
              if (p.isDirectionalLight) {
                var v = i.directional[n];
                v.direction.setFromMatrixPosition(p.matrixWorld),
                  o.setFromMatrixPosition(p.target.matrixWorld),
                  v.direction.sub(o),
                  v.direction.transformDirection(f),
                  n++;
              } else if (p.isSpotLight) {
                var m = i.spot[a];
                m.position.setFromMatrixPosition(p.matrixWorld),
                  m.position.applyMatrix4(f),
                  m.direction.setFromMatrixPosition(p.matrixWorld),
                  o.setFromMatrixPosition(p.target.matrixWorld),
                  m.direction.sub(o),
                  m.direction.transformDirection(f),
                  a++;
              } else if (p.isRectAreaLight) {
                var g = i.rectArea[u];
                g.position.setFromMatrixPosition(p.matrixWorld),
                  g.position.applyMatrix4(f),
                  l.identity(),
                  s.copy(p.matrixWorld),
                  s.premultiply(f),
                  l.extractRotation(s),
                  g.halfWidth.set(0.5 * p.width, 0, 0),
                  g.halfHeight.set(0, 0.5 * p.height, 0),
                  g.halfWidth.applyMatrix4(l),
                  g.halfHeight.applyMatrix4(l),
                  u++;
              } else if (p.isPointLight) {
                var y = i.point[r];
                y.position.setFromMatrixPosition(p.matrixWorld),
                  y.position.applyMatrix4(f),
                  r++;
              } else if (p.isHemisphereLight) {
                var b = i.hemi[c];
                b.direction.setFromMatrixPosition(p.matrixWorld),
                  b.direction.transformDirection(f),
                  b.direction.normalize(),
                  c++;
              }
            }
          },
          state: i,
        };
      }
      function rh(e, t) {
        var n = new nh(e, t),
          r = [],
          i = [];
        return {
          init: function () {
            (r.length = 0), (i.length = 0);
          },
          state: { lightsArray: r, shadowsArray: i, lights: n },
          setupLights: function (e) {
            n.setup(r, e);
          },
          setupLightsView: function (e) {
            n.setupView(r, e);
          },
          pushLight: function (e) {
            r.push(e);
          },
          pushShadow: function (e) {
            i.push(e);
          },
        };
      }
      function ih(e, t) {
        var n = new WeakMap();
        return {
          get: function (r) {
            var i,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            return (
              !1 === n.has(r)
                ? ((i = new rh(e, t)), n.set(r, [i]))
                : a >= n.get(r).length
                ? ((i = new rh(e, t)), n.get(r).push(i))
                : (i = n.get(r)[a]),
              i
            );
          },
          dispose: function () {
            n = new WeakMap();
          },
        };
      }
      var ah = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).type = "MeshDepthMaterial"),
            (r.depthPacking = qo),
            (r.map = null),
            (r.alphaMap = null),
            (r.displacementMap = null),
            (r.displacementScale = 1),
            (r.displacementBias = 0),
            (r.wireframe = !1),
            (r.wireframeLinewidth = 1),
            (r.fog = !1),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.depthPacking = e.depthPacking),
                  (this.map = e.map),
                  (this.alphaMap = e.alphaMap),
                  (this.displacementMap = e.displacementMap),
                  (this.displacementScale = e.displacementScale),
                  (this.displacementBias = e.displacementBias),
                  (this.wireframe = e.wireframe),
                  (this.wireframeLinewidth = e.wireframeLinewidth),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      ah.prototype.isMeshDepthMaterial = !0;
      var oh = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).type = "MeshDistanceMaterial"),
            (r.referencePosition = new yl()),
            (r.nearDistance = 1),
            (r.farDistance = 1e3),
            (r.map = null),
            (r.alphaMap = null),
            (r.displacementMap = null),
            (r.displacementScale = 1),
            (r.displacementBias = 0),
            (r.fog = !1),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.referencePosition.copy(e.referencePosition),
                  (this.nearDistance = e.nearDistance),
                  (this.farDistance = e.farDistance),
                  (this.map = e.map),
                  (this.alphaMap = e.alphaMap),
                  (this.displacementMap = e.displacementMap),
                  (this.displacementScale = e.displacementScale),
                  (this.displacementBias = e.displacementBias),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      oh.prototype.isMeshDistanceMaterial = !0;
      function sh(e, t, n) {
        var r = new Fc(),
          i = new Us(),
          a = new Us(),
          o = new cl(),
          s = new ah({ depthPacking: Xo }),
          l = new oh(),
          u = {},
          c = n.maxTextureSize,
          f = { 0: ki, 1: Ei, 2: Ti },
          d = new Ec({
            defines: { VSM_SAMPLES: 8 },
            uniforms: {
              shadow_pass: { value: null },
              resolution: { value: new Us() },
              radius: { value: 4 },
            },
            vertexShader:
              "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
            fragmentShader:
              "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",
          }),
          h = d.clone();
        h.defines.HORIZONTAL_PASS = 1;
        var p = new tc();
        p.setAttribute(
          "position",
          new Nu(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
        );
        var v = new bc(p, d),
          m = this;
        function g(n, r) {
          var i = t.update(v);
          d.defines.VSM_SAMPLES !== n.blurSamples &&
            ((d.defines.VSM_SAMPLES = n.blurSamples),
            (h.defines.VSM_SAMPLES = n.blurSamples),
            (d.needsUpdate = !0),
            (h.needsUpdate = !0)),
            (d.uniforms.shadow_pass.value = n.map.texture),
            (d.uniforms.resolution.value = n.mapSize),
            (d.uniforms.radius.value = n.radius),
            e.setRenderTarget(n.mapPass),
            e.clear(),
            e.renderBufferDirect(r, null, i, d, v, null),
            (h.uniforms.shadow_pass.value = n.mapPass.texture),
            (h.uniforms.resolution.value = n.mapSize),
            (h.uniforms.radius.value = n.radius),
            e.setRenderTarget(n.map),
            e.clear(),
            e.renderBufferDirect(r, null, i, h, v, null);
        }
        function y(t, n, r, i, a, o) {
          var c = null,
            d =
              !0 === r.isPointLight
                ? t.customDistanceMaterial
                : t.customDepthMaterial;
          if (
            ((c = void 0 !== d ? d : !0 === r.isPointLight ? l : s),
            (e.localClippingEnabled &&
              !0 === n.clipShadows &&
              0 !== n.clippingPlanes.length) ||
              (n.displacementMap && 0 !== n.displacementScale) ||
              (n.alphaMap && n.alphaTest > 0))
          ) {
            var h = c.uuid,
              p = n.uuid,
              v = u[h];
            void 0 === v && ((v = {}), (u[h] = v));
            var m = v[p];
            void 0 === m && ((m = c.clone()), (v[p] = m)), (c = m);
          }
          return (
            (c.visible = n.visible),
            (c.wireframe = n.wireframe),
            (c.side =
              o === Mi
                ? null !== n.shadowSide
                  ? n.shadowSide
                  : n.side
                : null !== n.shadowSide
                ? n.shadowSide
                : f[n.side]),
            (c.alphaMap = n.alphaMap),
            (c.alphaTest = n.alphaTest),
            (c.clipShadows = n.clipShadows),
            (c.clippingPlanes = n.clippingPlanes),
            (c.clipIntersection = n.clipIntersection),
            (c.displacementMap = n.displacementMap),
            (c.displacementScale = n.displacementScale),
            (c.displacementBias = n.displacementBias),
            (c.wireframeLinewidth = n.wireframeLinewidth),
            (c.linewidth = n.linewidth),
            !0 === r.isPointLight &&
              !0 === c.isMeshDistanceMaterial &&
              (c.referencePosition.setFromMatrixPosition(r.matrixWorld),
              (c.nearDistance = i),
              (c.farDistance = a)),
            c
          );
        }
        function b(n, i, a, o, s) {
          if (!1 !== n.visible) {
            if (
              n.layers.test(i.layers) &&
              (n.isMesh || n.isLine || n.isPoints) &&
              (n.castShadow || (n.receiveShadow && s === Mi)) &&
              (!n.frustumCulled || r.intersectsObject(n))
            ) {
              n.modelViewMatrix.multiplyMatrices(
                a.matrixWorldInverse,
                n.matrixWorld
              );
              var l = t.update(n),
                u = n.material;
              if (Array.isArray(u))
                for (var c = l.groups, f = 0, d = c.length; f < d; f++) {
                  var h = c[f],
                    p = u[h.materialIndex];
                  if (p && p.visible) {
                    var v = y(n, p, o, a.near, a.far, s);
                    e.renderBufferDirect(a, null, l, v, n, h);
                  }
                }
              else if (u.visible) {
                var m = y(n, u, o, a.near, a.far, s);
                e.renderBufferDirect(a, null, l, m, n, null);
              }
            }
            for (var g = n.children, x = 0, w = g.length; x < w; x++)
              b(g[x], i, a, o, s);
          }
        }
        (this.enabled = !1),
          (this.autoUpdate = !0),
          (this.needsUpdate = !1),
          (this.type = _i),
          (this.render = function (t, n, s) {
            if (
              !1 !== m.enabled &&
              (!1 !== m.autoUpdate || !1 !== m.needsUpdate) &&
              0 !== t.length
            ) {
              var l = e.getRenderTarget(),
                u = e.getActiveCubeFace(),
                f = e.getActiveMipmapLevel(),
                d = e.state;
              d.setBlending(Pi),
                d.buffers.color.setClear(1, 1, 1, 1),
                d.buffers.depth.setTest(!0),
                d.setScissorTest(!1);
              for (var h = 0, p = t.length; h < p; h++) {
                var v = t[h],
                  y = v.shadow;
                if (void 0 !== y) {
                  if (!1 !== y.autoUpdate || !1 !== y.needsUpdate) {
                    i.copy(y.mapSize);
                    var x = y.getFrameExtents();
                    if (
                      (i.multiply(x),
                      a.copy(y.mapSize),
                      (i.x > c || i.y > c) &&
                        (i.x > c &&
                          ((a.x = Math.floor(c / x.x)),
                          (i.x = a.x * x.x),
                          (y.mapSize.x = a.x)),
                        i.y > c &&
                          ((a.y = Math.floor(c / x.y)),
                          (i.y = a.y * x.y),
                          (y.mapSize.y = a.y))),
                      null !== y.map ||
                        y.isPointLightShadow ||
                        this.type !== Mi ||
                        ((y.map = new fl(i.x, i.y)),
                        (y.map.texture.name = v.name + ".shadowMap"),
                        (y.mapPass = new fl(i.x, i.y)),
                        y.camera.updateProjectionMatrix()),
                      null === y.map)
                    ) {
                      var w = { minFilter: Ma, magFilter: Ma, format: Xa };
                      (y.map = new fl(i.x, i.y, w)),
                        (y.map.texture.name = v.name + ".shadowMap"),
                        y.camera.updateProjectionMatrix();
                    }
                    e.setRenderTarget(y.map), e.clear();
                    for (var _ = y.getViewportCount(), S = 0; S < _; S++) {
                      var M = y.getViewport(S);
                      o.set(a.x * M.x, a.y * M.y, a.x * M.z, a.y * M.w),
                        d.viewport(o),
                        y.updateMatrices(v, S),
                        (r = y.getFrustum()),
                        b(n, s, y.camera, v, this.type);
                    }
                    y.isPointLightShadow || this.type !== Mi || g(y, s),
                      (y.needsUpdate = !1);
                  }
                } else
                  console.warn("THREE.WebGLShadowMap:", v, "has no shadow.");
              }
              (m.needsUpdate = !1), e.setRenderTarget(l, u, f);
            }
          });
      }
      function lh(e, t, n) {
        var r,
          i,
          a = n.isWebGL2;
        var o = new (function () {
            var t = !1,
              n = new cl(),
              r = null,
              i = new cl(0, 0, 0, 0);
            return {
              setMask: function (n) {
                r === n || t || (e.colorMask(n, n, n, n), (r = n));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t, r, a, o, s) {
                !0 === s && ((t *= o), (r *= o), (a *= o)),
                  n.set(t, r, a, o),
                  !1 === i.equals(n) && (e.clearColor(t, r, a, o), i.copy(n));
              },
              reset: function () {
                (t = !1), (r = null), i.set(-1, 0, 0, 0);
              },
            };
          })(),
          s = new (function () {
            var t = !1,
              n = null,
              r = null,
              i = null;
            return {
              setTest: function (e) {
                e ? H(2929) : U(2929);
              },
              setMask: function (r) {
                n === r || t || (e.depthMask(r), (n = r));
              },
              setFunc: function (t) {
                if (r !== t) {
                  if (t)
                    switch (t) {
                      case Zi:
                        e.depthFunc(512);
                        break;
                      case Ki:
                        e.depthFunc(519);
                        break;
                      case ea:
                        e.depthFunc(513);
                        break;
                      case ta:
                        e.depthFunc(515);
                        break;
                      case na:
                        e.depthFunc(514);
                        break;
                      case ra:
                        e.depthFunc(518);
                        break;
                      case ia:
                        e.depthFunc(516);
                        break;
                      case aa:
                        e.depthFunc(517);
                        break;
                      default:
                        e.depthFunc(515);
                    }
                  else e.depthFunc(515);
                  r = t;
                }
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                i !== t && (e.clearDepth(t), (i = t));
              },
              reset: function () {
                (t = !1), (n = null), (r = null), (i = null);
              },
            };
          })(),
          l = new (function () {
            var t = !1,
              n = null,
              r = null,
              i = null,
              a = null,
              o = null,
              s = null,
              l = null,
              u = null;
            return {
              setTest: function (e) {
                t || (e ? H(2960) : U(2960));
              },
              setMask: function (r) {
                n === r || t || (e.stencilMask(r), (n = r));
              },
              setFunc: function (t, n, o) {
                (r === t && i === n && a === o) ||
                  (e.stencilFunc(t, n, o), (r = t), (i = n), (a = o));
              },
              setOp: function (t, n, r) {
                (o === t && s === n && l === r) ||
                  (e.stencilOp(t, n, r), (o = t), (s = n), (l = r));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                u !== t && (e.clearStencil(t), (u = t));
              },
              reset: function () {
                (t = !1),
                  (n = null),
                  (r = null),
                  (i = null),
                  (a = null),
                  (o = null),
                  (s = null),
                  (l = null),
                  (u = null);
              },
            };
          })(),
          u = {},
          c = {},
          f = new WeakMap(),
          d = [],
          h = null,
          p = !1,
          v = null,
          m = null,
          g = null,
          y = null,
          b = null,
          x = null,
          w = null,
          _ = !1,
          S = null,
          M = null,
          E = null,
          k = null,
          T = null,
          C = e.getParameter(35661),
          A = !1,
          P = 0,
          L = e.getParameter(7938);
        -1 !== L.indexOf("WebGL")
          ? ((P = parseFloat(/^WebGL (\d)/.exec(L)[1])), (A = P >= 1))
          : -1 !== L.indexOf("OpenGL ES") &&
            ((P = parseFloat(/^OpenGL ES (\d)/.exec(L)[1])), (A = P >= 2));
        var R = null,
          O = {},
          z = e.getParameter(3088),
          D = e.getParameter(2978),
          I = new cl().fromArray(z),
          N = new cl().fromArray(D);
        function F(t, n, r) {
          var i = new Uint8Array(4),
            a = e.createTexture();
          e.bindTexture(t, a),
            e.texParameteri(t, 10241, 9728),
            e.texParameteri(t, 10240, 9728);
          for (var o = 0; o < r; o++)
            e.texImage2D(n + o, 0, 6408, 1, 1, 0, 6408, 5121, i);
          return a;
        }
        var B = {};
        function H(t) {
          !0 !== u[t] && (e.enable(t), (u[t] = !0));
        }
        function U(t) {
          !1 !== u[t] && (e.disable(t), (u[t] = !1));
        }
        (B[3553] = F(3553, 3553, 1)),
          (B[34067] = F(34067, 34069, 6)),
          o.setClear(0, 0, 0, 1),
          s.setClear(1),
          l.setClear(0),
          H(2929),
          s.setFunc(ta),
          q(!1),
          X(yi),
          H(2884),
          V(Pi);
        var j =
          (kr((r = {}), Ii, 32774), kr(r, Ni, 32778), kr(r, Fi, 32779), r);
        if (a) (j[Bi] = 32775), (j[Hi] = 32776);
        else {
          var G = t.get("EXT_blend_minmax");
          null !== G && ((j[Bi] = G.MIN_EXT), (j[Hi] = G.MAX_EXT));
        }
        var W =
          (kr((i = {}), Ui, 0),
          kr(i, ji, 1),
          kr(i, Gi, 768),
          kr(i, Vi, 770),
          kr(i, Qi, 776),
          kr(i, Ji, 774),
          kr(i, Xi, 772),
          kr(i, Wi, 769),
          kr(i, qi, 771),
          kr(i, $i, 775),
          kr(i, Yi, 773),
          i);
        function V(t, n, r, i, a, o, s, l) {
          if (t !== Pi) {
            if ((!1 === p && (H(3042), (p = !0)), t === Di))
              (a = a || n),
                (o = o || r),
                (s = s || i),
                (n === m && a === b) ||
                  (e.blendEquationSeparate(j[n], j[a]), (m = n), (b = a)),
                (r === g && i === y && o === x && s === w) ||
                  (e.blendFuncSeparate(W[r], W[i], W[o], W[s]),
                  (g = r),
                  (y = i),
                  (x = o),
                  (w = s)),
                (v = t),
                (_ = null);
            else if (t !== v || l !== _) {
              if (
                ((m === Ii && b === Ii) ||
                  (e.blendEquation(32774), (m = Ii), (b = Ii)),
                l)
              )
                switch (t) {
                  case Li:
                    e.blendFuncSeparate(1, 771, 1, 771);
                    break;
                  case Ri:
                    e.blendFunc(1, 1);
                    break;
                  case Oi:
                    e.blendFuncSeparate(0, 769, 0, 1);
                    break;
                  case zi:
                    e.blendFuncSeparate(0, 768, 0, 770);
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              else
                switch (t) {
                  case Li:
                    e.blendFuncSeparate(770, 771, 1, 771);
                    break;
                  case Ri:
                    e.blendFunc(770, 1);
                    break;
                  case Oi:
                    e.blendFuncSeparate(0, 769, 0, 1);
                    break;
                  case zi:
                    e.blendFunc(0, 768);
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              (g = null), (y = null), (x = null), (w = null), (v = t), (_ = l);
            }
          } else !0 === p && (U(3042), (p = !1));
        }
        function q(t) {
          S !== t && (t ? e.frontFace(2304) : e.frontFace(2305), (S = t));
        }
        function X(t) {
          t !== gi
            ? (H(2884),
              t !== M &&
                (t === yi
                  ? e.cullFace(1029)
                  : t === bi
                  ? e.cullFace(1028)
                  : e.cullFace(1032)))
            : U(2884),
            (M = t);
        }
        function Y(t, n, r) {
          t
            ? (H(32823),
              (k === n && T === r) || (e.polygonOffset(n, r), (k = n), (T = r)))
            : U(32823);
        }
        function J(t) {
          void 0 === t && (t = 33984 + C - 1),
            R !== t && (e.activeTexture(t), (R = t));
        }
        return {
          buffers: { color: o, depth: s, stencil: l },
          enable: H,
          disable: U,
          bindFramebuffer: function (t, n) {
            return (
              c[t] !== n &&
              (e.bindFramebuffer(t, n),
              (c[t] = n),
              a &&
                (36009 === t && (c[36160] = n), 36160 === t && (c[36009] = n)),
              !0)
            );
          },
          drawBuffers: function (r, i) {
            var a = d,
              o = !1;
            if (r)
              if (
                (void 0 === (a = f.get(i)) && ((a = []), f.set(i, a)),
                r.isWebGLMultipleRenderTargets)
              ) {
                var s = r.texture;
                if (a.length !== s.length || 36064 !== a[0]) {
                  for (var l = 0, u = s.length; l < u; l++) a[l] = 36064 + l;
                  (a.length = s.length), (o = !0);
                }
              } else 36064 !== a[0] && ((a[0] = 36064), (o = !0));
            else 1029 !== a[0] && ((a[0] = 1029), (o = !0));
            o &&
              (n.isWebGL2
                ? e.drawBuffers(a)
                : t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a));
          },
          useProgram: function (t) {
            return h !== t && (e.useProgram(t), (h = t), !0);
          },
          setBlending: V,
          setMaterial: function (e, t) {
            e.side === Ti ? U(2884) : H(2884);
            var n = e.side === ki;
            t && (n = !n),
              q(n),
              e.blending === Li && !1 === e.transparent
                ? V(Pi)
                : V(
                    e.blending,
                    e.blendEquation,
                    e.blendSrc,
                    e.blendDst,
                    e.blendEquationAlpha,
                    e.blendSrcAlpha,
                    e.blendDstAlpha,
                    e.premultipliedAlpha
                  ),
              s.setFunc(e.depthFunc),
              s.setTest(e.depthTest),
              s.setMask(e.depthWrite),
              o.setMask(e.colorWrite);
            var r = e.stencilWrite;
            l.setTest(r),
              r &&
                (l.setMask(e.stencilWriteMask),
                l.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask),
                l.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)),
              Y(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits),
              !0 === e.alphaToCoverage ? H(32926) : U(32926);
          },
          setFlipSided: q,
          setCullFace: X,
          setLineWidth: function (t) {
            t !== E && (A && e.lineWidth(t), (E = t));
          },
          setPolygonOffset: Y,
          setScissorTest: function (e) {
            e ? H(3089) : U(3089);
          },
          activeTexture: J,
          bindTexture: function (t, n) {
            null === R && J();
            var r = O[R];
            void 0 === r &&
              ((r = { type: void 0, texture: void 0 }), (O[R] = r)),
              (r.type === t && r.texture === n) ||
                (e.bindTexture(t, n || B[t]), (r.type = t), (r.texture = n));
          },
          unbindTexture: function () {
            var t = O[R];
            void 0 !== t &&
              void 0 !== t.type &&
              (e.bindTexture(t.type, null),
              (t.type = void 0),
              (t.texture = void 0));
          },
          compressedTexImage2D: function () {
            try {
              e.compressedTexImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texImage2D: function () {
            try {
              e.texImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texImage3D: function () {
            try {
              e.texImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texStorage2D: function () {
            try {
              e.texStorage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texStorage3D: function () {
            try {
              e.texStorage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texSubImage2D: function () {
            try {
              e.texSubImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texSubImage3D: function () {
            try {
              e.texSubImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          compressedTexSubImage2D: function () {
            try {
              e.compressedTexSubImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          scissor: function (t) {
            !1 === I.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), I.copy(t));
          },
          viewport: function (t) {
            !1 === N.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), N.copy(t));
          },
          reset: function () {
            e.disable(3042),
              e.disable(2884),
              e.disable(2929),
              e.disable(32823),
              e.disable(3089),
              e.disable(2960),
              e.disable(32926),
              e.blendEquation(32774),
              e.blendFunc(1, 0),
              e.blendFuncSeparate(1, 0, 1, 0),
              e.colorMask(!0, !0, !0, !0),
              e.clearColor(0, 0, 0, 0),
              e.depthMask(!0),
              e.depthFunc(513),
              e.clearDepth(1),
              e.stencilMask(4294967295),
              e.stencilFunc(519, 0, 4294967295),
              e.stencilOp(7680, 7680, 7680),
              e.clearStencil(0),
              e.cullFace(1029),
              e.frontFace(2305),
              e.polygonOffset(0, 0),
              e.activeTexture(33984),
              e.bindFramebuffer(36160, null),
              !0 === a &&
                (e.bindFramebuffer(36009, null),
                e.bindFramebuffer(36008, null)),
              e.useProgram(null),
              e.lineWidth(1),
              e.scissor(0, 0, e.canvas.width, e.canvas.height),
              e.viewport(0, 0, e.canvas.width, e.canvas.height),
              (u = {}),
              (R = null),
              (O = {}),
              (c = {}),
              (f = new WeakMap()),
              (d = []),
              (h = null),
              (p = !1),
              (v = null),
              (m = null),
              (g = null),
              (y = null),
              (b = null),
              (x = null),
              (w = null),
              (_ = !1),
              (S = null),
              (M = null),
              (E = null),
              (k = null),
              (T = null),
              I.set(0, 0, e.canvas.width, e.canvas.height),
              N.set(0, 0, e.canvas.width, e.canvas.height),
              o.reset(),
              s.reset(),
              l.reset();
          },
        };
      }
      function uh(e, t, n, r, i, a, o) {
        var s,
          l,
          u,
          c = i.isWebGL2,
          f = i.maxTextures,
          d = i.maxCubemapSize,
          h = i.maxTextureSize,
          p = i.maxSamples,
          v = t.has("WEBGL_multisampled_render_to_texture")
            ? t.get("WEBGL_multisampled_render_to_texture")
            : null,
          m = /OculusBrowser/g.test(navigator.userAgent),
          g = new WeakMap(),
          y = new WeakMap(),
          b = !1;
        try {
          b =
            "undefined" !== typeof OffscreenCanvas &&
            null !== new OffscreenCanvas(1, 1).getContext("2d");
        } catch (W) {}
        function x(e, t) {
          return b ? new OffscreenCanvas(e, t) : qs("canvas");
        }
        function w(e, t, n, r) {
          var i = 1;
          if (
            ((e.width > r || e.height > r) &&
              (i = r / Math.max(e.width, e.height)),
            i < 1 || !0 === t)
          ) {
            if (
              ("undefined" !== typeof HTMLImageElement &&
                e instanceof HTMLImageElement) ||
              ("undefined" !== typeof HTMLCanvasElement &&
                e instanceof HTMLCanvasElement) ||
              ("undefined" !== typeof ImageBitmap && e instanceof ImageBitmap)
            ) {
              var a = t ? Bs : Math.floor,
                o = a(i * e.width),
                s = a(i * e.height);
              void 0 === u && (u = x(o, s));
              var l = n ? x(o, s) : u;
              return (
                (l.width = o),
                (l.height = s),
                l.getContext("2d").drawImage(e, 0, 0, o, s),
                console.warn(
                  "THREE.WebGLRenderer: Texture has been resized from (" +
                    e.width +
                    "x" +
                    e.height +
                    ") to (" +
                    o +
                    "x" +
                    s +
                    ")."
                ),
                l
              );
            }
            return (
              "data" in e &&
                console.warn(
                  "THREE.WebGLRenderer: Image in DataTexture is too big (" +
                    e.width +
                    "x" +
                    e.height +
                    ")."
                ),
              e
            );
          }
          return e;
        }
        function _(e) {
          return Ns(e.width) && Ns(e.height);
        }
        function S(e, t) {
          return (
            e.generateMipmaps && t && e.minFilter !== Ma && e.minFilter !== Aa
          );
        }
        function M(t) {
          e.generateMipmap(t);
        }
        function E(n, r, i, a) {
          var o =
            arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
          if (!1 === c) return r;
          if (null !== n) {
            if (void 0 !== e[n]) return e[n];
            console.warn(
              "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
                n +
                "'"
            );
          }
          var s = r;
          return (
            6403 === r &&
              (5126 === i && (s = 33326),
              5131 === i && (s = 33325),
              5121 === i && (s = 33321)),
            33319 === r &&
              (5126 === i && (s = 33328),
              5131 === i && (s = 33327),
              5121 === i && (s = 33323)),
            6408 === r &&
              (5126 === i && (s = 34836),
              5131 === i && (s = 34842),
              5121 === i && (s = a === Vo && !1 === o ? 35907 : 32856),
              32819 === i && (s = 32854),
              32820 === i && (s = 32855)),
            (33325 !== s &&
              33326 !== s &&
              33327 !== s &&
              33328 !== s &&
              34842 !== s &&
              34836 !== s) ||
              t.get("EXT_color_buffer_float"),
            s
          );
        }
        function k(e, t, n) {
          return !0 === S(e, n) ||
            (e.isFramebufferTexture && e.minFilter !== Ma && e.minFilter !== Aa)
            ? Math.log2(Math.max(t.width, t.height)) + 1
            : void 0 !== e.mipmaps && e.mipmaps.length > 0
            ? e.mipmaps.length
            : e.isCompressedTexture && Array.isArray(e.image)
            ? t.mipmaps.length
            : 1;
        }
        function T(e) {
          return e === Ma || e === Ea || e === Ta ? 9728 : 9729;
        }
        function C(e) {
          var t = e.target;
          t.removeEventListener("dispose", C),
            (function (e) {
              var t = r.get(e);
              if (void 0 === t.__webglInit) return;
              var n = e.source,
                i = y.get(n);
              if (i) {
                var a = i[t.__cacheKey];
                a.usedTimes--,
                  0 === a.usedTimes && P(e),
                  0 === Object.keys(i).length && y.delete(n);
              }
              r.remove(e);
            })(t),
            t.isVideoTexture && g.delete(t);
        }
        function A(t) {
          var n = t.target;
          n.removeEventListener("dispose", A),
            (function (t) {
              var n = t.texture,
                i = r.get(t),
                a = r.get(n);
              void 0 !== a.__webglTexture &&
                (e.deleteTexture(a.__webglTexture), o.memory.textures--);
              t.depthTexture && t.depthTexture.dispose();
              if (t.isWebGLCubeRenderTarget)
                for (var s = 0; s < 6; s++)
                  e.deleteFramebuffer(i.__webglFramebuffer[s]),
                    i.__webglDepthbuffer &&
                      e.deleteRenderbuffer(i.__webglDepthbuffer[s]);
              else
                e.deleteFramebuffer(i.__webglFramebuffer),
                  i.__webglDepthbuffer &&
                    e.deleteRenderbuffer(i.__webglDepthbuffer),
                  i.__webglMultisampledFramebuffer &&
                    e.deleteFramebuffer(i.__webglMultisampledFramebuffer),
                  i.__webglColorRenderbuffer &&
                    e.deleteRenderbuffer(i.__webglColorRenderbuffer),
                  i.__webglDepthRenderbuffer &&
                    e.deleteRenderbuffer(i.__webglDepthRenderbuffer);
              if (t.isWebGLMultipleRenderTargets)
                for (var l = 0, u = n.length; l < u; l++) {
                  var c = r.get(n[l]);
                  c.__webglTexture &&
                    (e.deleteTexture(c.__webglTexture), o.memory.textures--),
                    r.remove(n[l]);
                }
              r.remove(n), r.remove(t);
            })(n);
        }
        function P(t) {
          var n = r.get(t);
          e.deleteTexture(n.__webglTexture);
          var i = t.source;
          delete y.get(i)[n.__cacheKey], o.memory.textures--;
        }
        var L = 0;
        function R(e, t) {
          var i = r.get(e);
          if (
            (e.isVideoTexture &&
              (function (e) {
                var t = o.render.frame;
                g.get(e) !== t && (g.set(e, t), e.update());
              })(e),
            !1 === e.isRenderTargetTexture &&
              e.version > 0 &&
              i.__version !== e.version)
          ) {
            var a = e.image;
            if (null === a)
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but no image data found."
              );
            else {
              if (!1 !== a.complete) return void N(i, e, t);
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but image is incomplete"
              );
            }
          }
          n.activeTexture(33984 + t), n.bindTexture(3553, i.__webglTexture);
        }
        var O =
            (kr((s = {}), wa, 10497), kr(s, _a, 33071), kr(s, Sa, 33648), s),
          z =
            (kr((l = {}), Ma, 9728),
            kr(l, Ea, 9984),
            kr(l, Ta, 9986),
            kr(l, Aa, 9729),
            kr(l, Pa, 9985),
            kr(l, Ra, 9987),
            l);
        function D(n, a, o) {
          if (
            (o
              ? (e.texParameteri(n, 10242, O[a.wrapS]),
                e.texParameteri(n, 10243, O[a.wrapT]),
                (32879 !== n && 35866 !== n) ||
                  e.texParameteri(n, 32882, O[a.wrapR]),
                e.texParameteri(n, 10240, z[a.magFilter]),
                e.texParameteri(n, 10241, z[a.minFilter]))
              : (e.texParameteri(n, 10242, 33071),
                e.texParameteri(n, 10243, 33071),
                (32879 !== n && 35866 !== n) ||
                  e.texParameteri(n, 32882, 33071),
                (a.wrapS === _a && a.wrapT === _a) ||
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."
                  ),
                e.texParameteri(n, 10240, T(a.magFilter)),
                e.texParameteri(n, 10241, T(a.minFilter)),
                a.minFilter !== Ma &&
                  a.minFilter !== Aa &&
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."
                  )),
            !0 === t.has("EXT_texture_filter_anisotropic"))
          ) {
            var s = t.get("EXT_texture_filter_anisotropic");
            if (a.type === Ha && !1 === t.has("OES_texture_float_linear"))
              return;
            if (
              !1 === c &&
              a.type === Ua &&
              !1 === t.has("OES_texture_half_float_linear")
            )
              return;
            (a.anisotropy > 1 || r.get(a).__currentAnisotropy) &&
              (e.texParameterf(
                n,
                s.TEXTURE_MAX_ANISOTROPY_EXT,
                Math.min(a.anisotropy, i.getMaxAnisotropy())
              ),
              (r.get(a).__currentAnisotropy = a.anisotropy));
          }
        }
        function I(t, n) {
          var r = !1;
          void 0 === t.__webglInit &&
            ((t.__webglInit = !0), n.addEventListener("dispose", C));
          var i = n.source,
            a = y.get(i);
          void 0 === a && ((a = {}), y.set(i, a));
          var s = (function (e) {
            var t = [];
            return (
              t.push(e.wrapS),
              t.push(e.wrapT),
              t.push(e.magFilter),
              t.push(e.minFilter),
              t.push(e.anisotropy),
              t.push(e.internalFormat),
              t.push(e.format),
              t.push(e.type),
              t.push(e.generateMipmaps),
              t.push(e.premultiplyAlpha),
              t.push(e.flipY),
              t.push(e.unpackAlignment),
              t.push(e.encoding),
              t.join()
            );
          })(n);
          if (s !== t.__cacheKey) {
            void 0 === a[s] &&
              ((a[s] = { texture: e.createTexture(), usedTimes: 0 }),
              o.memory.textures++,
              (r = !0)),
              a[s].usedTimes++;
            var l = a[t.__cacheKey];
            void 0 !== l &&
              (a[t.__cacheKey].usedTimes--, 0 === l.usedTimes && P(n)),
              (t.__cacheKey = s),
              (t.__webglTexture = a[s].texture);
          }
          return r;
        }
        function N(t, r, i) {
          var o = 3553;
          r.isDataArrayTexture && (o = 35866), r.isData3DTexture && (o = 32879);
          var s = I(t, r),
            l = r.source;
          if (
            (n.activeTexture(33984 + i),
            n.bindTexture(o, t.__webglTexture),
            l.version !== l.__currentVersion || !0 === s)
          ) {
            e.pixelStorei(37440, r.flipY),
              e.pixelStorei(37441, r.premultiplyAlpha),
              e.pixelStorei(3317, r.unpackAlignment),
              e.pixelStorei(37443, 0);
            var u,
              f =
                (function (e) {
                  return (
                    !c &&
                    (e.wrapS !== _a ||
                      e.wrapT !== _a ||
                      (e.minFilter !== Ma && e.minFilter !== Aa))
                  );
                })(r) && !1 === _(r.image),
              d = w(r.image, f, !1, h),
              p = _((d = G(r, d))) || c,
              v = a.convert(r.format, r.encoding),
              m = a.convert(r.type),
              g = E(r.internalFormat, v, m, r.encoding, r.isVideoTexture);
            D(o, r, p);
            var y = r.mipmaps,
              b = c && !0 !== r.isVideoTexture,
              x = void 0 === t.__version,
              T = k(r, d, p);
            if (r.isDepthTexture)
              (g = 6402),
                c
                  ? (g =
                      r.type === Ha
                        ? 36012
                        : r.type === Ba
                        ? 33190
                        : r.type === Wa
                        ? 35056
                        : 33189)
                  : r.type === Ha &&
                    console.error(
                      "WebGLRenderer: Floating point depth texture requires WebGL2."
                    ),
                r.format === $a &&
                  6402 === g &&
                  r.type !== Na &&
                  r.type !== Ba &&
                  (console.warn(
                    "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
                  ),
                  (r.type = Na),
                  (m = a.convert(r.type))),
                r.format === Qa &&
                  6402 === g &&
                  ((g = 34041),
                  r.type !== Wa &&
                    (console.warn(
                      "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
                    ),
                    (r.type = Wa),
                    (m = a.convert(r.type)))),
                b && x
                  ? n.texStorage2D(3553, 1, g, d.width, d.height)
                  : n.texImage2D(3553, 0, g, d.width, d.height, 0, v, m, null);
            else if (r.isDataTexture)
              if (y.length > 0 && p) {
                b && x && n.texStorage2D(3553, T, g, y[0].width, y[0].height);
                for (var C = 0, A = y.length; C < A; C++)
                  (u = y[C]),
                    b
                      ? n.texSubImage2D(
                          3553,
                          C,
                          0,
                          0,
                          u.width,
                          u.height,
                          v,
                          m,
                          u.data
                        )
                      : n.texImage2D(
                          3553,
                          C,
                          g,
                          u.width,
                          u.height,
                          0,
                          v,
                          m,
                          u.data
                        );
                r.generateMipmaps = !1;
              } else
                b
                  ? (x && n.texStorage2D(3553, T, g, d.width, d.height),
                    n.texSubImage2D(
                      3553,
                      0,
                      0,
                      0,
                      d.width,
                      d.height,
                      v,
                      m,
                      d.data
                    ))
                  : n.texImage2D(
                      3553,
                      0,
                      g,
                      d.width,
                      d.height,
                      0,
                      v,
                      m,
                      d.data
                    );
            else if (r.isCompressedTexture) {
              b && x && n.texStorage2D(3553, T, g, y[0].width, y[0].height);
              for (var P = 0, L = y.length; P < L; P++)
                (u = y[P]),
                  r.format !== Xa
                    ? null !== v
                      ? b
                        ? n.compressedTexSubImage2D(
                            3553,
                            P,
                            0,
                            0,
                            u.width,
                            u.height,
                            v,
                            u.data
                          )
                        : n.compressedTexImage2D(
                            3553,
                            P,
                            g,
                            u.width,
                            u.height,
                            0,
                            u.data
                          )
                      : console.warn(
                          "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                        )
                    : b
                    ? n.texSubImage2D(
                        3553,
                        P,
                        0,
                        0,
                        u.width,
                        u.height,
                        v,
                        m,
                        u.data
                      )
                    : n.texImage2D(
                        3553,
                        P,
                        g,
                        u.width,
                        u.height,
                        0,
                        v,
                        m,
                        u.data
                      );
            } else if (r.isDataArrayTexture)
              b
                ? (x && n.texStorage3D(35866, T, g, d.width, d.height, d.depth),
                  n.texSubImage3D(
                    35866,
                    0,
                    0,
                    0,
                    0,
                    d.width,
                    d.height,
                    d.depth,
                    v,
                    m,
                    d.data
                  ))
                : n.texImage3D(
                    35866,
                    0,
                    g,
                    d.width,
                    d.height,
                    d.depth,
                    0,
                    v,
                    m,
                    d.data
                  );
            else if (r.isData3DTexture)
              b
                ? (x && n.texStorage3D(32879, T, g, d.width, d.height, d.depth),
                  n.texSubImage3D(
                    32879,
                    0,
                    0,
                    0,
                    0,
                    d.width,
                    d.height,
                    d.depth,
                    v,
                    m,
                    d.data
                  ))
                : n.texImage3D(
                    32879,
                    0,
                    g,
                    d.width,
                    d.height,
                    d.depth,
                    0,
                    v,
                    m,
                    d.data
                  );
            else if (r.isFramebufferTexture)
              b && x
                ? n.texStorage2D(3553, T, g, d.width, d.height)
                : n.texImage2D(3553, 0, g, d.width, d.height, 0, v, m, null);
            else if (y.length > 0 && p) {
              b && x && n.texStorage2D(3553, T, g, y[0].width, y[0].height);
              for (var R = 0, O = y.length; R < O; R++)
                (u = y[R]),
                  b
                    ? n.texSubImage2D(3553, R, 0, 0, v, m, u)
                    : n.texImage2D(3553, R, g, v, m, u);
              r.generateMipmaps = !1;
            } else
              b
                ? (x && n.texStorage2D(3553, T, g, d.width, d.height),
                  n.texSubImage2D(3553, 0, 0, 0, v, m, d))
                : n.texImage2D(3553, 0, g, v, m, d);
            S(r, p) && M(o),
              (l.__currentVersion = l.version),
              r.onUpdate && r.onUpdate(r);
          }
          t.__version = r.version;
        }
        function F(t, i, o, s, l) {
          var u = a.convert(o.format, o.encoding),
            c = a.convert(o.type),
            f = E(o.internalFormat, u, c, o.encoding);
          r.get(i).__hasExternalTextures ||
            (32879 === l || 35866 === l
              ? n.texImage3D(l, 0, f, i.width, i.height, i.depth, 0, u, c, null)
              : n.texImage2D(l, 0, f, i.width, i.height, 0, u, c, null)),
            n.bindFramebuffer(36160, t),
            j(i)
              ? v.framebufferTexture2DMultisampleEXT(
                  36160,
                  s,
                  l,
                  r.get(o).__webglTexture,
                  0,
                  U(i)
                )
              : e.framebufferTexture2D(36160, s, l, r.get(o).__webglTexture, 0),
            n.bindFramebuffer(36160, null);
        }
        function B(t, n, r) {
          if (
            (e.bindRenderbuffer(36161, t), n.depthBuffer && !n.stencilBuffer)
          ) {
            var i = 33189;
            if (r || j(n)) {
              var o = n.depthTexture;
              o &&
                o.isDepthTexture &&
                (o.type === Ha ? (i = 36012) : o.type === Ba && (i = 33190));
              var s = U(n);
              j(n)
                ? v.renderbufferStorageMultisampleEXT(
                    36161,
                    s,
                    i,
                    n.width,
                    n.height
                  )
                : e.renderbufferStorageMultisample(
                    36161,
                    s,
                    i,
                    n.width,
                    n.height
                  );
            } else e.renderbufferStorage(36161, i, n.width, n.height);
            e.framebufferRenderbuffer(36160, 36096, 36161, t);
          } else if (n.depthBuffer && n.stencilBuffer) {
            var l = U(n);
            r && !1 === j(n)
              ? e.renderbufferStorageMultisample(
                  36161,
                  l,
                  35056,
                  n.width,
                  n.height
                )
              : j(n)
              ? v.renderbufferStorageMultisampleEXT(
                  36161,
                  l,
                  35056,
                  n.width,
                  n.height
                )
              : e.renderbufferStorage(36161, 34041, n.width, n.height),
              e.framebufferRenderbuffer(36160, 33306, 36161, t);
          } else {
            var u =
                !0 === n.isWebGLMultipleRenderTargets
                  ? n.texture[0]
                  : n.texture,
              c = a.convert(u.format, u.encoding),
              f = a.convert(u.type),
              d = E(u.internalFormat, c, f, u.encoding),
              h = U(n);
            r && !1 === j(n)
              ? e.renderbufferStorageMultisample(36161, h, d, n.width, n.height)
              : j(n)
              ? v.renderbufferStorageMultisampleEXT(
                  36161,
                  h,
                  d,
                  n.width,
                  n.height
                )
              : e.renderbufferStorage(36161, d, n.width, n.height);
          }
          e.bindRenderbuffer(36161, null);
        }
        function H(t) {
          var i = r.get(t),
            a = !0 === t.isWebGLCubeRenderTarget;
          if (t.depthTexture && !i.__autoAllocateDepthBuffer) {
            if (a)
              throw new Error(
                "target.depthTexture not supported in Cube render targets"
              );
            !(function (t, i) {
              if (i && i.isWebGLCubeRenderTarget)
                throw new Error(
                  "Depth Texture with cube render targets is not supported"
                );
              if (
                (n.bindFramebuffer(36160, t),
                !i.depthTexture || !i.depthTexture.isDepthTexture)
              )
                throw new Error(
                  "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
                );
              (r.get(i.depthTexture).__webglTexture &&
                i.depthTexture.image.width === i.width &&
                i.depthTexture.image.height === i.height) ||
                ((i.depthTexture.image.width = i.width),
                (i.depthTexture.image.height = i.height),
                (i.depthTexture.needsUpdate = !0)),
                R(i.depthTexture, 0);
              var a = r.get(i.depthTexture).__webglTexture,
                o = U(i);
              if (i.depthTexture.format === $a)
                j(i)
                  ? v.framebufferTexture2DMultisampleEXT(
                      36160,
                      36096,
                      3553,
                      a,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(36160, 36096, 3553, a, 0);
              else {
                if (i.depthTexture.format !== Qa)
                  throw new Error("Unknown depthTexture format");
                j(i)
                  ? v.framebufferTexture2DMultisampleEXT(
                      36160,
                      33306,
                      3553,
                      a,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(36160, 33306, 3553, a, 0);
              }
            })(i.__webglFramebuffer, t);
          } else if (a) {
            i.__webglDepthbuffer = [];
            for (var o = 0; o < 6; o++)
              n.bindFramebuffer(36160, i.__webglFramebuffer[o]),
                (i.__webglDepthbuffer[o] = e.createRenderbuffer()),
                B(i.__webglDepthbuffer[o], t, !1);
          } else
            n.bindFramebuffer(36160, i.__webglFramebuffer),
              (i.__webglDepthbuffer = e.createRenderbuffer()),
              B(i.__webglDepthbuffer, t, !1);
          n.bindFramebuffer(36160, null);
        }
        function U(e) {
          return Math.min(p, e.samples);
        }
        function j(e) {
          var n = r.get(e);
          return (
            c &&
            e.samples > 0 &&
            !0 === t.has("WEBGL_multisampled_render_to_texture") &&
            !1 !== n.__useRenderToTexture
          );
        }
        function G(e, n) {
          var r = e.encoding,
            i = e.format,
            a = e.type;
          return (
            !0 === e.isCompressedTexture ||
              !0 === e.isVideoTexture ||
              e.format === ks ||
              (r !== Wo &&
                (r === Vo
                  ? !1 === c
                    ? !0 === t.has("EXT_sRGB") && i === Xa
                      ? ((e.format = ks),
                        (e.minFilter = Aa),
                        (e.generateMipmaps = !1))
                      : (n = al.sRGBToLinear(n))
                    : (i === Xa && a === za) ||
                      console.warn(
                        "THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."
                      )
                  : console.error(
                      "THREE.WebGLTextures: Unsupported texture encoding:",
                      r
                    ))),
            n
          );
        }
        (this.allocateTextureUnit = function () {
          var e = L;
          return (
            e >= f &&
              console.warn(
                "THREE.WebGLTextures: Trying to use " +
                  e +
                  " texture units while this GPU supports only " +
                  f
              ),
            (L += 1),
            e
          );
        }),
          (this.resetTextureUnits = function () {
            L = 0;
          }),
          (this.setTexture2D = R),
          (this.setTexture2DArray = function (e, t) {
            var i = r.get(e);
            e.version > 0 && i.__version !== e.version
              ? N(i, e, t)
              : (n.activeTexture(33984 + t),
                n.bindTexture(35866, i.__webglTexture));
          }),
          (this.setTexture3D = function (e, t) {
            var i = r.get(e);
            e.version > 0 && i.__version !== e.version
              ? N(i, e, t)
              : (n.activeTexture(33984 + t),
                n.bindTexture(32879, i.__webglTexture));
          }),
          (this.setTextureCube = function (t, i) {
            var o = r.get(t);
            t.version > 0 && o.__version !== t.version
              ? (function (t, r, i) {
                  if (6 !== r.image.length) return;
                  var o = I(t, r),
                    s = r.source;
                  if (
                    (n.activeTexture(33984 + i),
                    n.bindTexture(34067, t.__webglTexture),
                    s.version !== s.__currentVersion || !0 === o)
                  ) {
                    e.pixelStorei(37440, r.flipY),
                      e.pixelStorei(37441, r.premultiplyAlpha),
                      e.pixelStorei(3317, r.unpackAlignment),
                      e.pixelStorei(37443, 0);
                    for (
                      var l =
                          r.isCompressedTexture ||
                          r.image[0].isCompressedTexture,
                        u = r.image[0] && r.image[0].isDataTexture,
                        f = [],
                        h = 0;
                      h < 6;
                      h++
                    )
                      (f[h] =
                        l || u
                          ? u
                            ? r.image[h].image
                            : r.image[h]
                          : w(r.image[h], !1, !0, d)),
                        (f[h] = G(r, f[h]));
                    var p,
                      v = f[0],
                      m = _(v) || c,
                      g = a.convert(r.format, r.encoding),
                      y = a.convert(r.type),
                      b = E(r.internalFormat, g, y, r.encoding),
                      x = c && !0 !== r.isVideoTexture,
                      T = void 0 === t.__version,
                      C = k(r, v, m);
                    if ((D(34067, r, m), l)) {
                      x && T && n.texStorage2D(34067, C, b, v.width, v.height);
                      for (var A = 0; A < 6; A++) {
                        p = f[A].mipmaps;
                        for (var P = 0; P < p.length; P++) {
                          var L = p[P];
                          r.format !== Xa
                            ? null !== g
                              ? x
                                ? n.compressedTexSubImage2D(
                                    34069 + A,
                                    P,
                                    0,
                                    0,
                                    L.width,
                                    L.height,
                                    g,
                                    L.data
                                  )
                                : n.compressedTexImage2D(
                                    34069 + A,
                                    P,
                                    b,
                                    L.width,
                                    L.height,
                                    0,
                                    L.data
                                  )
                              : console.warn(
                                  "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                                )
                            : x
                            ? n.texSubImage2D(
                                34069 + A,
                                P,
                                0,
                                0,
                                L.width,
                                L.height,
                                g,
                                y,
                                L.data
                              )
                            : n.texImage2D(
                                34069 + A,
                                P,
                                b,
                                L.width,
                                L.height,
                                0,
                                g,
                                y,
                                L.data
                              );
                        }
                      }
                    } else {
                      (p = r.mipmaps),
                        x &&
                          T &&
                          (p.length > 0 && C++,
                          n.texStorage2D(34067, C, b, f[0].width, f[0].height));
                      for (var R = 0; R < 6; R++)
                        if (u) {
                          x
                            ? n.texSubImage2D(
                                34069 + R,
                                0,
                                0,
                                0,
                                f[R].width,
                                f[R].height,
                                g,
                                y,
                                f[R].data
                              )
                            : n.texImage2D(
                                34069 + R,
                                0,
                                b,
                                f[R].width,
                                f[R].height,
                                0,
                                g,
                                y,
                                f[R].data
                              );
                          for (var O = 0; O < p.length; O++) {
                            var z = p[O].image[R].image;
                            x
                              ? n.texSubImage2D(
                                  34069 + R,
                                  O + 1,
                                  0,
                                  0,
                                  z.width,
                                  z.height,
                                  g,
                                  y,
                                  z.data
                                )
                              : n.texImage2D(
                                  34069 + R,
                                  O + 1,
                                  b,
                                  z.width,
                                  z.height,
                                  0,
                                  g,
                                  y,
                                  z.data
                                );
                          }
                        } else {
                          x
                            ? n.texSubImage2D(34069 + R, 0, 0, 0, g, y, f[R])
                            : n.texImage2D(34069 + R, 0, b, g, y, f[R]);
                          for (var N = 0; N < p.length; N++) {
                            var F = p[N];
                            x
                              ? n.texSubImage2D(
                                  34069 + R,
                                  N + 1,
                                  0,
                                  0,
                                  g,
                                  y,
                                  F.image[R]
                                )
                              : n.texImage2D(
                                  34069 + R,
                                  N + 1,
                                  b,
                                  g,
                                  y,
                                  F.image[R]
                                );
                          }
                        }
                    }
                    S(r, m) && M(34067),
                      (s.__currentVersion = s.version),
                      r.onUpdate && r.onUpdate(r);
                  }
                  t.__version = r.version;
                })(o, t, i)
              : (n.activeTexture(33984 + i),
                n.bindTexture(34067, o.__webglTexture));
          }),
          (this.rebindTextures = function (e, t, n) {
            var i = r.get(e);
            void 0 !== t && F(i.__webglFramebuffer, e, e.texture, 36064, 3553),
              void 0 !== n && H(e);
          }),
          (this.setupRenderTarget = function (t) {
            var s = t.texture,
              l = r.get(t),
              u = r.get(s);
            t.addEventListener("dispose", A),
              !0 !== t.isWebGLMultipleRenderTargets &&
                (void 0 === u.__webglTexture &&
                  (u.__webglTexture = e.createTexture()),
                (u.__version = s.version),
                o.memory.textures++);
            var f = !0 === t.isWebGLCubeRenderTarget,
              d = !0 === t.isWebGLMultipleRenderTargets,
              h = _(t) || c;
            if (f) {
              l.__webglFramebuffer = [];
              for (var p = 0; p < 6; p++)
                l.__webglFramebuffer[p] = e.createFramebuffer();
            } else if (((l.__webglFramebuffer = e.createFramebuffer()), d))
              if (i.drawBuffers)
                for (var v = t.texture, m = 0, g = v.length; m < g; m++) {
                  var y = r.get(v[m]);
                  void 0 === y.__webglTexture &&
                    ((y.__webglTexture = e.createTexture()),
                    o.memory.textures++);
                }
              else
                console.warn(
                  "THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension."
                );
            else if (c && t.samples > 0 && !1 === j(t)) {
              (l.__webglMultisampledFramebuffer = e.createFramebuffer()),
                (l.__webglColorRenderbuffer = e.createRenderbuffer()),
                e.bindRenderbuffer(36161, l.__webglColorRenderbuffer);
              var b = a.convert(s.format, s.encoding),
                x = a.convert(s.type),
                w = E(s.internalFormat, b, x, s.encoding),
                k = U(t);
              e.renderbufferStorageMultisample(36161, k, w, t.width, t.height),
                n.bindFramebuffer(36160, l.__webglMultisampledFramebuffer),
                e.framebufferRenderbuffer(
                  36160,
                  36064,
                  36161,
                  l.__webglColorRenderbuffer
                ),
                e.bindRenderbuffer(36161, null),
                t.depthBuffer &&
                  ((l.__webglDepthRenderbuffer = e.createRenderbuffer()),
                  B(l.__webglDepthRenderbuffer, t, !0)),
                n.bindFramebuffer(36160, null);
            }
            if (f) {
              n.bindTexture(34067, u.__webglTexture), D(34067, s, h);
              for (var T = 0; T < 6; T++)
                F(l.__webglFramebuffer[T], t, s, 36064, 34069 + T);
              S(s, h) && M(34067), n.unbindTexture();
            } else if (d) {
              for (var C = t.texture, P = 0, L = C.length; P < L; P++) {
                var R = C[P],
                  O = r.get(R);
                n.bindTexture(3553, O.__webglTexture),
                  D(3553, R, h),
                  F(l.__webglFramebuffer, t, R, 36064 + P, 3553),
                  S(R, h) && M(3553);
              }
              n.unbindTexture();
            } else {
              var z = 3553;
              (t.isWebGL3DRenderTarget || t.isWebGLArrayRenderTarget) &&
                (c
                  ? (z = t.isWebGL3DRenderTarget ? 32879 : 35866)
                  : console.error(
                      "THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2."
                    )),
                n.bindTexture(z, u.__webglTexture),
                D(z, s, h),
                F(l.__webglFramebuffer, t, s, 36064, z),
                S(s, h) && M(z),
                n.unbindTexture();
            }
            t.depthBuffer && H(t);
          }),
          (this.updateRenderTargetMipmap = function (e) {
            for (
              var t = _(e) || c,
                i =
                  !0 === e.isWebGLMultipleRenderTargets
                    ? e.texture
                    : [e.texture],
                a = 0,
                o = i.length;
              a < o;
              a++
            ) {
              var s = i[a];
              if (S(s, t)) {
                var l = e.isWebGLCubeRenderTarget ? 34067 : 3553,
                  u = r.get(s).__webglTexture;
                n.bindTexture(l, u), M(l), n.unbindTexture();
              }
            }
          }),
          (this.updateMultisampleRenderTarget = function (t) {
            if (c && t.samples > 0 && !1 === j(t)) {
              var i = t.width,
                a = t.height,
                o = 16384,
                s = [36064],
                l = t.stencilBuffer ? 33306 : 36096;
              t.depthBuffer && s.push(l);
              var u = r.get(t),
                f = void 0 !== u.__ignoreDepthValues && u.__ignoreDepthValues;
              !1 === f &&
                (t.depthBuffer && (o |= 256), t.stencilBuffer && (o |= 1024)),
                n.bindFramebuffer(36008, u.__webglMultisampledFramebuffer),
                n.bindFramebuffer(36009, u.__webglFramebuffer),
                !0 === f &&
                  (e.invalidateFramebuffer(36008, [l]),
                  e.invalidateFramebuffer(36009, [l])),
                e.blitFramebuffer(0, 0, i, a, 0, 0, i, a, o, 9728),
                m && e.invalidateFramebuffer(36008, s),
                n.bindFramebuffer(36008, null),
                n.bindFramebuffer(36009, u.__webglMultisampledFramebuffer);
            }
          }),
          (this.setupDepthRenderbuffer = H),
          (this.setupFrameBufferTexture = F),
          (this.useMultisampledRTT = j);
      }
      function ch(e, t, n) {
        var r = n.isWebGL2;
        return {
          convert: function (e) {
            var n,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null;
            if (e === za) return 5121;
            if (e === ja) return 32819;
            if (e === Ga) return 32820;
            if (e === Da) return 5120;
            if (e === Ia) return 5122;
            if (e === Na) return 5123;
            if (e === Fa) return 5124;
            if (e === Ba) return 5125;
            if (e === Ha) return 5126;
            if (e === Ua)
              return r
                ? 5131
                : null !== (n = t.get("OES_texture_half_float"))
                ? n.HALF_FLOAT_OES
                : null;
            if (e === Va) return 6406;
            if (e === Xa) return 6408;
            if (e === Ya) return 6409;
            if (e === Ja) return 6410;
            if (e === $a) return 6402;
            if (e === Qa) return 34041;
            if (e === Za) return 6403;
            if (e === qa)
              return (
                console.warn(
                  "THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"
                ),
                6408
              );
            if (e === ks)
              return null !== (n = t.get("EXT_sRGB")) ? n.SRGB_ALPHA_EXT : null;
            if (e === Ka) return 36244;
            if (e === eo) return 33319;
            if (e === to) return 33320;
            if (e === no) return 36249;
            if (e === ro || e === io || e === ao || e === oo)
              if (i === Vo) {
                if (null === (n = t.get("WEBGL_compressed_texture_s3tc_srgb")))
                  return null;
                if (e === ro) return n.COMPRESSED_SRGB_S3TC_DXT1_EXT;
                if (e === io) return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
                if (e === ao) return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
                if (e === oo) return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
              } else {
                if (null === (n = t.get("WEBGL_compressed_texture_s3tc")))
                  return null;
                if (e === ro) return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (e === io) return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (e === ao) return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (e === oo) return n.COMPRESSED_RGBA_S3TC_DXT5_EXT;
              }
            if (e === so || e === lo || e === uo || e === co) {
              if (null === (n = t.get("WEBGL_compressed_texture_pvrtc")))
                return null;
              if (e === so) return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
              if (e === lo) return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
              if (e === uo) return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
              if (e === co) return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            }
            if (e === fo)
              return null !== (n = t.get("WEBGL_compressed_texture_etc1"))
                ? n.COMPRESSED_RGB_ETC1_WEBGL
                : null;
            if (e === ho || e === po) {
              if (null === (n = t.get("WEBGL_compressed_texture_etc")))
                return null;
              if (e === ho)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ETC2
                  : n.COMPRESSED_RGB8_ETC2;
              if (e === po)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
                  : n.COMPRESSED_RGBA8_ETC2_EAC;
            }
            if (
              e === vo ||
              e === mo ||
              e === go ||
              e === yo ||
              e === bo ||
              e === xo ||
              e === wo ||
              e === _o ||
              e === So ||
              e === Mo ||
              e === Eo ||
              e === ko ||
              e === To ||
              e === Co
            ) {
              if (null === (n = t.get("WEBGL_compressed_texture_astc")))
                return null;
              if (e === vo)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
                  : n.COMPRESSED_RGBA_ASTC_4x4_KHR;
              if (e === mo)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
                  : n.COMPRESSED_RGBA_ASTC_5x4_KHR;
              if (e === go)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
                  : n.COMPRESSED_RGBA_ASTC_5x5_KHR;
              if (e === yo)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
                  : n.COMPRESSED_RGBA_ASTC_6x5_KHR;
              if (e === bo)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
                  : n.COMPRESSED_RGBA_ASTC_6x6_KHR;
              if (e === xo)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
                  : n.COMPRESSED_RGBA_ASTC_8x5_KHR;
              if (e === wo)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
                  : n.COMPRESSED_RGBA_ASTC_8x6_KHR;
              if (e === _o)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
                  : n.COMPRESSED_RGBA_ASTC_8x8_KHR;
              if (e === So)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
                  : n.COMPRESSED_RGBA_ASTC_10x5_KHR;
              if (e === Mo)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
                  : n.COMPRESSED_RGBA_ASTC_10x6_KHR;
              if (e === Eo)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
                  : n.COMPRESSED_RGBA_ASTC_10x8_KHR;
              if (e === ko)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
                  : n.COMPRESSED_RGBA_ASTC_10x10_KHR;
              if (e === To)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
                  : n.COMPRESSED_RGBA_ASTC_12x10_KHR;
              if (e === Co)
                return i === Vo
                  ? n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
                  : n.COMPRESSED_RGBA_ASTC_12x12_KHR;
            }
            if (e === Ao) {
              if (null === (n = t.get("EXT_texture_compression_bptc")))
                return null;
              if (e === Ao)
                return i === Vo
                  ? n.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
                  : n.COMPRESSED_RGBA_BPTC_UNORM_EXT;
            }
            return e === Wa
              ? r
                ? 34042
                : null !== (n = t.get("WEBGL_depth_texture"))
                ? n.UNSIGNED_INT_24_8_WEBGL
                : null
              : void 0;
          },
        };
      }
      var fh = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [];
          return Kr(this, n), ((e = t.call(this)).cameras = r), e;
        }
        return ti(n);
      })(Tc);
      fh.prototype.isArrayCamera = !0;
      var dh = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e;
          return Kr(this, n), ((e = t.call(this)).type = "Group"), e;
        }
        return ti(n);
      })(xu);
      dh.prototype.isGroup = !0;
      var hh = { type: "move" },
        ph = (function () {
          function e() {
            Kr(this, e),
              (this._targetRay = null),
              (this._grip = null),
              (this._hand = null);
          }
          return (
            ti(e, [
              {
                key: "getHandSpace",
                value: function () {
                  return (
                    null === this._hand &&
                      ((this._hand = new dh()),
                      (this._hand.matrixAutoUpdate = !1),
                      (this._hand.visible = !1),
                      (this._hand.joints = {}),
                      (this._hand.inputState = { pinching: !1 })),
                    this._hand
                  );
                },
              },
              {
                key: "getTargetRaySpace",
                value: function () {
                  return (
                    null === this._targetRay &&
                      ((this._targetRay = new dh()),
                      (this._targetRay.matrixAutoUpdate = !1),
                      (this._targetRay.visible = !1),
                      (this._targetRay.hasLinearVelocity = !1),
                      (this._targetRay.linearVelocity = new yl()),
                      (this._targetRay.hasAngularVelocity = !1),
                      (this._targetRay.angularVelocity = new yl())),
                    this._targetRay
                  );
                },
              },
              {
                key: "getGripSpace",
                value: function () {
                  return (
                    null === this._grip &&
                      ((this._grip = new dh()),
                      (this._grip.matrixAutoUpdate = !1),
                      (this._grip.visible = !1),
                      (this._grip.hasLinearVelocity = !1),
                      (this._grip.linearVelocity = new yl()),
                      (this._grip.hasAngularVelocity = !1),
                      (this._grip.angularVelocity = new yl())),
                    this._grip
                  );
                },
              },
              {
                key: "dispatchEvent",
                value: function (e) {
                  return (
                    null !== this._targetRay &&
                      this._targetRay.dispatchEvent(e),
                    null !== this._grip && this._grip.dispatchEvent(e),
                    null !== this._hand && this._hand.dispatchEvent(e),
                    this
                  );
                },
              },
              {
                key: "disconnect",
                value: function (e) {
                  return (
                    this.dispatchEvent({ type: "disconnected", data: e }),
                    null !== this._targetRay && (this._targetRay.visible = !1),
                    null !== this._grip && (this._grip.visible = !1),
                    null !== this._hand && (this._hand.visible = !1),
                    this
                  );
                },
              },
              {
                key: "update",
                value: function (e, t, n) {
                  var r = null,
                    i = null,
                    a = null,
                    o = this._targetRay,
                    s = this._grip,
                    l = this._hand;
                  if (e && "visible-blurred" !== t.session.visibilityState)
                    if (
                      (null !== o &&
                        null !== (r = t.getPose(e.targetRaySpace, n)) &&
                        (o.matrix.fromArray(r.transform.matrix),
                        o.matrix.decompose(o.position, o.rotation, o.scale),
                        r.linearVelocity
                          ? ((o.hasLinearVelocity = !0),
                            o.linearVelocity.copy(r.linearVelocity))
                          : (o.hasLinearVelocity = !1),
                        r.angularVelocity
                          ? ((o.hasAngularVelocity = !0),
                            o.angularVelocity.copy(r.angularVelocity))
                          : (o.hasAngularVelocity = !1),
                        this.dispatchEvent(hh)),
                      l && e.hand)
                    ) {
                      a = !0;
                      var u,
                        c = Xr(e.hand.values());
                      try {
                        for (c.s(); !(u = c.n()).done; ) {
                          var f = u.value,
                            d = t.getJointPose(f, n);
                          if (void 0 === l.joints[f.jointName]) {
                            var h = new dh();
                            (h.matrixAutoUpdate = !1),
                              (h.visible = !1),
                              (l.joints[f.jointName] = h),
                              l.add(h);
                          }
                          var p = l.joints[f.jointName];
                          null !== d &&
                            (p.matrix.fromArray(d.transform.matrix),
                            p.matrix.decompose(p.position, p.rotation, p.scale),
                            (p.jointRadius = d.radius)),
                            (p.visible = null !== d);
                        }
                      } catch (y) {
                        c.e(y);
                      } finally {
                        c.f();
                      }
                      var v = l.joints["index-finger-tip"],
                        m = l.joints["thumb-tip"],
                        g = v.position.distanceTo(m.position);
                      l.inputState.pinching && g > 0.025
                        ? ((l.inputState.pinching = !1),
                          this.dispatchEvent({
                            type: "pinchend",
                            handedness: e.handedness,
                            target: this,
                          }))
                        : !l.inputState.pinching &&
                          g <= 0.015 &&
                          ((l.inputState.pinching = !0),
                          this.dispatchEvent({
                            type: "pinchstart",
                            handedness: e.handedness,
                            target: this,
                          }));
                    } else
                      null !== s &&
                        e.gripSpace &&
                        null !== (i = t.getPose(e.gripSpace, n)) &&
                        (s.matrix.fromArray(i.transform.matrix),
                        s.matrix.decompose(s.position, s.rotation, s.scale),
                        i.linearVelocity
                          ? ((s.hasLinearVelocity = !0),
                            s.linearVelocity.copy(i.linearVelocity))
                          : (s.hasLinearVelocity = !1),
                        i.angularVelocity
                          ? ((s.hasAngularVelocity = !0),
                            s.angularVelocity.copy(i.angularVelocity))
                          : (s.hasAngularVelocity = !1));
                  return (
                    null !== o && (o.visible = null !== r),
                    null !== s && (s.visible = null !== i),
                    null !== l && (l.visible = null !== a),
                    this
                  );
                },
              },
            ]),
            e
          );
        })(),
        vh = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i, a, o, s, l, u, c, f) {
            var d;
            if ((Kr(this, n), (f = void 0 !== f ? f : $a) !== $a && f !== Qa))
              throw new Error(
                "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
              );
            return (
              void 0 === i && f === $a && (i = Na),
              void 0 === i && f === Qa && (i = Wa),
              ((d = t.call(this, null, a, o, s, l, u, f, i, c)).image = {
                width: e,
                height: r,
              }),
              (d.magFilter = void 0 !== l ? l : Ma),
              (d.minFilter = void 0 !== u ? u : Ma),
              (d.flipY = !1),
              (d.generateMipmaps = !1),
              d
            );
          }
          return ti(n);
        })(ul);
      vh.prototype.isDepthTexture = !0;
      var mh = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r) {
          var i;
          Kr(this, n);
          var a = ai((i = t.call(this))),
            o = null,
            s = 1,
            l = null,
            u = "local-floor",
            c = null,
            f = null,
            d = null,
            h = null,
            p = null,
            v = r.getContextAttributes(),
            m = null,
            g = null,
            y = [],
            b = new Map(),
            x = new Tc();
          x.layers.enable(1), (x.viewport = new cl());
          var w = new Tc();
          w.layers.enable(2), (w.viewport = new cl());
          var _ = [x, w],
            S = new fh();
          S.layers.enable(1), S.layers.enable(2);
          var M = null,
            E = null;
          function k(e) {
            var t = b.get(e.inputSource);
            t && t.dispatchEvent({ type: e.type, data: e.inputSource });
          }
          function T() {
            b.forEach(function (e, t) {
              e.disconnect(t);
            }),
              b.clear(),
              (M = null),
              (E = null),
              e.setRenderTarget(m),
              (h = null),
              (d = null),
              (f = null),
              (o = null),
              (g = null),
              O.stop(),
              (a.isPresenting = !1),
              a.dispatchEvent({ type: "sessionend" });
          }
          function C(e) {
            for (var t = o.inputSources, n = 0; n < y.length; n++)
              b.set(t[n], y[n]);
            for (var r = 0; r < e.removed.length; r++) {
              var i = e.removed[r],
                a = b.get(i);
              a &&
                (a.dispatchEvent({ type: "disconnected", data: i }),
                b.delete(i));
            }
            for (var s = 0; s < e.added.length; s++) {
              var l = e.added[s],
                u = b.get(l);
              u && u.dispatchEvent({ type: "connected", data: l });
            }
          }
          (i.cameraAutoUpdate = !0),
            (i.enabled = !1),
            (i.isPresenting = !1),
            (i.getController = function (e) {
              var t = y[e];
              return (
                void 0 === t && ((t = new ph()), (y[e] = t)),
                t.getTargetRaySpace()
              );
            }),
            (i.getControllerGrip = function (e) {
              var t = y[e];
              return (
                void 0 === t && ((t = new ph()), (y[e] = t)), t.getGripSpace()
              );
            }),
            (i.getHand = function (e) {
              var t = y[e];
              return (
                void 0 === t && ((t = new ph()), (y[e] = t)), t.getHandSpace()
              );
            }),
            (i.setFramebufferScaleFactor = function (e) {
              (s = e),
                !0 === a.isPresenting &&
                  console.warn(
                    "THREE.WebXRManager: Cannot change framebuffer scale while presenting."
                  );
            }),
            (i.setReferenceSpaceType = function (e) {
              (u = e),
                !0 === a.isPresenting &&
                  console.warn(
                    "THREE.WebXRManager: Cannot change reference space type while presenting."
                  );
            }),
            (i.getReferenceSpace = function () {
              return l;
            }),
            (i.getBaseLayer = function () {
              return null !== d ? d : h;
            }),
            (i.getBinding = function () {
              return f;
            }),
            (i.getFrame = function () {
              return p;
            }),
            (i.getSession = function () {
              return o;
            }),
            (i.setSession = (function () {
              var t = ui(
                hi.mark(function t(n) {
                  var i, c, p, y, b;
                  return hi.wrap(
                    function (t) {
                      for (;;)
                        switch ((t.prev = t.next)) {
                          case 0:
                            if (null === (o = n)) {
                              t.next = 24;
                              break;
                            }
                            if (
                              ((m = e.getRenderTarget()),
                              o.addEventListener("select", k),
                              o.addEventListener("selectstart", k),
                              o.addEventListener("selectend", k),
                              o.addEventListener("squeeze", k),
                              o.addEventListener("squeezestart", k),
                              o.addEventListener("squeezeend", k),
                              o.addEventListener("end", T),
                              o.addEventListener("inputsourceschange", C),
                              !0 === v.xrCompatible)
                            ) {
                              t.next = 14;
                              break;
                            }
                            return (t.next = 14), r.makeXRCompatible();
                          case 14:
                            return (
                              void 0 === o.renderState.layers ||
                              !1 === e.capabilities.isWebGL2
                                ? ((i = {
                                    antialias:
                                      void 0 !== o.renderState.layers ||
                                      v.antialias,
                                    alpha: v.alpha,
                                    depth: v.depth,
                                    stencil: v.stencil,
                                    framebufferScaleFactor: s,
                                  }),
                                  (h = new XRWebGLLayer(o, r, i)),
                                  o.updateRenderState({ baseLayer: h }),
                                  (g = new fl(
                                    h.framebufferWidth,
                                    h.framebufferHeight,
                                    {
                                      format: Xa,
                                      type: za,
                                      encoding: e.outputEncoding,
                                    }
                                  )))
                                : ((c = null),
                                  (p = null),
                                  (y = null),
                                  v.depth &&
                                    ((y = v.stencil ? 35056 : 33190),
                                    (c = v.stencil ? Qa : $a),
                                    (p = v.stencil ? Wa : Na)),
                                  (b = {
                                    colorFormat:
                                      e.outputEncoding === Vo ? 35907 : 32856,
                                    depthFormat: y,
                                    scaleFactor: s,
                                  }),
                                  (f = new XRWebGLBinding(o, r)),
                                  (d = f.createProjectionLayer(b)),
                                  o.updateRenderState({ layers: [d] }),
                                  (g = new fl(d.textureWidth, d.textureHeight, {
                                    format: Xa,
                                    type: za,
                                    depthTexture: new vh(
                                      d.textureWidth,
                                      d.textureHeight,
                                      p,
                                      void 0,
                                      void 0,
                                      void 0,
                                      void 0,
                                      void 0,
                                      void 0,
                                      c
                                    ),
                                    stencilBuffer: v.stencil,
                                    encoding: e.outputEncoding,
                                    samples: v.antialias ? 4 : 0,
                                  })),
                                  (e.properties.get(g).__ignoreDepthValues =
                                    d.ignoreDepthValues)),
                              (g.isXRRenderTarget = !0),
                              this.setFoveation(1),
                              (t.next = 19),
                              o.requestReferenceSpace(u)
                            );
                          case 19:
                            (l = t.sent),
                              O.setContext(o),
                              O.start(),
                              (a.isPresenting = !0),
                              a.dispatchEvent({ type: "sessionstart" });
                          case 24:
                          case "end":
                            return t.stop();
                        }
                    },
                    t,
                    this
                  );
                })
              );
              return function (e) {
                return t.apply(this, arguments);
              };
            })());
          var A = new yl(),
            P = new yl();
          function L(e, t) {
            null === t
              ? e.matrixWorld.copy(e.matrix)
              : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
              e.matrixWorldInverse.copy(e.matrixWorld).invert();
          }
          (i.updateCamera = function (e) {
            if (null !== o) {
              (S.near = w.near = x.near = e.near),
                (S.far = w.far = x.far = e.far),
                (M === S.near && E === S.far) ||
                  (o.updateRenderState({ depthNear: S.near, depthFar: S.far }),
                  (M = S.near),
                  (E = S.far));
              var t = e.parent,
                n = S.cameras;
              L(S, t);
              for (var r = 0; r < n.length; r++) L(n[r], t);
              S.matrixWorld.decompose(S.position, S.quaternion, S.scale),
                e.position.copy(S.position),
                e.quaternion.copy(S.quaternion),
                e.scale.copy(S.scale),
                e.matrix.copy(S.matrix),
                e.matrixWorld.copy(S.matrixWorld);
              for (var i = e.children, a = 0, s = i.length; a < s; a++)
                i[a].updateMatrixWorld(!0);
              2 === n.length
                ? (function (e, t, n) {
                    A.setFromMatrixPosition(t.matrixWorld),
                      P.setFromMatrixPosition(n.matrixWorld);
                    var r = A.distanceTo(P),
                      i = t.projectionMatrix.elements,
                      a = n.projectionMatrix.elements,
                      o = i[14] / (i[10] - 1),
                      s = i[14] / (i[10] + 1),
                      l = (i[9] + 1) / i[5],
                      u = (i[9] - 1) / i[5],
                      c = (i[8] - 1) / i[0],
                      f = (a[8] + 1) / a[0],
                      d = o * c,
                      h = o * f,
                      p = r / (-c + f),
                      v = p * -c;
                    t.matrixWorld.decompose(e.position, e.quaternion, e.scale),
                      e.translateX(v),
                      e.translateZ(p),
                      e.matrixWorld.compose(e.position, e.quaternion, e.scale),
                      e.matrixWorldInverse.copy(e.matrixWorld).invert();
                    var m = o + p,
                      g = s + p,
                      y = d - v,
                      b = h + (r - v),
                      x = ((l * s) / g) * m,
                      w = ((u * s) / g) * m;
                    e.projectionMatrix.makePerspective(y, b, x, w, m, g);
                  })(S, x, w)
                : S.projectionMatrix.copy(x.projectionMatrix);
            }
          }),
            (i.getCamera = function () {
              return S;
            }),
            (i.getFoveation = function () {
              return null !== d
                ? d.fixedFoveation
                : null !== h
                ? h.fixedFoveation
                : void 0;
            }),
            (i.setFoveation = function (e) {
              null !== d && (d.fixedFoveation = e),
                null !== h &&
                  void 0 !== h.fixedFoveation &&
                  (h.fixedFoveation = e);
            });
          var R = null;
          var O = new Bc();
          return (
            O.setAnimationLoop(function (t, n) {
              if (((c = n.getViewerPose(l)), (p = n), null !== c)) {
                var r = c.views;
                null !== h &&
                  (e.setRenderTargetFramebuffer(g, h.framebuffer),
                  e.setRenderTarget(g));
                var i = !1;
                r.length !== S.cameras.length &&
                  ((S.cameras.length = 0), (i = !0));
                for (var a = 0; a < r.length; a++) {
                  var s = r[a],
                    u = null;
                  if (null !== h) u = h.getViewport(s);
                  else {
                    var v = f.getViewSubImage(d, s);
                    (u = v.viewport),
                      0 === a &&
                        (e.setRenderTargetTextures(
                          g,
                          v.colorTexture,
                          d.ignoreDepthValues ? void 0 : v.depthStencilTexture
                        ),
                        e.setRenderTarget(g));
                  }
                  var m = _[a];
                  m.matrix.fromArray(s.transform.matrix),
                    m.projectionMatrix.fromArray(s.projectionMatrix),
                    m.viewport.set(u.x, u.y, u.width, u.height),
                    0 === a && S.matrix.copy(m.matrix),
                    !0 === i && S.cameras.push(m);
                }
              }
              for (var b = o.inputSources, x = 0; x < y.length; x++) {
                var w = y[x],
                  M = b[x];
                w.update(M, n, l);
              }
              R && R(t, n), (p = null);
            }),
            (i.setAnimationLoop = function (e) {
              R = e;
            }),
            (i.dispose = function () {}),
            i
          );
        }
        return ti(n);
      })(Ts);
      function gh(e, t) {
        function n(n, r) {
          (n.opacity.value = r.opacity),
            r.color && n.diffuse.value.copy(r.color),
            r.emissive &&
              n.emissive.value
                .copy(r.emissive)
                .multiplyScalar(r.emissiveIntensity),
            r.map && (n.map.value = r.map),
            r.alphaMap && (n.alphaMap.value = r.alphaMap),
            r.bumpMap &&
              ((n.bumpMap.value = r.bumpMap),
              (n.bumpScale.value = r.bumpScale),
              r.side === ki && (n.bumpScale.value *= -1)),
            r.displacementMap &&
              ((n.displacementMap.value = r.displacementMap),
              (n.displacementScale.value = r.displacementScale),
              (n.displacementBias.value = r.displacementBias)),
            r.emissiveMap && (n.emissiveMap.value = r.emissiveMap),
            r.normalMap &&
              ((n.normalMap.value = r.normalMap),
              n.normalScale.value.copy(r.normalScale),
              r.side === ki && n.normalScale.value.negate()),
            r.specularMap && (n.specularMap.value = r.specularMap),
            r.alphaTest > 0 && (n.alphaTest.value = r.alphaTest);
          var i,
            a,
            o = t.get(r).envMap;
          if (
            (o &&
              ((n.envMap.value = o),
              (n.flipEnvMap.value =
                o.isCubeTexture && !1 === o.isRenderTargetTexture ? -1 : 1),
              (n.reflectivity.value = r.reflectivity),
              (n.ior.value = r.ior),
              (n.refractionRatio.value = r.refractionRatio)),
            r.lightMap)
          ) {
            n.lightMap.value = r.lightMap;
            var s = !0 !== e.physicallyCorrectLights ? Math.PI : 1;
            n.lightMapIntensity.value = r.lightMapIntensity * s;
          }
          r.aoMap &&
            ((n.aoMap.value = r.aoMap),
            (n.aoMapIntensity.value = r.aoMapIntensity)),
            r.map
              ? (i = r.map)
              : r.specularMap
              ? (i = r.specularMap)
              : r.displacementMap
              ? (i = r.displacementMap)
              : r.normalMap
              ? (i = r.normalMap)
              : r.bumpMap
              ? (i = r.bumpMap)
              : r.roughnessMap
              ? (i = r.roughnessMap)
              : r.metalnessMap
              ? (i = r.metalnessMap)
              : r.alphaMap
              ? (i = r.alphaMap)
              : r.emissiveMap
              ? (i = r.emissiveMap)
              : r.clearcoatMap
              ? (i = r.clearcoatMap)
              : r.clearcoatNormalMap
              ? (i = r.clearcoatNormalMap)
              : r.clearcoatRoughnessMap
              ? (i = r.clearcoatRoughnessMap)
              : r.specularIntensityMap
              ? (i = r.specularIntensityMap)
              : r.specularColorMap
              ? (i = r.specularColorMap)
              : r.transmissionMap
              ? (i = r.transmissionMap)
              : r.thicknessMap
              ? (i = r.thicknessMap)
              : r.sheenColorMap
              ? (i = r.sheenColorMap)
              : r.sheenRoughnessMap && (i = r.sheenRoughnessMap),
            void 0 !== i &&
              (i.isWebGLRenderTarget && (i = i.texture),
              !0 === i.matrixAutoUpdate && i.updateMatrix(),
              n.uvTransform.value.copy(i.matrix)),
            r.aoMap ? (a = r.aoMap) : r.lightMap && (a = r.lightMap),
            void 0 !== a &&
              (a.isWebGLRenderTarget && (a = a.texture),
              !0 === a.matrixAutoUpdate && a.updateMatrix(),
              n.uv2Transform.value.copy(a.matrix));
        }
        return {
          refreshFogUniforms: function (e, t) {
            e.fogColor.value.copy(t.color),
              t.isFog
                ? ((e.fogNear.value = t.near), (e.fogFar.value = t.far))
                : t.isFogExp2 && (e.fogDensity.value = t.density);
          },
          refreshMaterialUniforms: function (e, r, i, a, o) {
            r.isMeshBasicMaterial || r.isMeshLambertMaterial
              ? n(e, r)
              : r.isMeshToonMaterial
              ? (n(e, r),
                (function (e, t) {
                  t.gradientMap && (e.gradientMap.value = t.gradientMap);
                })(e, r))
              : r.isMeshPhongMaterial
              ? (n(e, r),
                (function (e, t) {
                  e.specular.value.copy(t.specular),
                    (e.shininess.value = Math.max(t.shininess, 1e-4));
                })(e, r))
              : r.isMeshStandardMaterial
              ? (n(e, r),
                (function (e, n) {
                  (e.roughness.value = n.roughness),
                    (e.metalness.value = n.metalness),
                    n.roughnessMap && (e.roughnessMap.value = n.roughnessMap);
                  n.metalnessMap && (e.metalnessMap.value = n.metalnessMap);
                  t.get(n).envMap &&
                    (e.envMapIntensity.value = n.envMapIntensity);
                })(e, r),
                r.isMeshPhysicalMaterial &&
                  (function (e, t, n) {
                    (e.ior.value = t.ior),
                      t.sheen > 0 &&
                        (e.sheenColor.value
                          .copy(t.sheenColor)
                          .multiplyScalar(t.sheen),
                        (e.sheenRoughness.value = t.sheenRoughness),
                        t.sheenColorMap &&
                          (e.sheenColorMap.value = t.sheenColorMap),
                        t.sheenRoughnessMap &&
                          (e.sheenRoughnessMap.value = t.sheenRoughnessMap));
                    t.clearcoat > 0 &&
                      ((e.clearcoat.value = t.clearcoat),
                      (e.clearcoatRoughness.value = t.clearcoatRoughness),
                      t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap),
                      t.clearcoatRoughnessMap &&
                        (e.clearcoatRoughnessMap.value =
                          t.clearcoatRoughnessMap),
                      t.clearcoatNormalMap &&
                        (e.clearcoatNormalScale.value.copy(
                          t.clearcoatNormalScale
                        ),
                        (e.clearcoatNormalMap.value = t.clearcoatNormalMap),
                        t.side === ki &&
                          e.clearcoatNormalScale.value.negate()));
                    t.transmission > 0 &&
                      ((e.transmission.value = t.transmission),
                      (e.transmissionSamplerMap.value = n.texture),
                      e.transmissionSamplerSize.value.set(n.width, n.height),
                      t.transmissionMap &&
                        (e.transmissionMap.value = t.transmissionMap),
                      (e.thickness.value = t.thickness),
                      t.thicknessMap && (e.thicknessMap.value = t.thicknessMap),
                      (e.attenuationDistance.value = t.attenuationDistance),
                      e.attenuationColor.value.copy(t.attenuationColor));
                    (e.specularIntensity.value = t.specularIntensity),
                      e.specularColor.value.copy(t.specularColor),
                      t.specularIntensityMap &&
                        (e.specularIntensityMap.value = t.specularIntensityMap);
                    t.specularColorMap &&
                      (e.specularColorMap.value = t.specularColorMap);
                  })(e, r, o))
              : r.isMeshMatcapMaterial
              ? (n(e, r),
                (function (e, t) {
                  t.matcap && (e.matcap.value = t.matcap);
                })(e, r))
              : r.isMeshDepthMaterial
              ? n(e, r)
              : r.isMeshDistanceMaterial
              ? (n(e, r),
                (function (e, t) {
                  e.referencePosition.value.copy(t.referencePosition),
                    (e.nearDistance.value = t.nearDistance),
                    (e.farDistance.value = t.farDistance);
                })(e, r))
              : r.isMeshNormalMaterial
              ? n(e, r)
              : r.isLineBasicMaterial
              ? ((function (e, t) {
                  e.diffuse.value.copy(t.color), (e.opacity.value = t.opacity);
                })(e, r),
                r.isLineDashedMaterial &&
                  (function (e, t) {
                    (e.dashSize.value = t.dashSize),
                      (e.totalSize.value = t.dashSize + t.gapSize),
                      (e.scale.value = t.scale);
                  })(e, r))
              : r.isPointsMaterial
              ? (function (e, t, n, r) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    (e.size.value = t.size * n),
                    (e.scale.value = 0.5 * r),
                    t.map && (e.map.value = t.map);
                  t.alphaMap && (e.alphaMap.value = t.alphaMap);
                  t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
                  var i;
                  t.map ? (i = t.map) : t.alphaMap && (i = t.alphaMap);
                  void 0 !== i &&
                    (!0 === i.matrixAutoUpdate && i.updateMatrix(),
                    e.uvTransform.value.copy(i.matrix));
                })(e, r, i, a)
              : r.isSpriteMaterial
              ? (function (e, t) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    (e.rotation.value = t.rotation),
                    t.map && (e.map.value = t.map);
                  t.alphaMap && (e.alphaMap.value = t.alphaMap);
                  t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
                  var n;
                  t.map ? (n = t.map) : t.alphaMap && (n = t.alphaMap);
                  void 0 !== n &&
                    (!0 === n.matrixAutoUpdate && n.updateMatrix(),
                    e.uvTransform.value.copy(n.matrix));
                })(e, r)
              : r.isShadowMaterial
              ? (e.color.value.copy(r.color), (e.opacity.value = r.opacity))
              : r.isShaderMaterial && (r.uniformsNeedUpdate = !1);
          },
        };
      }
      function yh() {
        var e = qs("canvas");
        return (e.style.display = "block"), e;
      }
      function bh() {
        var e,
          t =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          n = void 0 !== t.canvas ? t.canvas : yh(),
          r = void 0 !== t.context ? t.context : null,
          i = void 0 === t.depth || t.depth,
          a = void 0 === t.stencil || t.stencil,
          o = void 0 !== t.antialias && t.antialias,
          s = void 0 === t.premultipliedAlpha || t.premultipliedAlpha,
          l = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer,
          u = void 0 !== t.powerPreference ? t.powerPreference : "default",
          c =
            void 0 !== t.failIfMajorPerformanceCaveat &&
            t.failIfMajorPerformanceCaveat;
        e =
          void 0 !== t.context
            ? r.getContextAttributes().alpha
            : void 0 !== t.alpha && t.alpha;
        var f = null,
          d = null,
          h = [],
          p = [];
        (this.domElement = n),
          (this.debug = { checkShaderErrors: !0 }),
          (this.autoClear = !0),
          (this.autoClearColor = !0),
          (this.autoClearDepth = !0),
          (this.autoClearStencil = !0),
          (this.sortObjects = !0),
          (this.clippingPlanes = []),
          (this.localClippingEnabled = !1),
          (this.outputEncoding = Wo),
          (this.physicallyCorrectLights = !1),
          (this.toneMapping = ua),
          (this.toneMappingExposure = 1);
        var v = this,
          m = !1,
          g = 0,
          y = 0,
          b = null,
          x = -1,
          w = null,
          _ = new cl(),
          S = new cl(),
          M = null,
          E = n.width,
          k = n.height,
          T = 1,
          C = null,
          A = null,
          P = new cl(0, 0, E, k),
          L = new cl(0, 0, E, k),
          R = !1,
          O = new Fc(),
          z = !1,
          D = !1,
          I = null,
          N = new Jl(),
          F = new Us(),
          B = new yl(),
          H = {
            background: null,
            fog: null,
            environment: null,
            overrideMaterial: null,
            isScene: !0,
          };
        function U() {
          return null === b ? T : 1;
        }
        var j,
          G,
          W,
          V,
          q,
          X,
          Y,
          J,
          $,
          Q,
          Z,
          K,
          ee,
          te,
          ne,
          re,
          ie,
          ae,
          oe,
          se,
          le,
          ue,
          ce,
          fe = r;
        function de(e, t) {
          for (var r = 0; r < e.length; r++) {
            var i = e[r],
              a = n.getContext(i, t);
            if (null !== a) return a;
          }
          return null;
        }
        try {
          var he = {
            alpha: !0,
            depth: i,
            stencil: a,
            antialias: o,
            premultipliedAlpha: s,
            preserveDrawingBuffer: l,
            powerPreference: u,
            failIfMajorPerformanceCaveat: c,
          };
          if (
            ("setAttribute" in n &&
              n.setAttribute("data-engine", "three.js r".concat(pi)),
            n.addEventListener("webglcontextlost", ge, !1),
            n.addEventListener("webglcontextrestored", ye, !1),
            null === fe)
          ) {
            var pe = ["webgl2", "webgl", "experimental-webgl"];
            if (
              (!0 === v.isWebGL1Renderer && pe.shift(),
              null === (fe = de(pe, he)))
            )
              throw de(pe)
                ? new Error(
                    "Error creating WebGL context with your selected attributes."
                  )
                : new Error("Error creating WebGL context.");
          }
          void 0 === fe.getShaderPrecisionFormat &&
            (fe.getShaderPrecisionFormat = function () {
              return { rangeMin: 1, rangeMax: 1, precision: 1 };
            });
        } catch (Ne) {
          throw (console.error("THREE.WebGLRenderer: " + Ne.message), Ne);
        }
        function ve() {
          (j = new hf(fe)),
            (G = new Yc(fe, j, t)),
            j.init(G),
            (ue = new ch(fe, j, G)),
            (W = new lh(fe, j, G)),
            (V = new mf(fe)),
            (q = new Yd()),
            (X = new uh(fe, j, W, q, G, ue, V)),
            (Y = new $c(v)),
            (J = new df(v)),
            ($ = new Hc(fe, G)),
            (ce = new qc(fe, j, $, G)),
            (Q = new pf(fe, $, V, ce)),
            (Z = new wf(fe, Q, $, V)),
            (oe = new xf(fe, G, X)),
            (re = new Jc(q)),
            (K = new Xd(v, Y, J, j, G, ce, re)),
            (ee = new gh(v, q)),
            (te = new Zd()),
            (ne = new ih(j, G)),
            (ae = new Vc(v, Y, W, Z, e, s)),
            (ie = new sh(v, Z, G)),
            (se = new Xc(fe, j, V, G)),
            (le = new vf(fe, j, V, G)),
            (V.programs = K.programs),
            (v.capabilities = G),
            (v.extensions = j),
            (v.properties = q),
            (v.renderLists = te),
            (v.shadowMap = ie),
            (v.state = W),
            (v.info = V);
        }
        ve();
        var me = new mh(v, fe);
        function ge(e) {
          e.preventDefault(),
            console.log("THREE.WebGLRenderer: Context Lost."),
            (m = !0);
        }
        function ye() {
          console.log("THREE.WebGLRenderer: Context Restored."), (m = !1);
          var e = V.autoReset,
            t = ie.enabled,
            n = ie.autoUpdate,
            r = ie.needsUpdate,
            i = ie.type;
          ve(),
            (V.autoReset = e),
            (ie.enabled = t),
            (ie.autoUpdate = n),
            (ie.needsUpdate = r),
            (ie.type = i);
        }
        function be(e) {
          var t = e.target;
          t.removeEventListener("dispose", be), xe(t);
        }
        function xe(e) {
          we(e), q.remove(e);
        }
        function we(e) {
          var t = q.get(e).programs;
          void 0 !== t &&
            (t.forEach(function (e) {
              K.releaseProgram(e);
            }),
            e.isShaderMaterial && K.releaseShaderCache(e));
        }
        (this.xr = me),
          (this.getContext = function () {
            return fe;
          }),
          (this.getContextAttributes = function () {
            return fe.getContextAttributes();
          }),
          (this.forceContextLoss = function () {
            var e = j.get("WEBGL_lose_context");
            e && e.loseContext();
          }),
          (this.forceContextRestore = function () {
            var e = j.get("WEBGL_lose_context");
            e && e.restoreContext();
          }),
          (this.getPixelRatio = function () {
            return T;
          }),
          (this.setPixelRatio = function (e) {
            void 0 !== e && ((T = e), this.setSize(E, k, !1));
          }),
          (this.getSize = function (e) {
            return e.set(E, k);
          }),
          (this.setSize = function (e, t, r) {
            me.isPresenting
              ? console.warn(
                  "THREE.WebGLRenderer: Can't change size while VR device is presenting."
                )
              : ((E = e),
                (k = t),
                (n.width = Math.floor(e * T)),
                (n.height = Math.floor(t * T)),
                !1 !== r &&
                  ((n.style.width = e + "px"), (n.style.height = t + "px")),
                this.setViewport(0, 0, e, t));
          }),
          (this.getDrawingBufferSize = function (e) {
            return e.set(E * T, k * T).floor();
          }),
          (this.setDrawingBufferSize = function (e, t, r) {
            (E = e),
              (k = t),
              (T = r),
              (n.width = Math.floor(e * r)),
              (n.height = Math.floor(t * r)),
              this.setViewport(0, 0, e, t);
          }),
          (this.getCurrentViewport = function (e) {
            return e.copy(_);
          }),
          (this.getViewport = function (e) {
            return e.copy(P);
          }),
          (this.setViewport = function (e, t, n, r) {
            e.isVector4 ? P.set(e.x, e.y, e.z, e.w) : P.set(e, t, n, r),
              W.viewport(_.copy(P).multiplyScalar(T).floor());
          }),
          (this.getScissor = function (e) {
            return e.copy(L);
          }),
          (this.setScissor = function (e, t, n, r) {
            e.isVector4 ? L.set(e.x, e.y, e.z, e.w) : L.set(e, t, n, r),
              W.scissor(S.copy(L).multiplyScalar(T).floor());
          }),
          (this.getScissorTest = function () {
            return R;
          }),
          (this.setScissorTest = function (e) {
            W.setScissorTest((R = e));
          }),
          (this.setOpaqueSort = function (e) {
            C = e;
          }),
          (this.setTransparentSort = function (e) {
            A = e;
          }),
          (this.getClearColor = function (e) {
            return e.copy(ae.getClearColor());
          }),
          (this.setClearColor = function () {
            ae.setClearColor.apply(ae, arguments);
          }),
          (this.getClearAlpha = function () {
            return ae.getClearAlpha();
          }),
          (this.setClearAlpha = function () {
            ae.setClearAlpha.apply(ae, arguments);
          }),
          (this.clear = function () {
            var e =
                !(arguments.length > 0 && void 0 !== arguments[0]) ||
                arguments[0],
              t =
                !(arguments.length > 1 && void 0 !== arguments[1]) ||
                arguments[1],
              n =
                !(arguments.length > 2 && void 0 !== arguments[2]) ||
                arguments[2],
              r = 0;
            e && (r |= 16384), t && (r |= 256), n && (r |= 1024), fe.clear(r);
          }),
          (this.clearColor = function () {
            this.clear(!0, !1, !1);
          }),
          (this.clearDepth = function () {
            this.clear(!1, !0, !1);
          }),
          (this.clearStencil = function () {
            this.clear(!1, !1, !0);
          }),
          (this.dispose = function () {
            n.removeEventListener("webglcontextlost", ge, !1),
              n.removeEventListener("webglcontextrestored", ye, !1),
              te.dispose(),
              ne.dispose(),
              q.dispose(),
              Y.dispose(),
              J.dispose(),
              Z.dispose(),
              ce.dispose(),
              K.dispose(),
              me.dispose(),
              me.removeEventListener("sessionstart", Me),
              me.removeEventListener("sessionend", Ee),
              I && (I.dispose(), (I = null)),
              ke.stop();
          }),
          (this.renderBufferDirect = function (e, t, n, r, i, a) {
            null === t && (t = H);
            var o = i.isMesh && i.matrixWorld.determinant() < 0,
              s = ze(e, t, n, r, i);
            W.setMaterial(r, o);
            var l = n.index,
              u = n.attributes.position;
            if (null === l) {
              if (void 0 === u || 0 === u.count) return;
            } else if (0 === l.count) return;
            var c,
              f = 1;
            !0 === r.wireframe && ((l = Q.getWireframeAttribute(n)), (f = 2)),
              ce.setup(i, r, s, n, l);
            var d = se;
            null !== l && ((c = $.get(l)), (d = le).setIndex(c));
            var h = null !== l ? l.count : u.count,
              p = n.drawRange.start * f,
              v = n.drawRange.count * f,
              m = null !== a ? a.start * f : 0,
              g = null !== a ? a.count * f : 1 / 0,
              y = Math.max(p, m),
              b = Math.min(h, p + v, m + g) - 1,
              x = Math.max(0, b - y + 1);
            if (0 !== x) {
              if (i.isMesh)
                !0 === r.wireframe
                  ? (W.setLineWidth(r.wireframeLinewidth * U()), d.setMode(1))
                  : d.setMode(4);
              else if (i.isLine) {
                var w = r.linewidth;
                void 0 === w && (w = 1),
                  W.setLineWidth(w * U()),
                  i.isLineSegments
                    ? d.setMode(1)
                    : i.isLineLoop
                    ? d.setMode(2)
                    : d.setMode(3);
              } else i.isPoints ? d.setMode(0) : i.isSprite && d.setMode(4);
              if (i.isInstancedMesh) d.renderInstances(y, x, i.count);
              else if (n.isInstancedBufferGeometry) {
                var _ = Math.min(n.instanceCount, n._maxInstanceCount);
                d.renderInstances(y, x, _);
              } else d.render(y, x);
            }
          }),
          (this.compile = function (e, t) {
            (d = ne.get(e)).init(),
              p.push(d),
              e.traverseVisible(function (e) {
                e.isLight &&
                  e.layers.test(t.layers) &&
                  (d.pushLight(e), e.castShadow && d.pushShadow(e));
              }),
              d.setupLights(v.physicallyCorrectLights),
              e.traverse(function (t) {
                var n = t.material;
                if (n)
                  if (Array.isArray(n))
                    for (var r = 0; r < n.length; r++) {
                      Re(n[r], e, t);
                    }
                  else Re(n, e, t);
              }),
              p.pop(),
              (d = null);
          });
        var _e = null;
        function Se(e) {
          _e && _e(e);
        }
        function Me() {
          ke.stop();
        }
        function Ee() {
          ke.start();
        }
        var ke = new Bc();
        function Te(e, t, n, r) {
          if (!1 !== e.visible) {
            if (e.layers.test(t.layers))
              if (e.isGroup) n = e.renderOrder;
              else if (e.isLOD) !0 === e.autoUpdate && e.update(t);
              else if (e.isLight)
                d.pushLight(e), e.castShadow && d.pushShadow(e);
              else if (e.isSprite) {
                if (!e.frustumCulled || O.intersectsSprite(e)) {
                  r && B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(N);
                  var i = Z.update(e),
                    a = e.material;
                  a.visible && f.push(e, i, a, n, B.z, null);
                }
              } else if (
                (e.isMesh || e.isLine || e.isPoints) &&
                (e.isSkinnedMesh &&
                  e.skeleton.frame !== V.render.frame &&
                  (e.skeleton.update(), (e.skeleton.frame = V.render.frame)),
                !e.frustumCulled || O.intersectsObject(e))
              ) {
                r && B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(N);
                var o = Z.update(e),
                  s = e.material;
                if (Array.isArray(s))
                  for (var l = o.groups, u = 0, c = l.length; u < c; u++) {
                    var h = l[u],
                      p = s[h.materialIndex];
                    p && p.visible && f.push(e, o, p, n, B.z, h);
                  }
                else s.visible && f.push(e, o, s, n, B.z, null);
              }
            for (var v = e.children, m = 0, g = v.length; m < g; m++)
              Te(v[m], t, n, r);
          }
        }
        function Ce(e, t, n, r) {
          var i = e.opaque,
            a = e.transmissive,
            o = e.transparent;
          d.setupLightsView(n),
            a.length > 0 && Ae(i, t, n),
            r && W.viewport(_.copy(r)),
            i.length > 0 && Pe(i, t, n),
            a.length > 0 && Pe(a, t, n),
            o.length > 0 && Pe(o, t, n),
            W.buffers.depth.setTest(!0),
            W.buffers.depth.setMask(!0),
            W.buffers.color.setMask(!0),
            W.setPolygonOffset(!1);
        }
        function Ae(e, t, n) {
          var r = G.isWebGL2;
          null === I &&
            (I = new fl(1, 1, {
              generateMipmaps: !0,
              type: null !== ue.convert(Ua) ? Ua : za,
              minFilter: Ra,
              samples: r && !0 === o ? 4 : 0,
            })),
            v.getDrawingBufferSize(F),
            r ? I.setSize(F.x, F.y) : I.setSize(Bs(F.x), Bs(F.y));
          var i = v.getRenderTarget();
          v.setRenderTarget(I), v.clear();
          var a = v.toneMapping;
          (v.toneMapping = ua),
            Pe(e, t, n),
            (v.toneMapping = a),
            X.updateMultisampleRenderTarget(I),
            X.updateRenderTargetMipmap(I),
            v.setRenderTarget(i);
        }
        function Pe(e, t, n) {
          for (
            var r = !0 === t.isScene ? t.overrideMaterial : null,
              i = 0,
              a = e.length;
            i < a;
            i++
          ) {
            var o = e[i],
              s = o.object,
              l = o.geometry,
              u = null === r ? o.material : r,
              c = o.group;
            s.layers.test(n.layers) && Le(s, t, n, l, u, c);
          }
        }
        function Le(e, t, n, r, i, a) {
          e.onBeforeRender(v, t, n, r, i, a),
            e.modelViewMatrix.multiplyMatrices(
              n.matrixWorldInverse,
              e.matrixWorld
            ),
            e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
            i.onBeforeRender(v, t, n, r, e, a),
            !0 === i.transparent && i.side === Ti
              ? ((i.side = ki),
                (i.needsUpdate = !0),
                v.renderBufferDirect(n, t, r, i, e, a),
                (i.side = Ei),
                (i.needsUpdate = !0),
                v.renderBufferDirect(n, t, r, i, e, a),
                (i.side = Ti))
              : v.renderBufferDirect(n, t, r, i, e, a),
            e.onAfterRender(v, t, n, r, i, a);
        }
        function Re(e, t, n) {
          !0 !== t.isScene && (t = H);
          var r = q.get(e),
            i = d.state.lights,
            a = d.state.shadowsArray,
            o = i.state.version,
            s = K.getParameters(e, i.state, a, t, n),
            l = K.getProgramCacheKey(s),
            u = r.programs;
          (r.environment = e.isMeshStandardMaterial ? t.environment : null),
            (r.fog = t.fog),
            (r.envMap = (e.isMeshStandardMaterial ? J : Y).get(
              e.envMap || r.environment
            )),
            void 0 === u &&
              (e.addEventListener("dispose", be),
              (u = new Map()),
              (r.programs = u));
          var c = u.get(l);
          if (void 0 !== c) {
            if (r.currentProgram === c && r.lightsStateVersion === o)
              return Oe(e, s), c;
          } else
            (s.uniforms = K.getUniforms(e)),
              e.onBuild(n, s, v),
              e.onBeforeCompile(s, v),
              (c = K.acquireProgram(s, l)),
              u.set(l, c),
              (r.uniforms = s.uniforms);
          var f = r.uniforms;
          ((e.isShaderMaterial || e.isRawShaderMaterial) &&
            !0 !== e.clipping) ||
            (f.clippingPlanes = re.uniform),
            Oe(e, s),
            (r.needsLights = Ie(e)),
            (r.lightsStateVersion = o),
            r.needsLights &&
              ((f.ambientLightColor.value = i.state.ambient),
              (f.lightProbe.value = i.state.probe),
              (f.directionalLights.value = i.state.directional),
              (f.directionalLightShadows.value = i.state.directionalShadow),
              (f.spotLights.value = i.state.spot),
              (f.spotLightShadows.value = i.state.spotShadow),
              (f.rectAreaLights.value = i.state.rectArea),
              (f.ltc_1.value = i.state.rectAreaLTC1),
              (f.ltc_2.value = i.state.rectAreaLTC2),
              (f.pointLights.value = i.state.point),
              (f.pointLightShadows.value = i.state.pointShadow),
              (f.hemisphereLights.value = i.state.hemi),
              (f.directionalShadowMap.value = i.state.directionalShadowMap),
              (f.directionalShadowMatrix.value =
                i.state.directionalShadowMatrix),
              (f.spotShadowMap.value = i.state.spotShadowMap),
              (f.spotShadowMatrix.value = i.state.spotShadowMatrix),
              (f.pointShadowMap.value = i.state.pointShadowMap),
              (f.pointShadowMatrix.value = i.state.pointShadowMatrix));
          var h = c.getUniforms(),
            p = Ed.seqWithValue(h.seq, f);
          return (r.currentProgram = c), (r.uniformsList = p), c;
        }
        function Oe(e, t) {
          var n = q.get(e);
          (n.outputEncoding = t.outputEncoding),
            (n.instancing = t.instancing),
            (n.skinning = t.skinning),
            (n.morphTargets = t.morphTargets),
            (n.morphNormals = t.morphNormals),
            (n.morphColors = t.morphColors),
            (n.morphTargetsCount = t.morphTargetsCount),
            (n.numClippingPlanes = t.numClippingPlanes),
            (n.numIntersection = t.numClipIntersection),
            (n.vertexAlphas = t.vertexAlphas),
            (n.vertexTangents = t.vertexTangents),
            (n.toneMapping = t.toneMapping);
        }
        function ze(e, t, n, r, i) {
          !0 !== t.isScene && (t = H), X.resetTextureUnits();
          var a = t.fog,
            o = r.isMeshStandardMaterial ? t.environment : null,
            s =
              null === b
                ? v.outputEncoding
                : !0 === b.isXRRenderTarget
                ? b.texture.encoding
                : Wo,
            l = (r.isMeshStandardMaterial ? J : Y).get(r.envMap || o),
            u =
              !0 === r.vertexColors &&
              !!n.attributes.color &&
              4 === n.attributes.color.itemSize,
            c = !!r.normalMap && !!n.attributes.tangent,
            f = !!n.morphAttributes.position,
            h = !!n.morphAttributes.normal,
            p = !!n.morphAttributes.color,
            m = r.toneMapped ? v.toneMapping : ua,
            g =
              n.morphAttributes.position ||
              n.morphAttributes.normal ||
              n.morphAttributes.color,
            y = void 0 !== g ? g.length : 0,
            _ = q.get(r),
            S = d.state.lights;
          if (!0 === z && (!0 === D || e !== w)) {
            var M = e === w && r.id === x;
            re.setState(r, e, M);
          }
          var E = !1;
          r.version === _.__version
            ? (_.needsLights && _.lightsStateVersion !== S.state.version) ||
              _.outputEncoding !== s ||
              (i.isInstancedMesh && !1 === _.instancing)
              ? (E = !0)
              : i.isInstancedMesh || !0 !== _.instancing
              ? i.isSkinnedMesh && !1 === _.skinning
                ? (E = !0)
                : i.isSkinnedMesh || !0 !== _.skinning
                ? _.envMap !== l || (r.fog && _.fog !== a)
                  ? (E = !0)
                  : void 0 === _.numClippingPlanes ||
                    (_.numClippingPlanes === re.numPlanes &&
                      _.numIntersection === re.numIntersection)
                  ? (_.vertexAlphas !== u ||
                      _.vertexTangents !== c ||
                      _.morphTargets !== f ||
                      _.morphNormals !== h ||
                      _.morphColors !== p ||
                      _.toneMapping !== m ||
                      (!0 === G.isWebGL2 && _.morphTargetsCount !== y)) &&
                    (E = !0)
                  : (E = !0)
                : (E = !0)
              : (E = !0)
            : ((E = !0), (_.__version = r.version));
          var C = _.currentProgram;
          !0 === E && (C = Re(r, t, i));
          var A = !1,
            P = !1,
            L = !1,
            R = C.getUniforms(),
            O = _.uniforms;
          if (
            (W.useProgram(C.program) && ((A = !0), (P = !0), (L = !0)),
            r.id !== x && ((x = r.id), (P = !0)),
            A || w !== e)
          ) {
            if (
              (R.setValue(fe, "projectionMatrix", e.projectionMatrix),
              G.logarithmicDepthBuffer &&
                R.setValue(
                  fe,
                  "logDepthBufFC",
                  2 / (Math.log(e.far + 1) / Math.LN2)
                ),
              w !== e && ((w = e), (P = !0), (L = !0)),
              r.isShaderMaterial ||
                r.isMeshPhongMaterial ||
                r.isMeshToonMaterial ||
                r.isMeshStandardMaterial ||
                r.envMap)
            ) {
              var N = R.map.cameraPosition;
              void 0 !== N &&
                N.setValue(fe, B.setFromMatrixPosition(e.matrixWorld));
            }
            (r.isMeshPhongMaterial ||
              r.isMeshToonMaterial ||
              r.isMeshLambertMaterial ||
              r.isMeshBasicMaterial ||
              r.isMeshStandardMaterial ||
              r.isShaderMaterial) &&
              R.setValue(fe, "isOrthographic", !0 === e.isOrthographicCamera),
              (r.isMeshPhongMaterial ||
                r.isMeshToonMaterial ||
                r.isMeshLambertMaterial ||
                r.isMeshBasicMaterial ||
                r.isMeshStandardMaterial ||
                r.isShaderMaterial ||
                r.isShadowMaterial ||
                i.isSkinnedMesh) &&
                R.setValue(fe, "viewMatrix", e.matrixWorldInverse);
          }
          if (i.isSkinnedMesh) {
            R.setOptional(fe, i, "bindMatrix"),
              R.setOptional(fe, i, "bindMatrixInverse");
            var F = i.skeleton;
            F &&
              (G.floatVertexTextures
                ? (null === F.boneTexture && F.computeBoneTexture(),
                  R.setValue(fe, "boneTexture", F.boneTexture, X),
                  R.setValue(fe, "boneTextureSize", F.boneTextureSize))
                : R.setOptional(fe, F, "boneMatrices"));
          }
          var U = n.morphAttributes;
          return (
            (void 0 !== U.position ||
              void 0 !== U.normal ||
              (void 0 !== U.color && !0 === G.isWebGL2)) &&
              oe.update(i, n, r, C),
            (P || _.receiveShadow !== i.receiveShadow) &&
              ((_.receiveShadow = i.receiveShadow),
              R.setValue(fe, "receiveShadow", i.receiveShadow)),
            P &&
              (R.setValue(fe, "toneMappingExposure", v.toneMappingExposure),
              _.needsLights && De(O, L),
              a && r.fog && ee.refreshFogUniforms(O, a),
              ee.refreshMaterialUniforms(O, r, T, k, I),
              Ed.upload(fe, _.uniformsList, O, X)),
            r.isShaderMaterial &&
              !0 === r.uniformsNeedUpdate &&
              (Ed.upload(fe, _.uniformsList, O, X),
              (r.uniformsNeedUpdate = !1)),
            r.isSpriteMaterial && R.setValue(fe, "center", i.center),
            R.setValue(fe, "modelViewMatrix", i.modelViewMatrix),
            R.setValue(fe, "normalMatrix", i.normalMatrix),
            R.setValue(fe, "modelMatrix", i.matrixWorld),
            C
          );
        }
        function De(e, t) {
          (e.ambientLightColor.needsUpdate = t),
            (e.lightProbe.needsUpdate = t),
            (e.directionalLights.needsUpdate = t),
            (e.directionalLightShadows.needsUpdate = t),
            (e.pointLights.needsUpdate = t),
            (e.pointLightShadows.needsUpdate = t),
            (e.spotLights.needsUpdate = t),
            (e.spotLightShadows.needsUpdate = t),
            (e.rectAreaLights.needsUpdate = t),
            (e.hemisphereLights.needsUpdate = t);
        }
        function Ie(e) {
          return (
            e.isMeshLambertMaterial ||
            e.isMeshToonMaterial ||
            e.isMeshPhongMaterial ||
            e.isMeshStandardMaterial ||
            e.isShadowMaterial ||
            (e.isShaderMaterial && !0 === e.lights)
          );
        }
        ke.setAnimationLoop(Se),
          "undefined" !== typeof self && ke.setContext(self),
          (this.setAnimationLoop = function (e) {
            (_e = e),
              me.setAnimationLoop(e),
              null === e ? ke.stop() : ke.start();
          }),
          me.addEventListener("sessionstart", Me),
          me.addEventListener("sessionend", Ee),
          (this.render = function (e, t) {
            if (void 0 === t || !0 === t.isCamera) {
              if (!0 !== m) {
                !0 === e.autoUpdate && e.updateMatrixWorld(),
                  null === t.parent && t.updateMatrixWorld(),
                  !0 === me.enabled &&
                    !0 === me.isPresenting &&
                    (!0 === me.cameraAutoUpdate && me.updateCamera(t),
                    (t = me.getCamera())),
                  !0 === e.isScene && e.onBeforeRender(v, e, t, b),
                  (d = ne.get(e, p.length)).init(),
                  p.push(d),
                  N.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                  O.setFromProjectionMatrix(N),
                  (D = this.localClippingEnabled),
                  (z = re.init(this.clippingPlanes, D, t)),
                  (f = te.get(e, h.length)).init(),
                  h.push(f),
                  Te(e, t, 0, v.sortObjects),
                  f.finish(),
                  !0 === v.sortObjects && f.sort(C, A),
                  !0 === z && re.beginShadows();
                var n = d.state.shadowsArray;
                if (
                  (ie.render(n, e, t),
                  !0 === z && re.endShadows(),
                  !0 === this.info.autoReset && this.info.reset(),
                  ae.render(f, e),
                  d.setupLights(v.physicallyCorrectLights),
                  t.isArrayCamera)
                )
                  for (var r = t.cameras, i = 0, a = r.length; i < a; i++) {
                    var o = r[i];
                    Ce(f, e, o, o.viewport);
                  }
                else Ce(f, e, t);
                null !== b &&
                  (X.updateMultisampleRenderTarget(b),
                  X.updateRenderTargetMipmap(b)),
                  !0 === e.isScene && e.onAfterRender(v, e, t),
                  ce.resetDefaultState(),
                  (x = -1),
                  (w = null),
                  p.pop(),
                  (d = p.length > 0 ? p[p.length - 1] : null),
                  h.pop(),
                  (f = h.length > 0 ? h[h.length - 1] : null);
              }
            } else
              console.error(
                "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
              );
          }),
          (this.getActiveCubeFace = function () {
            return g;
          }),
          (this.getActiveMipmapLevel = function () {
            return y;
          }),
          (this.getRenderTarget = function () {
            return b;
          }),
          (this.setRenderTargetTextures = function (e, t, n) {
            (q.get(e.texture).__webglTexture = t),
              (q.get(e.depthTexture).__webglTexture = n);
            var r = q.get(e);
            (r.__hasExternalTextures = !0),
              r.__hasExternalTextures &&
                ((r.__autoAllocateDepthBuffer = void 0 === n),
                r.__autoAllocateDepthBuffer ||
                  (!0 === j.has("WEBGL_multisampled_render_to_texture") &&
                    (console.warn(
                      "THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"
                    ),
                    (r.__useRenderToTexture = !1))));
          }),
          (this.setRenderTargetFramebuffer = function (e, t) {
            var n = q.get(e);
            (n.__webglFramebuffer = t),
              (n.__useDefaultFramebuffer = void 0 === t);
          }),
          (this.setRenderTarget = function (e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            (b = e), (g = t), (y = n);
            var r = !0;
            if (e) {
              var i = q.get(e);
              void 0 !== i.__useDefaultFramebuffer
                ? (W.bindFramebuffer(36160, null), (r = !1))
                : void 0 === i.__webglFramebuffer
                ? X.setupRenderTarget(e)
                : i.__hasExternalTextures &&
                  X.rebindTextures(
                    e,
                    q.get(e.texture).__webglTexture,
                    q.get(e.depthTexture).__webglTexture
                  );
            }
            var a = null,
              o = !1,
              s = !1;
            if (e) {
              var l = e.texture;
              (l.isData3DTexture || l.isDataArrayTexture) && (s = !0);
              var u = q.get(e).__webglFramebuffer;
              e.isWebGLCubeRenderTarget
                ? ((a = u[t]), (o = !0))
                : (a =
                    G.isWebGL2 &&
                    e.samples > 0 &&
                    !1 === X.useMultisampledRTT(e)
                      ? q.get(e).__webglMultisampledFramebuffer
                      : u),
                _.copy(e.viewport),
                S.copy(e.scissor),
                (M = e.scissorTest);
            } else
              _.copy(P).multiplyScalar(T).floor(),
                S.copy(L).multiplyScalar(T).floor(),
                (M = R);
            var c = W.bindFramebuffer(36160, a);
            if (
              (c && G.drawBuffers && r && W.drawBuffers(e, a),
              W.viewport(_),
              W.scissor(S),
              W.setScissorTest(M),
              o)
            ) {
              var f = q.get(e.texture);
              fe.framebufferTexture2D(
                36160,
                36064,
                34069 + t,
                f.__webglTexture,
                n
              );
            } else if (s) {
              var d = q.get(e.texture),
                h = t || 0;
              fe.framebufferTextureLayer(
                36160,
                36064,
                d.__webglTexture,
                n || 0,
                h
              );
            }
            x = -1;
          }),
          (this.readRenderTargetPixels = function (e, t, n, r, i, a, o) {
            if (e && e.isWebGLRenderTarget) {
              var s = q.get(e).__webglFramebuffer;
              if (
                (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]), s)
              ) {
                W.bindFramebuffer(36160, s);
                try {
                  var l = e.texture,
                    u = l.format,
                    c = l.type;
                  if (u !== Xa && ue.convert(u) !== fe.getParameter(35739))
                    return void console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
                    );
                  var f =
                    c === Ua &&
                    (j.has("EXT_color_buffer_half_float") ||
                      (G.isWebGL2 && j.has("EXT_color_buffer_float")));
                  if (
                    c !== za &&
                    ue.convert(c) !== fe.getParameter(35738) &&
                    (c !== Ha ||
                      !(
                        G.isWebGL2 ||
                        j.has("OES_texture_float") ||
                        j.has("WEBGL_color_buffer_float")
                      )) &&
                    !f
                  )
                    return void console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
                    );
                  t >= 0 &&
                    t <= e.width - r &&
                    n >= 0 &&
                    n <= e.height - i &&
                    fe.readPixels(t, n, r, i, ue.convert(u), ue.convert(c), a);
                } finally {
                  var d = null !== b ? q.get(b).__webglFramebuffer : null;
                  W.bindFramebuffer(36160, d);
                }
              }
            } else
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
              );
          }),
          (this.copyFramebufferToTexture = function (e, t) {
            var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0;
            if (!0 === t.isFramebufferTexture) {
              var r = Math.pow(2, -n),
                i = Math.floor(t.image.width * r),
                a = Math.floor(t.image.height * r);
              X.setTexture2D(t, 0),
                fe.copyTexSubImage2D(3553, n, 0, 0, e.x, e.y, i, a),
                W.unbindTexture();
            } else
              console.error(
                "THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture."
              );
          }),
          (this.copyTextureToTexture = function (e, t, n) {
            var r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0,
              i = t.image.width,
              a = t.image.height,
              o = ue.convert(n.format),
              s = ue.convert(n.type);
            X.setTexture2D(n, 0),
              fe.pixelStorei(37440, n.flipY),
              fe.pixelStorei(37441, n.premultiplyAlpha),
              fe.pixelStorei(3317, n.unpackAlignment),
              t.isDataTexture
                ? fe.texSubImage2D(3553, r, e.x, e.y, i, a, o, s, t.image.data)
                : t.isCompressedTexture
                ? fe.compressedTexSubImage2D(
                    3553,
                    r,
                    e.x,
                    e.y,
                    t.mipmaps[0].width,
                    t.mipmaps[0].height,
                    o,
                    t.mipmaps[0].data
                  )
                : fe.texSubImage2D(3553, r, e.x, e.y, o, s, t.image),
              0 === r && n.generateMipmaps && fe.generateMipmap(3553),
              W.unbindTexture();
          }),
          (this.copyTextureToTexture3D = function (e, t, n, r) {
            var i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 0;
            if (v.isWebGL1Renderer)
              console.warn(
                "THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2."
              );
            else {
              var a,
                o = e.max.x - e.min.x + 1,
                s = e.max.y - e.min.y + 1,
                l = e.max.z - e.min.z + 1,
                u = ue.convert(r.format),
                c = ue.convert(r.type);
              if (r.isData3DTexture) X.setTexture3D(r, 0), (a = 32879);
              else {
                if (!r.isDataArrayTexture)
                  return void console.warn(
                    "THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray."
                  );
                X.setTexture2DArray(r, 0), (a = 35866);
              }
              fe.pixelStorei(37440, r.flipY),
                fe.pixelStorei(37441, r.premultiplyAlpha),
                fe.pixelStorei(3317, r.unpackAlignment);
              var f = fe.getParameter(3314),
                d = fe.getParameter(32878),
                h = fe.getParameter(3316),
                p = fe.getParameter(3315),
                m = fe.getParameter(32877),
                g = n.isCompressedTexture ? n.mipmaps[0] : n.image;
              fe.pixelStorei(3314, g.width),
                fe.pixelStorei(32878, g.height),
                fe.pixelStorei(3316, e.min.x),
                fe.pixelStorei(3315, e.min.y),
                fe.pixelStorei(32877, e.min.z),
                n.isDataTexture || n.isData3DTexture
                  ? fe.texSubImage3D(a, i, t.x, t.y, t.z, o, s, l, u, c, g.data)
                  : n.isCompressedTexture
                  ? (console.warn(
                      "THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."
                    ),
                    fe.compressedTexSubImage3D(
                      a,
                      i,
                      t.x,
                      t.y,
                      t.z,
                      o,
                      s,
                      l,
                      u,
                      g.data
                    ))
                  : fe.texSubImage3D(a, i, t.x, t.y, t.z, o, s, l, u, c, g),
                fe.pixelStorei(3314, f),
                fe.pixelStorei(32878, d),
                fe.pixelStorei(3316, h),
                fe.pixelStorei(3315, p),
                fe.pixelStorei(32877, m),
                0 === i && r.generateMipmaps && fe.generateMipmap(a),
                W.unbindTexture();
            }
          }),
          (this.initTexture = function (e) {
            X.setTexture2D(e, 0), W.unbindTexture();
          }),
          (this.resetState = function () {
            (g = 0), (y = 0), (b = null), W.reset(), ce.reset();
          }),
          "undefined" !== typeof __THREE_DEVTOOLS__ &&
            __THREE_DEVTOOLS__.dispatchEvent(
              new CustomEvent("observe", { detail: this })
            );
      }
      bh.prototype.isWebGLRenderer = !0;
      var xh = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          return Kr(this, n), t.apply(this, arguments);
        }
        return ti(n);
      })(bh);
      xh.prototype.isWebGL1Renderer = !0;
      var wh = (function () {
        function e(t) {
          var n =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : 25e-5;
          Kr(this, e),
            (this.name = ""),
            (this.color = new il(t)),
            (this.density = n);
        }
        return (
          ti(e, [
            {
              key: "clone",
              value: function () {
                return new e(this.color, this.density);
              },
            },
            {
              key: "toJSON",
              value: function () {
                return {
                  type: "FogExp2",
                  color: this.color.getHex(),
                  density: this.density,
                };
              },
            },
          ]),
          e
        );
      })();
      wh.prototype.isFogExp2 = !0;
      var _h = (function () {
        function e(t) {
          var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            r =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1e3;
          Kr(this, e),
            (this.name = ""),
            (this.color = new il(t)),
            (this.near = n),
            (this.far = r);
        }
        return (
          ti(e, [
            {
              key: "clone",
              value: function () {
                return new e(this.color, this.near, this.far);
              },
            },
            {
              key: "toJSON",
              value: function () {
                return {
                  type: "Fog",
                  color: this.color.getHex(),
                  near: this.near,
                  far: this.far,
                };
              },
            },
          ]),
          e
        );
      })();
      _h.prototype.isFog = !0;
      var Sh = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e;
          return (
            Kr(this, n),
            ((e = t.call(this)).type = "Scene"),
            (e.background = null),
            (e.environment = null),
            (e.fog = null),
            (e.overrideMaterial = null),
            (e.autoUpdate = !0),
            "undefined" !== typeof __THREE_DEVTOOLS__ &&
              __THREE_DEVTOOLS__.dispatchEvent(
                new CustomEvent("observe", { detail: ai(e) })
              ),
            e
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e, t) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e, t),
                  null !== e.background &&
                    (this.background = e.background.clone()),
                  null !== e.environment &&
                    (this.environment = e.environment.clone()),
                  null !== e.fog && (this.fog = e.fog.clone()),
                  null !== e.overrideMaterial &&
                    (this.overrideMaterial = e.overrideMaterial.clone()),
                  (this.autoUpdate = e.autoUpdate),
                  (this.matrixAutoUpdate = e.matrixAutoUpdate),
                  this
                );
              },
            },
            {
              key: "toJSON",
              value: function (e) {
                var t = fi(ri(n.prototype), "toJSON", this).call(this, e);
                return (
                  null !== this.fog && (t.object.fog = this.fog.toJSON()), t
                );
              },
            },
          ]),
          n
        );
      })(xu);
      Sh.prototype.isScene = !0;
      var Mh = (function () {
        function e(t, n) {
          Kr(this, e),
            (this.array = t),
            (this.stride = n),
            (this.count = void 0 !== t ? t.length / n : 0),
            (this.usage = vs),
            (this.updateRange = { offset: 0, count: -1 }),
            (this.version = 0),
            (this.uuid = Os());
        }
        return (
          ti(e, [
            { key: "onUploadCallback", value: function () {} },
            {
              key: "needsUpdate",
              set: function (e) {
                !0 === e && this.version++;
              },
            },
            {
              key: "setUsage",
              value: function (e) {
                return (this.usage = e), this;
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  (this.array = new e.array.constructor(e.array)),
                  (this.count = e.count),
                  (this.stride = e.stride),
                  (this.usage = e.usage),
                  this
                );
              },
            },
            {
              key: "copyAt",
              value: function (e, t, n) {
                (e *= this.stride), (n *= t.stride);
                for (var r = 0, i = this.stride; r < i; r++)
                  this.array[e + r] = t.array[n + r];
                return this;
              },
            },
            {
              key: "set",
              value: function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0;
                return this.array.set(e, t), this;
              },
            },
            {
              key: "clone",
              value: function (e) {
                void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                  void 0 === this.array.buffer._uuid &&
                    (this.array.buffer._uuid = Os()),
                  void 0 === e.arrayBuffers[this.array.buffer._uuid] &&
                    (e.arrayBuffers[this.array.buffer._uuid] =
                      this.array.slice(0).buffer);
                var t = new this.array.constructor(
                    e.arrayBuffers[this.array.buffer._uuid]
                  ),
                  n = new this.constructor(t, this.stride);
                return n.setUsage(this.usage), n;
              },
            },
            {
              key: "onUpload",
              value: function (e) {
                return (this.onUploadCallback = e), this;
              },
            },
            {
              key: "toJSON",
              value: function (e) {
                return (
                  void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                  void 0 === this.array.buffer._uuid &&
                    (this.array.buffer._uuid = Os()),
                  void 0 === e.arrayBuffers[this.array.buffer._uuid] &&
                    (e.arrayBuffers[this.array.buffer._uuid] =
                      Array.prototype.slice.call(
                        new Uint32Array(this.array.buffer)
                      )),
                  {
                    uuid: this.uuid,
                    buffer: this.array.buffer._uuid,
                    type: this.array.constructor.name,
                    stride: this.stride,
                  }
                );
              },
            },
          ]),
          e
        );
      })();
      Mh.prototype.isInterleavedBuffer = !0;
      var Eh = new yl(),
        kh = (function () {
          function e(t, n, r) {
            var i =
              arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            Kr(this, e),
              (this.name = ""),
              (this.data = t),
              (this.itemSize = n),
              (this.offset = r),
              (this.normalized = !0 === i);
          }
          return (
            ti(e, [
              {
                key: "count",
                get: function () {
                  return this.data.count;
                },
              },
              {
                key: "array",
                get: function () {
                  return this.data.array;
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  this.data.needsUpdate = e;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  for (var t = 0, n = this.data.count; t < n; t++)
                    Eh.fromBufferAttribute(this, t),
                      Eh.applyMatrix4(e),
                      this.setXYZ(t, Eh.x, Eh.y, Eh.z);
                  return this;
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Eh.fromBufferAttribute(this, t),
                      Eh.applyNormalMatrix(e),
                      this.setXYZ(t, Eh.x, Eh.y, Eh.z);
                  return this;
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Eh.fromBufferAttribute(this, t),
                      Eh.transformDirection(e),
                      this.setXYZ(t, Eh.x, Eh.y, Eh.z);
                  return this;
                },
              },
              {
                key: "setX",
                value: function (e, t) {
                  return (
                    (this.data.array[e * this.data.stride + this.offset] = t),
                    this
                  );
                },
              },
              {
                key: "setY",
                value: function (e, t) {
                  return (
                    (this.data.array[e * this.data.stride + this.offset + 1] =
                      t),
                    this
                  );
                },
              },
              {
                key: "setZ",
                value: function (e, t) {
                  return (
                    (this.data.array[e * this.data.stride + this.offset + 2] =
                      t),
                    this
                  );
                },
              },
              {
                key: "setW",
                value: function (e, t) {
                  return (
                    (this.data.array[e * this.data.stride + this.offset + 3] =
                      t),
                    this
                  );
                },
              },
              {
                key: "getX",
                value: function (e) {
                  return this.data.array[e * this.data.stride + this.offset];
                },
              },
              {
                key: "getY",
                value: function (e) {
                  return this.data.array[
                    e * this.data.stride + this.offset + 1
                  ];
                },
              },
              {
                key: "getZ",
                value: function (e) {
                  return this.data.array[
                    e * this.data.stride + this.offset + 2
                  ];
                },
              },
              {
                key: "getW",
                value: function (e) {
                  return this.data.array[
                    e * this.data.stride + this.offset + 3
                  ];
                },
              },
              {
                key: "setXY",
                value: function (e, t, n) {
                  return (
                    (e = e * this.data.stride + this.offset),
                    (this.data.array[e + 0] = t),
                    (this.data.array[e + 1] = n),
                    this
                  );
                },
              },
              {
                key: "setXYZ",
                value: function (e, t, n, r) {
                  return (
                    (e = e * this.data.stride + this.offset),
                    (this.data.array[e + 0] = t),
                    (this.data.array[e + 1] = n),
                    (this.data.array[e + 2] = r),
                    this
                  );
                },
              },
              {
                key: "setXYZW",
                value: function (e, t, n, r, i) {
                  return (
                    (e = e * this.data.stride + this.offset),
                    (this.data.array[e + 0] = t),
                    (this.data.array[e + 1] = n),
                    (this.data.array[e + 2] = r),
                    (this.data.array[e + 3] = i),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function (t) {
                  if (void 0 === t) {
                    console.log(
                      "THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data."
                    );
                    for (var n = [], r = 0; r < this.count; r++)
                      for (
                        var i = r * this.data.stride + this.offset, a = 0;
                        a < this.itemSize;
                        a++
                      )
                        n.push(this.data.array[i + a]);
                    return new Nu(
                      new this.array.constructor(n),
                      this.itemSize,
                      this.normalized
                    );
                  }
                  return (
                    void 0 === t.interleavedBuffers &&
                      (t.interleavedBuffers = {}),
                    void 0 === t.interleavedBuffers[this.data.uuid] &&
                      (t.interleavedBuffers[this.data.uuid] =
                        this.data.clone(t)),
                    new e(
                      t.interleavedBuffers[this.data.uuid],
                      this.itemSize,
                      this.offset,
                      this.normalized
                    )
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  if (void 0 === e) {
                    console.log(
                      "THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data."
                    );
                    for (var t = [], n = 0; n < this.count; n++)
                      for (
                        var r = n * this.data.stride + this.offset, i = 0;
                        i < this.itemSize;
                        i++
                      )
                        t.push(this.data.array[r + i]);
                    return {
                      itemSize: this.itemSize,
                      type: this.array.constructor.name,
                      array: t,
                      normalized: this.normalized,
                    };
                  }
                  return (
                    void 0 === e.interleavedBuffers &&
                      (e.interleavedBuffers = {}),
                    void 0 === e.interleavedBuffers[this.data.uuid] &&
                      (e.interleavedBuffers[this.data.uuid] =
                        this.data.toJSON(e)),
                    {
                      isInterleavedBufferAttribute: !0,
                      itemSize: this.itemSize,
                      data: this.data.uuid,
                      offset: this.offset,
                      normalized: this.normalized,
                    }
                  );
                },
              },
            ]),
            e
          );
        })();
      kh.prototype.isInterleavedBufferAttribute = !0;
      var Th,
        Ch = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return (
              Kr(this, n),
              ((r = t.call(this)).type = "SpriteMaterial"),
              (r.color = new il(16777215)),
              (r.map = null),
              (r.alphaMap = null),
              (r.rotation = 0),
              (r.sizeAttenuation = !0),
              (r.transparent = !0),
              r.setValues(e),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.rotation = e.rotation),
                    (this.sizeAttenuation = e.sizeAttenuation),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Ou);
      Ch.prototype.isSpriteMaterial = !0;
      var Ah = new yl(),
        Ph = new yl(),
        Lh = new yl(),
        Rh = new Us(),
        Oh = new Us(),
        zh = new Jl(),
        Dh = new yl(),
        Ih = new yl(),
        Nh = new yl(),
        Fh = new Us(),
        Bh = new Us(),
        Hh = new Us(),
        Uh = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            if (
              (Kr(this, n), ((r = t.call(this)).type = "Sprite"), void 0 === Th)
            ) {
              Th = new tc();
              var i = new Float32Array([
                  -0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1,
                  -0.5, 0.5, 0, 0, 1,
                ]),
                a = new Mh(i, 5);
              Th.setIndex([0, 1, 2, 0, 2, 3]),
                Th.setAttribute("position", new kh(a, 3, 0, !1)),
                Th.setAttribute("uv", new kh(a, 2, 3, !1));
            }
            return (
              (r.geometry = Th),
              (r.material = void 0 !== e ? e : new Ch()),
              (r.center = new Us(0.5, 0.5)),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "raycast",
                value: function (e, t) {
                  null === e.camera &&
                    console.error(
                      'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'
                    ),
                    Ph.setFromMatrixScale(this.matrixWorld),
                    zh.copy(e.camera.matrixWorld),
                    this.modelViewMatrix.multiplyMatrices(
                      e.camera.matrixWorldInverse,
                      this.matrixWorld
                    ),
                    Lh.setFromMatrixPosition(this.modelViewMatrix),
                    e.camera.isPerspectiveCamera &&
                      !1 === this.material.sizeAttenuation &&
                      Ph.multiplyScalar(-Lh.z);
                  var n,
                    r,
                    i = this.material.rotation;
                  0 !== i && ((r = Math.cos(i)), (n = Math.sin(i)));
                  var a = this.center;
                  jh(Dh.set(-0.5, -0.5, 0), Lh, a, Ph, n, r),
                    jh(Ih.set(0.5, -0.5, 0), Lh, a, Ph, n, r),
                    jh(Nh.set(0.5, 0.5, 0), Lh, a, Ph, n, r),
                    Fh.set(0, 0),
                    Bh.set(1, 0),
                    Hh.set(1, 1);
                  var o = e.ray.intersectTriangle(Dh, Ih, Nh, !1, Ah);
                  if (
                    null !== o ||
                    (jh(Ih.set(-0.5, 0.5, 0), Lh, a, Ph, n, r),
                    Bh.set(0, 1),
                    null !== (o = e.ray.intersectTriangle(Dh, Nh, Ih, !1, Ah)))
                  ) {
                    var s = e.ray.origin.distanceTo(Ah);
                    s < e.near ||
                      s > e.far ||
                      t.push({
                        distance: s,
                        point: Ah.clone(),
                        uv: Lu.getUV(Ah, Dh, Ih, Nh, Fh, Bh, Hh, new Us()),
                        face: null,
                        object: this,
                      });
                  }
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    void 0 !== e.center && this.center.copy(e.center),
                    (this.material = e.material),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(xu);
      function jh(e, t, n, r, i, a) {
        Rh.subVectors(e, n).addScalar(0.5).multiply(r),
          void 0 !== i
            ? ((Oh.x = a * Rh.x - i * Rh.y), (Oh.y = i * Rh.x + a * Rh.y))
            : Oh.copy(Rh),
          e.copy(t),
          (e.x += Oh.x),
          (e.y += Oh.y),
          e.applyMatrix4(zh);
      }
      Uh.prototype.isSprite = !0;
      var Gh = new yl(),
        Wh = new yl(),
        Vh = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e;
            return (
              Kr(this, n),
              ((e = t.call(this))._currentLevel = 0),
              (e.type = "LOD"),
              Object.defineProperties(ai(e), {
                levels: { enumerable: !0, value: [] },
                isLOD: { value: !0 },
              }),
              (e.autoUpdate = !0),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  fi(ri(n.prototype), "copy", this).call(this, e, !1);
                  for (var t = e.levels, r = 0, i = t.length; r < i; r++) {
                    var a = t[r];
                    this.addLevel(a.object.clone(), a.distance);
                  }
                  return (this.autoUpdate = e.autoUpdate), this;
                },
              },
              {
                key: "addLevel",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  t = Math.abs(t);
                  var n,
                    r = this.levels;
                  for (n = 0; n < r.length && !(t < r[n].distance); n++);
                  return (
                    r.splice(n, 0, { distance: t, object: e }),
                    this.add(e),
                    this
                  );
                },
              },
              {
                key: "getCurrentLevel",
                value: function () {
                  return this._currentLevel;
                },
              },
              {
                key: "getObjectForDistance",
                value: function (e) {
                  var t = this.levels;
                  if (t.length > 0) {
                    var n, r;
                    for (
                      n = 1, r = t.length;
                      n < r && !(e < t[n].distance);
                      n++
                    );
                    return t[n - 1].object;
                  }
                  return null;
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  if (this.levels.length > 0) {
                    Gh.setFromMatrixPosition(this.matrixWorld);
                    var n = e.ray.origin.distanceTo(Gh);
                    this.getObjectForDistance(n).raycast(e, t);
                  }
                },
              },
              {
                key: "update",
                value: function (e) {
                  var t = this.levels;
                  if (t.length > 1) {
                    Gh.setFromMatrixPosition(e.matrixWorld),
                      Wh.setFromMatrixPosition(this.matrixWorld);
                    var n,
                      r,
                      i = Gh.distanceTo(Wh) / e.zoom;
                    for (
                      t[0].object.visible = !0, n = 1, r = t.length;
                      n < r && i >= t[n].distance;
                      n++
                    )
                      (t[n - 1].object.visible = !1),
                        (t[n].object.visible = !0);
                    for (this._currentLevel = n - 1; n < r; n++)
                      t[n].object.visible = !1;
                  }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = fi(ri(n.prototype), "toJSON", this).call(this, e);
                  !1 === this.autoUpdate && (t.object.autoUpdate = !1),
                    (t.object.levels = []);
                  for (var r = this.levels, i = 0, a = r.length; i < a; i++) {
                    var o = r[i];
                    t.object.levels.push({
                      object: o.object.uuid,
                      distance: o.distance,
                    });
                  }
                  return t;
                },
              },
            ]),
            n
          );
        })(xu),
        qh = new yl(),
        Xh = new cl(),
        Yh = new cl(),
        Jh = new yl(),
        $h = new Jl(),
        Qh = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            var i;
            return (
              Kr(this, n),
              ((i = t.call(this, e, r)).type = "SkinnedMesh"),
              (i.bindMode = "attached"),
              (i.bindMatrix = new Jl()),
              (i.bindMatrixInverse = new Jl()),
              i
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.bindMode = e.bindMode),
                    this.bindMatrix.copy(e.bindMatrix),
                    this.bindMatrixInverse.copy(e.bindMatrixInverse),
                    (this.skeleton = e.skeleton),
                    this
                  );
                },
              },
              {
                key: "bind",
                value: function (e, t) {
                  (this.skeleton = e),
                    void 0 === t &&
                      (this.updateMatrixWorld(!0),
                      this.skeleton.calculateInverses(),
                      (t = this.matrixWorld)),
                    this.bindMatrix.copy(t),
                    this.bindMatrixInverse.copy(t).invert();
                },
              },
              {
                key: "pose",
                value: function () {
                  this.skeleton.pose();
                },
              },
              {
                key: "normalizeSkinWeights",
                value: function () {
                  for (
                    var e = new cl(),
                      t = this.geometry.attributes.skinWeight,
                      n = 0,
                      r = t.count;
                    n < r;
                    n++
                  ) {
                    e.fromBufferAttribute(t, n);
                    var i = 1 / e.manhattanLength();
                    i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0),
                      t.setXYZW(n, e.x, e.y, e.z, e.w);
                  }
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  fi(ri(n.prototype), "updateMatrixWorld", this).call(this, e),
                    "attached" === this.bindMode
                      ? this.bindMatrixInverse.copy(this.matrixWorld).invert()
                      : "detached" === this.bindMode
                      ? this.bindMatrixInverse.copy(this.bindMatrix).invert()
                      : console.warn(
                          "THREE.SkinnedMesh: Unrecognized bindMode: " +
                            this.bindMode
                        );
                },
              },
              {
                key: "boneTransform",
                value: function (e, t) {
                  var n = this.skeleton,
                    r = this.geometry;
                  Xh.fromBufferAttribute(r.attributes.skinIndex, e),
                    Yh.fromBufferAttribute(r.attributes.skinWeight, e),
                    qh.copy(t).applyMatrix4(this.bindMatrix),
                    t.set(0, 0, 0);
                  for (var i = 0; i < 4; i++) {
                    var a = Yh.getComponent(i);
                    if (0 !== a) {
                      var o = Xh.getComponent(i);
                      $h.multiplyMatrices(
                        n.bones[o].matrixWorld,
                        n.boneInverses[o]
                      ),
                        t.addScaledVector(Jh.copy(qh).applyMatrix4($h), a);
                    }
                  }
                  return t.applyMatrix4(this.bindMatrixInverse);
                },
              },
            ]),
            n
          );
        })(bc);
      Qh.prototype.isSkinnedMesh = !0;
      var Zh = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e;
          return Kr(this, n), ((e = t.call(this)).type = "Bone"), e;
        }
        return ti(n);
      })(xu);
      Zh.prototype.isBone = !0;
      var Kh = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1,
            o = arguments.length > 3 ? arguments[3] : void 0,
            s = arguments.length > 4 ? arguments[4] : void 0,
            l = arguments.length > 5 ? arguments[5] : void 0,
            u = arguments.length > 6 ? arguments[6] : void 0,
            c = arguments.length > 7 ? arguments[7] : void 0,
            f =
              arguments.length > 8 && void 0 !== arguments[8]
                ? arguments[8]
                : Ma,
            d =
              arguments.length > 9 && void 0 !== arguments[9]
                ? arguments[9]
                : Ma,
            h = arguments.length > 10 ? arguments[10] : void 0,
            p = arguments.length > 11 ? arguments[11] : void 0;
          return (
            Kr(this, n),
            ((e = t.call(this, null, l, u, c, f, d, o, s, h, p)).image = {
              data: r,
              width: i,
              height: a,
            }),
            (e.generateMipmaps = !1),
            (e.flipY = !1),
            (e.unpackAlignment = 1),
            e
          );
        }
        return ti(n);
      })(ul);
      Kh.prototype.isDataTexture = !0;
      var ep = new Jl(),
        tp = new Jl(),
        np = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [];
            Kr(this, e),
              (this.uuid = Os()),
              (this.bones = t.slice(0)),
              (this.boneInverses = n),
              (this.boneMatrices = null),
              (this.boneTexture = null),
              (this.boneTextureSize = 0),
              (this.frame = -1),
              this.init();
          }
          return (
            ti(e, [
              {
                key: "init",
                value: function () {
                  var e = this.bones,
                    t = this.boneInverses;
                  if (
                    ((this.boneMatrices = new Float32Array(16 * e.length)),
                    0 === t.length)
                  )
                    this.calculateInverses();
                  else if (e.length !== t.length) {
                    console.warn(
                      "THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."
                    ),
                      (this.boneInverses = []);
                    for (var n = 0, r = this.bones.length; n < r; n++)
                      this.boneInverses.push(new Jl());
                  }
                },
              },
              {
                key: "calculateInverses",
                value: function () {
                  this.boneInverses.length = 0;
                  for (var e = 0, t = this.bones.length; e < t; e++) {
                    var n = new Jl();
                    this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(),
                      this.boneInverses.push(n);
                  }
                },
              },
              {
                key: "pose",
                value: function () {
                  for (var e = 0, t = this.bones.length; e < t; e++) {
                    var n = this.bones[e];
                    n && n.matrixWorld.copy(this.boneInverses[e]).invert();
                  }
                  for (var r = 0, i = this.bones.length; r < i; r++) {
                    var a = this.bones[r];
                    a &&
                      (a.parent && a.parent.isBone
                        ? (a.matrix.copy(a.parent.matrixWorld).invert(),
                          a.matrix.multiply(a.matrixWorld))
                        : a.matrix.copy(a.matrixWorld),
                      a.matrix.decompose(a.position, a.quaternion, a.scale));
                  }
                },
              },
              {
                key: "update",
                value: function () {
                  for (
                    var e = this.bones,
                      t = this.boneInverses,
                      n = this.boneMatrices,
                      r = this.boneTexture,
                      i = 0,
                      a = e.length;
                    i < a;
                    i++
                  ) {
                    var o = e[i] ? e[i].matrixWorld : tp;
                    ep.multiplyMatrices(o, t[i]), ep.toArray(n, 16 * i);
                  }
                  null !== r && (r.needsUpdate = !0);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new e(this.bones, this.boneInverses);
                },
              },
              {
                key: "computeBoneTexture",
                value: function () {
                  var e = Math.sqrt(4 * this.bones.length);
                  (e = Fs(e)), (e = Math.max(e, 4));
                  var t = new Float32Array(e * e * 4);
                  t.set(this.boneMatrices);
                  var n = new Kh(t, e, e, Xa, Ha);
                  return (
                    (n.needsUpdate = !0),
                    (this.boneMatrices = t),
                    (this.boneTexture = n),
                    (this.boneTextureSize = e),
                    this
                  );
                },
              },
              {
                key: "getBoneByName",
                value: function (e) {
                  for (var t = 0, n = this.bones.length; t < n; t++) {
                    var r = this.bones[t];
                    if (r.name === e) return r;
                  }
                },
              },
              {
                key: "dispose",
                value: function () {
                  null !== this.boneTexture &&
                    (this.boneTexture.dispose(), (this.boneTexture = null));
                },
              },
              {
                key: "fromJSON",
                value: function (e, t) {
                  this.uuid = e.uuid;
                  for (var n = 0, r = e.bones.length; n < r; n++) {
                    var i = e.bones[n],
                      a = t[i];
                    void 0 === a &&
                      (console.warn(
                        "THREE.Skeleton: No bone found with UUID:",
                        i
                      ),
                      (a = new Zh())),
                      this.bones.push(a),
                      this.boneInverses.push(
                        new Jl().fromArray(e.boneInverses[n])
                      );
                  }
                  return this.init(), this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.5,
                      type: "Skeleton",
                      generator: "Skeleton.toJSON",
                    },
                    bones: [],
                    boneInverses: [],
                  };
                  e.uuid = this.uuid;
                  for (
                    var t = this.bones,
                      n = this.boneInverses,
                      r = 0,
                      i = t.length;
                    r < i;
                    r++
                  ) {
                    var a = t[r];
                    e.bones.push(a.uuid);
                    var o = n[r];
                    e.boneInverses.push(o.toArray());
                  }
                  return e;
                },
              },
            ]),
            e
          );
        })(),
        rp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            var a,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              Kr(this, n),
              "number" === typeof i &&
                ((o = i),
                (i = !1),
                console.error(
                  "THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."
                )),
              ((a = t.call(this, e, r, i)).meshPerAttribute = o),
              a
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.meshPerAttribute = e.meshPerAttribute),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = fi(ri(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.meshPerAttribute = this.meshPerAttribute),
                    (e.isInstancedBufferAttribute = !0),
                    e
                  );
                },
              },
            ]),
            n
          );
        })(Nu);
      rp.prototype.isInstancedBufferAttribute = !0;
      var ip = new Jl(),
        ap = new Jl(),
        op = [],
        sp = new bc(),
        lp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            var a;
            return (
              Kr(this, n),
              ((a = t.call(this, e, r)).instanceMatrix = new rp(
                new Float32Array(16 * i),
                16
              )),
              (a.instanceColor = null),
              (a.count = i),
              (a.frustumCulled = !1),
              a
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    this.instanceMatrix.copy(e.instanceMatrix),
                    null !== e.instanceColor &&
                      (this.instanceColor = e.instanceColor.clone()),
                    (this.count = e.count),
                    this
                  );
                },
              },
              {
                key: "getColorAt",
                value: function (e, t) {
                  t.fromArray(this.instanceColor.array, 3 * e);
                },
              },
              {
                key: "getMatrixAt",
                value: function (e, t) {
                  t.fromArray(this.instanceMatrix.array, 16 * e);
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.matrixWorld,
                    r = this.count;
                  if (
                    ((sp.geometry = this.geometry),
                    (sp.material = this.material),
                    void 0 !== sp.material)
                  )
                    for (var i = 0; i < r; i++) {
                      this.getMatrixAt(i, ip),
                        ap.multiplyMatrices(n, ip),
                        (sp.matrixWorld = ap),
                        sp.raycast(e, op);
                      for (var a = 0, o = op.length; a < o; a++) {
                        var s = op[a];
                        (s.instanceId = i), (s.object = this), t.push(s);
                      }
                      op.length = 0;
                    }
                },
              },
              {
                key: "setColorAt",
                value: function (e, t) {
                  null === this.instanceColor &&
                    (this.instanceColor = new rp(
                      new Float32Array(3 * this.instanceMatrix.count),
                      3
                    )),
                    t.toArray(this.instanceColor.array, 3 * e);
                },
              },
              {
                key: "setMatrixAt",
                value: function (e, t) {
                  t.toArray(this.instanceMatrix.array, 16 * e);
                },
              },
              { key: "updateMorphTargets", value: function () {} },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            n
          );
        })(bc);
      lp.prototype.isInstancedMesh = !0;
      var up = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).type = "LineBasicMaterial"),
            (r.color = new il(16777215)),
            (r.linewidth = 1),
            (r.linecap = "round"),
            (r.linejoin = "round"),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.color.copy(e.color),
                  (this.linewidth = e.linewidth),
                  (this.linecap = e.linecap),
                  (this.linejoin = e.linejoin),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      up.prototype.isLineBasicMaterial = !0;
      var cp = new yl(),
        fp = new yl(),
        dp = new Jl(),
        hp = new Yl(),
        pp = new Hl(),
        vp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new tc(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new up();
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "Line"),
              (e.geometry = r),
              (e.material = i),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.material = e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "computeLineDistances",
                value: function () {
                  var e = this.geometry;
                  if (e.isBufferGeometry)
                    if (null === e.index) {
                      for (
                        var t = e.attributes.position,
                          n = [0],
                          r = 1,
                          i = t.count;
                        r < i;
                        r++
                      )
                        cp.fromBufferAttribute(t, r - 1),
                          fp.fromBufferAttribute(t, r),
                          (n[r] = n[r - 1]),
                          (n[r] += cp.distanceTo(fp));
                      e.setAttribute("lineDistance", new qu(n, 1));
                    } else
                      console.warn(
                        "THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
                      );
                  else
                    e.isGeometry &&
                      console.error(
                        "THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."
                      );
                  return this;
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.matrixWorld,
                    i = e.params.Line.threshold,
                    a = n.drawRange;
                  if (
                    (null === n.boundingSphere && n.computeBoundingSphere(),
                    pp.copy(n.boundingSphere),
                    pp.applyMatrix4(r),
                    (pp.radius += i),
                    !1 !== e.ray.intersectsSphere(pp))
                  ) {
                    dp.copy(r).invert(), hp.copy(e.ray).applyMatrix4(dp);
                    var o =
                        i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                      s = o * o,
                      l = new yl(),
                      u = new yl(),
                      c = new yl(),
                      f = new yl(),
                      d = this.isLineSegments ? 2 : 1;
                    if (n.isBufferGeometry) {
                      var h = n.index,
                        p = n.attributes.position;
                      if (null !== h)
                        for (
                          var v = Math.max(0, a.start),
                            m = Math.min(h.count, a.start + a.count) - 1;
                          v < m;
                          v += d
                        ) {
                          var g = h.getX(v),
                            y = h.getX(v + 1);
                          if (
                            (l.fromBufferAttribute(p, g),
                            u.fromBufferAttribute(p, y),
                            !(hp.distanceSqToSegment(l, u, f, c) > s))
                          ) {
                            f.applyMatrix4(this.matrixWorld);
                            var b = e.ray.origin.distanceTo(f);
                            b < e.near ||
                              b > e.far ||
                              t.push({
                                distance: b,
                                point: c.clone().applyMatrix4(this.matrixWorld),
                                index: v,
                                face: null,
                                faceIndex: null,
                                object: this,
                              });
                          }
                        }
                      else
                        for (
                          var x = Math.max(0, a.start),
                            w = Math.min(p.count, a.start + a.count) - 1;
                          x < w;
                          x += d
                        ) {
                          if (
                            (l.fromBufferAttribute(p, x),
                            u.fromBufferAttribute(p, x + 1),
                            !(hp.distanceSqToSegment(l, u, f, c) > s))
                          ) {
                            f.applyMatrix4(this.matrixWorld);
                            var _ = e.ray.origin.distanceTo(f);
                            _ < e.near ||
                              _ > e.far ||
                              t.push({
                                distance: _,
                                point: c.clone().applyMatrix4(this.matrixWorld),
                                index: x,
                                face: null,
                                faceIndex: null,
                                object: this,
                              });
                          }
                        }
                    } else
                      n.isGeometry &&
                        console.error(
                          "THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."
                        );
                  }
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry;
                  if (e.isBufferGeometry) {
                    var t = e.morphAttributes,
                      n = Object.keys(t);
                    if (n.length > 0) {
                      var r = t[n[0]];
                      if (void 0 !== r) {
                        (this.morphTargetInfluences = []),
                          (this.morphTargetDictionary = {});
                        for (var i = 0, a = r.length; i < a; i++) {
                          var o = r[i].name || String(i);
                          this.morphTargetInfluences.push(0),
                            (this.morphTargetDictionary[o] = i);
                        }
                      }
                    }
                  } else {
                    var s = e.morphTargets;
                    void 0 !== s &&
                      s.length > 0 &&
                      console.error(
                        "THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead."
                      );
                  }
                },
              },
            ]),
            n
          );
        })(xu);
      vp.prototype.isLine = !0;
      var mp = new yl(),
        gp = new yl(),
        yp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            var i;
            return (
              Kr(this, n), ((i = t.call(this, e, r)).type = "LineSegments"), i
            );
          }
          return (
            ti(n, [
              {
                key: "computeLineDistances",
                value: function () {
                  var e = this.geometry;
                  if (e.isBufferGeometry)
                    if (null === e.index) {
                      for (
                        var t = e.attributes.position,
                          n = [],
                          r = 0,
                          i = t.count;
                        r < i;
                        r += 2
                      )
                        mp.fromBufferAttribute(t, r),
                          gp.fromBufferAttribute(t, r + 1),
                          (n[r] = 0 === r ? 0 : n[r - 1]),
                          (n[r + 1] = n[r] + mp.distanceTo(gp));
                      e.setAttribute("lineDistance", new qu(n, 1));
                    } else
                      console.warn(
                        "THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
                      );
                  else
                    e.isGeometry &&
                      console.error(
                        "THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."
                      );
                  return this;
                },
              },
            ]),
            n
          );
        })(vp);
      yp.prototype.isLineSegments = !0;
      var bp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r) {
          var i;
          return Kr(this, n), ((i = t.call(this, e, r)).type = "LineLoop"), i;
        }
        return ti(n);
      })(vp);
      bp.prototype.isLineLoop = !0;
      var xp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).type = "PointsMaterial"),
            (r.color = new il(16777215)),
            (r.map = null),
            (r.alphaMap = null),
            (r.size = 1),
            (r.sizeAttenuation = !0),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.color.copy(e.color),
                  (this.map = e.map),
                  (this.alphaMap = e.alphaMap),
                  (this.size = e.size),
                  (this.sizeAttenuation = e.sizeAttenuation),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      xp.prototype.isPointsMaterial = !0;
      var wp = new Jl(),
        _p = new Yl(),
        Sp = new Hl(),
        Mp = new yl(),
        Ep = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new tc(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new xp();
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "Points"),
              (e.geometry = r),
              (e.material = i),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.material = e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.matrixWorld,
                    i = e.params.Points.threshold,
                    a = n.drawRange;
                  if (
                    (null === n.boundingSphere && n.computeBoundingSphere(),
                    Sp.copy(n.boundingSphere),
                    Sp.applyMatrix4(r),
                    (Sp.radius += i),
                    !1 !== e.ray.intersectsSphere(Sp))
                  ) {
                    wp.copy(r).invert(), _p.copy(e.ray).applyMatrix4(wp);
                    var o =
                        i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                      s = o * o;
                    if (n.isBufferGeometry) {
                      var l = n.index,
                        u = n.attributes.position;
                      if (null !== l)
                        for (
                          var c = Math.max(0, a.start),
                            f = Math.min(l.count, a.start + a.count);
                          c < f;
                          c++
                        ) {
                          var d = l.getX(c);
                          Mp.fromBufferAttribute(u, d),
                            kp(Mp, d, s, r, e, t, this);
                        }
                      else
                        for (
                          var h = Math.max(0, a.start),
                            p = Math.min(u.count, a.start + a.count);
                          h < p;
                          h++
                        )
                          Mp.fromBufferAttribute(u, h),
                            kp(Mp, h, s, r, e, t, this);
                    } else
                      console.error(
                        "THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."
                      );
                  }
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry;
                  if (e.isBufferGeometry) {
                    var t = e.morphAttributes,
                      n = Object.keys(t);
                    if (n.length > 0) {
                      var r = t[n[0]];
                      if (void 0 !== r) {
                        (this.morphTargetInfluences = []),
                          (this.morphTargetDictionary = {});
                        for (var i = 0, a = r.length; i < a; i++) {
                          var o = r[i].name || String(i);
                          this.morphTargetInfluences.push(0),
                            (this.morphTargetDictionary[o] = i);
                        }
                      }
                    }
                  } else {
                    var s = e.morphTargets;
                    void 0 !== s &&
                      s.length > 0 &&
                      console.error(
                        "THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead."
                      );
                  }
                },
              },
            ]),
            n
          );
        })(xu);
      function kp(e, t, n, r, i, a, o) {
        var s = _p.distanceSqToPoint(e);
        if (s < n) {
          var l = new yl();
          _p.closestPointToPoint(e, l), l.applyMatrix4(r);
          var u = i.ray.origin.distanceTo(l);
          if (u < i.near || u > i.far) return;
          a.push({
            distance: u,
            distanceToRay: Math.sqrt(s),
            point: l,
            index: t,
            face: null,
            object: o,
          });
        }
      }
      Ep.prototype.isPoints = !0;
      var Tp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i, a, o, s, l, u, c) {
          var f;
          Kr(this, n),
            ((f = t.call(this, e, r, i, a, o, s, l, u, c)).minFilter =
              void 0 !== s ? s : Aa),
            (f.magFilter = void 0 !== o ? o : Aa),
            (f.generateMipmaps = !1);
          var d = ai(f);
          return (
            "requestVideoFrameCallback" in e &&
              e.requestVideoFrameCallback(function t() {
                (d.needsUpdate = !0), e.requestVideoFrameCallback(t);
              }),
            f
          );
        }
        return (
          ti(n, [
            {
              key: "clone",
              value: function () {
                return new this.constructor(this.image).copy(this);
              },
            },
            {
              key: "update",
              value: function () {
                var e = this.image;
                !1 === "requestVideoFrameCallback" in e &&
                  e.readyState >= e.HAVE_CURRENT_DATA &&
                  (this.needsUpdate = !0);
              },
            },
          ]),
          n
        );
      })(ul);
      Tp.prototype.isVideoTexture = !0;
      var Cp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i) {
          var a;
          return (
            Kr(this, n),
            ((a = t.call(this, { width: e, height: r })).format = i),
            (a.magFilter = Ma),
            (a.minFilter = Ma),
            (a.generateMipmaps = !1),
            (a.needsUpdate = !0),
            a
          );
        }
        return ti(n);
      })(ul);
      Cp.prototype.isFramebufferTexture = !0;
      var Ap = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i, a, o, s, l, u, c, f, d, h) {
          var p;
          return (
            Kr(this, n),
            ((p = t.call(this, null, s, l, u, c, f, a, o, d, h)).image = {
              width: r,
              height: i,
            }),
            (p.mipmaps = e),
            (p.flipY = !1),
            (p.generateMipmaps = !1),
            p
          );
        }
        return ti(n);
      })(ul);
      Ap.prototype.isCompressedTexture = !0;
      var Pp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i, a, o, s, l, u, c) {
          var f;
          return (
            Kr(this, n),
            ((f = t.call(this, e, r, i, a, o, s, l, u, c)).needsUpdate = !0),
            f
          );
        }
        return ti(n);
      })(ul);
      Pp.prototype.isCanvasTexture = !0;
      var Lp = (function () {
          function e() {
            Kr(this, e), (this.type = "Curve"), (this.arcLengthDivisions = 200);
          }
          return (
            ti(e, [
              {
                key: "getPoint",
                value: function () {
                  return (
                    console.warn("THREE.Curve: .getPoint() not implemented."),
                    null
                  );
                },
              },
              {
                key: "getPointAt",
                value: function (e, t) {
                  var n = this.getUtoTmapping(e);
                  return this.getPoint(n, t);
                },
              },
              {
                key: "getPoints",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 5,
                      t = [],
                      n = 0;
                    n <= e;
                    n++
                  )
                    t.push(this.getPoint(n / e));
                  return t;
                },
              },
              {
                key: "getSpacedPoints",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 5,
                      t = [],
                      n = 0;
                    n <= e;
                    n++
                  )
                    t.push(this.getPointAt(n / e));
                  return t;
                },
              },
              {
                key: "getLength",
                value: function () {
                  var e = this.getLengths();
                  return e[e.length - 1];
                },
              },
              {
                key: "getLengths",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : this.arcLengthDivisions;
                  if (
                    this.cacheArcLengths &&
                    this.cacheArcLengths.length === e + 1 &&
                    !this.needsUpdate
                  )
                    return this.cacheArcLengths;
                  this.needsUpdate = !1;
                  var t,
                    n = [],
                    r = this.getPoint(0),
                    i = 0;
                  n.push(0);
                  for (var a = 1; a <= e; a++)
                    (i += (t = this.getPoint(a / e)).distanceTo(r)),
                      n.push(i),
                      (r = t);
                  return (this.cacheArcLengths = n), n;
                },
              },
              {
                key: "updateArcLengths",
                value: function () {
                  (this.needsUpdate = !0), this.getLengths();
                },
              },
              {
                key: "getUtoTmapping",
                value: function (e, t) {
                  var n,
                    r = this.getLengths(),
                    i = 0,
                    a = r.length;
                  n = t || e * r[a - 1];
                  for (var o, s = 0, l = a - 1; s <= l; )
                    if ((o = r[(i = Math.floor(s + (l - s) / 2))] - n) < 0)
                      s = i + 1;
                    else {
                      if (!(o > 0)) {
                        l = i;
                        break;
                      }
                      l = i - 1;
                    }
                  if (r[(i = l)] === n) return i / (a - 1);
                  var u = r[i];
                  return (i + (n - u) / (r[i + 1] - u)) / (a - 1);
                },
              },
              {
                key: "getTangent",
                value: function (e, t) {
                  var n = 1e-4,
                    r = e - n,
                    i = e + n;
                  r < 0 && (r = 0), i > 1 && (i = 1);
                  var a = this.getPoint(r),
                    o = this.getPoint(i),
                    s = t || (a.isVector2 ? new Us() : new yl());
                  return s.copy(o).sub(a).normalize(), s;
                },
              },
              {
                key: "getTangentAt",
                value: function (e, t) {
                  var n = this.getUtoTmapping(e);
                  return this.getTangent(n, t);
                },
              },
              {
                key: "computeFrenetFrames",
                value: function (e, t) {
                  for (
                    var n = new yl(),
                      r = [],
                      i = [],
                      a = [],
                      o = new yl(),
                      s = new Jl(),
                      l = 0;
                    l <= e;
                    l++
                  ) {
                    var u = l / e;
                    r[l] = this.getTangentAt(u, new yl());
                  }
                  (i[0] = new yl()), (a[0] = new yl());
                  var c = Number.MAX_VALUE,
                    f = Math.abs(r[0].x),
                    d = Math.abs(r[0].y),
                    h = Math.abs(r[0].z);
                  f <= c && ((c = f), n.set(1, 0, 0)),
                    d <= c && ((c = d), n.set(0, 1, 0)),
                    h <= c && n.set(0, 0, 1),
                    o.crossVectors(r[0], n).normalize(),
                    i[0].crossVectors(r[0], o),
                    a[0].crossVectors(r[0], i[0]);
                  for (var p = 1; p <= e; p++) {
                    if (
                      ((i[p] = i[p - 1].clone()),
                      (a[p] = a[p - 1].clone()),
                      o.crossVectors(r[p - 1], r[p]),
                      o.length() > Number.EPSILON)
                    ) {
                      o.normalize();
                      var v = Math.acos(zs(r[p - 1].dot(r[p]), -1, 1));
                      i[p].applyMatrix4(s.makeRotationAxis(o, v));
                    }
                    a[p].crossVectors(r[p], i[p]);
                  }
                  if (!0 === t) {
                    var m = Math.acos(zs(i[0].dot(i[e]), -1, 1));
                    (m /= e),
                      r[0].dot(o.crossVectors(i[0], i[e])) > 0 && (m = -m);
                    for (var g = 1; g <= e; g++)
                      i[g].applyMatrix4(s.makeRotationAxis(r[g], m * g)),
                        a[g].crossVectors(r[g], i[g]);
                  }
                  return { tangents: r, normals: i, binormals: a };
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.arcLengthDivisions = e.arcLengthDivisions), this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.5,
                      type: "Curve",
                      generator: "Curve.toJSON",
                    },
                  };
                  return (
                    (e.arcLengthDivisions = this.arcLengthDivisions),
                    (e.type = this.type),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (this.arcLengthDivisions = e.arcLengthDivisions), this;
                },
              },
            ]),
            e
          );
        })(),
        Rp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2 * Math.PI,
              u =
                arguments.length > 6 && void 0 !== arguments[6] && arguments[6],
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : 0;
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "EllipseCurve"),
              (e.aX = r),
              (e.aY = i),
              (e.xRadius = a),
              (e.yRadius = o),
              (e.aStartAngle = s),
              (e.aEndAngle = l),
              (e.aClockwise = u),
              (e.aRotation = c),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "getPoint",
                value: function (e, t) {
                  for (
                    var n = t || new Us(),
                      r = 2 * Math.PI,
                      i = this.aEndAngle - this.aStartAngle,
                      a = Math.abs(i) < Number.EPSILON;
                    i < 0;

                  )
                    i += r;
                  for (; i > r; ) i -= r;
                  i < Number.EPSILON && (i = a ? 0 : r),
                    !0 !== this.aClockwise ||
                      a ||
                      (i === r ? (i = -r) : (i -= r));
                  var o = this.aStartAngle + e * i,
                    s = this.aX + this.xRadius * Math.cos(o),
                    l = this.aY + this.yRadius * Math.sin(o);
                  if (0 !== this.aRotation) {
                    var u = Math.cos(this.aRotation),
                      c = Math.sin(this.aRotation),
                      f = s - this.aX,
                      d = l - this.aY;
                    (s = f * u - d * c + this.aX),
                      (l = f * c + d * u + this.aY);
                  }
                  return n.set(s, l);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.aX = e.aX),
                    (this.aY = e.aY),
                    (this.xRadius = e.xRadius),
                    (this.yRadius = e.yRadius),
                    (this.aStartAngle = e.aStartAngle),
                    (this.aEndAngle = e.aEndAngle),
                    (this.aClockwise = e.aClockwise),
                    (this.aRotation = e.aRotation),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = fi(ri(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.aX = this.aX),
                    (e.aY = this.aY),
                    (e.xRadius = this.xRadius),
                    (e.yRadius = this.yRadius),
                    (e.aStartAngle = this.aStartAngle),
                    (e.aEndAngle = this.aEndAngle),
                    (e.aClockwise = this.aClockwise),
                    (e.aRotation = this.aRotation),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "fromJSON", this).call(this, e),
                    (this.aX = e.aX),
                    (this.aY = e.aY),
                    (this.xRadius = e.xRadius),
                    (this.yRadius = e.yRadius),
                    (this.aStartAngle = e.aStartAngle),
                    (this.aEndAngle = e.aEndAngle),
                    (this.aClockwise = e.aClockwise),
                    (this.aRotation = e.aRotation),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Lp);
      Rp.prototype.isEllipseCurve = !0;
      var Op = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i, a, o, s) {
          var l;
          return (
            Kr(this, n),
            ((l = t.call(this, e, r, i, i, a, o, s)).type = "ArcCurve"),
            l
          );
        }
        return ti(n);
      })(Rp);
      function zp() {
        var e = 0,
          t = 0,
          n = 0,
          r = 0;
        function i(i, a, o, s) {
          (e = i),
            (t = o),
            (n = -3 * i + 3 * a - 2 * o - s),
            (r = 2 * i - 2 * a + o + s);
        }
        return {
          initCatmullRom: function (e, t, n, r, a) {
            i(t, n, a * (n - e), a * (r - t));
          },
          initNonuniformCatmullRom: function (e, t, n, r, a, o, s) {
            var l = (t - e) / a - (n - e) / (a + o) + (n - t) / o,
              u = (n - t) / o - (r - t) / (o + s) + (r - n) / s;
            i(t, n, (l *= o), (u *= o));
          },
          calc: function (i) {
            var a = i * i;
            return e + t * i + n * a + r * (a * i);
          },
        };
      }
      Op.prototype.isArcCurve = !0;
      var Dp = new yl(),
        Ip = new zp(),
        Np = new zp(),
        Fp = new zp(),
        Bp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              i =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : "centripetal",
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0.5;
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "CatmullRomCurve3"),
              (e.points = r),
              (e.closed = i),
              (e.curveType = a),
              (e.tension = o),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t,
                    n,
                    r =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new yl(),
                    i = r,
                    a = this.points,
                    o = a.length,
                    s = (o - (this.closed ? 0 : 1)) * e,
                    l = Math.floor(s),
                    u = s - l;
                  this.closed
                    ? (l += l > 0 ? 0 : (Math.floor(Math.abs(l) / o) + 1) * o)
                    : 0 === u && l === o - 1 && ((l = o - 2), (u = 1)),
                    this.closed || l > 0
                      ? (t = a[(l - 1) % o])
                      : (Dp.subVectors(a[0], a[1]).add(a[0]), (t = Dp));
                  var c = a[l % o],
                    f = a[(l + 1) % o];
                  if (
                    (this.closed || l + 2 < o
                      ? (n = a[(l + 2) % o])
                      : (Dp.subVectors(a[o - 1], a[o - 2]).add(a[o - 1]),
                        (n = Dp)),
                    "centripetal" === this.curveType ||
                      "chordal" === this.curveType)
                  ) {
                    var d = "chordal" === this.curveType ? 0.5 : 0.25,
                      h = Math.pow(t.distanceToSquared(c), d),
                      p = Math.pow(c.distanceToSquared(f), d),
                      v = Math.pow(f.distanceToSquared(n), d);
                    p < 1e-4 && (p = 1),
                      h < 1e-4 && (h = p),
                      v < 1e-4 && (v = p),
                      Ip.initNonuniformCatmullRom(t.x, c.x, f.x, n.x, h, p, v),
                      Np.initNonuniformCatmullRom(t.y, c.y, f.y, n.y, h, p, v),
                      Fp.initNonuniformCatmullRom(t.z, c.z, f.z, n.z, h, p, v);
                  } else
                    "catmullrom" === this.curveType &&
                      (Ip.initCatmullRom(t.x, c.x, f.x, n.x, this.tension),
                      Np.initCatmullRom(t.y, c.y, f.y, n.y, this.tension),
                      Fp.initCatmullRom(t.z, c.z, f.z, n.z, this.tension));
                  return i.set(Ip.calc(u), Np.calc(u), Fp.calc(u)), i;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.points = []);
                  for (var t = 0, r = e.points.length; t < r; t++) {
                    var i = e.points[t];
                    this.points.push(i.clone());
                  }
                  return (
                    (this.closed = e.closed),
                    (this.curveType = e.curveType),
                    (this.tension = e.tension),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = fi(ri(n.prototype), "toJSON", this).call(this);
                  e.points = [];
                  for (var t = 0, r = this.points.length; t < r; t++) {
                    var i = this.points[t];
                    e.points.push(i.toArray());
                  }
                  return (
                    (e.closed = this.closed),
                    (e.curveType = this.curveType),
                    (e.tension = this.tension),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  fi(ri(n.prototype), "fromJSON", this).call(this, e),
                    (this.points = []);
                  for (var t = 0, r = e.points.length; t < r; t++) {
                    var i = e.points[t];
                    this.points.push(new yl().fromArray(i));
                  }
                  return (
                    (this.closed = e.closed),
                    (this.curveType = e.curveType),
                    (this.tension = e.tension),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Lp);
      function Hp(e, t, n, r, i) {
        var a = 0.5 * (r - t),
          o = 0.5 * (i - n),
          s = e * e;
        return (
          (2 * n - 2 * r + a + o) * (e * s) +
          (-3 * n + 3 * r - 2 * a - o) * s +
          a * e +
          n
        );
      }
      function Up(e, t, n, r) {
        return (
          (function (e, t) {
            var n = 1 - e;
            return n * n * t;
          })(e, t) +
          (function (e, t) {
            return 2 * (1 - e) * e * t;
          })(e, n) +
          (function (e, t) {
            return e * e * t;
          })(e, r)
        );
      }
      function jp(e, t, n, r, i) {
        return (
          (function (e, t) {
            var n = 1 - e;
            return n * n * n * t;
          })(e, t) +
          (function (e, t) {
            var n = 1 - e;
            return 3 * n * n * e * t;
          })(e, n) +
          (function (e, t) {
            return 3 * (1 - e) * e * e * t;
          })(e, r) +
          (function (e, t) {
            return e * e * e * t;
          })(e, i)
        );
      }
      Bp.prototype.isCatmullRomCurve3 = !0;
      var Gp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : new Us(),
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : new Us(),
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : new Us(),
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : new Us();
          return (
            Kr(this, n),
            ((e = t.call(this)).type = "CubicBezierCurve"),
            (e.v0 = r),
            (e.v1 = i),
            (e.v2 = a),
            (e.v3 = o),
            e
          );
        }
        return (
          ti(n, [
            {
              key: "getPoint",
              value: function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new Us(),
                  n = t,
                  r = this.v0,
                  i = this.v1,
                  a = this.v2,
                  o = this.v3;
                return (
                  n.set(jp(e, r.x, i.x, a.x, o.x), jp(e, r.y, i.y, a.y, o.y)), n
                );
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.v0.copy(e.v0),
                  this.v1.copy(e.v1),
                  this.v2.copy(e.v2),
                  this.v3.copy(e.v3),
                  this
                );
              },
            },
            {
              key: "toJSON",
              value: function () {
                var e = fi(ri(n.prototype), "toJSON", this).call(this);
                return (
                  (e.v0 = this.v0.toArray()),
                  (e.v1 = this.v1.toArray()),
                  (e.v2 = this.v2.toArray()),
                  (e.v3 = this.v3.toArray()),
                  e
                );
              },
            },
            {
              key: "fromJSON",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "fromJSON", this).call(this, e),
                  this.v0.fromArray(e.v0),
                  this.v1.fromArray(e.v1),
                  this.v2.fromArray(e.v2),
                  this.v3.fromArray(e.v3),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Lp);
      Gp.prototype.isCubicBezierCurve = !0;
      var Wp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : new yl(),
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : new yl(),
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : new yl(),
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : new yl();
          return (
            Kr(this, n),
            ((e = t.call(this)).type = "CubicBezierCurve3"),
            (e.v0 = r),
            (e.v1 = i),
            (e.v2 = a),
            (e.v3 = o),
            e
          );
        }
        return (
          ti(n, [
            {
              key: "getPoint",
              value: function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new yl(),
                  n = t,
                  r = this.v0,
                  i = this.v1,
                  a = this.v2,
                  o = this.v3;
                return (
                  n.set(
                    jp(e, r.x, i.x, a.x, o.x),
                    jp(e, r.y, i.y, a.y, o.y),
                    jp(e, r.z, i.z, a.z, o.z)
                  ),
                  n
                );
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.v0.copy(e.v0),
                  this.v1.copy(e.v1),
                  this.v2.copy(e.v2),
                  this.v3.copy(e.v3),
                  this
                );
              },
            },
            {
              key: "toJSON",
              value: function () {
                var e = fi(ri(n.prototype), "toJSON", this).call(this);
                return (
                  (e.v0 = this.v0.toArray()),
                  (e.v1 = this.v1.toArray()),
                  (e.v2 = this.v2.toArray()),
                  (e.v3 = this.v3.toArray()),
                  e
                );
              },
            },
            {
              key: "fromJSON",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "fromJSON", this).call(this, e),
                  this.v0.fromArray(e.v0),
                  this.v1.fromArray(e.v1),
                  this.v2.fromArray(e.v2),
                  this.v3.fromArray(e.v3),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Lp);
      Wp.prototype.isCubicBezierCurve3 = !0;
      var Vp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : new Us(),
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : new Us();
          return (
            Kr(this, n),
            ((e = t.call(this)).type = "LineCurve"),
            (e.v1 = r),
            (e.v2 = i),
            e
          );
        }
        return (
          ti(n, [
            {
              key: "getPoint",
              value: function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new Us(),
                  n = t;
                return (
                  1 === e
                    ? n.copy(this.v2)
                    : (n.copy(this.v2).sub(this.v1),
                      n.multiplyScalar(e).add(this.v1)),
                  n
                );
              },
            },
            {
              key: "getPointAt",
              value: function (e, t) {
                return this.getPoint(e, t);
              },
            },
            {
              key: "getTangent",
              value: function (e, t) {
                var n = t || new Us();
                return n.copy(this.v2).sub(this.v1).normalize(), n;
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.v1.copy(e.v1),
                  this.v2.copy(e.v2),
                  this
                );
              },
            },
            {
              key: "toJSON",
              value: function () {
                var e = fi(ri(n.prototype), "toJSON", this).call(this);
                return (
                  (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e
                );
              },
            },
            {
              key: "fromJSON",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "fromJSON", this).call(this, e),
                  this.v1.fromArray(e.v1),
                  this.v2.fromArray(e.v2),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Lp);
      Vp.prototype.isLineCurve = !0;
      var qp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new yl(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new yl();
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "LineCurve3"),
              (e.isLineCurve3 = !0),
              (e.v1 = r),
              (e.v2 = i),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new yl(),
                    n = t;
                  return (
                    1 === e
                      ? n.copy(this.v2)
                      : (n.copy(this.v2).sub(this.v1),
                        n.multiplyScalar(e).add(this.v1)),
                    n
                  );
                },
              },
              {
                key: "getPointAt",
                value: function (e, t) {
                  return this.getPoint(e, t);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = fi(ri(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "fromJSON", this).call(this, e),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Lp),
        Xp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Us(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Us(),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Us();
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "QuadraticBezierCurve"),
              (e.v0 = r),
              (e.v1 = i),
              (e.v2 = a),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new Us(),
                    n = t,
                    r = this.v0,
                    i = this.v1,
                    a = this.v2;
                  return n.set(Up(e, r.x, i.x, a.x), Up(e, r.y, i.y, a.y)), n;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    this.v0.copy(e.v0),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = fi(ri(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.v0 = this.v0.toArray()),
                    (e.v1 = this.v1.toArray()),
                    (e.v2 = this.v2.toArray()),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "fromJSON", this).call(this, e),
                    this.v0.fromArray(e.v0),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Lp);
      Xp.prototype.isQuadraticBezierCurve = !0;
      var Yp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : new yl(),
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : new yl(),
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : new yl();
          return (
            Kr(this, n),
            ((e = t.call(this)).type = "QuadraticBezierCurve3"),
            (e.v0 = r),
            (e.v1 = i),
            (e.v2 = a),
            e
          );
        }
        return (
          ti(n, [
            {
              key: "getPoint",
              value: function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new yl(),
                  n = t,
                  r = this.v0,
                  i = this.v1,
                  a = this.v2;
                return (
                  n.set(
                    Up(e, r.x, i.x, a.x),
                    Up(e, r.y, i.y, a.y),
                    Up(e, r.z, i.z, a.z)
                  ),
                  n
                );
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.v0.copy(e.v0),
                  this.v1.copy(e.v1),
                  this.v2.copy(e.v2),
                  this
                );
              },
            },
            {
              key: "toJSON",
              value: function () {
                var e = fi(ri(n.prototype), "toJSON", this).call(this);
                return (
                  (e.v0 = this.v0.toArray()),
                  (e.v1 = this.v1.toArray()),
                  (e.v2 = this.v2.toArray()),
                  e
                );
              },
            },
            {
              key: "fromJSON",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "fromJSON", this).call(this, e),
                  this.v0.fromArray(e.v0),
                  this.v1.fromArray(e.v1),
                  this.v2.fromArray(e.v2),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Lp);
      Yp.prototype.isQuadraticBezierCurve3 = !0;
      var Jp = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [];
          return (
            Kr(this, n),
            ((e = t.call(this)).type = "SplineCurve"),
            (e.points = r),
            e
          );
        }
        return (
          ti(n, [
            {
              key: "getPoint",
              value: function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new Us(),
                  n = t,
                  r = this.points,
                  i = (r.length - 1) * e,
                  a = Math.floor(i),
                  o = i - a,
                  s = r[0 === a ? a : a - 1],
                  l = r[a],
                  u = r[a > r.length - 2 ? r.length - 1 : a + 1],
                  c = r[a > r.length - 3 ? r.length - 1 : a + 2];
                return (
                  n.set(Hp(o, s.x, l.x, u.x, c.x), Hp(o, s.y, l.y, u.y, c.y)), n
                );
              },
            },
            {
              key: "copy",
              value: function (e) {
                fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.points = []);
                for (var t = 0, r = e.points.length; t < r; t++) {
                  var i = e.points[t];
                  this.points.push(i.clone());
                }
                return this;
              },
            },
            {
              key: "toJSON",
              value: function () {
                var e = fi(ri(n.prototype), "toJSON", this).call(this);
                e.points = [];
                for (var t = 0, r = this.points.length; t < r; t++) {
                  var i = this.points[t];
                  e.points.push(i.toArray());
                }
                return e;
              },
            },
            {
              key: "fromJSON",
              value: function (e) {
                fi(ri(n.prototype), "fromJSON", this).call(this, e),
                  (this.points = []);
                for (var t = 0, r = e.points.length; t < r; t++) {
                  var i = e.points[t];
                  this.points.push(new Us().fromArray(i));
                }
                return this;
              },
            },
          ]),
          n
        );
      })(Lp);
      Jp.prototype.isSplineCurve = !0;
      var $p = Object.freeze({
          __proto__: null,
          ArcCurve: Op,
          CatmullRomCurve3: Bp,
          CubicBezierCurve: Gp,
          CubicBezierCurve3: Wp,
          EllipseCurve: Rp,
          LineCurve: Vp,
          LineCurve3: qp,
          QuadraticBezierCurve: Xp,
          QuadraticBezierCurve3: Yp,
          SplineCurve: Jp,
        }),
        Qp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e;
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "CurvePath"),
              (e.curves = []),
              (e.autoClose = !1),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "add",
                value: function (e) {
                  this.curves.push(e);
                },
              },
              {
                key: "closePath",
                value: function () {
                  var e = this.curves[0].getPoint(0),
                    t = this.curves[this.curves.length - 1].getPoint(1);
                  e.equals(t) || this.curves.push(new Vp(t, e));
                },
              },
              {
                key: "getPoint",
                value: function (e, t) {
                  for (
                    var n = e * this.getLength(),
                      r = this.getCurveLengths(),
                      i = 0;
                    i < r.length;

                  ) {
                    if (r[i] >= n) {
                      var a = r[i] - n,
                        o = this.curves[i],
                        s = o.getLength(),
                        l = 0 === s ? 0 : 1 - a / s;
                      return o.getPointAt(l, t);
                    }
                    i++;
                  }
                  return null;
                },
              },
              {
                key: "getLength",
                value: function () {
                  var e = this.getCurveLengths();
                  return e[e.length - 1];
                },
              },
              {
                key: "updateArcLengths",
                value: function () {
                  (this.needsUpdate = !0),
                    (this.cacheLengths = null),
                    this.getCurveLengths();
                },
              },
              {
                key: "getCurveLengths",
                value: function () {
                  if (
                    this.cacheLengths &&
                    this.cacheLengths.length === this.curves.length
                  )
                    return this.cacheLengths;
                  for (
                    var e = [], t = 0, n = 0, r = this.curves.length;
                    n < r;
                    n++
                  )
                    (t += this.curves[n].getLength()), e.push(t);
                  return (this.cacheLengths = e), e;
                },
              },
              {
                key: "getSpacedPoints",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 40,
                      t = [],
                      n = 0;
                    n <= e;
                    n++
                  )
                    t.push(this.getPoint(n / e));
                  return this.autoClose && t.push(t[0]), t;
                },
              },
              {
                key: "getPoints",
                value: function () {
                  for (
                    var e,
                      t =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 12,
                      n = [],
                      r = 0,
                      i = this.curves;
                    r < i.length;
                    r++
                  )
                    for (
                      var a = i[r],
                        o = a.isEllipseCurve
                          ? 2 * t
                          : a.isLineCurve || a.isLineCurve3
                          ? 1
                          : a.isSplineCurve
                          ? t * a.points.length
                          : t,
                        s = a.getPoints(o),
                        l = 0;
                      l < s.length;
                      l++
                    ) {
                      var u = s[l];
                      (e && e.equals(u)) || (n.push(u), (e = u));
                    }
                  return (
                    this.autoClose &&
                      n.length > 1 &&
                      !n[n.length - 1].equals(n[0]) &&
                      n.push(n[0]),
                    n
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.curves = []);
                  for (var t = 0, r = e.curves.length; t < r; t++) {
                    var i = e.curves[t];
                    this.curves.push(i.clone());
                  }
                  return (this.autoClose = e.autoClose), this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = fi(ri(n.prototype), "toJSON", this).call(this);
                  (e.autoClose = this.autoClose), (e.curves = []);
                  for (var t = 0, r = this.curves.length; t < r; t++) {
                    var i = this.curves[t];
                    e.curves.push(i.toJSON());
                  }
                  return e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  fi(ri(n.prototype), "fromJSON", this).call(this, e),
                    (this.autoClose = e.autoClose),
                    (this.curves = []);
                  for (var t = 0, r = e.curves.length; t < r; t++) {
                    var i = e.curves[t];
                    this.curves.push(new $p[i.type]().fromJSON(i));
                  }
                  return this;
                },
              },
            ]),
            n
          );
        })(Lp),
        Zp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return (
              Kr(this, n),
              ((r = t.call(this)).type = "Path"),
              (r.currentPoint = new Us()),
              e && r.setFromPoints(e),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "setFromPoints",
                value: function (e) {
                  this.moveTo(e[0].x, e[0].y);
                  for (var t = 1, n = e.length; t < n; t++)
                    this.lineTo(e[t].x, e[t].y);
                  return this;
                },
              },
              {
                key: "moveTo",
                value: function (e, t) {
                  return this.currentPoint.set(e, t), this;
                },
              },
              {
                key: "lineTo",
                value: function (e, t) {
                  var n = new Vp(this.currentPoint.clone(), new Us(e, t));
                  return this.curves.push(n), this.currentPoint.set(e, t), this;
                },
              },
              {
                key: "quadraticCurveTo",
                value: function (e, t, n, r) {
                  var i = new Xp(
                    this.currentPoint.clone(),
                    new Us(e, t),
                    new Us(n, r)
                  );
                  return this.curves.push(i), this.currentPoint.set(n, r), this;
                },
              },
              {
                key: "bezierCurveTo",
                value: function (e, t, n, r, i, a) {
                  var o = new Gp(
                    this.currentPoint.clone(),
                    new Us(e, t),
                    new Us(n, r),
                    new Us(i, a)
                  );
                  return this.curves.push(o), this.currentPoint.set(i, a), this;
                },
              },
              {
                key: "splineThru",
                value: function (e) {
                  var t = [this.currentPoint.clone()].concat(e),
                    n = new Jp(t);
                  return (
                    this.curves.push(n),
                    this.currentPoint.copy(e[e.length - 1]),
                    this
                  );
                },
              },
              {
                key: "arc",
                value: function (e, t, n, r, i, a) {
                  var o = this.currentPoint.x,
                    s = this.currentPoint.y;
                  return this.absarc(e + o, t + s, n, r, i, a), this;
                },
              },
              {
                key: "absarc",
                value: function (e, t, n, r, i, a) {
                  return this.absellipse(e, t, n, n, r, i, a), this;
                },
              },
              {
                key: "ellipse",
                value: function (e, t, n, r, i, a, o, s) {
                  var l = this.currentPoint.x,
                    u = this.currentPoint.y;
                  return this.absellipse(e + l, t + u, n, r, i, a, o, s), this;
                },
              },
              {
                key: "absellipse",
                value: function (e, t, n, r, i, a, o, s) {
                  var l = new Rp(e, t, n, r, i, a, o, s);
                  if (this.curves.length > 0) {
                    var u = l.getPoint(0);
                    u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
                  }
                  this.curves.push(l);
                  var c = l.getPoint(1);
                  return this.currentPoint.copy(c), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    this.currentPoint.copy(e.currentPoint),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = fi(ri(n.prototype), "toJSON", this).call(this);
                  return (e.currentPoint = this.currentPoint.toArray()), e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "fromJSON", this).call(this, e),
                    this.currentPoint.fromArray(e.currentPoint),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Qp),
        Kp = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [new Us(0, 0.5), new Us(0.5, 0), new Us(0, -0.5)],
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 12,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2 * Math.PI;
            Kr(this, n),
              ((e = t.call(this)).type = "LatheGeometry"),
              (e.parameters = {
                points: r,
                segments: i,
                phiStart: a,
                phiLength: o,
              }),
              (i = Math.floor(i)),
              (o = zs(o, 0, 2 * Math.PI));
            for (
              var s = [],
                l = [],
                u = [],
                c = [],
                f = [],
                d = 1 / i,
                h = new yl(),
                p = new Us(),
                v = new yl(),
                m = new yl(),
                g = new yl(),
                y = 0,
                b = 0,
                x = 0;
              x <= r.length - 1;
              x++
            )
              switch (x) {
                case 0:
                  (y = r[x + 1].x - r[x].x),
                    (b = r[x + 1].y - r[x].y),
                    (v.x = 1 * b),
                    (v.y = -y),
                    (v.z = 0 * b),
                    g.copy(v),
                    v.normalize(),
                    c.push(v.x, v.y, v.z);
                  break;
                case r.length - 1:
                  c.push(g.x, g.y, g.z);
                  break;
                default:
                  (y = r[x + 1].x - r[x].x),
                    (b = r[x + 1].y - r[x].y),
                    (v.x = 1 * b),
                    (v.y = -y),
                    (v.z = 0 * b),
                    m.copy(v),
                    (v.x += g.x),
                    (v.y += g.y),
                    (v.z += g.z),
                    v.normalize(),
                    c.push(v.x, v.y, v.z),
                    g.copy(m);
              }
            for (var w = 0; w <= i; w++)
              for (
                var _ = a + w * d * o, S = Math.sin(_), M = Math.cos(_), E = 0;
                E <= r.length - 1;
                E++
              ) {
                (h.x = r[E].x * S),
                  (h.y = r[E].y),
                  (h.z = r[E].x * M),
                  l.push(h.x, h.y, h.z),
                  (p.x = w / i),
                  (p.y = E / (r.length - 1)),
                  u.push(p.x, p.y);
                var k = c[3 * E + 0] * S,
                  T = c[3 * E + 1],
                  C = c[3 * E + 0] * M;
                f.push(k, T, C);
              }
            for (var A = 0; A < i; A++)
              for (var P = 0; P < r.length - 1; P++) {
                var L = P + A * r.length,
                  R = L,
                  O = L + r.length,
                  z = L + r.length + 1,
                  D = L + 1;
                s.push(R, O, D), s.push(z, D, O);
              }
            return (
              e.setIndex(s),
              e.setAttribute("position", new qu(l, 3)),
              e.setAttribute("uv", new qu(u, 2)),
              e.setAttribute("normal", new qu(f, 3)),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.points, e.segments, e.phiStart, e.phiLength);
                },
              },
            ]),
            n
          );
        })(tc),
        ev = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 4,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8;
            Kr(this, n);
            var s = new Zp();
            return (
              s.absarc(0, -i / 2, r, 1.5 * Math.PI, 0),
              s.absarc(0, i / 2, r, 0, 0.5 * Math.PI),
              ((e = t.call(this, s.getPoints(a), o)).type = "CapsuleGeometry"),
              (e.parameters = {
                radius: r,
                height: i,
                capSegments: a,
                radialSegments: o,
              }),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radius,
                    e.length,
                    e.capSegments,
                    e.radialSegments
                  );
                },
              },
            ]),
            n
          );
        })(Kp),
        tv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 8,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2 * Math.PI;
            Kr(this, n),
              ((e = t.call(this)).type = "CircleGeometry"),
              (e.parameters = {
                radius: r,
                segments: i,
                thetaStart: a,
                thetaLength: o,
              }),
              (i = Math.max(3, i));
            var s = [],
              l = [],
              u = [],
              c = [],
              f = new yl(),
              d = new Us();
            l.push(0, 0, 0), u.push(0, 0, 1), c.push(0.5, 0.5);
            for (var h = 0, p = 3; h <= i; h++, p += 3) {
              var v = a + (h / i) * o;
              (f.x = r * Math.cos(v)),
                (f.y = r * Math.sin(v)),
                l.push(f.x, f.y, f.z),
                u.push(0, 0, 1),
                (d.x = (l[p] / r + 1) / 2),
                (d.y = (l[p + 1] / r + 1) / 2),
                c.push(d.x, d.y);
            }
            for (var m = 1; m <= i; m++) s.push(m, m + 1, 0);
            return (
              e.setIndex(s),
              e.setAttribute("position", new qu(l, 3)),
              e.setAttribute("normal", new qu(u, 3)),
              e.setAttribute("uv", new qu(c, 2)),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radius,
                    e.segments,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            n
          );
        })(tc),
        nv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 1,
              l =
                arguments.length > 5 && void 0 !== arguments[5] && arguments[5],
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : 0,
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : 2 * Math.PI;
            Kr(this, n),
              ((e = t.call(this)).type = "CylinderGeometry"),
              (e.parameters = {
                radiusTop: r,
                radiusBottom: i,
                height: a,
                radialSegments: o,
                heightSegments: s,
                openEnded: l,
                thetaStart: u,
                thetaLength: c,
              });
            var f = ai(e);
            (o = Math.floor(o)), (s = Math.floor(s));
            var d = [],
              h = [],
              p = [],
              v = [],
              m = 0,
              g = [],
              y = a / 2,
              b = 0;
            function x() {
              for (
                var e = new yl(), t = new yl(), n = 0, l = (i - r) / a, x = 0;
                x <= s;
                x++
              ) {
                for (
                  var w = [], _ = x / s, S = _ * (i - r) + r, M = 0;
                  M <= o;
                  M++
                ) {
                  var E = M / o,
                    k = E * c + u,
                    T = Math.sin(k),
                    C = Math.cos(k);
                  (t.x = S * T),
                    (t.y = -_ * a + y),
                    (t.z = S * C),
                    h.push(t.x, t.y, t.z),
                    e.set(T, l, C).normalize(),
                    p.push(e.x, e.y, e.z),
                    v.push(E, 1 - _),
                    w.push(m++);
                }
                g.push(w);
              }
              for (var A = 0; A < o; A++)
                for (var P = 0; P < s; P++) {
                  var L = g[P][A],
                    R = g[P + 1][A],
                    O = g[P + 1][A + 1],
                    z = g[P][A + 1];
                  d.push(L, R, z), d.push(R, O, z), (n += 6);
                }
              f.addGroup(b, n, 0), (b += n);
            }
            function w(e) {
              for (
                var t = m,
                  n = new Us(),
                  a = new yl(),
                  s = 0,
                  l = !0 === e ? r : i,
                  g = !0 === e ? 1 : -1,
                  x = 1;
                x <= o;
                x++
              )
                h.push(0, y * g, 0), p.push(0, g, 0), v.push(0.5, 0.5), m++;
              for (var w = m, _ = 0; _ <= o; _++) {
                var S = (_ / o) * c + u,
                  M = Math.cos(S),
                  E = Math.sin(S);
                (a.x = l * E),
                  (a.y = y * g),
                  (a.z = l * M),
                  h.push(a.x, a.y, a.z),
                  p.push(0, g, 0),
                  (n.x = 0.5 * M + 0.5),
                  (n.y = 0.5 * E * g + 0.5),
                  v.push(n.x, n.y),
                  m++;
              }
              for (var k = 0; k < o; k++) {
                var T = t + k,
                  C = w + k;
                !0 === e ? d.push(C, C + 1, T) : d.push(C + 1, C, T), (s += 3);
              }
              f.addGroup(b, s, !0 === e ? 1 : 2), (b += s);
            }
            return (
              x(),
              !1 === l && (r > 0 && w(!0), i > 0 && w(!1)),
              e.setIndex(d),
              e.setAttribute("position", new qu(h, 3)),
              e.setAttribute("normal", new qu(p, 3)),
              e.setAttribute("uv", new qu(v, 2)),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radiusTop,
                    e.radiusBottom,
                    e.height,
                    e.radialSegments,
                    e.heightSegments,
                    e.openEnded,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            n
          );
        })(tc),
        rv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 8,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 0,
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : 2 * Math.PI;
            return (
              Kr(this, n),
              ((e = t.call(this, 0, r, i, a, o, s, l, u)).type =
                "ConeGeometry"),
              (e.parameters = {
                radius: r,
                height: i,
                radialSegments: a,
                heightSegments: o,
                openEnded: s,
                thetaStart: l,
                thetaLength: u,
              }),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radius,
                    e.height,
                    e.radialSegments,
                    e.heightSegments,
                    e.openEnded,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            n
          );
        })(nv),
        iv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [],
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0;
            Kr(this, n),
              ((e = t.call(this)).type = "PolyhedronGeometry"),
              (e.parameters = {
                vertices: r,
                indices: i,
                radius: a,
                detail: o,
              });
            var s = [],
              l = [];
            function u(e) {
              for (
                var t = new yl(), n = new yl(), r = new yl(), a = 0;
                a < i.length;
                a += 3
              )
                v(i[a + 0], t), v(i[a + 1], n), v(i[a + 2], r), c(t, n, r, e);
            }
            function c(e, t, n, r) {
              for (var i = r + 1, a = [], o = 0; o <= i; o++) {
                a[o] = [];
                for (
                  var s = e.clone().lerp(n, o / i),
                    l = t.clone().lerp(n, o / i),
                    u = i - o,
                    c = 0;
                  c <= u;
                  c++
                )
                  a[o][c] = 0 === c && o === i ? s : s.clone().lerp(l, c / u);
              }
              for (var f = 0; f < i; f++)
                for (var d = 0; d < 2 * (i - f) - 1; d++) {
                  var h = Math.floor(d / 2);
                  d % 2 === 0
                    ? (p(a[f][h + 1]), p(a[f + 1][h]), p(a[f][h]))
                    : (p(a[f][h + 1]), p(a[f + 1][h + 1]), p(a[f + 1][h]));
                }
            }
            function f(e) {
              for (var t = new yl(), n = 0; n < s.length; n += 3)
                (t.x = s[n + 0]),
                  (t.y = s[n + 1]),
                  (t.z = s[n + 2]),
                  t.normalize().multiplyScalar(e),
                  (s[n + 0] = t.x),
                  (s[n + 1] = t.y),
                  (s[n + 2] = t.z);
            }
            function d() {
              for (var e = new yl(), t = 0; t < s.length; t += 3) {
                (e.x = s[t + 0]), (e.y = s[t + 1]), (e.z = s[t + 2]);
                var n = y(e) / 2 / Math.PI + 0.5,
                  r = b(e) / Math.PI + 0.5;
                l.push(n, 1 - r);
              }
              m(), h();
            }
            function h() {
              for (var e = 0; e < l.length; e += 6) {
                var t = l[e + 0],
                  n = l[e + 2],
                  r = l[e + 4],
                  i = Math.max(t, n, r),
                  a = Math.min(t, n, r);
                i > 0.9 &&
                  a < 0.1 &&
                  (t < 0.2 && (l[e + 0] += 1),
                  n < 0.2 && (l[e + 2] += 1),
                  r < 0.2 && (l[e + 4] += 1));
              }
            }
            function p(e) {
              s.push(e.x, e.y, e.z);
            }
            function v(e, t) {
              var n = 3 * e;
              (t.x = r[n + 0]), (t.y = r[n + 1]), (t.z = r[n + 2]);
            }
            function m() {
              for (
                var e = new yl(),
                  t = new yl(),
                  n = new yl(),
                  r = new yl(),
                  i = new Us(),
                  a = new Us(),
                  o = new Us(),
                  u = 0,
                  c = 0;
                u < s.length;
                u += 9, c += 6
              ) {
                e.set(s[u + 0], s[u + 1], s[u + 2]),
                  t.set(s[u + 3], s[u + 4], s[u + 5]),
                  n.set(s[u + 6], s[u + 7], s[u + 8]),
                  i.set(l[c + 0], l[c + 1]),
                  a.set(l[c + 2], l[c + 3]),
                  o.set(l[c + 4], l[c + 5]),
                  r.copy(e).add(t).add(n).divideScalar(3);
                var f = y(r);
                g(i, c + 0, e, f), g(a, c + 2, t, f), g(o, c + 4, n, f);
              }
            }
            function g(e, t, n, r) {
              r < 0 && 1 === e.x && (l[t] = e.x - 1),
                0 === n.x && 0 === n.z && (l[t] = r / 2 / Math.PI + 0.5);
            }
            function y(e) {
              return Math.atan2(e.z, -e.x);
            }
            function b(e) {
              return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z));
            }
            return (
              u(o),
              f(a),
              d(),
              e.setAttribute("position", new qu(s, 3)),
              e.setAttribute("normal", new qu(s.slice(), 3)),
              e.setAttribute("uv", new qu(l, 2)),
              0 === o ? e.computeVertexNormals() : e.normalizeNormals(),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.vertices, e.indices, e.radius, e.details);
                },
              },
            ]),
            n
          );
        })(tc),
        av = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Kr(this, n);
            var a = (1 + Math.sqrt(5)) / 2,
              o = 1 / a,
              s = [
                -1,
                -1,
                -1,
                -1,
                -1,
                1,
                -1,
                1,
                -1,
                -1,
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                1,
                1,
                1,
                -1,
                1,
                1,
                1,
                0,
                -o,
                -a,
                0,
                -o,
                a,
                0,
                o,
                -a,
                0,
                o,
                a,
                -o,
                -a,
                0,
                -o,
                a,
                0,
                o,
                -a,
                0,
                o,
                a,
                0,
                -a,
                0,
                -o,
                a,
                0,
                -o,
                -a,
                0,
                o,
                a,
                0,
                o,
              ],
              l = [
                3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15,
                17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0,
                12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2,
                16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4,
                14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19,
                5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9,
              ];
            return (
              ((e = t.call(this, s, l, r, i)).type = "DodecahedronGeometry"),
              (e.parameters = { radius: r, detail: i }),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.radius, e.detail);
                },
              },
            ]),
            n
          );
        })(iv),
        ov = new yl(),
        sv = new yl(),
        lv = new yl(),
        uv = new Lu(),
        cv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            if (
              (Kr(this, n),
              ((e = t.call(this)).type = "EdgesGeometry"),
              (e.parameters = { geometry: r, thresholdAngle: i }),
              null !== r)
            ) {
              for (
                var a = 4,
                  o = Math.pow(10, a),
                  s = Math.cos(Ls * i),
                  l = r.getIndex(),
                  u = r.getAttribute("position"),
                  c = l ? l.count : u.count,
                  f = [0, 0, 0],
                  d = ["a", "b", "c"],
                  h = new Array(3),
                  p = {},
                  v = [],
                  m = 0;
                m < c;
                m += 3
              ) {
                l
                  ? ((f[0] = l.getX(m)),
                    (f[1] = l.getX(m + 1)),
                    (f[2] = l.getX(m + 2)))
                  : ((f[0] = m), (f[1] = m + 1), (f[2] = m + 2));
                var g = uv.a,
                  y = uv.b,
                  b = uv.c;
                if (
                  (g.fromBufferAttribute(u, f[0]),
                  y.fromBufferAttribute(u, f[1]),
                  b.fromBufferAttribute(u, f[2]),
                  uv.getNormal(lv),
                  (h[0] = ""
                    .concat(Math.round(g.x * o), ",")
                    .concat(Math.round(g.y * o), ",")
                    .concat(Math.round(g.z * o))),
                  (h[1] = ""
                    .concat(Math.round(y.x * o), ",")
                    .concat(Math.round(y.y * o), ",")
                    .concat(Math.round(y.z * o))),
                  (h[2] = ""
                    .concat(Math.round(b.x * o), ",")
                    .concat(Math.round(b.y * o), ",")
                    .concat(Math.round(b.z * o))),
                  h[0] !== h[1] && h[1] !== h[2] && h[2] !== h[0])
                )
                  for (var x = 0; x < 3; x++) {
                    var w = (x + 1) % 3,
                      _ = h[x],
                      S = h[w],
                      M = uv[d[x]],
                      E = uv[d[w]],
                      k = "".concat(_, "_").concat(S),
                      T = "".concat(S, "_").concat(_);
                    T in p && p[T]
                      ? (lv.dot(p[T].normal) <= s &&
                          (v.push(M.x, M.y, M.z), v.push(E.x, E.y, E.z)),
                        (p[T] = null))
                      : k in p ||
                        (p[k] = {
                          index0: f[x],
                          index1: f[w],
                          normal: lv.clone(),
                        });
                  }
              }
              for (var C in p)
                if (p[C]) {
                  var A = p[C],
                    P = A.index0,
                    L = A.index1;
                  ov.fromBufferAttribute(u, P),
                    sv.fromBufferAttribute(u, L),
                    v.push(ov.x, ov.y, ov.z),
                    v.push(sv.x, sv.y, sv.z);
                }
              e.setAttribute("position", new qu(v, 3));
            }
            return e;
          }
          return ti(n);
        })(tc),
        fv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return (
              Kr(this, n),
              ((r = t.call(this, e)).uuid = Os()),
              (r.type = "Shape"),
              (r.holes = []),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "getPointsHoles",
                value: function (e) {
                  for (var t = [], n = 0, r = this.holes.length; n < r; n++)
                    t[n] = this.holes[n].getPoints(e);
                  return t;
                },
              },
              {
                key: "extractPoints",
                value: function (e) {
                  return {
                    shape: this.getPoints(e),
                    holes: this.getPointsHoles(e),
                  };
                },
              },
              {
                key: "copy",
                value: function (e) {
                  fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.holes = []);
                  for (var t = 0, r = e.holes.length; t < r; t++) {
                    var i = e.holes[t];
                    this.holes.push(i.clone());
                  }
                  return this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = fi(ri(n.prototype), "toJSON", this).call(this);
                  (e.uuid = this.uuid), (e.holes = []);
                  for (var t = 0, r = this.holes.length; t < r; t++) {
                    var i = this.holes[t];
                    e.holes.push(i.toJSON());
                  }
                  return e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  fi(ri(n.prototype), "fromJSON", this).call(this, e),
                    (this.uuid = e.uuid),
                    (this.holes = []);
                  for (var t = 0, r = e.holes.length; t < r; t++) {
                    var i = e.holes[t];
                    this.holes.push(new Zp().fromJSON(i));
                  }
                  return this;
                },
              },
            ]),
            n
          );
        })(Zp),
        dv = function (e, t) {
          var n,
            r,
            i,
            a,
            o,
            s,
            l,
            u =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 2,
            c = t && t.length,
            f = c ? t[0] * u : e.length,
            d = hv(e, 0, f, u, !0),
            h = [];
          if (!d || d.next === d.prev) return h;
          if ((c && (d = xv(e, t, d, u)), e.length > 80 * u)) {
            (n = i = e[0]), (r = a = e[1]);
            for (var p = u; p < f; p += u)
              (o = e[p]) < n && (n = o),
                (s = e[p + 1]) < r && (r = s),
                o > i && (i = o),
                s > a && (a = s);
            l = 0 !== (l = Math.max(i - n, a - r)) ? 1 / l : 0;
          }
          return vv(d, h, u, n, r, l), h;
        };
      function hv(e, t, n, r, i) {
        var a, o;
        if (
          i ===
          (function (e, t, n, r) {
            for (var i = 0, a = t, o = n - r; a < n; a += r)
              (i += (e[o] - e[a]) * (e[a + 1] + e[o + 1])), (o = a);
            return i;
          })(e, t, n, r) >
            0
        )
          for (a = t; a < n; a += r) o = Dv(a, e[a], e[a + 1], o);
        else for (a = n - r; a >= t; a -= r) o = Dv(a, e[a], e[a + 1], o);
        return o && Av(o, o.next) && (Iv(o), (o = o.next)), o;
      }
      function pv(e, t) {
        if (!e) return e;
        t || (t = e);
        var n,
          r = e;
        do {
          if (
            ((n = !1),
            r.steiner || (!Av(r, r.next) && 0 !== Cv(r.prev, r, r.next)))
          )
            r = r.next;
          else {
            if ((Iv(r), (r = t = r.prev) === r.next)) break;
            n = !0;
          }
        } while (n || r !== t);
        return t;
      }
      function vv(e, t, n, r, i, a, o) {
        if (e) {
          !o &&
            a &&
            (function (e, t, n, r) {
              var i = e;
              do {
                null === i.z && (i.z = Mv(i.x, i.y, t, n, r)),
                  (i.prevZ = i.prev),
                  (i.nextZ = i.next),
                  (i = i.next);
              } while (i !== e);
              (i.prevZ.nextZ = null),
                (i.prevZ = null),
                (function (e) {
                  var t,
                    n,
                    r,
                    i,
                    a,
                    o,
                    s,
                    l,
                    u = 1;
                  do {
                    for (n = e, e = null, a = null, o = 0; n; ) {
                      for (
                        o++, r = n, s = 0, t = 0;
                        t < u && (s++, (r = r.nextZ));
                        t++
                      );
                      for (l = u; s > 0 || (l > 0 && r); )
                        0 !== s && (0 === l || !r || n.z <= r.z)
                          ? ((i = n), (n = n.nextZ), s--)
                          : ((i = r), (r = r.nextZ), l--),
                          a ? (a.nextZ = i) : (e = i),
                          (i.prevZ = a),
                          (a = i);
                      n = r;
                    }
                    (a.nextZ = null), (u *= 2);
                  } while (o > 1);
                })(i);
            })(e, r, i, a);
          for (var s, l, u = e; e.prev !== e.next; )
            if (((s = e.prev), (l = e.next), a ? gv(e, r, i, a) : mv(e)))
              t.push(s.i / n),
                t.push(e.i / n),
                t.push(l.i / n),
                Iv(e),
                (e = l.next),
                (u = l.next);
            else if ((e = l) === u) {
              o
                ? 1 === o
                  ? vv((e = yv(pv(e), t, n)), t, n, r, i, a, 2)
                  : 2 === o && bv(e, t, n, r, i, a)
                : vv(pv(e), t, n, r, i, a, 1);
              break;
            }
        }
      }
      function mv(e) {
        var t = e.prev,
          n = e,
          r = e.next;
        if (Cv(t, n, r) >= 0) return !1;
        for (var i = e.next.next; i !== e.prev; ) {
          if (
            kv(t.x, t.y, n.x, n.y, r.x, r.y, i.x, i.y) &&
            Cv(i.prev, i, i.next) >= 0
          )
            return !1;
          i = i.next;
        }
        return !0;
      }
      function gv(e, t, n, r) {
        var i = e.prev,
          a = e,
          o = e.next;
        if (Cv(i, a, o) >= 0) return !1;
        for (
          var s = i.x < a.x ? (i.x < o.x ? i.x : o.x) : a.x < o.x ? a.x : o.x,
            l = i.y < a.y ? (i.y < o.y ? i.y : o.y) : a.y < o.y ? a.y : o.y,
            u = i.x > a.x ? (i.x > o.x ? i.x : o.x) : a.x > o.x ? a.x : o.x,
            c = i.y > a.y ? (i.y > o.y ? i.y : o.y) : a.y > o.y ? a.y : o.y,
            f = Mv(s, l, t, n, r),
            d = Mv(u, c, t, n, r),
            h = e.prevZ,
            p = e.nextZ;
          h && h.z >= f && p && p.z <= d;

        ) {
          if (
            h !== e.prev &&
            h !== e.next &&
            kv(i.x, i.y, a.x, a.y, o.x, o.y, h.x, h.y) &&
            Cv(h.prev, h, h.next) >= 0
          )
            return !1;
          if (
            ((h = h.prevZ),
            p !== e.prev &&
              p !== e.next &&
              kv(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
              Cv(p.prev, p, p.next) >= 0)
          )
            return !1;
          p = p.nextZ;
        }
        for (; h && h.z >= f; ) {
          if (
            h !== e.prev &&
            h !== e.next &&
            kv(i.x, i.y, a.x, a.y, o.x, o.y, h.x, h.y) &&
            Cv(h.prev, h, h.next) >= 0
          )
            return !1;
          h = h.prevZ;
        }
        for (; p && p.z <= d; ) {
          if (
            p !== e.prev &&
            p !== e.next &&
            kv(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
            Cv(p.prev, p, p.next) >= 0
          )
            return !1;
          p = p.nextZ;
        }
        return !0;
      }
      function yv(e, t, n) {
        var r = e;
        do {
          var i = r.prev,
            a = r.next.next;
          !Av(i, a) &&
            Pv(i, r, r.next, a) &&
            Ov(i, a) &&
            Ov(a, i) &&
            (t.push(i.i / n),
            t.push(r.i / n),
            t.push(a.i / n),
            Iv(r),
            Iv(r.next),
            (r = e = a)),
            (r = r.next);
        } while (r !== e);
        return pv(r);
      }
      function bv(e, t, n, r, i, a) {
        var o = e;
        do {
          for (var s = o.next.next; s !== o.prev; ) {
            if (o.i !== s.i && Tv(o, s)) {
              var l = zv(o, s);
              return (
                (o = pv(o, o.next)),
                (l = pv(l, l.next)),
                vv(o, t, n, r, i, a),
                void vv(l, t, n, r, i, a)
              );
            }
            s = s.next;
          }
          o = o.next;
        } while (o !== e);
      }
      function xv(e, t, n, r) {
        var i,
          a,
          o,
          s = [];
        for (i = 0, a = t.length; i < a; i++)
          (o = hv(e, t[i] * r, i < a - 1 ? t[i + 1] * r : e.length, r, !1)) ===
            o.next && (o.steiner = !0),
            s.push(Ev(o));
        for (s.sort(wv), i = 0; i < s.length; i++)
          _v(s[i], n), (n = pv(n, n.next));
        return n;
      }
      function wv(e, t) {
        return e.x - t.x;
      }
      function _v(e, t) {
        if (
          ((t = (function (e, t) {
            var n,
              r = t,
              i = e.x,
              a = e.y,
              o = -1 / 0;
            do {
              if (a <= r.y && a >= r.next.y && r.next.y !== r.y) {
                var s = r.x + ((a - r.y) * (r.next.x - r.x)) / (r.next.y - r.y);
                if (s <= i && s > o) {
                  if (((o = s), s === i)) {
                    if (a === r.y) return r;
                    if (a === r.next.y) return r.next;
                  }
                  n = r.x < r.next.x ? r : r.next;
                }
              }
              r = r.next;
            } while (r !== t);
            if (!n) return null;
            if (i === o) return n;
            var l,
              u = n,
              c = n.x,
              f = n.y,
              d = 1 / 0;
            r = n;
            do {
              i >= r.x &&
                r.x >= c &&
                i !== r.x &&
                kv(a < f ? i : o, a, c, f, a < f ? o : i, a, r.x, r.y) &&
                ((l = Math.abs(a - r.y) / (i - r.x)),
                Ov(r, e) &&
                  (l < d ||
                    (l === d && (r.x > n.x || (r.x === n.x && Sv(n, r))))) &&
                  ((n = r), (d = l))),
                (r = r.next);
            } while (r !== u);
            return n;
          })(e, t)),
          t)
        ) {
          var n = zv(t, e);
          pv(t, t.next), pv(n, n.next);
        }
      }
      function Sv(e, t) {
        return Cv(e.prev, e, t.prev) < 0 && Cv(t.next, e, e.next) < 0;
      }
      function Mv(e, t, n, r, i) {
        return (
          (e =
            1431655765 &
            ((e =
              858993459 &
              ((e =
                252645135 &
                ((e = 16711935 & ((e = 32767 * (e - n) * i) | (e << 8))) |
                  (e << 4))) |
                (e << 2))) |
              (e << 1))) |
          ((t =
            1431655765 &
            ((t =
              858993459 &
              ((t =
                252645135 &
                ((t = 16711935 & ((t = 32767 * (t - r) * i) | (t << 8))) |
                  (t << 4))) |
                (t << 2))) |
              (t << 1))) <<
            1)
        );
      }
      function Ev(e) {
        var t = e,
          n = e;
        do {
          (t.x < n.x || (t.x === n.x && t.y < n.y)) && (n = t), (t = t.next);
        } while (t !== e);
        return n;
      }
      function kv(e, t, n, r, i, a, o, s) {
        return (
          (i - o) * (t - s) - (e - o) * (a - s) >= 0 &&
          (e - o) * (r - s) - (n - o) * (t - s) >= 0 &&
          (n - o) * (a - s) - (i - o) * (r - s) >= 0
        );
      }
      function Tv(e, t) {
        return (
          e.next.i !== t.i &&
          e.prev.i !== t.i &&
          !(function (e, t) {
            var n = e;
            do {
              if (
                n.i !== e.i &&
                n.next.i !== e.i &&
                n.i !== t.i &&
                n.next.i !== t.i &&
                Pv(n, n.next, e, t)
              )
                return !0;
              n = n.next;
            } while (n !== e);
            return !1;
          })(e, t) &&
          ((Ov(e, t) &&
            Ov(t, e) &&
            (function (e, t) {
              var n = e,
                r = !1,
                i = (e.x + t.x) / 2,
                a = (e.y + t.y) / 2;
              do {
                n.y > a !== n.next.y > a &&
                  n.next.y !== n.y &&
                  i < ((n.next.x - n.x) * (a - n.y)) / (n.next.y - n.y) + n.x &&
                  (r = !r),
                  (n = n.next);
              } while (n !== e);
              return r;
            })(e, t) &&
            (Cv(e.prev, e, t.prev) || Cv(e, t.prev, t))) ||
            (Av(e, t) &&
              Cv(e.prev, e, e.next) > 0 &&
              Cv(t.prev, t, t.next) > 0))
        );
      }
      function Cv(e, t, n) {
        return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y);
      }
      function Av(e, t) {
        return e.x === t.x && e.y === t.y;
      }
      function Pv(e, t, n, r) {
        var i = Rv(Cv(e, t, n)),
          a = Rv(Cv(e, t, r)),
          o = Rv(Cv(n, r, e)),
          s = Rv(Cv(n, r, t));
        return (
          (i !== a && o !== s) ||
          !(0 !== i || !Lv(e, n, t)) ||
          !(0 !== a || !Lv(e, r, t)) ||
          !(0 !== o || !Lv(n, e, r)) ||
          !(0 !== s || !Lv(n, t, r))
        );
      }
      function Lv(e, t, n) {
        return (
          t.x <= Math.max(e.x, n.x) &&
          t.x >= Math.min(e.x, n.x) &&
          t.y <= Math.max(e.y, n.y) &&
          t.y >= Math.min(e.y, n.y)
        );
      }
      function Rv(e) {
        return e > 0 ? 1 : e < 0 ? -1 : 0;
      }
      function Ov(e, t) {
        return Cv(e.prev, e, e.next) < 0
          ? Cv(e, t, e.next) >= 0 && Cv(e, e.prev, t) >= 0
          : Cv(e, t, e.prev) < 0 || Cv(e, e.next, t) < 0;
      }
      function zv(e, t) {
        var n = new Nv(e.i, e.x, e.y),
          r = new Nv(t.i, t.x, t.y),
          i = e.next,
          a = t.prev;
        return (
          (e.next = t),
          (t.prev = e),
          (n.next = i),
          (i.prev = n),
          (r.next = n),
          (n.prev = r),
          (a.next = r),
          (r.prev = a),
          r
        );
      }
      function Dv(e, t, n, r) {
        var i = new Nv(e, t, n);
        return (
          r
            ? ((i.next = r.next), (i.prev = r), (r.next.prev = i), (r.next = i))
            : ((i.prev = i), (i.next = i)),
          i
        );
      }
      function Iv(e) {
        (e.next.prev = e.prev),
          (e.prev.next = e.next),
          e.prevZ && (e.prevZ.nextZ = e.nextZ),
          e.nextZ && (e.nextZ.prevZ = e.prevZ);
      }
      function Nv(e, t, n) {
        (this.i = e),
          (this.x = t),
          (this.y = n),
          (this.prev = null),
          (this.next = null),
          (this.z = null),
          (this.prevZ = null),
          (this.nextZ = null),
          (this.steiner = !1);
      }
      var Fv = (function () {
        function e() {
          Kr(this, e);
        }
        return (
          ti(e, null, [
            {
              key: "area",
              value: function (e) {
                for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++)
                  n += e[r].x * e[i].y - e[i].x * e[r].y;
                return 0.5 * n;
              },
            },
            {
              key: "isClockWise",
              value: function (t) {
                return e.area(t) < 0;
              },
            },
            {
              key: "triangulateShape",
              value: function (e, t) {
                var n = [],
                  r = [],
                  i = [];
                Bv(e), Hv(n, e);
                var a = e.length;
                t.forEach(Bv);
                for (var o = 0; o < t.length; o++)
                  r.push(a), (a += t[o].length), Hv(n, t[o]);
                for (var s = dv(n, r), l = 0; l < s.length; l += 3)
                  i.push(s.slice(l, l + 3));
                return i;
              },
            },
          ]),
          e
        );
      })();
      function Bv(e) {
        var t = e.length;
        t > 2 && e[t - 1].equals(e[0]) && e.pop();
      }
      function Hv(e, t) {
        for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y);
      }
      var Uv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new fv([
                      new Us(0.5, 0.5),
                      new Us(-0.5, 0.5),
                      new Us(-0.5, -0.5),
                      new Us(0.5, -0.5),
                    ]),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
            Kr(this, n),
              ((e = t.call(this)).type = "ExtrudeGeometry"),
              (e.parameters = { shapes: r, options: i }),
              (r = Array.isArray(r) ? r : [r]);
            for (
              var a = ai(e), o = [], s = [], l = 0, u = r.length;
              l < u;
              l++
            ) {
              var c = r[l];
              f(c);
            }
            function f(e) {
              var t = [],
                n = void 0 !== i.curveSegments ? i.curveSegments : 12,
                r = void 0 !== i.steps ? i.steps : 1,
                l = void 0 !== i.depth ? i.depth : 1,
                u = void 0 === i.bevelEnabled || i.bevelEnabled,
                c = void 0 !== i.bevelThickness ? i.bevelThickness : 0.2,
                f = void 0 !== i.bevelSize ? i.bevelSize : c - 0.1,
                d = void 0 !== i.bevelOffset ? i.bevelOffset : 0,
                h = void 0 !== i.bevelSegments ? i.bevelSegments : 3,
                p = i.extrudePath,
                v = void 0 !== i.UVGenerator ? i.UVGenerator : jv;
              void 0 !== i.amount &&
                (console.warn(
                  "THREE.ExtrudeBufferGeometry: amount has been renamed to depth."
                ),
                (l = i.amount));
              var m,
                g,
                y,
                b,
                x,
                w = !1;
              p &&
                ((m = p.getSpacedPoints(r)),
                (w = !0),
                (u = !1),
                (g = p.computeFrenetFrames(r, !1)),
                (y = new yl()),
                (b = new yl()),
                (x = new yl())),
                u || ((h = 0), (c = 0), (f = 0), (d = 0));
              var _ = e.extractPoints(n),
                S = _.shape,
                M = _.holes;
              if (!Fv.isClockWise(S)) {
                S = S.reverse();
                for (var E = 0, k = M.length; E < k; E++) {
                  var T = M[E];
                  Fv.isClockWise(T) && (M[E] = T.reverse());
                }
              }
              for (
                var C = Fv.triangulateShape(S, M), A = S, P = 0, L = M.length;
                P < L;
                P++
              ) {
                var R = M[P];
                S = S.concat(R);
              }
              function O(e, t, n) {
                return (
                  t ||
                    console.error("THREE.ExtrudeGeometry: vec does not exist"),
                  t.clone().multiplyScalar(n).add(e)
                );
              }
              var z = S.length,
                D = C.length;
              function I(e, t, n) {
                var r,
                  i,
                  a,
                  o = e.x - t.x,
                  s = e.y - t.y,
                  l = n.x - e.x,
                  u = n.y - e.y,
                  c = o * o + s * s,
                  f = o * u - s * l;
                if (Math.abs(f) > Number.EPSILON) {
                  var d = Math.sqrt(c),
                    h = Math.sqrt(l * l + u * u),
                    p = t.x - s / d,
                    v = t.y + o / d,
                    m =
                      ((n.x - u / h - p) * u - (n.y + l / h - v) * l) /
                      (o * u - s * l),
                    g = (r = p + o * m - e.x) * r + (i = v + s * m - e.y) * i;
                  if (g <= 2) return new Us(r, i);
                  a = Math.sqrt(g / 2);
                } else {
                  var y = !1;
                  o > Number.EPSILON
                    ? l > Number.EPSILON && (y = !0)
                    : o < -Number.EPSILON
                    ? l < -Number.EPSILON && (y = !0)
                    : Math.sign(s) === Math.sign(u) && (y = !0),
                    y
                      ? ((r = -s), (i = o), (a = Math.sqrt(c)))
                      : ((r = o), (i = s), (a = Math.sqrt(c / 2)));
                }
                return new Us(r / a, i / a);
              }
              for (
                var N = [], F = 0, B = A.length, H = B - 1, U = F + 1;
                F < B;
                F++, H++, U++
              )
                H === B && (H = 0),
                  U === B && (U = 0),
                  (N[F] = I(A[F], A[H], A[U]));
              for (
                var j, G = [], W = N.concat(), V = 0, q = M.length;
                V < q;
                V++
              ) {
                var X = M[V];
                j = [];
                for (
                  var Y = 0, J = X.length, $ = J - 1, Q = Y + 1;
                  Y < J;
                  Y++, $++, Q++
                )
                  $ === J && ($ = 0),
                    Q === J && (Q = 0),
                    (j[Y] = I(X[Y], X[$], X[Q]));
                G.push(j), (W = W.concat(j));
              }
              for (var Z = 0; Z < h; Z++) {
                for (
                  var K = Z / h,
                    ee = c * Math.cos((K * Math.PI) / 2),
                    te = f * Math.sin((K * Math.PI) / 2) + d,
                    ne = 0,
                    re = A.length;
                  ne < re;
                  ne++
                ) {
                  var ie = O(A[ne], N[ne], te);
                  Le(ie.x, ie.y, -ee);
                }
                for (var ae = 0, oe = M.length; ae < oe; ae++) {
                  var se = M[ae];
                  j = G[ae];
                  for (var le = 0, ue = se.length; le < ue; le++) {
                    var ce = O(se[le], j[le], te);
                    Le(ce.x, ce.y, -ee);
                  }
                }
              }
              for (var fe = f + d, de = 0; de < z; de++) {
                var he = u ? O(S[de], W[de], fe) : S[de];
                w
                  ? (b.copy(g.normals[0]).multiplyScalar(he.x),
                    y.copy(g.binormals[0]).multiplyScalar(he.y),
                    x.copy(m[0]).add(b).add(y),
                    Le(x.x, x.y, x.z))
                  : Le(he.x, he.y, 0);
              }
              for (var pe = 1; pe <= r; pe++)
                for (var ve = 0; ve < z; ve++) {
                  var me = u ? O(S[ve], W[ve], fe) : S[ve];
                  w
                    ? (b.copy(g.normals[pe]).multiplyScalar(me.x),
                      y.copy(g.binormals[pe]).multiplyScalar(me.y),
                      x.copy(m[pe]).add(b).add(y),
                      Le(x.x, x.y, x.z))
                    : Le(me.x, me.y, (l / r) * pe);
                }
              for (var ge = h - 1; ge >= 0; ge--) {
                for (
                  var ye = ge / h,
                    be = c * Math.cos((ye * Math.PI) / 2),
                    xe = f * Math.sin((ye * Math.PI) / 2) + d,
                    we = 0,
                    _e = A.length;
                  we < _e;
                  we++
                ) {
                  var Se = O(A[we], N[we], xe);
                  Le(Se.x, Se.y, l + be);
                }
                for (var Me = 0, Ee = M.length; Me < Ee; Me++) {
                  var ke = M[Me];
                  j = G[Me];
                  for (var Te = 0, Ce = ke.length; Te < Ce; Te++) {
                    var Ae = O(ke[Te], j[Te], xe);
                    w
                      ? Le(Ae.x, Ae.y + m[r - 1].y, m[r - 1].x + be)
                      : Le(Ae.x, Ae.y, l + be);
                  }
                }
              }
              function Pe(e, t) {
                for (var n = e.length; --n >= 0; ) {
                  var i = n,
                    a = n - 1;
                  a < 0 && (a = e.length - 1);
                  for (var o = 0, s = r + 2 * h; o < s; o++) {
                    var l = z * o,
                      u = z * (o + 1);
                    Oe(t + i + l, t + a + l, t + a + u, t + i + u);
                  }
                }
              }
              function Le(e, n, r) {
                t.push(e), t.push(n), t.push(r);
              }
              function Re(e, t, n) {
                ze(e), ze(t), ze(n);
                var r = o.length / 3,
                  i = v.generateTopUV(a, o, r - 3, r - 2, r - 1);
                De(i[0]), De(i[1]), De(i[2]);
              }
              function Oe(e, t, n, r) {
                ze(e), ze(t), ze(r), ze(t), ze(n), ze(r);
                var i = o.length / 3,
                  s = v.generateSideWallUV(a, o, i - 6, i - 3, i - 2, i - 1);
                De(s[0]), De(s[1]), De(s[3]), De(s[1]), De(s[2]), De(s[3]);
              }
              function ze(e) {
                o.push(t[3 * e + 0]),
                  o.push(t[3 * e + 1]),
                  o.push(t[3 * e + 2]);
              }
              function De(e) {
                s.push(e.x), s.push(e.y);
              }
              !(function () {
                var e = o.length / 3;
                if (u) {
                  for (var t = 0, n = z * t, i = 0; i < D; i++) {
                    var s = C[i];
                    Re(s[2] + n, s[1] + n, s[0] + n);
                  }
                  n = z * (t = r + 2 * h);
                  for (var l = 0; l < D; l++) {
                    var c = C[l];
                    Re(c[0] + n, c[1] + n, c[2] + n);
                  }
                } else {
                  for (var f = 0; f < D; f++) {
                    var d = C[f];
                    Re(d[2], d[1], d[0]);
                  }
                  for (var p = 0; p < D; p++) {
                    var v = C[p];
                    Re(v[0] + z * r, v[1] + z * r, v[2] + z * r);
                  }
                }
                a.addGroup(e, o.length / 3 - e, 0);
              })(),
                (function () {
                  var e = o.length / 3,
                    t = 0;
                  Pe(A, t), (t += A.length);
                  for (var n = 0, r = M.length; n < r; n++) {
                    var i = M[n];
                    Pe(i, t), (t += i.length);
                  }
                  a.addGroup(e, o.length / 3 - e, 1);
                })();
            }
            return (
              e.setAttribute("position", new qu(o, 3)),
              e.setAttribute("uv", new qu(s, 2)),
              e.computeVertexNormals(),
              e
            );
          }
          return (
            ti(
              n,
              [
                {
                  key: "toJSON",
                  value: function () {
                    var e = fi(ri(n.prototype), "toJSON", this).call(this);
                    return (function (e, t, n) {
                      if (((n.shapes = []), Array.isArray(e)))
                        for (var r = 0, i = e.length; r < i; r++) {
                          var a = e[r];
                          n.shapes.push(a.uuid);
                        }
                      else n.shapes.push(e.uuid);
                      void 0 !== t.extrudePath &&
                        (n.options.extrudePath = t.extrudePath.toJSON());
                      return n;
                    })(this.parameters.shapes, this.parameters.options, e);
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e, t) {
                    for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                      var o = t[e.shapes[i]];
                      r.push(o);
                    }
                    var s = e.options.extrudePath;
                    return (
                      void 0 !== s &&
                        (e.options.extrudePath = new $p[s.type]().fromJSON(s)),
                      new n(r, e.options)
                    );
                  },
                },
              ]
            ),
            n
          );
        })(tc),
        jv = {
          generateTopUV: function (e, t, n, r, i) {
            var a = t[3 * n],
              o = t[3 * n + 1],
              s = t[3 * r],
              l = t[3 * r + 1],
              u = t[3 * i],
              c = t[3 * i + 1];
            return [new Us(a, o), new Us(s, l), new Us(u, c)];
          },
          generateSideWallUV: function (e, t, n, r, i, a) {
            var o = t[3 * n],
              s = t[3 * n + 1],
              l = t[3 * n + 2],
              u = t[3 * r],
              c = t[3 * r + 1],
              f = t[3 * r + 2],
              d = t[3 * i],
              h = t[3 * i + 1],
              p = t[3 * i + 2],
              v = t[3 * a],
              m = t[3 * a + 1],
              g = t[3 * a + 2];
            return Math.abs(s - c) < Math.abs(o - u)
              ? [
                  new Us(o, 1 - l),
                  new Us(u, 1 - f),
                  new Us(d, 1 - p),
                  new Us(v, 1 - g),
                ]
              : [
                  new Us(s, 1 - l),
                  new Us(c, 1 - f),
                  new Us(h, 1 - p),
                  new Us(m, 1 - g),
                ];
          },
        };
      var Gv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Kr(this, n);
            var a = (1 + Math.sqrt(5)) / 2,
              o = [
                -1,
                a,
                0,
                1,
                a,
                0,
                -1,
                -a,
                0,
                1,
                -a,
                0,
                0,
                -1,
                a,
                0,
                1,
                a,
                0,
                -1,
                -a,
                0,
                1,
                -a,
                a,
                0,
                -1,
                a,
                0,
                1,
                -a,
                0,
                -1,
                -a,
                0,
                1,
              ],
              s = [
                0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11,
                4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3,
                6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1,
              ];
            return (
              ((e = t.call(this, o, s, r, i)).type = "IcosahedronGeometry"),
              (e.parameters = { radius: r, detail: i }),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.radius, e.detail);
                },
              },
            ]),
            n
          );
        })(iv),
        Wv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Kr(this, n);
            var a = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
              o = [
                0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4,
                1, 4, 2,
              ];
            return (
              ((e = t.call(this, a, o, r, i)).type = "OctahedronGeometry"),
              (e.parameters = { radius: r, detail: i }),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.radius, e.detail);
                },
              },
            ]),
            n
          );
        })(iv),
        Vv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0.5,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 8,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2 * Math.PI;
            Kr(this, n),
              ((e = t.call(this)).type = "RingGeometry"),
              (e.parameters = {
                innerRadius: r,
                outerRadius: i,
                thetaSegments: a,
                phiSegments: o,
                thetaStart: s,
                thetaLength: l,
              }),
              (a = Math.max(3, a));
            for (
              var u = [],
                c = [],
                f = [],
                d = [],
                h = r,
                p = (i - r) / (o = Math.max(1, o)),
                v = new yl(),
                m = new Us(),
                g = 0;
              g <= o;
              g++
            ) {
              for (var y = 0; y <= a; y++) {
                var b = s + (y / a) * l;
                (v.x = h * Math.cos(b)),
                  (v.y = h * Math.sin(b)),
                  c.push(v.x, v.y, v.z),
                  f.push(0, 0, 1),
                  (m.x = (v.x / i + 1) / 2),
                  (m.y = (v.y / i + 1) / 2),
                  d.push(m.x, m.y);
              }
              h += p;
            }
            for (var x = 0; x < o; x++)
              for (var w = x * (a + 1), _ = 0; _ < a; _++) {
                var S = _ + w,
                  M = S,
                  E = S + a + 1,
                  k = S + a + 2,
                  T = S + 1;
                u.push(M, E, T), u.push(E, k, T);
              }
            return (
              e.setIndex(u),
              e.setAttribute("position", new qu(c, 3)),
              e.setAttribute("normal", new qu(f, 3)),
              e.setAttribute("uv", new qu(d, 2)),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.innerRadius,
                    e.outerRadius,
                    e.thetaSegments,
                    e.phiSegments,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            n
          );
        })(tc),
        qv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new fv([
                      new Us(0, 0.5),
                      new Us(-0.5, -0.5),
                      new Us(0.5, -0.5),
                    ]),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 12;
            Kr(this, n),
              ((e = t.call(this)).type = "ShapeGeometry"),
              (e.parameters = { shapes: r, curveSegments: i });
            var a = [],
              o = [],
              s = [],
              l = [],
              u = 0,
              c = 0;
            if (!1 === Array.isArray(r)) d(r);
            else
              for (var f = 0; f < r.length; f++)
                d(r[f]), e.addGroup(u, c, f), (u += c), (c = 0);
            function d(e) {
              var t = o.length / 3,
                n = e.extractPoints(i),
                r = n.shape,
                u = n.holes;
              !1 === Fv.isClockWise(r) && (r = r.reverse());
              for (var f = 0, d = u.length; f < d; f++) {
                var h = u[f];
                !0 === Fv.isClockWise(h) && (u[f] = h.reverse());
              }
              for (
                var p = Fv.triangulateShape(r, u), v = 0, m = u.length;
                v < m;
                v++
              ) {
                var g = u[v];
                r = r.concat(g);
              }
              for (var y = 0, b = r.length; y < b; y++) {
                var x = r[y];
                o.push(x.x, x.y, 0), s.push(0, 0, 1), l.push(x.x, x.y);
              }
              for (var w = 0, _ = p.length; w < _; w++) {
                var S = p[w],
                  M = S[0] + t,
                  E = S[1] + t,
                  k = S[2] + t;
                a.push(M, E, k), (c += 3);
              }
            }
            return (
              e.setIndex(a),
              e.setAttribute("position", new qu(o, 3)),
              e.setAttribute("normal", new qu(s, 3)),
              e.setAttribute("uv", new qu(l, 2)),
              e
            );
          }
          return (
            ti(
              n,
              [
                {
                  key: "toJSON",
                  value: function () {
                    var e = fi(ri(n.prototype), "toJSON", this).call(this);
                    return (function (e, t) {
                      if (((t.shapes = []), Array.isArray(e)))
                        for (var n = 0, r = e.length; n < r; n++) {
                          var i = e[n];
                          t.shapes.push(i.uuid);
                        }
                      else t.shapes.push(e.uuid);
                      return t;
                    })(this.parameters.shapes, e);
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e, t) {
                    for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                      var o = t[e.shapes[i]];
                      r.push(o);
                    }
                    return new n(r, e.curveSegments);
                  },
                },
              ]
            ),
            n
          );
        })(tc);
      var Xv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 32,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 16,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 2 * Math.PI,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 0,
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : Math.PI;
            Kr(this, n),
              ((e = t.call(this)).type = "SphereGeometry"),
              (e.parameters = {
                radius: r,
                widthSegments: i,
                heightSegments: a,
                phiStart: o,
                phiLength: s,
                thetaStart: l,
                thetaLength: u,
              }),
              (i = Math.max(3, Math.floor(i))),
              (a = Math.max(2, Math.floor(a)));
            for (
              var c = Math.min(l + u, Math.PI),
                f = 0,
                d = [],
                h = new yl(),
                p = new yl(),
                v = [],
                m = [],
                g = [],
                y = [],
                b = 0;
              b <= a;
              b++
            ) {
              var x = [],
                w = b / a,
                _ = 0;
              0 == b && 0 == l
                ? (_ = 0.5 / i)
                : b == a && c == Math.PI && (_ = -0.5 / i);
              for (var S = 0; S <= i; S++) {
                var M = S / i;
                (h.x = -r * Math.cos(o + M * s) * Math.sin(l + w * u)),
                  (h.y = r * Math.cos(l + w * u)),
                  (h.z = r * Math.sin(o + M * s) * Math.sin(l + w * u)),
                  m.push(h.x, h.y, h.z),
                  p.copy(h).normalize(),
                  g.push(p.x, p.y, p.z),
                  y.push(M + _, 1 - w),
                  x.push(f++);
              }
              d.push(x);
            }
            for (var E = 0; E < a; E++)
              for (var k = 0; k < i; k++) {
                var T = d[E][k + 1],
                  C = d[E][k],
                  A = d[E + 1][k],
                  P = d[E + 1][k + 1];
                (0 !== E || l > 0) && v.push(T, C, P),
                  (E !== a - 1 || c < Math.PI) && v.push(C, A, P);
              }
            return (
              e.setIndex(v),
              e.setAttribute("position", new qu(m, 3)),
              e.setAttribute("normal", new qu(g, 3)),
              e.setAttribute("uv", new qu(y, 2)),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radius,
                    e.widthSegments,
                    e.heightSegments,
                    e.phiStart,
                    e.phiLength,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            n
          );
        })(tc),
        Yv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Kr(this, n);
            var a = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
              o = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
            return (
              ((e = t.call(this, a, o, r, i)).type = "TetrahedronGeometry"),
              (e.parameters = { radius: r, detail: i }),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.radius, e.detail);
                },
              },
            ]),
            n
          );
        })(iv),
        Jv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0.4,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 8,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 6,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 2 * Math.PI;
            Kr(this, n),
              ((e = t.call(this)).type = "TorusGeometry"),
              (e.parameters = {
                radius: r,
                tube: i,
                radialSegments: a,
                tubularSegments: o,
                arc: s,
              }),
              (a = Math.floor(a)),
              (o = Math.floor(o));
            for (
              var l = [],
                u = [],
                c = [],
                f = [],
                d = new yl(),
                h = new yl(),
                p = new yl(),
                v = 0;
              v <= a;
              v++
            )
              for (var m = 0; m <= o; m++) {
                var g = (m / o) * s,
                  y = (v / a) * Math.PI * 2;
                (h.x = (r + i * Math.cos(y)) * Math.cos(g)),
                  (h.y = (r + i * Math.cos(y)) * Math.sin(g)),
                  (h.z = i * Math.sin(y)),
                  u.push(h.x, h.y, h.z),
                  (d.x = r * Math.cos(g)),
                  (d.y = r * Math.sin(g)),
                  p.subVectors(h, d).normalize(),
                  c.push(p.x, p.y, p.z),
                  f.push(m / o),
                  f.push(v / a);
              }
            for (var b = 1; b <= a; b++)
              for (var x = 1; x <= o; x++) {
                var w = (o + 1) * b + x - 1,
                  _ = (o + 1) * (b - 1) + x - 1,
                  S = (o + 1) * (b - 1) + x,
                  M = (o + 1) * b + x;
                l.push(w, _, M), l.push(_, S, M);
              }
            return (
              e.setIndex(l),
              e.setAttribute("position", new qu(u, 3)),
              e.setAttribute("normal", new qu(c, 3)),
              e.setAttribute("uv", new qu(f, 2)),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radius,
                    e.tube,
                    e.radialSegments,
                    e.tubularSegments,
                    e.arc
                  );
                },
              },
            ]),
            n
          );
        })(tc),
        $v = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0.4,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 64,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 2,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 3;
            Kr(this, n),
              ((e = t.call(this)).type = "TorusKnotGeometry"),
              (e.parameters = {
                radius: r,
                tube: i,
                tubularSegments: a,
                radialSegments: o,
                p: s,
                q: l,
              }),
              (a = Math.floor(a)),
              (o = Math.floor(o));
            for (
              var u = [],
                c = [],
                f = [],
                d = [],
                h = new yl(),
                p = new yl(),
                v = new yl(),
                m = new yl(),
                g = new yl(),
                y = new yl(),
                b = new yl(),
                x = 0;
              x <= a;
              ++x
            ) {
              var w = (x / a) * s * Math.PI * 2;
              R(w, s, l, r, v),
                R(w + 0.01, s, l, r, m),
                y.subVectors(m, v),
                b.addVectors(m, v),
                g.crossVectors(y, b),
                b.crossVectors(g, y),
                g.normalize(),
                b.normalize();
              for (var _ = 0; _ <= o; ++_) {
                var S = (_ / o) * Math.PI * 2,
                  M = -i * Math.cos(S),
                  E = i * Math.sin(S);
                (h.x = v.x + (M * b.x + E * g.x)),
                  (h.y = v.y + (M * b.y + E * g.y)),
                  (h.z = v.z + (M * b.z + E * g.z)),
                  c.push(h.x, h.y, h.z),
                  p.subVectors(h, v).normalize(),
                  f.push(p.x, p.y, p.z),
                  d.push(x / a),
                  d.push(_ / o);
              }
            }
            for (var k = 1; k <= a; k++)
              for (var T = 1; T <= o; T++) {
                var C = (o + 1) * (k - 1) + (T - 1),
                  A = (o + 1) * k + (T - 1),
                  P = (o + 1) * k + T,
                  L = (o + 1) * (k - 1) + T;
                u.push(C, A, L), u.push(A, P, L);
              }
            function R(e, t, n, r, i) {
              var a = Math.cos(e),
                o = Math.sin(e),
                s = (n / t) * e,
                l = Math.cos(s);
              (i.x = r * (2 + l) * 0.5 * a),
                (i.y = r * (2 + l) * o * 0.5),
                (i.z = r * Math.sin(s) * 0.5);
            }
            return (
              e.setIndex(u),
              e.setAttribute("position", new qu(c, 3)),
              e.setAttribute("normal", new qu(f, 3)),
              e.setAttribute("uv", new qu(d, 2)),
              e
            );
          }
          return (
            ti(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radius,
                    e.tube,
                    e.tubularSegments,
                    e.radialSegments,
                    e.p,
                    e.q
                  );
                },
              },
            ]),
            n
          );
        })(tc),
        Qv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Yp(
                      new yl(-1, -1, 0),
                      new yl(-1, 1, 0),
                      new yl(1, 1, 0)
                    ),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 64,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8,
              s =
                arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
            Kr(this, n),
              ((e = t.call(this)).type = "TubeGeometry"),
              (e.parameters = {
                path: r,
                tubularSegments: i,
                radius: a,
                radialSegments: o,
                closed: s,
              });
            var l = r.computeFrenetFrames(i, s);
            (e.tangents = l.tangents),
              (e.normals = l.normals),
              (e.binormals = l.binormals);
            var u = new yl(),
              c = new yl(),
              f = new Us(),
              d = new yl(),
              h = [],
              p = [],
              v = [],
              m = [];
            function g() {
              for (var e = 0; e < i; e++) y(e);
              y(!1 === s ? i : 0), x(), b();
            }
            function y(e) {
              d = r.getPointAt(e / i, d);
              for (
                var t = l.normals[e], n = l.binormals[e], s = 0;
                s <= o;
                s++
              ) {
                var f = (s / o) * Math.PI * 2,
                  v = Math.sin(f),
                  m = -Math.cos(f);
                (c.x = m * t.x + v * n.x),
                  (c.y = m * t.y + v * n.y),
                  (c.z = m * t.z + v * n.z),
                  c.normalize(),
                  p.push(c.x, c.y, c.z),
                  (u.x = d.x + a * c.x),
                  (u.y = d.y + a * c.y),
                  (u.z = d.z + a * c.z),
                  h.push(u.x, u.y, u.z);
              }
            }
            function b() {
              for (var e = 1; e <= i; e++)
                for (var t = 1; t <= o; t++) {
                  var n = (o + 1) * (e - 1) + (t - 1),
                    r = (o + 1) * e + (t - 1),
                    a = (o + 1) * e + t,
                    s = (o + 1) * (e - 1) + t;
                  m.push(n, r, s), m.push(r, a, s);
                }
            }
            function x() {
              for (var e = 0; e <= i; e++)
                for (var t = 0; t <= o; t++)
                  (f.x = e / i), (f.y = t / o), v.push(f.x, f.y);
            }
            return (
              g(),
              e.setIndex(m),
              e.setAttribute("position", new qu(h, 3)),
              e.setAttribute("normal", new qu(p, 3)),
              e.setAttribute("uv", new qu(v, 2)),
              e
            );
          }
          return (
            ti(
              n,
              [
                {
                  key: "toJSON",
                  value: function () {
                    var e = fi(ri(n.prototype), "toJSON", this).call(this);
                    return (e.path = this.parameters.path.toJSON()), e;
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      new $p[e.path.type]().fromJSON(e.path),
                      e.tubularSegments,
                      e.radius,
                      e.radialSegments,
                      e.closed
                    );
                  },
                },
              ]
            ),
            n
          );
        })(tc),
        Zv = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null;
            if (
              (Kr(this, n),
              ((e = t.call(this)).type = "WireframeGeometry"),
              (e.parameters = { geometry: r }),
              null !== r)
            ) {
              var i = [],
                a = new Set(),
                o = new yl(),
                s = new yl();
              if (null !== r.index) {
                var l = r.attributes.position,
                  u = r.index,
                  c = r.groups;
                0 === c.length &&
                  (c = [{ start: 0, count: u.count, materialIndex: 0 }]);
                for (var f = 0, d = c.length; f < d; ++f)
                  for (
                    var h = c[f], p = h.start, v = h.count, m = p, g = p + v;
                    m < g;
                    m += 3
                  )
                    for (var y = 0; y < 3; y++) {
                      var b = u.getX(m + y),
                        x = u.getX(m + ((y + 1) % 3));
                      o.fromBufferAttribute(l, b),
                        s.fromBufferAttribute(l, x),
                        !0 === Kv(o, s, a) &&
                          (i.push(o.x, o.y, o.z), i.push(s.x, s.y, s.z));
                    }
              } else
                for (
                  var w = r.attributes.position, _ = 0, S = w.count / 3;
                  _ < S;
                  _++
                )
                  for (var M = 0; M < 3; M++) {
                    var E = 3 * _ + M,
                      k = 3 * _ + ((M + 1) % 3);
                    o.fromBufferAttribute(w, E),
                      s.fromBufferAttribute(w, k),
                      !0 === Kv(o, s, a) &&
                        (i.push(o.x, o.y, o.z), i.push(s.x, s.y, s.z));
                  }
              e.setAttribute("position", new qu(i, 3));
            }
            return e;
          }
          return ti(n);
        })(tc);
      function Kv(e, t, n) {
        var r = ""
            .concat(e.x, ",")
            .concat(e.y, ",")
            .concat(e.z, "-")
            .concat(t.x, ",")
            .concat(t.y, ",")
            .concat(t.z),
          i = ""
            .concat(t.x, ",")
            .concat(t.y, ",")
            .concat(t.z, "-")
            .concat(e.x, ",")
            .concat(e.y, ",")
            .concat(e.z);
        return !0 !== n.has(r) && !0 !== n.has(i) && (n.add(r), n.add(i), !0);
      }
      var em = Object.freeze({
          __proto__: null,
          BoxGeometry: wc,
          BoxBufferGeometry: wc,
          CapsuleGeometry: ev,
          CapsuleBufferGeometry: ev,
          CircleGeometry: tv,
          CircleBufferGeometry: tv,
          ConeGeometry: rv,
          ConeBufferGeometry: rv,
          CylinderGeometry: nv,
          CylinderBufferGeometry: nv,
          DodecahedronGeometry: av,
          DodecahedronBufferGeometry: av,
          EdgesGeometry: cv,
          ExtrudeGeometry: Uv,
          ExtrudeBufferGeometry: Uv,
          IcosahedronGeometry: Gv,
          IcosahedronBufferGeometry: Gv,
          LatheGeometry: Kp,
          LatheBufferGeometry: Kp,
          OctahedronGeometry: Wv,
          OctahedronBufferGeometry: Wv,
          PlaneGeometry: Uc,
          PlaneBufferGeometry: Uc,
          PolyhedronGeometry: iv,
          PolyhedronBufferGeometry: iv,
          RingGeometry: Vv,
          RingBufferGeometry: Vv,
          ShapeGeometry: qv,
          ShapeBufferGeometry: qv,
          SphereGeometry: Xv,
          SphereBufferGeometry: Xv,
          TetrahedronGeometry: Yv,
          TetrahedronBufferGeometry: Yv,
          TorusGeometry: Jv,
          TorusBufferGeometry: Jv,
          TorusKnotGeometry: $v,
          TorusKnotBufferGeometry: $v,
          TubeGeometry: Qv,
          TubeBufferGeometry: Qv,
          WireframeGeometry: Zv,
        }),
        tm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return (
              Kr(this, n),
              ((r = t.call(this)).type = "ShadowMaterial"),
              (r.color = new il(0)),
              (r.transparent = !0),
              r.setValues(e),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Ou);
      tm.prototype.isShadowMaterial = !0;
      var nm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n), ((r = t.call(this, e)).type = "RawShaderMaterial"), r
          );
        }
        return ti(n);
      })(Ec);
      nm.prototype.isRawShaderMaterial = !0;
      var rm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).defines = { STANDARD: "" }),
            (r.type = "MeshStandardMaterial"),
            (r.color = new il(16777215)),
            (r.roughness = 1),
            (r.metalness = 0),
            (r.map = null),
            (r.lightMap = null),
            (r.lightMapIntensity = 1),
            (r.aoMap = null),
            (r.aoMapIntensity = 1),
            (r.emissive = new il(0)),
            (r.emissiveIntensity = 1),
            (r.emissiveMap = null),
            (r.bumpMap = null),
            (r.bumpScale = 1),
            (r.normalMap = null),
            (r.normalMapType = Yo),
            (r.normalScale = new Us(1, 1)),
            (r.displacementMap = null),
            (r.displacementScale = 1),
            (r.displacementBias = 0),
            (r.roughnessMap = null),
            (r.metalnessMap = null),
            (r.alphaMap = null),
            (r.envMap = null),
            (r.envMapIntensity = 1),
            (r.wireframe = !1),
            (r.wireframeLinewidth = 1),
            (r.wireframeLinecap = "round"),
            (r.wireframeLinejoin = "round"),
            (r.flatShading = !1),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.defines = { STANDARD: "" }),
                  this.color.copy(e.color),
                  (this.roughness = e.roughness),
                  (this.metalness = e.metalness),
                  (this.map = e.map),
                  (this.lightMap = e.lightMap),
                  (this.lightMapIntensity = e.lightMapIntensity),
                  (this.aoMap = e.aoMap),
                  (this.aoMapIntensity = e.aoMapIntensity),
                  this.emissive.copy(e.emissive),
                  (this.emissiveMap = e.emissiveMap),
                  (this.emissiveIntensity = e.emissiveIntensity),
                  (this.bumpMap = e.bumpMap),
                  (this.bumpScale = e.bumpScale),
                  (this.normalMap = e.normalMap),
                  (this.normalMapType = e.normalMapType),
                  this.normalScale.copy(e.normalScale),
                  (this.displacementMap = e.displacementMap),
                  (this.displacementScale = e.displacementScale),
                  (this.displacementBias = e.displacementBias),
                  (this.roughnessMap = e.roughnessMap),
                  (this.metalnessMap = e.metalnessMap),
                  (this.alphaMap = e.alphaMap),
                  (this.envMap = e.envMap),
                  (this.envMapIntensity = e.envMapIntensity),
                  (this.wireframe = e.wireframe),
                  (this.wireframeLinewidth = e.wireframeLinewidth),
                  (this.wireframeLinecap = e.wireframeLinecap),
                  (this.wireframeLinejoin = e.wireframeLinejoin),
                  (this.flatShading = e.flatShading),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      rm.prototype.isMeshStandardMaterial = !0;
      var im = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).defines = { STANDARD: "", PHYSICAL: "" }),
            (r.type = "MeshPhysicalMaterial"),
            (r.clearcoatMap = null),
            (r.clearcoatRoughness = 0),
            (r.clearcoatRoughnessMap = null),
            (r.clearcoatNormalScale = new Us(1, 1)),
            (r.clearcoatNormalMap = null),
            (r.ior = 1.5),
            Object.defineProperty(ai(r), "reflectivity", {
              get: function () {
                return zs((2.5 * (this.ior - 1)) / (this.ior + 1), 0, 1);
              },
              set: function (e) {
                this.ior = (1 + 0.4 * e) / (1 - 0.4 * e);
              },
            }),
            (r.sheenColor = new il(0)),
            (r.sheenColorMap = null),
            (r.sheenRoughness = 1),
            (r.sheenRoughnessMap = null),
            (r.transmissionMap = null),
            (r.thickness = 0),
            (r.thicknessMap = null),
            (r.attenuationDistance = 0),
            (r.attenuationColor = new il(1, 1, 1)),
            (r.specularIntensity = 1),
            (r.specularIntensityMap = null),
            (r.specularColor = new il(1, 1, 1)),
            (r.specularColorMap = null),
            (r._sheen = 0),
            (r._clearcoat = 0),
            (r._transmission = 0),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "sheen",
              get: function () {
                return this._sheen;
              },
              set: function (e) {
                this._sheen > 0 !== e > 0 && this.version++, (this._sheen = e);
              },
            },
            {
              key: "clearcoat",
              get: function () {
                return this._clearcoat;
              },
              set: function (e) {
                this._clearcoat > 0 !== e > 0 && this.version++,
                  (this._clearcoat = e);
              },
            },
            {
              key: "transmission",
              get: function () {
                return this._transmission;
              },
              set: function (e) {
                this._transmission > 0 !== e > 0 && this.version++,
                  (this._transmission = e);
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.defines = { STANDARD: "", PHYSICAL: "" }),
                  (this.clearcoat = e.clearcoat),
                  (this.clearcoatMap = e.clearcoatMap),
                  (this.clearcoatRoughness = e.clearcoatRoughness),
                  (this.clearcoatRoughnessMap = e.clearcoatRoughnessMap),
                  (this.clearcoatNormalMap = e.clearcoatNormalMap),
                  this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
                  (this.ior = e.ior),
                  (this.sheen = e.sheen),
                  this.sheenColor.copy(e.sheenColor),
                  (this.sheenColorMap = e.sheenColorMap),
                  (this.sheenRoughness = e.sheenRoughness),
                  (this.sheenRoughnessMap = e.sheenRoughnessMap),
                  (this.transmission = e.transmission),
                  (this.transmissionMap = e.transmissionMap),
                  (this.thickness = e.thickness),
                  (this.thicknessMap = e.thicknessMap),
                  (this.attenuationDistance = e.attenuationDistance),
                  this.attenuationColor.copy(e.attenuationColor),
                  (this.specularIntensity = e.specularIntensity),
                  (this.specularIntensityMap = e.specularIntensityMap),
                  this.specularColor.copy(e.specularColor),
                  (this.specularColorMap = e.specularColorMap),
                  this
                );
              },
            },
          ]),
          n
        );
      })(rm);
      im.prototype.isMeshPhysicalMaterial = !0;
      var am = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).type = "MeshPhongMaterial"),
            (r.color = new il(16777215)),
            (r.specular = new il(1118481)),
            (r.shininess = 30),
            (r.map = null),
            (r.lightMap = null),
            (r.lightMapIntensity = 1),
            (r.aoMap = null),
            (r.aoMapIntensity = 1),
            (r.emissive = new il(0)),
            (r.emissiveIntensity = 1),
            (r.emissiveMap = null),
            (r.bumpMap = null),
            (r.bumpScale = 1),
            (r.normalMap = null),
            (r.normalMapType = Yo),
            (r.normalScale = new Us(1, 1)),
            (r.displacementMap = null),
            (r.displacementScale = 1),
            (r.displacementBias = 0),
            (r.specularMap = null),
            (r.alphaMap = null),
            (r.envMap = null),
            (r.combine = oa),
            (r.reflectivity = 1),
            (r.refractionRatio = 0.98),
            (r.wireframe = !1),
            (r.wireframeLinewidth = 1),
            (r.wireframeLinecap = "round"),
            (r.wireframeLinejoin = "round"),
            (r.flatShading = !1),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.color.copy(e.color),
                  this.specular.copy(e.specular),
                  (this.shininess = e.shininess),
                  (this.map = e.map),
                  (this.lightMap = e.lightMap),
                  (this.lightMapIntensity = e.lightMapIntensity),
                  (this.aoMap = e.aoMap),
                  (this.aoMapIntensity = e.aoMapIntensity),
                  this.emissive.copy(e.emissive),
                  (this.emissiveMap = e.emissiveMap),
                  (this.emissiveIntensity = e.emissiveIntensity),
                  (this.bumpMap = e.bumpMap),
                  (this.bumpScale = e.bumpScale),
                  (this.normalMap = e.normalMap),
                  (this.normalMapType = e.normalMapType),
                  this.normalScale.copy(e.normalScale),
                  (this.displacementMap = e.displacementMap),
                  (this.displacementScale = e.displacementScale),
                  (this.displacementBias = e.displacementBias),
                  (this.specularMap = e.specularMap),
                  (this.alphaMap = e.alphaMap),
                  (this.envMap = e.envMap),
                  (this.combine = e.combine),
                  (this.reflectivity = e.reflectivity),
                  (this.refractionRatio = e.refractionRatio),
                  (this.wireframe = e.wireframe),
                  (this.wireframeLinewidth = e.wireframeLinewidth),
                  (this.wireframeLinecap = e.wireframeLinecap),
                  (this.wireframeLinejoin = e.wireframeLinejoin),
                  (this.flatShading = e.flatShading),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      am.prototype.isMeshPhongMaterial = !0;
      var om = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).defines = { TOON: "" }),
            (r.type = "MeshToonMaterial"),
            (r.color = new il(16777215)),
            (r.map = null),
            (r.gradientMap = null),
            (r.lightMap = null),
            (r.lightMapIntensity = 1),
            (r.aoMap = null),
            (r.aoMapIntensity = 1),
            (r.emissive = new il(0)),
            (r.emissiveIntensity = 1),
            (r.emissiveMap = null),
            (r.bumpMap = null),
            (r.bumpScale = 1),
            (r.normalMap = null),
            (r.normalMapType = Yo),
            (r.normalScale = new Us(1, 1)),
            (r.displacementMap = null),
            (r.displacementScale = 1),
            (r.displacementBias = 0),
            (r.alphaMap = null),
            (r.wireframe = !1),
            (r.wireframeLinewidth = 1),
            (r.wireframeLinecap = "round"),
            (r.wireframeLinejoin = "round"),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.color.copy(e.color),
                  (this.map = e.map),
                  (this.gradientMap = e.gradientMap),
                  (this.lightMap = e.lightMap),
                  (this.lightMapIntensity = e.lightMapIntensity),
                  (this.aoMap = e.aoMap),
                  (this.aoMapIntensity = e.aoMapIntensity),
                  this.emissive.copy(e.emissive),
                  (this.emissiveMap = e.emissiveMap),
                  (this.emissiveIntensity = e.emissiveIntensity),
                  (this.bumpMap = e.bumpMap),
                  (this.bumpScale = e.bumpScale),
                  (this.normalMap = e.normalMap),
                  (this.normalMapType = e.normalMapType),
                  this.normalScale.copy(e.normalScale),
                  (this.displacementMap = e.displacementMap),
                  (this.displacementScale = e.displacementScale),
                  (this.displacementBias = e.displacementBias),
                  (this.alphaMap = e.alphaMap),
                  (this.wireframe = e.wireframe),
                  (this.wireframeLinewidth = e.wireframeLinewidth),
                  (this.wireframeLinecap = e.wireframeLinecap),
                  (this.wireframeLinejoin = e.wireframeLinejoin),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      om.prototype.isMeshToonMaterial = !0;
      var sm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).type = "MeshNormalMaterial"),
            (r.bumpMap = null),
            (r.bumpScale = 1),
            (r.normalMap = null),
            (r.normalMapType = Yo),
            (r.normalScale = new Us(1, 1)),
            (r.displacementMap = null),
            (r.displacementScale = 1),
            (r.displacementBias = 0),
            (r.wireframe = !1),
            (r.wireframeLinewidth = 1),
            (r.fog = !1),
            (r.flatShading = !1),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.bumpMap = e.bumpMap),
                  (this.bumpScale = e.bumpScale),
                  (this.normalMap = e.normalMap),
                  (this.normalMapType = e.normalMapType),
                  this.normalScale.copy(e.normalScale),
                  (this.displacementMap = e.displacementMap),
                  (this.displacementScale = e.displacementScale),
                  (this.displacementBias = e.displacementBias),
                  (this.wireframe = e.wireframe),
                  (this.wireframeLinewidth = e.wireframeLinewidth),
                  (this.flatShading = e.flatShading),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      sm.prototype.isMeshNormalMaterial = !0;
      var lm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).type = "MeshLambertMaterial"),
            (r.color = new il(16777215)),
            (r.map = null),
            (r.lightMap = null),
            (r.lightMapIntensity = 1),
            (r.aoMap = null),
            (r.aoMapIntensity = 1),
            (r.emissive = new il(0)),
            (r.emissiveIntensity = 1),
            (r.emissiveMap = null),
            (r.specularMap = null),
            (r.alphaMap = null),
            (r.envMap = null),
            (r.combine = oa),
            (r.reflectivity = 1),
            (r.refractionRatio = 0.98),
            (r.wireframe = !1),
            (r.wireframeLinewidth = 1),
            (r.wireframeLinecap = "round"),
            (r.wireframeLinejoin = "round"),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.color.copy(e.color),
                  (this.map = e.map),
                  (this.lightMap = e.lightMap),
                  (this.lightMapIntensity = e.lightMapIntensity),
                  (this.aoMap = e.aoMap),
                  (this.aoMapIntensity = e.aoMapIntensity),
                  this.emissive.copy(e.emissive),
                  (this.emissiveMap = e.emissiveMap),
                  (this.emissiveIntensity = e.emissiveIntensity),
                  (this.specularMap = e.specularMap),
                  (this.alphaMap = e.alphaMap),
                  (this.envMap = e.envMap),
                  (this.combine = e.combine),
                  (this.reflectivity = e.reflectivity),
                  (this.refractionRatio = e.refractionRatio),
                  (this.wireframe = e.wireframe),
                  (this.wireframeLinewidth = e.wireframeLinewidth),
                  (this.wireframeLinecap = e.wireframeLinecap),
                  (this.wireframeLinejoin = e.wireframeLinejoin),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      lm.prototype.isMeshLambertMaterial = !0;
      var um = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).defines = { MATCAP: "" }),
            (r.type = "MeshMatcapMaterial"),
            (r.color = new il(16777215)),
            (r.matcap = null),
            (r.map = null),
            (r.bumpMap = null),
            (r.bumpScale = 1),
            (r.normalMap = null),
            (r.normalMapType = Yo),
            (r.normalScale = new Us(1, 1)),
            (r.displacementMap = null),
            (r.displacementScale = 1),
            (r.displacementBias = 0),
            (r.alphaMap = null),
            (r.flatShading = !1),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.defines = { MATCAP: "" }),
                  this.color.copy(e.color),
                  (this.matcap = e.matcap),
                  (this.map = e.map),
                  (this.bumpMap = e.bumpMap),
                  (this.bumpScale = e.bumpScale),
                  (this.normalMap = e.normalMap),
                  (this.normalMapType = e.normalMapType),
                  this.normalScale.copy(e.normalScale),
                  (this.displacementMap = e.displacementMap),
                  (this.displacementScale = e.displacementScale),
                  (this.displacementBias = e.displacementBias),
                  (this.alphaMap = e.alphaMap),
                  (this.flatShading = e.flatShading),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Ou);
      um.prototype.isMeshMatcapMaterial = !0;
      var cm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r;
          return (
            Kr(this, n),
            ((r = t.call(this)).type = "LineDashedMaterial"),
            (r.scale = 1),
            (r.dashSize = 3),
            (r.gapSize = 1),
            r.setValues(e),
            r
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.scale = e.scale),
                  (this.dashSize = e.dashSize),
                  (this.gapSize = e.gapSize),
                  this
                );
              },
            },
          ]),
          n
        );
      })(up);
      cm.prototype.isLineDashedMaterial = !0;
      var fm = {
        ShadowMaterial: tm,
        SpriteMaterial: Ch,
        RawShaderMaterial: nm,
        ShaderMaterial: Ec,
        PointsMaterial: xp,
        MeshPhysicalMaterial: im,
        MeshStandardMaterial: rm,
        MeshPhongMaterial: am,
        MeshToonMaterial: om,
        MeshNormalMaterial: sm,
        MeshLambertMaterial: lm,
        MeshDepthMaterial: ah,
        MeshDistanceMaterial: oh,
        MeshBasicMaterial: zu,
        MeshMatcapMaterial: um,
        LineDashedMaterial: cm,
        LineBasicMaterial: up,
        Material: Ou,
      };
      Ou.fromType = function (e) {
        return new fm[e]();
      };
      var dm = {
          arraySlice: function (e, t, n) {
            return dm.isTypedArray(e)
              ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length))
              : e.slice(t, n);
          },
          convertArray: function (e, t, n) {
            return !e || (!n && e.constructor === t)
              ? e
              : "number" === typeof t.BYTES_PER_ELEMENT
              ? new t(e)
              : Array.prototype.slice.call(e);
          },
          isTypedArray: function (e) {
            return ArrayBuffer.isView(e) && !(e instanceof DataView);
          },
          getKeyframeOrder: function (e) {
            for (var t = e.length, n = new Array(t), r = 0; r !== t; ++r)
              n[r] = r;
            return (
              n.sort(function (t, n) {
                return e[t] - e[n];
              }),
              n
            );
          },
          sortedArray: function (e, t, n) {
            for (
              var r = e.length, i = new e.constructor(r), a = 0, o = 0;
              o !== r;
              ++a
            )
              for (var s = n[a] * t, l = 0; l !== t; ++l) i[o++] = e[s + l];
            return i;
          },
          flattenJSON: function (e, t, n, r) {
            for (var i = 1, a = e[0]; void 0 !== a && void 0 === a[r]; )
              a = e[i++];
            if (void 0 !== a) {
              var o = a[r];
              if (void 0 !== o)
                if (Array.isArray(o))
                  do {
                    void 0 !== (o = a[r]) &&
                      (t.push(a.time), n.push.apply(n, o)),
                      (a = e[i++]);
                  } while (void 0 !== a);
                else if (void 0 !== o.toArray)
                  do {
                    void 0 !== (o = a[r]) &&
                      (t.push(a.time), o.toArray(n, n.length)),
                      (a = e[i++]);
                  } while (void 0 !== a);
                else
                  do {
                    void 0 !== (o = a[r]) && (t.push(a.time), n.push(o)),
                      (a = e[i++]);
                  } while (void 0 !== a);
            }
          },
          subclip: function (e, t, n, r) {
            var i =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 30,
              a = e.clone();
            a.name = t;
            for (var o = [], s = 0; s < a.tracks.length; ++s) {
              for (
                var l = a.tracks[s],
                  u = l.getValueSize(),
                  c = [],
                  f = [],
                  d = 0;
                d < l.times.length;
                ++d
              ) {
                var h = l.times[d] * i;
                if (!(h < n || h >= r)) {
                  c.push(l.times[d]);
                  for (var p = 0; p < u; ++p) f.push(l.values[d * u + p]);
                }
              }
              0 !== c.length &&
                ((l.times = dm.convertArray(c, l.times.constructor)),
                (l.values = dm.convertArray(f, l.values.constructor)),
                o.push(l));
            }
            a.tracks = o;
            for (var v = 1 / 0, m = 0; m < a.tracks.length; ++m)
              v > a.tracks[m].times[0] && (v = a.tracks[m].times[0]);
            for (var g = 0; g < a.tracks.length; ++g) a.tracks[g].shift(-1 * v);
            return a.resetDuration(), a;
          },
          makeClipAdditive: function (e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : e,
              r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 30;
            r <= 0 && (r = 30);
            for (
              var i = n.tracks.length,
                a = t / r,
                o = function (t) {
                  var r = n.tracks[t],
                    i = r.ValueTypeName;
                  if ("bool" === i || "string" === i) return "continue";
                  var o = e.tracks.find(function (e) {
                    return e.name === r.name && e.ValueTypeName === i;
                  });
                  if (void 0 === o) return "continue";
                  var s = 0,
                    l = r.getValueSize();
                  r.createInterpolant
                    .isInterpolantFactoryMethodGLTFCubicSpline && (s = l / 3);
                  var u = 0,
                    c = o.getValueSize();
                  o.createInterpolant
                    .isInterpolantFactoryMethodGLTFCubicSpline && (u = c / 3);
                  var f = r.times.length - 1,
                    d = void 0;
                  if (a <= r.times[0]) {
                    var h = s,
                      p = l - s;
                    d = dm.arraySlice(r.values, h, p);
                  } else if (a >= r.times[f]) {
                    var v = f * l + s,
                      m = v + l - s;
                    d = dm.arraySlice(r.values, v, m);
                  } else {
                    var g = r.createInterpolant(),
                      y = s,
                      b = l - s;
                    g.evaluate(a), (d = dm.arraySlice(g.resultBuffer, y, b));
                  }
                  "quaternion" === i &&
                    new gl().fromArray(d).normalize().conjugate().toArray(d);
                  for (var x = o.times.length, w = 0; w < x; ++w) {
                    var _ = w * c + u;
                    if ("quaternion" === i)
                      gl.multiplyQuaternionsFlat(
                        o.values,
                        _,
                        d,
                        0,
                        o.values,
                        _
                      );
                    else
                      for (var S = c - 2 * u, M = 0; M < S; ++M)
                        o.values[_ + M] -= d[M];
                  }
                },
                s = 0;
              s < i;
              ++s
            )
              o(s);
            return (e.blendMode = Ho), e;
          },
        },
        hm = (function () {
          function e(t, n, r, i) {
            Kr(this, e),
              (this.parameterPositions = t),
              (this._cachedIndex = 0),
              (this.resultBuffer = void 0 !== i ? i : new n.constructor(r)),
              (this.sampleValues = n),
              (this.valueSize = r),
              (this.settings = null),
              (this.DefaultSettings_ = {});
          }
          return (
            ti(e, [
              {
                key: "evaluate",
                value: function (e) {
                  var t = this.parameterPositions,
                    n = this._cachedIndex,
                    r = t[n],
                    i = t[n - 1];
                  e: {
                    t: {
                      var a;
                      n: {
                        r: if (!(e < r)) {
                          for (var o = n + 2; ; ) {
                            if (void 0 === r) {
                              if (e < i) break r;
                              return (
                                (n = t.length),
                                (this._cachedIndex = n),
                                this.afterEnd_(n - 1, e, i)
                              );
                            }
                            if (n === o) break;
                            if (((i = r), e < (r = t[++n]))) break t;
                          }
                          a = t.length;
                          break n;
                        }
                        if (e >= i) break e;
                        var s = t[1];
                        e < s && ((n = 2), (i = s));
                        for (var l = n - 2; ; ) {
                          if (void 0 === i)
                            return (
                              (this._cachedIndex = 0),
                              this.beforeStart_(0, e, r)
                            );
                          if (n === l) break;
                          if (((r = i), e >= (i = t[--n - 1]))) break t;
                        }
                        (a = n), (n = 0);
                      }
                      for (; n < a; ) {
                        var u = (n + a) >>> 1;
                        e < t[u] ? (a = u) : (n = u + 1);
                      }
                      if (((r = t[n]), void 0 === (i = t[n - 1])))
                        return (
                          (this._cachedIndex = 0), this.beforeStart_(0, e, r)
                        );
                      if (void 0 === r)
                        return (
                          (n = t.length),
                          (this._cachedIndex = n),
                          this.afterEnd_(n - 1, i, e)
                        );
                    }
                    (this._cachedIndex = n), this.intervalChanged_(n, i, r);
                  }
                  return this.interpolate_(n, i, e, r);
                },
              },
              {
                key: "getSettings_",
                value: function () {
                  return this.settings || this.DefaultSettings_;
                },
              },
              {
                key: "copySampleValue_",
                value: function (e) {
                  for (
                    var t = this.resultBuffer,
                      n = this.sampleValues,
                      r = this.valueSize,
                      i = e * r,
                      a = 0;
                    a !== r;
                    ++a
                  )
                    t[a] = n[i + a];
                  return t;
                },
              },
              {
                key: "interpolate_",
                value: function () {
                  throw new Error("call to abstract method");
                },
              },
              { key: "intervalChanged_", value: function () {} },
            ]),
            e
          );
        })();
      (hm.prototype.beforeStart_ = hm.prototype.copySampleValue_),
        (hm.prototype.afterEnd_ = hm.prototype.copySampleValue_);
      var pm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i, a) {
            var o;
            return (
              Kr(this, n),
              ((o = t.call(this, e, r, i, a))._weightPrev = -0),
              (o._offsetPrev = -0),
              (o._weightNext = -0),
              (o._offsetNext = -0),
              (o.DefaultSettings_ = { endingStart: Io, endingEnd: Io }),
              o
            );
          }
          return (
            ti(n, [
              {
                key: "intervalChanged_",
                value: function (e, t, n) {
                  var r = this.parameterPositions,
                    i = e - 2,
                    a = e + 1,
                    o = r[i],
                    s = r[a];
                  if (void 0 === o)
                    switch (this.getSettings_().endingStart) {
                      case No:
                        (i = e), (o = 2 * t - n);
                        break;
                      case Fo:
                        o = t + r[(i = r.length - 2)] - r[i + 1];
                        break;
                      default:
                        (i = e), (o = n);
                    }
                  if (void 0 === s)
                    switch (this.getSettings_().endingEnd) {
                      case No:
                        (a = e), (s = 2 * n - t);
                        break;
                      case Fo:
                        (a = 1), (s = n + r[1] - r[0]);
                        break;
                      default:
                        (a = e - 1), (s = t);
                    }
                  var l = 0.5 * (n - t),
                    u = this.valueSize;
                  (this._weightPrev = l / (t - o)),
                    (this._weightNext = l / (s - n)),
                    (this._offsetPrev = i * u),
                    (this._offsetNext = a * u);
                },
              },
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var i = this.resultBuffer,
                      a = this.sampleValues,
                      o = this.valueSize,
                      s = e * o,
                      l = s - o,
                      u = this._offsetPrev,
                      c = this._offsetNext,
                      f = this._weightPrev,
                      d = this._weightNext,
                      h = (n - t) / (r - t),
                      p = h * h,
                      v = p * h,
                      m = -f * v + 2 * f * p - f * h,
                      g = (1 + f) * v + (-1.5 - 2 * f) * p + (-0.5 + f) * h + 1,
                      y = (-1 - d) * v + (1.5 + d) * p + 0.5 * h,
                      b = d * v - d * p,
                      x = 0;
                    x !== o;
                    ++x
                  )
                    i[x] =
                      m * a[u + x] + g * a[l + x] + y * a[s + x] + b * a[c + x];
                  return i;
                },
              },
            ]),
            n
          );
        })(hm),
        vm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i, a) {
            return Kr(this, n), t.call(this, e, r, i, a);
          }
          return (
            ti(n, [
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var i = this.resultBuffer,
                      a = this.sampleValues,
                      o = this.valueSize,
                      s = e * o,
                      l = s - o,
                      u = (n - t) / (r - t),
                      c = 1 - u,
                      f = 0;
                    f !== o;
                    ++f
                  )
                    i[f] = a[l + f] * c + a[s + f] * u;
                  return i;
                },
              },
            ]),
            n
          );
        })(hm),
        mm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i, a) {
            return Kr(this, n), t.call(this, e, r, i, a);
          }
          return (
            ti(n, [
              {
                key: "interpolate_",
                value: function (e) {
                  return this.copySampleValue_(e - 1);
                },
              },
            ]),
            n
          );
        })(hm),
        gm = (function () {
          function e(t, n, r, i) {
            if ((Kr(this, e), void 0 === t))
              throw new Error("THREE.KeyframeTrack: track name is undefined");
            if (void 0 === n || 0 === n.length)
              throw new Error(
                "THREE.KeyframeTrack: no keyframes in track named " + t
              );
            (this.name = t),
              (this.times = dm.convertArray(n, this.TimeBufferType)),
              (this.values = dm.convertArray(r, this.ValueBufferType)),
              this.setInterpolation(i || this.DefaultInterpolation);
          }
          return (
            ti(
              e,
              [
                {
                  key: "InterpolantFactoryMethodDiscrete",
                  value: function (e) {
                    return new mm(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "InterpolantFactoryMethodLinear",
                  value: function (e) {
                    return new vm(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "InterpolantFactoryMethodSmooth",
                  value: function (e) {
                    return new pm(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "setInterpolation",
                  value: function (e) {
                    var t;
                    switch (e) {
                      case Oo:
                        t = this.InterpolantFactoryMethodDiscrete;
                        break;
                      case zo:
                        t = this.InterpolantFactoryMethodLinear;
                        break;
                      case Do:
                        t = this.InterpolantFactoryMethodSmooth;
                    }
                    if (void 0 === t) {
                      var n =
                        "unsupported interpolation for " +
                        this.ValueTypeName +
                        " keyframe track named " +
                        this.name;
                      if (void 0 === this.createInterpolant) {
                        if (e === this.DefaultInterpolation) throw new Error(n);
                        this.setInterpolation(this.DefaultInterpolation);
                      }
                      return console.warn("THREE.KeyframeTrack:", n), this;
                    }
                    return (this.createInterpolant = t), this;
                  },
                },
                {
                  key: "getInterpolation",
                  value: function () {
                    switch (this.createInterpolant) {
                      case this.InterpolantFactoryMethodDiscrete:
                        return Oo;
                      case this.InterpolantFactoryMethodLinear:
                        return zo;
                      case this.InterpolantFactoryMethodSmooth:
                        return Do;
                    }
                  },
                },
                {
                  key: "getValueSize",
                  value: function () {
                    return this.values.length / this.times.length;
                  },
                },
                {
                  key: "shift",
                  value: function (e) {
                    if (0 !== e)
                      for (
                        var t = this.times, n = 0, r = t.length;
                        n !== r;
                        ++n
                      )
                        t[n] += e;
                    return this;
                  },
                },
                {
                  key: "scale",
                  value: function (e) {
                    if (1 !== e)
                      for (
                        var t = this.times, n = 0, r = t.length;
                        n !== r;
                        ++n
                      )
                        t[n] *= e;
                    return this;
                  },
                },
                {
                  key: "trim",
                  value: function (e, t) {
                    for (
                      var n = this.times, r = n.length, i = 0, a = r - 1;
                      i !== r && n[i] < e;

                    )
                      ++i;
                    for (; -1 !== a && n[a] > t; ) --a;
                    if ((++a, 0 !== i || a !== r)) {
                      i >= a && (i = (a = Math.max(a, 1)) - 1);
                      var o = this.getValueSize();
                      (this.times = dm.arraySlice(n, i, a)),
                        (this.values = dm.arraySlice(
                          this.values,
                          i * o,
                          a * o
                        ));
                    }
                    return this;
                  },
                },
                {
                  key: "validate",
                  value: function () {
                    var e = !0,
                      t = this.getValueSize();
                    t - Math.floor(t) !== 0 &&
                      (console.error(
                        "THREE.KeyframeTrack: Invalid value size in track.",
                        this
                      ),
                      (e = !1));
                    var n = this.times,
                      r = this.values,
                      i = n.length;
                    0 === i &&
                      (console.error(
                        "THREE.KeyframeTrack: Track is empty.",
                        this
                      ),
                      (e = !1));
                    for (var a = null, o = 0; o !== i; o++) {
                      var s = n[o];
                      if ("number" === typeof s && isNaN(s)) {
                        console.error(
                          "THREE.KeyframeTrack: Time is not a valid number.",
                          this,
                          o,
                          s
                        ),
                          (e = !1);
                        break;
                      }
                      if (null !== a && a > s) {
                        console.error(
                          "THREE.KeyframeTrack: Out of order keys.",
                          this,
                          o,
                          s,
                          a
                        ),
                          (e = !1);
                        break;
                      }
                      a = s;
                    }
                    if (void 0 !== r && dm.isTypedArray(r))
                      for (var l = 0, u = r.length; l !== u; ++l) {
                        var c = r[l];
                        if (isNaN(c)) {
                          console.error(
                            "THREE.KeyframeTrack: Value is not a valid number.",
                            this,
                            l,
                            c
                          ),
                            (e = !1);
                          break;
                        }
                      }
                    return e;
                  },
                },
                {
                  key: "optimize",
                  value: function () {
                    for (
                      var e = dm.arraySlice(this.times),
                        t = dm.arraySlice(this.values),
                        n = this.getValueSize(),
                        r = this.getInterpolation() === Do,
                        i = e.length - 1,
                        a = 1,
                        o = 1;
                      o < i;
                      ++o
                    ) {
                      var s = !1,
                        l = e[o];
                      if (l !== e[o + 1] && (1 !== o || l !== e[0]))
                        if (r) s = !0;
                        else
                          for (
                            var u = o * n, c = u - n, f = u + n, d = 0;
                            d !== n;
                            ++d
                          ) {
                            var h = t[u + d];
                            if (h !== t[c + d] || h !== t[f + d]) {
                              s = !0;
                              break;
                            }
                          }
                      if (s) {
                        if (o !== a) {
                          e[a] = e[o];
                          for (var p = o * n, v = a * n, m = 0; m !== n; ++m)
                            t[v + m] = t[p + m];
                        }
                        ++a;
                      }
                    }
                    if (i > 0) {
                      e[a] = e[i];
                      for (var g = i * n, y = a * n, b = 0; b !== n; ++b)
                        t[y + b] = t[g + b];
                      ++a;
                    }
                    return (
                      a !== e.length
                        ? ((this.times = dm.arraySlice(e, 0, a)),
                          (this.values = dm.arraySlice(t, 0, a * n)))
                        : ((this.times = e), (this.values = t)),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    var e = dm.arraySlice(this.times, 0),
                      t = dm.arraySlice(this.values, 0),
                      n = new (0, this.constructor)(this.name, e, t);
                    return (n.createInterpolant = this.createInterpolant), n;
                  },
                },
              ],
              [
                {
                  key: "toJSON",
                  value: function (e) {
                    var t,
                      n = e.constructor;
                    if (n.toJSON !== this.toJSON) t = n.toJSON(e);
                    else {
                      t = {
                        name: e.name,
                        times: dm.convertArray(e.times, Array),
                        values: dm.convertArray(e.values, Array),
                      };
                      var r = e.getInterpolation();
                      r !== e.DefaultInterpolation && (t.interpolation = r);
                    }
                    return (t.type = e.ValueTypeName), t;
                  },
                },
              ]
            ),
            e
          );
        })();
      (gm.prototype.TimeBufferType = Float32Array),
        (gm.prototype.ValueBufferType = Float32Array),
        (gm.prototype.DefaultInterpolation = zo);
      var ym = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          return Kr(this, n), t.apply(this, arguments);
        }
        return ti(n);
      })(gm);
      (ym.prototype.ValueTypeName = "bool"),
        (ym.prototype.ValueBufferType = Array),
        (ym.prototype.DefaultInterpolation = Oo),
        (ym.prototype.InterpolantFactoryMethodLinear = void 0),
        (ym.prototype.InterpolantFactoryMethodSmooth = void 0);
      var bm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          return Kr(this, n), t.apply(this, arguments);
        }
        return ti(n);
      })(gm);
      bm.prototype.ValueTypeName = "color";
      var xm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          return Kr(this, n), t.apply(this, arguments);
        }
        return ti(n);
      })(gm);
      xm.prototype.ValueTypeName = "number";
      var wm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i, a) {
            return Kr(this, n), t.call(this, e, r, i, a);
          }
          return (
            ti(n, [
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var i = this.resultBuffer,
                      a = this.sampleValues,
                      o = this.valueSize,
                      s = (n - t) / (r - t),
                      l = e * o,
                      u = l + o;
                    l !== u;
                    l += 4
                  )
                    gl.slerpFlat(i, 0, a, l - o, a, l, s);
                  return i;
                },
              },
            ]),
            n
          );
        })(hm),
        _m = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            return Kr(this, n), t.apply(this, arguments);
          }
          return (
            ti(n, [
              {
                key: "InterpolantFactoryMethodLinear",
                value: function (e) {
                  return new wm(
                    this.times,
                    this.values,
                    this.getValueSize(),
                    e
                  );
                },
              },
            ]),
            n
          );
        })(gm);
      (_m.prototype.ValueTypeName = "quaternion"),
        (_m.prototype.DefaultInterpolation = zo),
        (_m.prototype.InterpolantFactoryMethodSmooth = void 0);
      var Sm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          return Kr(this, n), t.apply(this, arguments);
        }
        return ti(n);
      })(gm);
      (Sm.prototype.ValueTypeName = "string"),
        (Sm.prototype.ValueBufferType = Array),
        (Sm.prototype.DefaultInterpolation = Oo),
        (Sm.prototype.InterpolantFactoryMethodLinear = void 0),
        (Sm.prototype.InterpolantFactoryMethodSmooth = void 0);
      var Mm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          return Kr(this, n), t.apply(this, arguments);
        }
        return ti(n);
      })(gm);
      Mm.prototype.ValueTypeName = "vector";
      var Em = (function () {
        function e(t) {
          var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : -1,
            r = arguments.length > 2 ? arguments[2] : void 0,
            i =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : Bo;
          Kr(this, e),
            (this.name = t),
            (this.tracks = r),
            (this.duration = n),
            (this.blendMode = i),
            (this.uuid = Os()),
            this.duration < 0 && this.resetDuration();
        }
        return (
          ti(
            e,
            [
              {
                key: "resetDuration",
                value: function () {
                  for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
                    var r = this.tracks[t];
                    e = Math.max(e, r.times[r.times.length - 1]);
                  }
                  return (this.duration = e), this;
                },
              },
              {
                key: "trim",
                value: function () {
                  for (var e = 0; e < this.tracks.length; e++)
                    this.tracks[e].trim(0, this.duration);
                  return this;
                },
              },
              {
                key: "validate",
                value: function () {
                  for (var e = !0, t = 0; t < this.tracks.length; t++)
                    e = e && this.tracks[t].validate();
                  return e;
                },
              },
              {
                key: "optimize",
                value: function () {
                  for (var e = 0; e < this.tracks.length; e++)
                    this.tracks[e].optimize();
                  return this;
                },
              },
              {
                key: "clone",
                value: function () {
                  for (var e = [], t = 0; t < this.tracks.length; t++)
                    e.push(this.tracks[t].clone());
                  return new this.constructor(
                    this.name,
                    this.duration,
                    e,
                    this.blendMode
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return this.constructor.toJSON(this);
                },
              },
            ],
            [
              {
                key: "parse",
                value: function (e) {
                  for (
                    var t = [],
                      n = e.tracks,
                      r = 1 / (e.fps || 1),
                      i = 0,
                      a = n.length;
                    i !== a;
                    ++i
                  )
                    t.push(km(n[i]).scale(r));
                  var o = new this(e.name, e.duration, t, e.blendMode);
                  return (o.uuid = e.uuid), o;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  for (
                    var t = [],
                      n = e.tracks,
                      r = {
                        name: e.name,
                        duration: e.duration,
                        tracks: t,
                        uuid: e.uuid,
                        blendMode: e.blendMode,
                      },
                      i = 0,
                      a = n.length;
                    i !== a;
                    ++i
                  )
                    t.push(gm.toJSON(n[i]));
                  return r;
                },
              },
              {
                key: "CreateFromMorphTargetSequence",
                value: function (e, t, n, r) {
                  for (var i = t.length, a = [], o = 0; o < i; o++) {
                    var s = [],
                      l = [];
                    s.push((o + i - 1) % i, o, (o + 1) % i), l.push(0, 1, 0);
                    var u = dm.getKeyframeOrder(s);
                    (s = dm.sortedArray(s, 1, u)),
                      (l = dm.sortedArray(l, 1, u)),
                      r || 0 !== s[0] || (s.push(i), l.push(l[0])),
                      a.push(
                        new xm(
                          ".morphTargetInfluences[" + t[o].name + "]",
                          s,
                          l
                        ).scale(1 / n)
                      );
                  }
                  return new this(e, -1, a);
                },
              },
              {
                key: "findByName",
                value: function (e, t) {
                  var n = e;
                  if (!Array.isArray(e)) {
                    var r = e;
                    n = (r.geometry && r.geometry.animations) || r.animations;
                  }
                  for (var i = 0; i < n.length; i++)
                    if (n[i].name === t) return n[i];
                  return null;
                },
              },
              {
                key: "CreateClipsFromMorphTargetSequences",
                value: function (e, t, n) {
                  for (
                    var r = {}, i = /^([\w-]*?)([\d]+)$/, a = 0, o = e.length;
                    a < o;
                    a++
                  ) {
                    var s = e[a],
                      l = s.name.match(i);
                    if (l && l.length > 1) {
                      var u = l[1],
                        c = r[u];
                      c || (r[u] = c = []), c.push(s);
                    }
                  }
                  var f = [];
                  for (var d in r)
                    f.push(this.CreateFromMorphTargetSequence(d, r[d], t, n));
                  return f;
                },
              },
              {
                key: "parseAnimation",
                value: function (e, t) {
                  if (!e)
                    return (
                      console.error(
                        "THREE.AnimationClip: No animation in JSONLoader data."
                      ),
                      null
                    );
                  for (
                    var n = function (e, t, n, r, i) {
                        if (0 !== n.length) {
                          var a = [],
                            o = [];
                          dm.flattenJSON(n, a, o, r),
                            0 !== a.length && i.push(new e(t, a, o));
                        }
                      },
                      r = [],
                      i = e.name || "default",
                      a = e.fps || 30,
                      o = e.blendMode,
                      s = e.length || -1,
                      l = e.hierarchy || [],
                      u = 0;
                    u < l.length;
                    u++
                  ) {
                    var c = l[u].keys;
                    if (c && 0 !== c.length)
                      if (c[0].morphTargets) {
                        var f = {},
                          d = void 0;
                        for (d = 0; d < c.length; d++)
                          if (c[d].morphTargets)
                            for (var h = 0; h < c[d].morphTargets.length; h++)
                              f[c[d].morphTargets[h]] = -1;
                        for (var p in f) {
                          for (
                            var v = [], m = [], g = 0;
                            g !== c[d].morphTargets.length;
                            ++g
                          ) {
                            var y = c[d];
                            v.push(y.time), m.push(y.morphTarget === p ? 1 : 0);
                          }
                          r.push(
                            new xm(".morphTargetInfluence[" + p + "]", v, m)
                          );
                        }
                        s = f.length * a;
                      } else {
                        var b = ".bones[" + t[u].name + "]";
                        n(Mm, b + ".position", c, "pos", r),
                          n(_m, b + ".quaternion", c, "rot", r),
                          n(Mm, b + ".scale", c, "scl", r);
                      }
                  }
                  return 0 === r.length ? null : new this(i, s, r, o);
                },
              },
            ]
          ),
          e
        );
      })();
      function km(e) {
        if (void 0 === e.type)
          throw new Error(
            "THREE.KeyframeTrack: track type undefined, can not parse"
          );
        var t = (function (e) {
          switch (e.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
              return xm;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
              return Mm;
            case "color":
              return bm;
            case "quaternion":
              return _m;
            case "bool":
            case "boolean":
              return ym;
            case "string":
              return Sm;
          }
          throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e);
        })(e.type);
        if (void 0 === e.times) {
          var n = [],
            r = [];
          dm.flattenJSON(e.keys, n, r, "value"), (e.times = n), (e.values = r);
        }
        return void 0 !== t.parse
          ? t.parse(e)
          : new t(e.name, e.times, e.values, e.interpolation);
      }
      var Tm = {
          enabled: !1,
          files: {},
          add: function (e, t) {
            !1 !== this.enabled && (this.files[e] = t);
          },
          get: function (e) {
            if (!1 !== this.enabled) return this.files[e];
          },
          remove: function (e) {
            delete this.files[e];
          },
          clear: function () {
            this.files = {};
          },
        },
        Cm = ti(function e(t, n, r) {
          Kr(this, e);
          var i = this,
            a = !1,
            o = 0,
            s = 0,
            l = void 0,
            u = [];
          (this.onStart = void 0),
            (this.onLoad = t),
            (this.onProgress = n),
            (this.onError = r),
            (this.itemStart = function (e) {
              s++,
                !1 === a && void 0 !== i.onStart && i.onStart(e, o, s),
                (a = !0);
            }),
            (this.itemEnd = function (e) {
              o++,
                void 0 !== i.onProgress && i.onProgress(e, o, s),
                o === s && ((a = !1), void 0 !== i.onLoad && i.onLoad());
            }),
            (this.itemError = function (e) {
              void 0 !== i.onError && i.onError(e);
            }),
            (this.resolveURL = function (e) {
              return l ? l(e) : e;
            }),
            (this.setURLModifier = function (e) {
              return (l = e), this;
            }),
            (this.addHandler = function (e, t) {
              return u.push(e, t), this;
            }),
            (this.removeHandler = function (e) {
              var t = u.indexOf(e);
              return -1 !== t && u.splice(t, 2), this;
            }),
            (this.getHandler = function (e) {
              for (var t = 0, n = u.length; t < n; t += 2) {
                var r = u[t],
                  i = u[t + 1];
                if ((r.global && (r.lastIndex = 0), r.test(e))) return i;
              }
              return null;
            });
        }),
        Am = new Cm(),
        Pm = (function () {
          function e(t) {
            Kr(this, e),
              (this.manager = void 0 !== t ? t : Am),
              (this.crossOrigin = "anonymous"),
              (this.withCredentials = !1),
              (this.path = ""),
              (this.resourcePath = ""),
              (this.requestHeader = {});
          }
          return (
            ti(e, [
              { key: "load", value: function () {} },
              {
                key: "loadAsync",
                value: function (e, t) {
                  var n = this;
                  return new Promise(function (r, i) {
                    n.load(e, r, t, i);
                  });
                },
              },
              { key: "parse", value: function () {} },
              {
                key: "setCrossOrigin",
                value: function (e) {
                  return (this.crossOrigin = e), this;
                },
              },
              {
                key: "setWithCredentials",
                value: function (e) {
                  return (this.withCredentials = e), this;
                },
              },
              {
                key: "setPath",
                value: function (e) {
                  return (this.path = e), this;
                },
              },
              {
                key: "setResourcePath",
                value: function (e) {
                  return (this.resourcePath = e), this;
                },
              },
              {
                key: "setRequestHeader",
                value: function (e) {
                  return (this.requestHeader = e), this;
                },
              },
            ]),
            e
          );
        })(),
        Lm = {},
        Rm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this;
                  void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var a = Tm.get(e);
                  if (void 0 !== a)
                    return (
                      this.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(a), i.manager.itemEnd(e);
                      }, 0),
                      a
                    );
                  if (void 0 === Lm[e]) {
                    (Lm[e] = []),
                      Lm[e].push({ onLoad: t, onProgress: n, onError: r });
                    var o = new Request(e, {
                        headers: new Headers(this.requestHeader),
                        credentials: this.withCredentials
                          ? "include"
                          : "same-origin",
                      }),
                      s = this.mimeType,
                      l = this.responseType;
                    fetch(o)
                      .then(function (t) {
                        if (200 === t.status || 0 === t.status) {
                          if (
                            (0 === t.status &&
                              console.warn(
                                "THREE.FileLoader: HTTP Status 0 received."
                              ),
                            "undefined" === typeof ReadableStream ||
                              void 0 === t.body ||
                              void 0 === t.body.getReader)
                          )
                            return t;
                          var n = Lm[e],
                            r = t.body.getReader(),
                            i = t.headers.get("Content-Length"),
                            a = i ? parseInt(i) : 0,
                            o = 0 !== a,
                            s = 0,
                            l = new ReadableStream({
                              start: function (e) {
                                !(function t() {
                                  r.read().then(function (r) {
                                    var i = r.done,
                                      l = r.value;
                                    if (i) e.close();
                                    else {
                                      s += l.byteLength;
                                      for (
                                        var u = new ProgressEvent("progress", {
                                            lengthComputable: o,
                                            loaded: s,
                                            total: a,
                                          }),
                                          c = 0,
                                          f = n.length;
                                        c < f;
                                        c++
                                      ) {
                                        var d = n[c];
                                        d.onProgress && d.onProgress(u);
                                      }
                                      e.enqueue(l), t();
                                    }
                                  });
                                })();
                              },
                            });
                          return new Response(l);
                        }
                        throw Error(
                          'fetch for "'
                            .concat(t.url, '" responded with ')
                            .concat(t.status, ": ")
                            .concat(t.statusText)
                        );
                      })
                      .then(function (e) {
                        switch (l) {
                          case "arraybuffer":
                            return e.arrayBuffer();
                          case "blob":
                            return e.blob();
                          case "document":
                            return e.text().then(function (e) {
                              return new DOMParser().parseFromString(e, s);
                            });
                          case "json":
                            return e.json();
                          default:
                            if (void 0 === s) return e.text();
                            var t = /charset="?([^;"\s]*)"?/i.exec(s),
                              n = t && t[1] ? t[1].toLowerCase() : void 0,
                              r = new TextDecoder(n);
                            return e.arrayBuffer().then(function (e) {
                              return r.decode(e);
                            });
                        }
                      })
                      .then(function (t) {
                        Tm.add(e, t);
                        var n = Lm[e];
                        delete Lm[e];
                        for (var r = 0, i = n.length; r < i; r++) {
                          var a = n[r];
                          a.onLoad && a.onLoad(t);
                        }
                      })
                      .catch(function (t) {
                        var n = Lm[e];
                        if (void 0 === n) throw (i.manager.itemError(e), t);
                        delete Lm[e];
                        for (var r = 0, a = n.length; r < a; r++) {
                          var o = n[r];
                          o.onError && o.onError(t);
                        }
                        i.manager.itemError(e);
                      })
                      .finally(function () {
                        i.manager.itemEnd(e);
                      }),
                      this.manager.itemStart(e);
                  } else Lm[e].push({ onLoad: t, onProgress: n, onError: r });
                },
              },
              {
                key: "setResponseType",
                value: function (e) {
                  return (this.responseType = e), this;
                },
              },
              {
                key: "setMimeType",
                value: function (e) {
                  return (this.mimeType = e), this;
                },
              },
            ]),
            n
          );
        })(Pm),
        Om = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new Rm(this.manager);
                  a.setPath(this.path),
                    a.setRequestHeader(this.requestHeader),
                    a.setWithCredentials(this.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          t(i.parse(JSON.parse(n)));
                        } catch ($y) {
                          r ? r($y) : console.error($y), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "parse",
                value: function (e) {
                  for (var t = [], n = 0; n < e.length; n++) {
                    var r = Em.parse(e[n]);
                    t.push(r);
                  }
                  return t;
                },
              },
            ]),
            n
          );
        })(Pm),
        zm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = [],
                    o = new Ap(),
                    s = new Rm(this.manager);
                  s.setPath(this.path),
                    s.setResponseType("arraybuffer"),
                    s.setRequestHeader(this.requestHeader),
                    s.setWithCredentials(i.withCredentials);
                  var l = 0;
                  function u(u) {
                    s.load(
                      e[u],
                      function (e) {
                        var n = i.parse(e, !0);
                        (a[u] = {
                          width: n.width,
                          height: n.height,
                          format: n.format,
                          mipmaps: n.mipmaps,
                        }),
                          6 === (l += 1) &&
                            (1 === n.mipmapCount && (o.minFilter = Aa),
                            (o.image = a),
                            (o.format = n.format),
                            (o.needsUpdate = !0),
                            t && t(o));
                      },
                      n,
                      r
                    );
                  }
                  if (Array.isArray(e))
                    for (var c = 0, f = e.length; c < f; ++c) u(c);
                  else
                    s.load(
                      e,
                      function (e) {
                        var n = i.parse(e, !0);
                        if (n.isCubemap) {
                          for (
                            var r = n.mipmaps.length / n.mipmapCount, s = 0;
                            s < r;
                            s++
                          ) {
                            a[s] = { mipmaps: [] };
                            for (var l = 0; l < n.mipmapCount; l++)
                              a[s].mipmaps.push(
                                n.mipmaps[s * n.mipmapCount + l]
                              ),
                                (a[s].format = n.format),
                                (a[s].width = n.width),
                                (a[s].height = n.height);
                          }
                          o.image = a;
                        } else
                          (o.image.width = n.width),
                            (o.image.height = n.height),
                            (o.mipmaps = n.mipmaps);
                        1 === n.mipmapCount && (o.minFilter = Aa),
                          (o.format = n.format),
                          (o.needsUpdate = !0),
                          t && t(o);
                      },
                      n,
                      r
                    );
                  return o;
                },
              },
            ]),
            n
          );
        })(Pm),
        Dm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var i = this,
                    a = Tm.get(e);
                  if (void 0 !== a)
                    return (
                      i.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(a), i.manager.itemEnd(e);
                      }, 0),
                      a
                    );
                  var o = qs("img");
                  function s() {
                    u(), Tm.add(e, this), t && t(this), i.manager.itemEnd(e);
                  }
                  function l(t) {
                    u(),
                      r && r(t),
                      i.manager.itemError(e),
                      i.manager.itemEnd(e);
                  }
                  function u() {
                    o.removeEventListener("load", s, !1),
                      o.removeEventListener("error", l, !1);
                  }
                  return (
                    o.addEventListener("load", s, !1),
                    o.addEventListener("error", l, !1),
                    "data:" !== e.slice(0, 5) &&
                      void 0 !== this.crossOrigin &&
                      (o.crossOrigin = this.crossOrigin),
                    i.manager.itemStart(e),
                    (o.src = e),
                    o
                  );
                },
              },
            ]),
            n
          );
        })(Pm),
        Im = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = new Pc(),
                    a = new Dm(this.manager);
                  a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
                  var o = 0;
                  function s(n) {
                    a.load(
                      e[n],
                      function (e) {
                        (i.images[n] = e),
                          6 === ++o && ((i.needsUpdate = !0), t && t(i));
                      },
                      void 0,
                      r
                    );
                  }
                  for (var l = 0; l < e.length; ++l) s(l);
                  return i;
                },
              },
            ]),
            n
          );
        })(Pm),
        Nm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new Kh(),
                    o = new Rm(this.manager);
                  return (
                    o.setResponseType("arraybuffer"),
                    o.setRequestHeader(this.requestHeader),
                    o.setPath(this.path),
                    o.setWithCredentials(i.withCredentials),
                    o.load(
                      e,
                      function (e) {
                        var n = i.parse(e);
                        n &&
                          (void 0 !== n.image
                            ? (a.image = n.image)
                            : void 0 !== n.data &&
                              ((a.image.width = n.width),
                              (a.image.height = n.height),
                              (a.image.data = n.data)),
                          (a.wrapS = void 0 !== n.wrapS ? n.wrapS : _a),
                          (a.wrapT = void 0 !== n.wrapT ? n.wrapT : _a),
                          (a.magFilter =
                            void 0 !== n.magFilter ? n.magFilter : Aa),
                          (a.minFilter =
                            void 0 !== n.minFilter ? n.minFilter : Aa),
                          (a.anisotropy =
                            void 0 !== n.anisotropy ? n.anisotropy : 1),
                          void 0 !== n.encoding && (a.encoding = n.encoding),
                          void 0 !== n.flipY && (a.flipY = n.flipY),
                          void 0 !== n.format && (a.format = n.format),
                          void 0 !== n.type && (a.type = n.type),
                          void 0 !== n.mipmaps &&
                            ((a.mipmaps = n.mipmaps), (a.minFilter = Ra)),
                          1 === n.mipmapCount && (a.minFilter = Aa),
                          void 0 !== n.generateMipmaps &&
                            (a.generateMipmaps = n.generateMipmaps),
                          (a.needsUpdate = !0),
                          t && t(a, n));
                      },
                      n,
                      r
                    ),
                    a
                  );
                },
              },
            ]),
            n
          );
        })(Pm),
        Fm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = new ul(),
                    a = new Dm(this.manager);
                  return (
                    a.setCrossOrigin(this.crossOrigin),
                    a.setPath(this.path),
                    a.load(
                      e,
                      function (e) {
                        (i.image = e),
                          (i.needsUpdate = !0),
                          void 0 !== t && t(i);
                      },
                      n,
                      r
                    ),
                    i
                  );
                },
              },
            ]),
            n
          );
        })(Pm),
        Bm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            return (
              Kr(this, n),
              ((r = t.call(this)).type = "Light"),
              (r.color = new il(e)),
              (r.intensity = i),
              r
            );
          }
          return (
            ti(n, [
              { key: "dispose", value: function () {} },
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.intensity = e.intensity),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = fi(ri(n.prototype), "toJSON", this).call(this, e);
                  return (
                    (t.object.color = this.color.getHex()),
                    (t.object.intensity = this.intensity),
                    void 0 !== this.groundColor &&
                      (t.object.groundColor = this.groundColor.getHex()),
                    void 0 !== this.distance &&
                      (t.object.distance = this.distance),
                    void 0 !== this.angle && (t.object.angle = this.angle),
                    void 0 !== this.decay && (t.object.decay = this.decay),
                    void 0 !== this.penumbra &&
                      (t.object.penumbra = this.penumbra),
                    void 0 !== this.shadow &&
                      (t.object.shadow = this.shadow.toJSON()),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(xu);
      Bm.prototype.isLight = !0;
      var Hm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i) {
          var a;
          return (
            Kr(this, n),
            ((a = t.call(this, e, i)).type = "HemisphereLight"),
            a.position.copy(xu.DefaultUp),
            a.updateMatrix(),
            (a.groundColor = new il(r)),
            a
          );
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  Bm.prototype.copy.call(this, e),
                  this.groundColor.copy(e.groundColor),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Bm);
      Hm.prototype.isHemisphereLight = !0;
      var Um = new Jl(),
        jm = new yl(),
        Gm = new yl(),
        Wm = (function () {
          function e(t) {
            Kr(this, e),
              (this.camera = t),
              (this.bias = 0),
              (this.normalBias = 0),
              (this.radius = 1),
              (this.blurSamples = 8),
              (this.mapSize = new Us(512, 512)),
              (this.map = null),
              (this.mapPass = null),
              (this.matrix = new Jl()),
              (this.autoUpdate = !0),
              (this.needsUpdate = !1),
              (this._frustum = new Fc()),
              (this._frameExtents = new Us(1, 1)),
              (this._viewportCount = 1),
              (this._viewports = [new cl(0, 0, 1, 1)]);
          }
          return (
            ti(e, [
              {
                key: "getViewportCount",
                value: function () {
                  return this._viewportCount;
                },
              },
              {
                key: "getFrustum",
                value: function () {
                  return this._frustum;
                },
              },
              {
                key: "updateMatrices",
                value: function (e) {
                  var t = this.camera,
                    n = this.matrix;
                  jm.setFromMatrixPosition(e.matrixWorld),
                    t.position.copy(jm),
                    Gm.setFromMatrixPosition(e.target.matrixWorld),
                    t.lookAt(Gm),
                    t.updateMatrixWorld(),
                    Um.multiplyMatrices(
                      t.projectionMatrix,
                      t.matrixWorldInverse
                    ),
                    this._frustum.setFromProjectionMatrix(Um),
                    n.set(
                      0.5,
                      0,
                      0,
                      0.5,
                      0,
                      0.5,
                      0,
                      0.5,
                      0,
                      0,
                      0.5,
                      0.5,
                      0,
                      0,
                      0,
                      1
                    ),
                    n.multiply(t.projectionMatrix),
                    n.multiply(t.matrixWorldInverse);
                },
              },
              {
                key: "getViewport",
                value: function (e) {
                  return this._viewports[e];
                },
              },
              {
                key: "getFrameExtents",
                value: function () {
                  return this._frameExtents;
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.map && this.map.dispose(),
                    this.mapPass && this.mapPass.dispose();
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.camera = e.camera.clone()),
                    (this.bias = e.bias),
                    (this.radius = e.radius),
                    this.mapSize.copy(e.mapSize),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {};
                  return (
                    0 !== this.bias && (e.bias = this.bias),
                    0 !== this.normalBias && (e.normalBias = this.normalBias),
                    1 !== this.radius && (e.radius = this.radius),
                    (512 === this.mapSize.x && 512 === this.mapSize.y) ||
                      (e.mapSize = this.mapSize.toArray()),
                    (e.camera = this.camera.toJSON(!1).object),
                    delete e.camera.matrix,
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        Vm = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e;
            return (
              Kr(this, n),
              ((e = t.call(this, new Tc(50, 1, 0.5, 500))).focus = 1),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "updateMatrices",
                value: function (e) {
                  var t = this.camera,
                    r = 2 * Rs * e.angle * this.focus,
                    i = this.mapSize.width / this.mapSize.height,
                    a = e.distance || t.far;
                  (r === t.fov && i === t.aspect && a === t.far) ||
                    ((t.fov = r),
                    (t.aspect = i),
                    (t.far = a),
                    t.updateProjectionMatrix()),
                    fi(ri(n.prototype), "updateMatrices", this).call(this, e);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.focus = e.focus),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Wm);
      Vm.prototype.isSpotLightShadow = !0;
      var qm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r) {
          var i,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : Math.PI / 3,
            s =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 0,
            l =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : 1;
          return (
            Kr(this, n),
            ((i = t.call(this, e, r)).type = "SpotLight"),
            i.position.copy(xu.DefaultUp),
            i.updateMatrix(),
            (i.target = new xu()),
            (i.distance = a),
            (i.angle = o),
            (i.penumbra = s),
            (i.decay = l),
            (i.shadow = new Vm()),
            i
          );
        }
        return (
          ti(n, [
            {
              key: "power",
              get: function () {
                return this.intensity * Math.PI;
              },
              set: function (e) {
                this.intensity = e / Math.PI;
              },
            },
            {
              key: "dispose",
              value: function () {
                this.shadow.dispose();
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.distance = e.distance),
                  (this.angle = e.angle),
                  (this.penumbra = e.penumbra),
                  (this.decay = e.decay),
                  (this.target = e.target.clone()),
                  (this.shadow = e.shadow.clone()),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Bm);
      qm.prototype.isSpotLight = !0;
      var Xm = new Jl(),
        Ym = new yl(),
        Jm = new yl(),
        $m = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e;
            return (
              Kr(this, n),
              ((e = t.call(this, new Tc(90, 1, 0.5, 500)))._frameExtents =
                new Us(4, 2)),
              (e._viewportCount = 6),
              (e._viewports = [
                new cl(2, 1, 1, 1),
                new cl(0, 1, 1, 1),
                new cl(3, 1, 1, 1),
                new cl(1, 1, 1, 1),
                new cl(3, 0, 1, 1),
                new cl(1, 0, 1, 1),
              ]),
              (e._cubeDirections = [
                new yl(1, 0, 0),
                new yl(-1, 0, 0),
                new yl(0, 0, 1),
                new yl(0, 0, -1),
                new yl(0, 1, 0),
                new yl(0, -1, 0),
              ]),
              (e._cubeUps = [
                new yl(0, 1, 0),
                new yl(0, 1, 0),
                new yl(0, 1, 0),
                new yl(0, 1, 0),
                new yl(0, 0, 1),
                new yl(0, 0, -1),
              ]),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "updateMatrices",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.camera,
                    r = this.matrix,
                    i = e.distance || n.far;
                  i !== n.far && ((n.far = i), n.updateProjectionMatrix()),
                    Ym.setFromMatrixPosition(e.matrixWorld),
                    n.position.copy(Ym),
                    Jm.copy(n.position),
                    Jm.add(this._cubeDirections[t]),
                    n.up.copy(this._cubeUps[t]),
                    n.lookAt(Jm),
                    n.updateMatrixWorld(),
                    r.makeTranslation(-Ym.x, -Ym.y, -Ym.z),
                    Xm.multiplyMatrices(
                      n.projectionMatrix,
                      n.matrixWorldInverse
                    ),
                    this._frustum.setFromProjectionMatrix(Xm);
                },
              },
            ]),
            n
          );
        })(Wm);
      $m.prototype.isPointLightShadow = !0;
      var Qm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r) {
          var i,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1;
          return (
            Kr(this, n),
            ((i = t.call(this, e, r)).type = "PointLight"),
            (i.distance = a),
            (i.decay = o),
            (i.shadow = new $m()),
            i
          );
        }
        return (
          ti(n, [
            {
              key: "power",
              get: function () {
                return 4 * this.intensity * Math.PI;
              },
              set: function (e) {
                this.intensity = e / (4 * Math.PI);
              },
            },
            {
              key: "dispose",
              value: function () {
                this.shadow.dispose();
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.distance = e.distance),
                  (this.decay = e.decay),
                  (this.shadow = e.shadow.clone()),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Bm);
      Qm.prototype.isPointLight = !0;
      var Zm = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          return Kr(this, n), t.call(this, new Qc(-5, 5, 5, -5, 0.5, 500));
        }
        return ti(n);
      })(Wm);
      Zm.prototype.isDirectionalLightShadow = !0;
      var Km = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r) {
          var i;
          return (
            Kr(this, n),
            ((i = t.call(this, e, r)).type = "DirectionalLight"),
            i.position.copy(xu.DefaultUp),
            i.updateMatrix(),
            (i.target = new xu()),
            (i.shadow = new Zm()),
            i
          );
        }
        return (
          ti(n, [
            {
              key: "dispose",
              value: function () {
                this.shadow.dispose();
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.target = e.target.clone()),
                  (this.shadow = e.shadow.clone()),
                  this
                );
              },
            },
          ]),
          n
        );
      })(Bm);
      Km.prototype.isDirectionalLight = !0;
      var eg = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r) {
          var i;
          return (
            Kr(this, n), ((i = t.call(this, e, r)).type = "AmbientLight"), i
          );
        }
        return ti(n);
      })(Bm);
      eg.prototype.isAmbientLight = !0;
      var tg = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r) {
          var i,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 10,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 10;
          return (
            Kr(this, n),
            ((i = t.call(this, e, r)).type = "RectAreaLight"),
            (i.width = a),
            (i.height = o),
            i
          );
        }
        return (
          ti(n, [
            {
              key: "power",
              get: function () {
                return this.intensity * this.width * this.height * Math.PI;
              },
              set: function (e) {
                this.intensity = e / (this.width * this.height * Math.PI);
              },
            },
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  (this.width = e.width),
                  (this.height = e.height),
                  this
                );
              },
            },
            {
              key: "toJSON",
              value: function (e) {
                var t = fi(ri(n.prototype), "toJSON", this).call(this, e);
                return (
                  (t.object.width = this.width),
                  (t.object.height = this.height),
                  t
                );
              },
            },
          ]),
          n
        );
      })(Bm);
      tg.prototype.isRectAreaLight = !0;
      var ng = (function () {
        function e() {
          Kr(this, e), (this.coefficients = []);
          for (var t = 0; t < 9; t++) this.coefficients.push(new yl());
        }
        return (
          ti(
            e,
            [
              {
                key: "set",
                value: function (e) {
                  for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
                  return this;
                },
              },
              {
                key: "zero",
                value: function () {
                  for (var e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
                  return this;
                },
              },
              {
                key: "getAt",
                value: function (e, t) {
                  var n = e.x,
                    r = e.y,
                    i = e.z,
                    a = this.coefficients;
                  return (
                    t.copy(a[0]).multiplyScalar(0.282095),
                    t.addScaledVector(a[1], 0.488603 * r),
                    t.addScaledVector(a[2], 0.488603 * i),
                    t.addScaledVector(a[3], 0.488603 * n),
                    t.addScaledVector(a[4], n * r * 1.092548),
                    t.addScaledVector(a[5], r * i * 1.092548),
                    t.addScaledVector(a[6], 0.315392 * (3 * i * i - 1)),
                    t.addScaledVector(a[7], n * i * 1.092548),
                    t.addScaledVector(a[8], 0.546274 * (n * n - r * r)),
                    t
                  );
                },
              },
              {
                key: "getIrradianceAt",
                value: function (e, t) {
                  var n = e.x,
                    r = e.y,
                    i = e.z,
                    a = this.coefficients;
                  return (
                    t.copy(a[0]).multiplyScalar(0.886227),
                    t.addScaledVector(a[1], 1.023328 * r),
                    t.addScaledVector(a[2], 1.023328 * i),
                    t.addScaledVector(a[3], 1.023328 * n),
                    t.addScaledVector(a[4], 0.858086 * n * r),
                    t.addScaledVector(a[5], 0.858086 * r * i),
                    t.addScaledVector(a[6], 0.743125 * i * i - 0.247708),
                    t.addScaledVector(a[7], 0.858086 * n * i),
                    t.addScaledVector(a[8], 0.429043 * (n * n - r * r)),
                    t
                  );
                },
              },
              {
                key: "add",
                value: function (e) {
                  for (var t = 0; t < 9; t++)
                    this.coefficients[t].add(e.coefficients[t]);
                  return this;
                },
              },
              {
                key: "addScaledSH",
                value: function (e, t) {
                  for (var n = 0; n < 9; n++)
                    this.coefficients[n].addScaledVector(e.coefficients[n], t);
                  return this;
                },
              },
              {
                key: "scale",
                value: function (e) {
                  for (var t = 0; t < 9; t++)
                    this.coefficients[t].multiplyScalar(e);
                  return this;
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  for (var n = 0; n < 9; n++)
                    this.coefficients[n].lerp(e.coefficients[n], t);
                  return this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  for (var t = 0; t < 9; t++)
                    if (!this.coefficients[t].equals(e.coefficients[t]))
                      return !1;
                  return !0;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.set(e.coefficients);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  for (
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n = this.coefficients,
                      r = 0;
                    r < 9;
                    r++
                  )
                    n[r].fromArray(e, t + 3 * r);
                  return this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : [],
                      t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n = this.coefficients,
                      r = 0;
                    r < 9;
                    r++
                  )
                    n[r].toArray(e, t + 3 * r);
                  return e;
                },
              },
            ],
            [
              {
                key: "getBasisAt",
                value: function (e, t) {
                  var n = e.x,
                    r = e.y,
                    i = e.z;
                  (t[0] = 0.282095),
                    (t[1] = 0.488603 * r),
                    (t[2] = 0.488603 * i),
                    (t[3] = 0.488603 * n),
                    (t[4] = 1.092548 * n * r),
                    (t[5] = 1.092548 * r * i),
                    (t[6] = 0.315392 * (3 * i * i - 1)),
                    (t[7] = 1.092548 * n * i),
                    (t[8] = 0.546274 * (n * n - r * r));
                },
              },
            ]
          ),
          e
        );
      })();
      ng.prototype.isSphericalHarmonics3 = !0;
      var rg = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : new ng(),
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
          return Kr(this, n), ((e = t.call(this, void 0, i)).sh = r), e;
        }
        return (
          ti(n, [
            {
              key: "copy",
              value: function (e) {
                return (
                  fi(ri(n.prototype), "copy", this).call(this, e),
                  this.sh.copy(e.sh),
                  this
                );
              },
            },
            {
              key: "fromJSON",
              value: function (e) {
                return (
                  (this.intensity = e.intensity), this.sh.fromArray(e.sh), this
                );
              },
            },
            {
              key: "toJSON",
              value: function (e) {
                var t = fi(ri(n.prototype), "toJSON", this).call(this, e);
                return (t.object.sh = this.sh.toArray()), t;
              },
            },
          ]),
          n
        );
      })(Bm);
      rg.prototype.isLightProbe = !0;
      var ig = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return Kr(this, n), ((r = t.call(this, e)).textures = {}), r;
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new Rm(i.manager);
                  a.setPath(i.path),
                    a.setRequestHeader(i.requestHeader),
                    a.setWithCredentials(i.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          t(i.parse(JSON.parse(n)));
                        } catch ($y) {
                          r ? r($y) : console.error($y), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "parse",
                value: function (e) {
                  var t = this.textures;
                  function n(e) {
                    return (
                      void 0 === t[e] &&
                        console.warn(
                          "THREE.MaterialLoader: Undefined texture",
                          e
                        ),
                      t[e]
                    );
                  }
                  var r = Ou.fromType(e.type);
                  if (
                    (void 0 !== e.uuid && (r.uuid = e.uuid),
                    void 0 !== e.name && (r.name = e.name),
                    void 0 !== e.color &&
                      void 0 !== r.color &&
                      r.color.setHex(e.color),
                    void 0 !== e.roughness && (r.roughness = e.roughness),
                    void 0 !== e.metalness && (r.metalness = e.metalness),
                    void 0 !== e.sheen && (r.sheen = e.sheen),
                    void 0 !== e.sheenColor &&
                      (r.sheenColor = new il().setHex(e.sheenColor)),
                    void 0 !== e.sheenRoughness &&
                      (r.sheenRoughness = e.sheenRoughness),
                    void 0 !== e.emissive &&
                      void 0 !== r.emissive &&
                      r.emissive.setHex(e.emissive),
                    void 0 !== e.specular &&
                      void 0 !== r.specular &&
                      r.specular.setHex(e.specular),
                    void 0 !== e.specularIntensity &&
                      (r.specularIntensity = e.specularIntensity),
                    void 0 !== e.specularColor &&
                      void 0 !== r.specularColor &&
                      r.specularColor.setHex(e.specularColor),
                    void 0 !== e.shininess && (r.shininess = e.shininess),
                    void 0 !== e.clearcoat && (r.clearcoat = e.clearcoat),
                    void 0 !== e.clearcoatRoughness &&
                      (r.clearcoatRoughness = e.clearcoatRoughness),
                    void 0 !== e.transmission &&
                      (r.transmission = e.transmission),
                    void 0 !== e.thickness && (r.thickness = e.thickness),
                    void 0 !== e.attenuationDistance &&
                      (r.attenuationDistance = e.attenuationDistance),
                    void 0 !== e.attenuationColor &&
                      void 0 !== r.attenuationColor &&
                      r.attenuationColor.setHex(e.attenuationColor),
                    void 0 !== e.fog && (r.fog = e.fog),
                    void 0 !== e.flatShading && (r.flatShading = e.flatShading),
                    void 0 !== e.blending && (r.blending = e.blending),
                    void 0 !== e.combine && (r.combine = e.combine),
                    void 0 !== e.side && (r.side = e.side),
                    void 0 !== e.shadowSide && (r.shadowSide = e.shadowSide),
                    void 0 !== e.opacity && (r.opacity = e.opacity),
                    void 0 !== e.transparent && (r.transparent = e.transparent),
                    void 0 !== e.alphaTest && (r.alphaTest = e.alphaTest),
                    void 0 !== e.depthTest && (r.depthTest = e.depthTest),
                    void 0 !== e.depthWrite && (r.depthWrite = e.depthWrite),
                    void 0 !== e.colorWrite && (r.colorWrite = e.colorWrite),
                    void 0 !== e.stencilWrite &&
                      (r.stencilWrite = e.stencilWrite),
                    void 0 !== e.stencilWriteMask &&
                      (r.stencilWriteMask = e.stencilWriteMask),
                    void 0 !== e.stencilFunc && (r.stencilFunc = e.stencilFunc),
                    void 0 !== e.stencilRef && (r.stencilRef = e.stencilRef),
                    void 0 !== e.stencilFuncMask &&
                      (r.stencilFuncMask = e.stencilFuncMask),
                    void 0 !== e.stencilFail && (r.stencilFail = e.stencilFail),
                    void 0 !== e.stencilZFail &&
                      (r.stencilZFail = e.stencilZFail),
                    void 0 !== e.stencilZPass &&
                      (r.stencilZPass = e.stencilZPass),
                    void 0 !== e.wireframe && (r.wireframe = e.wireframe),
                    void 0 !== e.wireframeLinewidth &&
                      (r.wireframeLinewidth = e.wireframeLinewidth),
                    void 0 !== e.wireframeLinecap &&
                      (r.wireframeLinecap = e.wireframeLinecap),
                    void 0 !== e.wireframeLinejoin &&
                      (r.wireframeLinejoin = e.wireframeLinejoin),
                    void 0 !== e.rotation && (r.rotation = e.rotation),
                    1 !== e.linewidth && (r.linewidth = e.linewidth),
                    void 0 !== e.dashSize && (r.dashSize = e.dashSize),
                    void 0 !== e.gapSize && (r.gapSize = e.gapSize),
                    void 0 !== e.scale && (r.scale = e.scale),
                    void 0 !== e.polygonOffset &&
                      (r.polygonOffset = e.polygonOffset),
                    void 0 !== e.polygonOffsetFactor &&
                      (r.polygonOffsetFactor = e.polygonOffsetFactor),
                    void 0 !== e.polygonOffsetUnits &&
                      (r.polygonOffsetUnits = e.polygonOffsetUnits),
                    void 0 !== e.dithering && (r.dithering = e.dithering),
                    void 0 !== e.alphaToCoverage &&
                      (r.alphaToCoverage = e.alphaToCoverage),
                    void 0 !== e.premultipliedAlpha &&
                      (r.premultipliedAlpha = e.premultipliedAlpha),
                    void 0 !== e.visible && (r.visible = e.visible),
                    void 0 !== e.toneMapped && (r.toneMapped = e.toneMapped),
                    void 0 !== e.userData && (r.userData = e.userData),
                    void 0 !== e.vertexColors &&
                      ("number" === typeof e.vertexColors
                        ? (r.vertexColors = e.vertexColors > 0)
                        : (r.vertexColors = e.vertexColors)),
                    void 0 !== e.uniforms)
                  )
                    for (var i in e.uniforms) {
                      var a = e.uniforms[i];
                      switch (((r.uniforms[i] = {}), a.type)) {
                        case "t":
                          r.uniforms[i].value = n(a.value);
                          break;
                        case "c":
                          r.uniforms[i].value = new il().setHex(a.value);
                          break;
                        case "v2":
                          r.uniforms[i].value = new Us().fromArray(a.value);
                          break;
                        case "v3":
                          r.uniforms[i].value = new yl().fromArray(a.value);
                          break;
                        case "v4":
                          r.uniforms[i].value = new cl().fromArray(a.value);
                          break;
                        case "m3":
                          r.uniforms[i].value = new js().fromArray(a.value);
                          break;
                        case "m4":
                          r.uniforms[i].value = new Jl().fromArray(a.value);
                          break;
                        default:
                          r.uniforms[i].value = a.value;
                      }
                    }
                  if (
                    (void 0 !== e.defines && (r.defines = e.defines),
                    void 0 !== e.vertexShader &&
                      (r.vertexShader = e.vertexShader),
                    void 0 !== e.fragmentShader &&
                      (r.fragmentShader = e.fragmentShader),
                    void 0 !== e.extensions)
                  )
                    for (var o in e.extensions)
                      r.extensions[o] = e.extensions[o];
                  if (
                    (void 0 !== e.shading && (r.flatShading = 1 === e.shading),
                    void 0 !== e.size && (r.size = e.size),
                    void 0 !== e.sizeAttenuation &&
                      (r.sizeAttenuation = e.sizeAttenuation),
                    void 0 !== e.map && (r.map = n(e.map)),
                    void 0 !== e.matcap && (r.matcap = n(e.matcap)),
                    void 0 !== e.alphaMap && (r.alphaMap = n(e.alphaMap)),
                    void 0 !== e.bumpMap && (r.bumpMap = n(e.bumpMap)),
                    void 0 !== e.bumpScale && (r.bumpScale = e.bumpScale),
                    void 0 !== e.normalMap && (r.normalMap = n(e.normalMap)),
                    void 0 !== e.normalMapType &&
                      (r.normalMapType = e.normalMapType),
                    void 0 !== e.normalScale)
                  ) {
                    var s = e.normalScale;
                    !1 === Array.isArray(s) && (s = [s, s]),
                      (r.normalScale = new Us().fromArray(s));
                  }
                  return (
                    void 0 !== e.displacementMap &&
                      (r.displacementMap = n(e.displacementMap)),
                    void 0 !== e.displacementScale &&
                      (r.displacementScale = e.displacementScale),
                    void 0 !== e.displacementBias &&
                      (r.displacementBias = e.displacementBias),
                    void 0 !== e.roughnessMap &&
                      (r.roughnessMap = n(e.roughnessMap)),
                    void 0 !== e.metalnessMap &&
                      (r.metalnessMap = n(e.metalnessMap)),
                    void 0 !== e.emissiveMap &&
                      (r.emissiveMap = n(e.emissiveMap)),
                    void 0 !== e.emissiveIntensity &&
                      (r.emissiveIntensity = e.emissiveIntensity),
                    void 0 !== e.specularMap &&
                      (r.specularMap = n(e.specularMap)),
                    void 0 !== e.specularIntensityMap &&
                      (r.specularIntensityMap = n(e.specularIntensityMap)),
                    void 0 !== e.specularColorMap &&
                      (r.specularColorMap = n(e.specularColorMap)),
                    void 0 !== e.envMap && (r.envMap = n(e.envMap)),
                    void 0 !== e.envMapIntensity &&
                      (r.envMapIntensity = e.envMapIntensity),
                    void 0 !== e.reflectivity &&
                      (r.reflectivity = e.reflectivity),
                    void 0 !== e.refractionRatio &&
                      (r.refractionRatio = e.refractionRatio),
                    void 0 !== e.lightMap && (r.lightMap = n(e.lightMap)),
                    void 0 !== e.lightMapIntensity &&
                      (r.lightMapIntensity = e.lightMapIntensity),
                    void 0 !== e.aoMap && (r.aoMap = n(e.aoMap)),
                    void 0 !== e.aoMapIntensity &&
                      (r.aoMapIntensity = e.aoMapIntensity),
                    void 0 !== e.gradientMap &&
                      (r.gradientMap = n(e.gradientMap)),
                    void 0 !== e.clearcoatMap &&
                      (r.clearcoatMap = n(e.clearcoatMap)),
                    void 0 !== e.clearcoatRoughnessMap &&
                      (r.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)),
                    void 0 !== e.clearcoatNormalMap &&
                      (r.clearcoatNormalMap = n(e.clearcoatNormalMap)),
                    void 0 !== e.clearcoatNormalScale &&
                      (r.clearcoatNormalScale = new Us().fromArray(
                        e.clearcoatNormalScale
                      )),
                    void 0 !== e.transmissionMap &&
                      (r.transmissionMap = n(e.transmissionMap)),
                    void 0 !== e.thicknessMap &&
                      (r.thicknessMap = n(e.thicknessMap)),
                    void 0 !== e.sheenColorMap &&
                      (r.sheenColorMap = n(e.sheenColorMap)),
                    void 0 !== e.sheenRoughnessMap &&
                      (r.sheenRoughnessMap = n(e.sheenRoughnessMap)),
                    r
                  );
                },
              },
              {
                key: "setTextures",
                value: function (e) {
                  return (this.textures = e), this;
                },
              },
            ]),
            n
          );
        })(Pm),
        ag = (function () {
          function e() {
            Kr(this, e);
          }
          return (
            ti(e, null, [
              {
                key: "decodeText",
                value: function (e) {
                  if ("undefined" !== typeof TextDecoder)
                    return new TextDecoder().decode(e);
                  for (var t = "", n = 0, r = e.length; n < r; n++)
                    t += String.fromCharCode(e[n]);
                  try {
                    return decodeURIComponent(escape(t));
                  } catch ($y) {
                    return t;
                  }
                },
              },
              {
                key: "extractUrlBase",
                value: function (e) {
                  var t = e.lastIndexOf("/");
                  return -1 === t ? "./" : e.slice(0, t + 1);
                },
              },
              {
                key: "resolveURL",
                value: function (e, t) {
                  return "string" !== typeof e || "" === e
                    ? ""
                    : (/^https?:\/\//i.test(t) &&
                        /^\//.test(e) &&
                        (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")),
                      /^(https?:)?\/\//i.test(e) ||
                      /^data:.*,.*$/i.test(e) ||
                      /^blob:.*$/i.test(e)
                        ? e
                        : t + e);
                },
              },
            ]),
            e
          );
        })(),
        og = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e;
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "InstancedBufferGeometry"),
              (e.instanceCount = 1 / 0),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.instanceCount = e.instanceCount),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = fi(ri(n.prototype), "toJSON", this).call(this, this);
                  return (
                    (e.instanceCount = this.instanceCount),
                    (e.isInstancedBufferGeometry = !0),
                    e
                  );
                },
              },
            ]),
            n
          );
        })(tc);
      og.prototype.isInstancedBufferGeometry = !0;
      var sg,
        lg = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new Rm(i.manager);
                  a.setPath(i.path),
                    a.setRequestHeader(i.requestHeader),
                    a.setWithCredentials(i.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          t(i.parse(JSON.parse(n)));
                        } catch ($y) {
                          r ? r($y) : console.error($y), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "parse",
                value: function (e) {
                  var t = {},
                    n = {};
                  function r(e, r) {
                    if (void 0 !== t[r]) return t[r];
                    var i = e.interleavedBuffers[r],
                      a = (function (e, t) {
                        if (void 0 !== n[t]) return n[t];
                        var r = e.arrayBuffers[t],
                          i = new Uint32Array(r).buffer;
                        return (n[t] = i), i;
                      })(e, i.buffer),
                      o = Vs(i.type, a),
                      s = new Mh(o, i.stride);
                    return (s.uuid = i.uuid), (t[r] = s), s;
                  }
                  var i = e.isInstancedBufferGeometry ? new og() : new tc(),
                    a = e.data.index;
                  if (void 0 !== a) {
                    var o = Vs(a.type, a.array);
                    i.setIndex(new Nu(o, 1));
                  }
                  var s = e.data.attributes;
                  for (var l in s) {
                    var u = s[l],
                      c = void 0;
                    if (u.isInterleavedBufferAttribute) {
                      var f = r(e.data, u.data);
                      c = new kh(f, u.itemSize, u.offset, u.normalized);
                    } else {
                      var d = Vs(u.type, u.array);
                      c = new (u.isInstancedBufferAttribute ? rp : Nu)(
                        d,
                        u.itemSize,
                        u.normalized
                      );
                    }
                    void 0 !== u.name && (c.name = u.name),
                      void 0 !== u.usage && c.setUsage(u.usage),
                      void 0 !== u.updateRange &&
                        ((c.updateRange.offset = u.updateRange.offset),
                        (c.updateRange.count = u.updateRange.count)),
                      i.setAttribute(l, c);
                  }
                  var h = e.data.morphAttributes;
                  if (h)
                    for (var p in h) {
                      for (
                        var v = h[p], m = [], g = 0, y = v.length;
                        g < y;
                        g++
                      ) {
                        var b = v[g],
                          x = void 0;
                        if (b.isInterleavedBufferAttribute) {
                          var w = r(e.data, b.data);
                          x = new kh(w, b.itemSize, b.offset, b.normalized);
                        } else {
                          var _ = Vs(b.type, b.array);
                          x = new Nu(_, b.itemSize, b.normalized);
                        }
                        void 0 !== b.name && (x.name = b.name), m.push(x);
                      }
                      i.morphAttributes[p] = m;
                    }
                  e.data.morphTargetsRelative && (i.morphTargetsRelative = !0);
                  var S = e.data.groups || e.data.drawcalls || e.data.offsets;
                  if (void 0 !== S)
                    for (var M = 0, E = S.length; M !== E; ++M) {
                      var k = S[M];
                      i.addGroup(k.start, k.count, k.materialIndex);
                    }
                  var T = e.data.boundingSphere;
                  if (void 0 !== T) {
                    var C = new yl();
                    void 0 !== T.center && C.fromArray(T.center),
                      (i.boundingSphere = new Hl(C, T.radius));
                  }
                  return (
                    e.name && (i.name = e.name),
                    e.userData && (i.userData = e.userData),
                    i
                  );
                },
              },
            ]),
            n
          );
        })(Pm),
        ug = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = "" === this.path ? ag.extractUrlBase(e) : this.path;
                  this.resourcePath = this.resourcePath || a;
                  var o = new Rm(this.manager);
                  o.setPath(this.path),
                    o.setRequestHeader(this.requestHeader),
                    o.setWithCredentials(this.withCredentials),
                    o.load(
                      e,
                      function (n) {
                        var a = null;
                        try {
                          a = JSON.parse(n);
                        } catch (s) {
                          return (
                            void 0 !== r && r(s),
                            void console.error(
                              "THREE:ObjectLoader: Can't parse " + e + ".",
                              s.message
                            )
                          );
                        }
                        var o = a.metadata;
                        void 0 !== o &&
                        void 0 !== o.type &&
                        "geometry" !== o.type.toLowerCase()
                          ? i.parse(a, t)
                          : console.error(
                              "THREE.ObjectLoader: Can't load " + e
                            );
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "loadAsync",
                value: (function () {
                  var e = ui(
                    hi.mark(function e(t, n) {
                      var r, i, a, o, s, l;
                      return hi.wrap(
                        function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                return (
                                  (r = this),
                                  (i =
                                    "" === this.path
                                      ? ag.extractUrlBase(t)
                                      : this.path),
                                  (this.resourcePath = this.resourcePath || i),
                                  (a = new Rm(this.manager)).setPath(this.path),
                                  a.setRequestHeader(this.requestHeader),
                                  a.setWithCredentials(this.withCredentials),
                                  (e.next = 9),
                                  a.loadAsync(t, n)
                                );
                              case 9:
                                if (
                                  ((o = e.sent),
                                  (s = JSON.parse(o)),
                                  void 0 !== (l = s.metadata) &&
                                    void 0 !== l.type &&
                                    "geometry" !== l.type.toLowerCase())
                                ) {
                                  e.next = 14;
                                  break;
                                }
                                throw new Error(
                                  "THREE.ObjectLoader: Can't load " + t
                                );
                              case 14:
                                return (e.next = 16), r.parseAsync(s);
                              case 16:
                                return e.abrupt("return", e.sent);
                              case 17:
                              case "end":
                                return e.stop();
                            }
                        },
                        e,
                        this
                      );
                    })
                  );
                  return function (t, n) {
                    return e.apply(this, arguments);
                  };
                })(),
              },
              {
                key: "parse",
                value: function (e, t) {
                  var n = this.parseAnimations(e.animations),
                    r = this.parseShapes(e.shapes),
                    i = this.parseGeometries(e.geometries, r),
                    a = this.parseImages(e.images, function () {
                      void 0 !== t && t(l);
                    }),
                    o = this.parseTextures(e.textures, a),
                    s = this.parseMaterials(e.materials, o),
                    l = this.parseObject(e.object, i, s, o, n),
                    u = this.parseSkeletons(e.skeletons, l);
                  if ((this.bindSkeletons(l, u), void 0 !== t)) {
                    var c = !1;
                    for (var f in a)
                      if (a[f] instanceof HTMLImageElement) {
                        c = !0;
                        break;
                      }
                    !1 === c && t(l);
                  }
                  return l;
                },
              },
              {
                key: "parseAsync",
                value: (function () {
                  var e = ui(
                    hi.mark(function e(t) {
                      var n, r, i, a, o, s, l, u;
                      return hi.wrap(
                        function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                return (
                                  (n = this.parseAnimations(t.animations)),
                                  (r = this.parseShapes(t.shapes)),
                                  (i = this.parseGeometries(t.geometries, r)),
                                  (e.next = 5),
                                  this.parseImagesAsync(t.images)
                                );
                              case 5:
                                return (
                                  (a = e.sent),
                                  (o = this.parseTextures(t.textures, a)),
                                  (s = this.parseMaterials(t.materials, o)),
                                  (l = this.parseObject(t.object, i, s, o, n)),
                                  (u = this.parseSkeletons(t.skeletons, l)),
                                  this.bindSkeletons(l, u),
                                  e.abrupt("return", l)
                                );
                              case 12:
                              case "end":
                                return e.stop();
                            }
                        },
                        e,
                        this
                      );
                    })
                  );
                  return function (t) {
                    return e.apply(this, arguments);
                  };
                })(),
              },
              {
                key: "parseShapes",
                value: function (e) {
                  var t = {};
                  if (void 0 !== e)
                    for (var n = 0, r = e.length; n < r; n++) {
                      var i = new fv().fromJSON(e[n]);
                      t[i.uuid] = i;
                    }
                  return t;
                },
              },
              {
                key: "parseSkeletons",
                value: function (e, t) {
                  var n = {},
                    r = {};
                  if (
                    (t.traverse(function (e) {
                      e.isBone && (r[e.uuid] = e);
                    }),
                    void 0 !== e)
                  )
                    for (var i = 0, a = e.length; i < a; i++) {
                      var o = new np().fromJSON(e[i], r);
                      n[o.uuid] = o;
                    }
                  return n;
                },
              },
              {
                key: "parseGeometries",
                value: function (e, t) {
                  var n = {};
                  if (void 0 !== e)
                    for (var r = new lg(), i = 0, a = e.length; i < a; i++) {
                      var o = void 0,
                        s = e[i];
                      switch (s.type) {
                        case "BufferGeometry":
                        case "InstancedBufferGeometry":
                          o = r.parse(s);
                          break;
                        case "Geometry":
                          console.error(
                            "THREE.ObjectLoader: The legacy Geometry type is no longer supported."
                          );
                          break;
                        default:
                          s.type in em
                            ? (o = em[s.type].fromJSON(s, t))
                            : console.warn(
                                'THREE.ObjectLoader: Unsupported geometry type "'.concat(
                                  s.type,
                                  '"'
                                )
                              );
                      }
                      (o.uuid = s.uuid),
                        void 0 !== s.name && (o.name = s.name),
                        !0 === o.isBufferGeometry &&
                          void 0 !== s.userData &&
                          (o.userData = s.userData),
                        (n[s.uuid] = o);
                    }
                  return n;
                },
              },
              {
                key: "parseMaterials",
                value: function (e, t) {
                  var n = {},
                    r = {};
                  if (void 0 !== e) {
                    var i = new ig();
                    i.setTextures(t);
                    for (var a = 0, o = e.length; a < o; a++) {
                      var s = e[a];
                      if ("MultiMaterial" === s.type) {
                        for (var l = [], u = 0; u < s.materials.length; u++) {
                          var c = s.materials[u];
                          void 0 === n[c.uuid] && (n[c.uuid] = i.parse(c)),
                            l.push(n[c.uuid]);
                        }
                        r[s.uuid] = l;
                      } else
                        void 0 === n[s.uuid] && (n[s.uuid] = i.parse(s)),
                          (r[s.uuid] = n[s.uuid]);
                    }
                  }
                  return r;
                },
              },
              {
                key: "parseAnimations",
                value: function (e) {
                  var t = {};
                  if (void 0 !== e)
                    for (var n = 0; n < e.length; n++) {
                      var r = e[n],
                        i = Em.parse(r);
                      t[i.uuid] = i;
                    }
                  return t;
                },
              },
              {
                key: "parseImages",
                value: function (e, t) {
                  var n,
                    r = this,
                    i = {};
                  function a(e) {
                    if ("string" === typeof e) {
                      var t = e;
                      return (function (e) {
                        return (
                          r.manager.itemStart(e),
                          n.load(
                            e,
                            function () {
                              r.manager.itemEnd(e);
                            },
                            void 0,
                            function () {
                              r.manager.itemError(e), r.manager.itemEnd(e);
                            }
                          )
                        );
                      })(
                        /^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)
                          ? t
                          : r.resourcePath + t
                      );
                    }
                    return e.data
                      ? {
                          data: Vs(e.type, e.data),
                          width: e.width,
                          height: e.height,
                        }
                      : null;
                  }
                  if (void 0 !== e && e.length > 0) {
                    var o = new Cm(t);
                    (n = new Dm(o)).setCrossOrigin(this.crossOrigin);
                    for (var s = 0, l = e.length; s < l; s++) {
                      var u = e[s],
                        c = u.url;
                      if (Array.isArray(c)) {
                        for (var f = [], d = 0, h = c.length; d < h; d++) {
                          var p = a(c[d]);
                          null !== p &&
                            (p instanceof HTMLImageElement
                              ? f.push(p)
                              : f.push(new Kh(p.data, p.width, p.height)));
                        }
                        i[u.uuid] = new ol(f);
                      } else {
                        var v = a(u.url);
                        i[u.uuid] = new ol(v);
                      }
                    }
                  }
                  return i;
                },
              },
              {
                key: "parseImagesAsync",
                value: (function () {
                  var e = ui(
                    hi.mark(function e(t) {
                      var n, r, i, a, o, s, l, u, c, f, d, h, p, v, m;
                      return hi.wrap(
                        function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                if (
                                  ((o = function () {
                                    return (
                                      (o = ui(
                                        hi.mark(function e(t) {
                                          var r, a;
                                          return hi.wrap(function (e) {
                                            for (;;)
                                              switch ((e.prev = e.next)) {
                                                case 0:
                                                  if ("string" !== typeof t) {
                                                    e.next = 8;
                                                    break;
                                                  }
                                                  return (
                                                    (a =
                                                      /^(\/\/)|([a-z]+:(\/\/)?)/i.test(
                                                        (r = t)
                                                      )
                                                        ? r
                                                        : n.resourcePath + r),
                                                    (e.next = 5),
                                                    i.loadAsync(a)
                                                  );
                                                case 5:
                                                  return e.abrupt(
                                                    "return",
                                                    e.sent
                                                  );
                                                case 8:
                                                  if (!t.data) {
                                                    e.next = 12;
                                                    break;
                                                  }
                                                  return e.abrupt("return", {
                                                    data: Vs(t.type, t.data),
                                                    width: t.width,
                                                    height: t.height,
                                                  });
                                                case 12:
                                                  return e.abrupt(
                                                    "return",
                                                    null
                                                  );
                                                case 13:
                                                case "end":
                                                  return e.stop();
                                              }
                                          }, e);
                                        })
                                      )),
                                      o.apply(this, arguments)
                                    );
                                  }),
                                  (a = function (e) {
                                    return o.apply(this, arguments);
                                  }),
                                  (n = this),
                                  (r = {}),
                                  !(void 0 !== t && t.length > 0))
                                ) {
                                  e.next = 33;
                                  break;
                                }
                                (i = new Dm(this.manager)).setCrossOrigin(
                                  this.crossOrigin
                                ),
                                  (s = 0),
                                  (l = t.length);
                              case 8:
                                if (!(s < l)) {
                                  e.next = 33;
                                  break;
                                }
                                if (
                                  ((u = t[s]), (c = u.url), !Array.isArray(c))
                                ) {
                                  e.next = 26;
                                  break;
                                }
                                (f = []), (d = 0), (h = c.length);
                              case 14:
                                if (!(d < h)) {
                                  e.next = 23;
                                  break;
                                }
                                return (p = c[d]), (e.next = 18), a(p);
                              case 18:
                                null !== (v = e.sent) &&
                                  (v instanceof HTMLImageElement
                                    ? f.push(v)
                                    : f.push(
                                        new Kh(v.data, v.width, v.height)
                                      ));
                              case 20:
                                d++, (e.next = 14);
                                break;
                              case 23:
                                (r[u.uuid] = new ol(f)), (e.next = 30);
                                break;
                              case 26:
                                return (e.next = 28), a(u.url);
                              case 28:
                                (m = e.sent), (r[u.uuid] = new ol(m));
                              case 30:
                                s++, (e.next = 8);
                                break;
                              case 33:
                                return e.abrupt("return", r);
                              case 34:
                              case "end":
                                return e.stop();
                            }
                        },
                        e,
                        this
                      );
                    })
                  );
                  return function (t) {
                    return e.apply(this, arguments);
                  };
                })(),
              },
              {
                key: "parseTextures",
                value: function (e, t) {
                  function n(e, t) {
                    return "number" === typeof e
                      ? e
                      : (console.warn(
                          "THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",
                          e
                        ),
                        t[e]);
                  }
                  var r = {};
                  if (void 0 !== e)
                    for (var i = 0, a = e.length; i < a; i++) {
                      var o = e[i];
                      void 0 === o.image &&
                        console.warn(
                          'THREE.ObjectLoader: No "image" specified for',
                          o.uuid
                        ),
                        void 0 === t[o.image] &&
                          console.warn(
                            "THREE.ObjectLoader: Undefined image",
                            o.image
                          );
                      var s = t[o.image],
                        l = s.data,
                        u = void 0;
                      Array.isArray(l)
                        ? ((u = new Pc()),
                          6 === l.length && (u.needsUpdate = !0))
                        : ((u = l && l.data ? new Kh() : new ul()),
                          l && (u.needsUpdate = !0)),
                        (u.source = s),
                        (u.uuid = o.uuid),
                        void 0 !== o.name && (u.name = o.name),
                        void 0 !== o.mapping && (u.mapping = n(o.mapping, cg)),
                        void 0 !== o.offset && u.offset.fromArray(o.offset),
                        void 0 !== o.repeat && u.repeat.fromArray(o.repeat),
                        void 0 !== o.center && u.center.fromArray(o.center),
                        void 0 !== o.rotation && (u.rotation = o.rotation),
                        void 0 !== o.wrap &&
                          ((u.wrapS = n(o.wrap[0], fg)),
                          (u.wrapT = n(o.wrap[1], fg))),
                        void 0 !== o.format && (u.format = o.format),
                        void 0 !== o.type && (u.type = o.type),
                        void 0 !== o.encoding && (u.encoding = o.encoding),
                        void 0 !== o.minFilter &&
                          (u.minFilter = n(o.minFilter, dg)),
                        void 0 !== o.magFilter &&
                          (u.magFilter = n(o.magFilter, dg)),
                        void 0 !== o.anisotropy &&
                          (u.anisotropy = o.anisotropy),
                        void 0 !== o.flipY && (u.flipY = o.flipY),
                        void 0 !== o.premultiplyAlpha &&
                          (u.premultiplyAlpha = o.premultiplyAlpha),
                        void 0 !== o.unpackAlignment &&
                          (u.unpackAlignment = o.unpackAlignment),
                        void 0 !== o.userData && (u.userData = o.userData),
                        (r[o.uuid] = u);
                    }
                  return r;
                },
              },
              {
                key: "parseObject",
                value: function (e, t, n, r, i) {
                  var a, o, s;
                  function l(e) {
                    return (
                      void 0 === t[e] &&
                        console.warn(
                          "THREE.ObjectLoader: Undefined geometry",
                          e
                        ),
                      t[e]
                    );
                  }
                  function u(e) {
                    if (void 0 !== e) {
                      if (Array.isArray(e)) {
                        for (var t = [], r = 0, i = e.length; r < i; r++) {
                          var a = e[r];
                          void 0 === n[a] &&
                            console.warn(
                              "THREE.ObjectLoader: Undefined material",
                              a
                            ),
                            t.push(n[a]);
                        }
                        return t;
                      }
                      return (
                        void 0 === n[e] &&
                          console.warn(
                            "THREE.ObjectLoader: Undefined material",
                            e
                          ),
                        n[e]
                      );
                    }
                  }
                  function c(e) {
                    return (
                      void 0 === r[e] &&
                        console.warn(
                          "THREE.ObjectLoader: Undefined texture",
                          e
                        ),
                      r[e]
                    );
                  }
                  switch (e.type) {
                    case "Scene":
                      (a = new Sh()),
                        void 0 !== e.background &&
                          (Number.isInteger(e.background)
                            ? (a.background = new il(e.background))
                            : (a.background = c(e.background))),
                        void 0 !== e.environment &&
                          (a.environment = c(e.environment)),
                        void 0 !== e.fog &&
                          ("Fog" === e.fog.type
                            ? (a.fog = new _h(
                                e.fog.color,
                                e.fog.near,
                                e.fog.far
                              ))
                            : "FogExp2" === e.fog.type &&
                              (a.fog = new wh(e.fog.color, e.fog.density)));
                      break;
                    case "PerspectiveCamera":
                      (a = new Tc(e.fov, e.aspect, e.near, e.far)),
                        void 0 !== e.focus && (a.focus = e.focus),
                        void 0 !== e.zoom && (a.zoom = e.zoom),
                        void 0 !== e.filmGauge && (a.filmGauge = e.filmGauge),
                        void 0 !== e.filmOffset &&
                          (a.filmOffset = e.filmOffset),
                        void 0 !== e.view &&
                          (a.view = Object.assign({}, e.view));
                      break;
                    case "OrthographicCamera":
                      (a = new Qc(
                        e.left,
                        e.right,
                        e.top,
                        e.bottom,
                        e.near,
                        e.far
                      )),
                        void 0 !== e.zoom && (a.zoom = e.zoom),
                        void 0 !== e.view &&
                          (a.view = Object.assign({}, e.view));
                      break;
                    case "AmbientLight":
                      a = new eg(e.color, e.intensity);
                      break;
                    case "DirectionalLight":
                      a = new Km(e.color, e.intensity);
                      break;
                    case "PointLight":
                      a = new Qm(e.color, e.intensity, e.distance, e.decay);
                      break;
                    case "RectAreaLight":
                      a = new tg(e.color, e.intensity, e.width, e.height);
                      break;
                    case "SpotLight":
                      a = new qm(
                        e.color,
                        e.intensity,
                        e.distance,
                        e.angle,
                        e.penumbra,
                        e.decay
                      );
                      break;
                    case "HemisphereLight":
                      a = new Hm(e.color, e.groundColor, e.intensity);
                      break;
                    case "LightProbe":
                      a = new rg().fromJSON(e);
                      break;
                    case "SkinnedMesh":
                      (o = l(e.geometry)),
                        (s = u(e.material)),
                        (a = new Qh(o, s)),
                        void 0 !== e.bindMode && (a.bindMode = e.bindMode),
                        void 0 !== e.bindMatrix &&
                          a.bindMatrix.fromArray(e.bindMatrix),
                        void 0 !== e.skeleton && (a.skeleton = e.skeleton);
                      break;
                    case "Mesh":
                      (o = l(e.geometry)),
                        (s = u(e.material)),
                        (a = new bc(o, s));
                      break;
                    case "InstancedMesh":
                      (o = l(e.geometry)), (s = u(e.material));
                      var f = e.count,
                        d = e.instanceMatrix,
                        h = e.instanceColor;
                      ((a = new lp(o, s, f)).instanceMatrix = new rp(
                        new Float32Array(d.array),
                        16
                      )),
                        void 0 !== h &&
                          (a.instanceColor = new rp(
                            new Float32Array(h.array),
                            h.itemSize
                          ));
                      break;
                    case "LOD":
                      a = new Vh();
                      break;
                    case "Line":
                      a = new vp(l(e.geometry), u(e.material));
                      break;
                    case "LineLoop":
                      a = new bp(l(e.geometry), u(e.material));
                      break;
                    case "LineSegments":
                      a = new yp(l(e.geometry), u(e.material));
                      break;
                    case "PointCloud":
                    case "Points":
                      a = new Ep(l(e.geometry), u(e.material));
                      break;
                    case "Sprite":
                      a = new Uh(u(e.material));
                      break;
                    case "Group":
                      a = new dh();
                      break;
                    case "Bone":
                      a = new Zh();
                      break;
                    default:
                      a = new xu();
                  }
                  if (
                    ((a.uuid = e.uuid),
                    void 0 !== e.name && (a.name = e.name),
                    void 0 !== e.matrix
                      ? (a.matrix.fromArray(e.matrix),
                        void 0 !== e.matrixAutoUpdate &&
                          (a.matrixAutoUpdate = e.matrixAutoUpdate),
                        a.matrixAutoUpdate &&
                          a.matrix.decompose(a.position, a.quaternion, a.scale))
                      : (void 0 !== e.position &&
                          a.position.fromArray(e.position),
                        void 0 !== e.rotation &&
                          a.rotation.fromArray(e.rotation),
                        void 0 !== e.quaternion &&
                          a.quaternion.fromArray(e.quaternion),
                        void 0 !== e.scale && a.scale.fromArray(e.scale)),
                    void 0 !== e.castShadow && (a.castShadow = e.castShadow),
                    void 0 !== e.receiveShadow &&
                      (a.receiveShadow = e.receiveShadow),
                    e.shadow &&
                      (void 0 !== e.shadow.bias &&
                        (a.shadow.bias = e.shadow.bias),
                      void 0 !== e.shadow.normalBias &&
                        (a.shadow.normalBias = e.shadow.normalBias),
                      void 0 !== e.shadow.radius &&
                        (a.shadow.radius = e.shadow.radius),
                      void 0 !== e.shadow.mapSize &&
                        a.shadow.mapSize.fromArray(e.shadow.mapSize),
                      void 0 !== e.shadow.camera &&
                        (a.shadow.camera = this.parseObject(e.shadow.camera))),
                    void 0 !== e.visible && (a.visible = e.visible),
                    void 0 !== e.frustumCulled &&
                      (a.frustumCulled = e.frustumCulled),
                    void 0 !== e.renderOrder && (a.renderOrder = e.renderOrder),
                    void 0 !== e.userData && (a.userData = e.userData),
                    void 0 !== e.layers && (a.layers.mask = e.layers),
                    void 0 !== e.children)
                  )
                    for (var p = e.children, v = 0; v < p.length; v++)
                      a.add(this.parseObject(p[v], t, n, r, i));
                  if (void 0 !== e.animations)
                    for (var m = e.animations, g = 0; g < m.length; g++) {
                      var y = m[g];
                      a.animations.push(i[y]);
                    }
                  if ("LOD" === e.type) {
                    void 0 !== e.autoUpdate && (a.autoUpdate = e.autoUpdate);
                    for (var b = e.levels, x = 0; x < b.length; x++) {
                      var w = b[x],
                        _ = a.getObjectByProperty("uuid", w.object);
                      void 0 !== _ && a.addLevel(_, w.distance);
                    }
                  }
                  return a;
                },
              },
              {
                key: "bindSkeletons",
                value: function (e, t) {
                  0 !== Object.keys(t).length &&
                    e.traverse(function (e) {
                      if (!0 === e.isSkinnedMesh && void 0 !== e.skeleton) {
                        var n = t[e.skeleton];
                        void 0 === n
                          ? console.warn(
                              "THREE.ObjectLoader: No skeleton found with UUID:",
                              e.skeleton
                            )
                          : e.bind(n, e.bindMatrix);
                      }
                    });
                },
              },
              {
                key: "setTexturePath",
                value: function (e) {
                  return (
                    console.warn(
                      "THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."
                    ),
                    this.setResourcePath(e)
                  );
                },
              },
            ]),
            n
          );
        })(Pm),
        cg = {
          UVMapping: va,
          CubeReflectionMapping: ma,
          CubeRefractionMapping: ga,
          EquirectangularReflectionMapping: ya,
          EquirectangularRefractionMapping: ba,
          CubeUVReflectionMapping: xa,
        },
        fg = {
          RepeatWrapping: wa,
          ClampToEdgeWrapping: _a,
          MirroredRepeatWrapping: Sa,
        },
        dg = {
          NearestFilter: Ma,
          NearestMipmapNearestFilter: Ea,
          NearestMipmapLinearFilter: Ta,
          LinearFilter: Aa,
          LinearMipmapNearestFilter: Pa,
          LinearMipmapLinearFilter: Ra,
        },
        hg = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return (
              Kr(this, n),
              (r = t.call(this, e)),
              "undefined" === typeof createImageBitmap &&
                console.warn(
                  "THREE.ImageBitmapLoader: createImageBitmap() not supported."
                ),
              "undefined" === typeof fetch &&
                console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
              (r.options = { premultiplyAlpha: "none" }),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "setOptions",
                value: function (e) {
                  return (this.options = e), this;
                },
              },
              {
                key: "load",
                value: function (e, t, n, r) {
                  void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var i = this,
                    a = Tm.get(e);
                  if (void 0 !== a)
                    return (
                      i.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(a), i.manager.itemEnd(e);
                      }, 0),
                      a
                    );
                  var o = {};
                  (o.credentials =
                    "anonymous" === this.crossOrigin
                      ? "same-origin"
                      : "include"),
                    (o.headers = this.requestHeader),
                    fetch(e, o)
                      .then(function (e) {
                        return e.blob();
                      })
                      .then(function (e) {
                        return createImageBitmap(
                          e,
                          Object.assign(i.options, {
                            colorSpaceConversion: "none",
                          })
                        );
                      })
                      .then(function (n) {
                        Tm.add(e, n), t && t(n), i.manager.itemEnd(e);
                      })
                      .catch(function (t) {
                        r && r(t), i.manager.itemError(e), i.manager.itemEnd(e);
                      }),
                    i.manager.itemStart(e);
                },
              },
            ]),
            n
          );
        })(Pm);
      hg.prototype.isImageBitmapLoader = !0;
      var pg = {
          getContext: function () {
            return (
              void 0 === sg &&
                (sg = new (window.AudioContext || window.webkitAudioContext)()),
              sg
            );
          },
          setContext: function (e) {
            sg = e;
          },
        },
        vg = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return Kr(this, n), t.call(this, e);
          }
          return (
            ti(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new Rm(this.manager);
                  a.setResponseType("arraybuffer"),
                    a.setPath(this.path),
                    a.setRequestHeader(this.requestHeader),
                    a.setWithCredentials(this.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          var a = n.slice(0);
                          pg.getContext().decodeAudioData(a, function (e) {
                            t(e);
                          });
                        } catch ($y) {
                          r ? r($y) : console.error($y), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
            ]),
            n
          );
        })(Pm),
        mg = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1;
            Kr(this, n), (i = t.call(this, void 0, a));
            var o = new il().set(e),
              s = new il().set(r),
              l = new yl(o.r, o.g, o.b),
              u = new yl(s.r, s.g, s.b),
              c = Math.sqrt(Math.PI),
              f = c * Math.sqrt(0.75);
            return (
              i.sh.coefficients[0].copy(l).add(u).multiplyScalar(c),
              i.sh.coefficients[1].copy(l).sub(u).multiplyScalar(f),
              i
            );
          }
          return ti(n);
        })(rg);
      mg.prototype.isHemisphereLightProbe = !0;
      var gg = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e) {
          var r,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
          Kr(this, n), (r = t.call(this, void 0, i));
          var a = new il().set(e);
          return (
            r.sh.coefficients[0]
              .set(a.r, a.g, a.b)
              .multiplyScalar(2 * Math.sqrt(Math.PI)),
            r
          );
        }
        return ti(n);
      })(rg);
      gg.prototype.isAmbientLightProbe = !0;
      var yg = new Jl(),
        bg = new Jl(),
        xg = new Jl(),
        wg = (function () {
          function e() {
            Kr(this, e),
              (this.type = "StereoCamera"),
              (this.aspect = 1),
              (this.eyeSep = 0.064),
              (this.cameraL = new Tc()),
              this.cameraL.layers.enable(1),
              (this.cameraL.matrixAutoUpdate = !1),
              (this.cameraR = new Tc()),
              this.cameraR.layers.enable(2),
              (this.cameraR.matrixAutoUpdate = !1),
              (this._cache = {
                focus: null,
                fov: null,
                aspect: null,
                near: null,
                far: null,
                zoom: null,
                eyeSep: null,
              });
          }
          return (
            ti(e, [
              {
                key: "update",
                value: function (e) {
                  var t = this._cache;
                  if (
                    t.focus !== e.focus ||
                    t.fov !== e.fov ||
                    t.aspect !== e.aspect * this.aspect ||
                    t.near !== e.near ||
                    t.far !== e.far ||
                    t.zoom !== e.zoom ||
                    t.eyeSep !== this.eyeSep
                  ) {
                    (t.focus = e.focus),
                      (t.fov = e.fov),
                      (t.aspect = e.aspect * this.aspect),
                      (t.near = e.near),
                      (t.far = e.far),
                      (t.zoom = e.zoom),
                      (t.eyeSep = this.eyeSep),
                      xg.copy(e.projectionMatrix);
                    var n,
                      r,
                      i = t.eyeSep / 2,
                      a = (i * t.near) / t.focus,
                      o = (t.near * Math.tan(Ls * t.fov * 0.5)) / t.zoom;
                    (bg.elements[12] = -i),
                      (yg.elements[12] = i),
                      (n = -o * t.aspect + a),
                      (r = o * t.aspect + a),
                      (xg.elements[0] = (2 * t.near) / (r - n)),
                      (xg.elements[8] = (r + n) / (r - n)),
                      this.cameraL.projectionMatrix.copy(xg),
                      (n = -o * t.aspect - a),
                      (r = o * t.aspect - a),
                      (xg.elements[0] = (2 * t.near) / (r - n)),
                      (xg.elements[8] = (r + n) / (r - n)),
                      this.cameraR.projectionMatrix.copy(xg);
                  }
                  this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(bg),
                    this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(yg);
                },
              },
            ]),
            e
          );
        })(),
        _g = (function () {
          function e() {
            var t =
              !(arguments.length > 0 && void 0 !== arguments[0]) ||
              arguments[0];
            Kr(this, e),
              (this.autoStart = t),
              (this.startTime = 0),
              (this.oldTime = 0),
              (this.elapsedTime = 0),
              (this.running = !1);
          }
          return (
            ti(e, [
              {
                key: "start",
                value: function () {
                  (this.startTime = Sg()),
                    (this.oldTime = this.startTime),
                    (this.elapsedTime = 0),
                    (this.running = !0);
                },
              },
              {
                key: "stop",
                value: function () {
                  this.getElapsedTime(),
                    (this.running = !1),
                    (this.autoStart = !1);
                },
              },
              {
                key: "getElapsedTime",
                value: function () {
                  return this.getDelta(), this.elapsedTime;
                },
              },
              {
                key: "getDelta",
                value: function () {
                  var e = 0;
                  if (this.autoStart && !this.running) return this.start(), 0;
                  if (this.running) {
                    var t = Sg();
                    (e = (t - this.oldTime) / 1e3),
                      (this.oldTime = t),
                      (this.elapsedTime += e);
                  }
                  return e;
                },
              },
            ]),
            e
          );
        })();
      function Sg() {
        return ("undefined" === typeof performance ? Date : performance).now();
      }
      var Mg = new yl(),
        Eg = new gl(),
        kg = new yl(),
        Tg = new yl(),
        Cg = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e;
            return (
              Kr(this, n),
              ((e = t.call(this)).type = "AudioListener"),
              (e.context = pg.getContext()),
              (e.gain = e.context.createGain()),
              e.gain.connect(e.context.destination),
              (e.filter = null),
              (e.timeDelta = 0),
              (e._clock = new _g()),
              e
            );
          }
          return (
            ti(n, [
              {
                key: "getInput",
                value: function () {
                  return this.gain;
                },
              },
              {
                key: "removeFilter",
                value: function () {
                  return (
                    null !== this.filter &&
                      (this.gain.disconnect(this.filter),
                      this.filter.disconnect(this.context.destination),
                      this.gain.connect(this.context.destination),
                      (this.filter = null)),
                    this
                  );
                },
              },
              {
                key: "getFilter",
                value: function () {
                  return this.filter;
                },
              },
              {
                key: "setFilter",
                value: function (e) {
                  return (
                    null !== this.filter
                      ? (this.gain.disconnect(this.filter),
                        this.filter.disconnect(this.context.destination))
                      : this.gain.disconnect(this.context.destination),
                    (this.filter = e),
                    this.gain.connect(this.filter),
                    this.filter.connect(this.context.destination),
                    this
                  );
                },
              },
              {
                key: "getMasterVolume",
                value: function () {
                  return this.gain.gain.value;
                },
              },
              {
                key: "setMasterVolume",
                value: function (e) {
                  return (
                    this.gain.gain.setTargetAtTime(
                      e,
                      this.context.currentTime,
                      0.01
                    ),
                    this
                  );
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  fi(ri(n.prototype), "updateMatrixWorld", this).call(this, e);
                  var t = this.context.listener,
                    r = this.up;
                  if (
                    ((this.timeDelta = this._clock.getDelta()),
                    this.matrixWorld.decompose(Mg, Eg, kg),
                    Tg.set(0, 0, -1).applyQuaternion(Eg),
                    t.positionX)
                  ) {
                    var i = this.context.currentTime + this.timeDelta;
                    t.positionX.linearRampToValueAtTime(Mg.x, i),
                      t.positionY.linearRampToValueAtTime(Mg.y, i),
                      t.positionZ.linearRampToValueAtTime(Mg.z, i),
                      t.forwardX.linearRampToValueAtTime(Tg.x, i),
                      t.forwardY.linearRampToValueAtTime(Tg.y, i),
                      t.forwardZ.linearRampToValueAtTime(Tg.z, i),
                      t.upX.linearRampToValueAtTime(r.x, i),
                      t.upY.linearRampToValueAtTime(r.y, i),
                      t.upZ.linearRampToValueAtTime(r.z, i);
                  } else
                    t.setPosition(Mg.x, Mg.y, Mg.z),
                      t.setOrientation(Tg.x, Tg.y, Tg.z, r.x, r.y, r.z);
                },
              },
            ]),
            n
          );
        })(xu),
        Ag = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return (
              Kr(this, n),
              ((r = t.call(this)).type = "Audio"),
              (r.listener = e),
              (r.context = e.context),
              (r.gain = r.context.createGain()),
              r.gain.connect(e.getInput()),
              (r.autoplay = !1),
              (r.buffer = null),
              (r.detune = 0),
              (r.loop = !1),
              (r.loopStart = 0),
              (r.loopEnd = 0),
              (r.offset = 0),
              (r.duration = void 0),
              (r.playbackRate = 1),
              (r.isPlaying = !1),
              (r.hasPlaybackControl = !0),
              (r.source = null),
              (r.sourceType = "empty"),
              (r._startedAt = 0),
              (r._progress = 0),
              (r._connected = !1),
              (r.filters = []),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "getOutput",
                value: function () {
                  return this.gain;
                },
              },
              {
                key: "setNodeSource",
                value: function (e) {
                  return (
                    (this.hasPlaybackControl = !1),
                    (this.sourceType = "audioNode"),
                    (this.source = e),
                    this.connect(),
                    this
                  );
                },
              },
              {
                key: "setMediaElementSource",
                value: function (e) {
                  return (
                    (this.hasPlaybackControl = !1),
                    (this.sourceType = "mediaNode"),
                    (this.source = this.context.createMediaElementSource(e)),
                    this.connect(),
                    this
                  );
                },
              },
              {
                key: "setMediaStreamSource",
                value: function (e) {
                  return (
                    (this.hasPlaybackControl = !1),
                    (this.sourceType = "mediaStreamNode"),
                    (this.source = this.context.createMediaStreamSource(e)),
                    this.connect(),
                    this
                  );
                },
              },
              {
                key: "setBuffer",
                value: function (e) {
                  return (
                    (this.buffer = e),
                    (this.sourceType = "buffer"),
                    this.autoplay && this.play(),
                    this
                  );
                },
              },
              {
                key: "play",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : 0;
                  if (!0 !== this.isPlaying) {
                    if (!1 !== this.hasPlaybackControl) {
                      this._startedAt = this.context.currentTime + e;
                      var t = this.context.createBufferSource();
                      return (
                        (t.buffer = this.buffer),
                        (t.loop = this.loop),
                        (t.loopStart = this.loopStart),
                        (t.loopEnd = this.loopEnd),
                        (t.onended = this.onEnded.bind(this)),
                        t.start(
                          this._startedAt,
                          this._progress + this.offset,
                          this.duration
                        ),
                        (this.isPlaying = !0),
                        (this.source = t),
                        this.setDetune(this.detune),
                        this.setPlaybackRate(this.playbackRate),
                        this.connect()
                      );
                    }
                    console.warn(
                      "THREE.Audio: this Audio has no playback control."
                    );
                  } else console.warn("THREE.Audio: Audio is already playing.");
                },
              },
              {
                key: "pause",
                value: function () {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      !0 === this.isPlaying &&
                        ((this._progress +=
                          Math.max(
                            this.context.currentTime - this._startedAt,
                            0
                          ) * this.playbackRate),
                        !0 === this.loop &&
                          (this._progress =
                            this._progress %
                            (this.duration || this.buffer.duration)),
                        this.source.stop(),
                        (this.source.onended = null),
                        (this.isPlaying = !1)),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "stop",
                value: function () {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      (this._progress = 0),
                      this.source.stop(),
                      (this.source.onended = null),
                      (this.isPlaying = !1),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "connect",
                value: function () {
                  if (this.filters.length > 0) {
                    this.source.connect(this.filters[0]);
                    for (var e = 1, t = this.filters.length; e < t; e++)
                      this.filters[e - 1].connect(this.filters[e]);
                    this.filters[this.filters.length - 1].connect(
                      this.getOutput()
                    );
                  } else this.source.connect(this.getOutput());
                  return (this._connected = !0), this;
                },
              },
              {
                key: "disconnect",
                value: function () {
                  if (this.filters.length > 0) {
                    this.source.disconnect(this.filters[0]);
                    for (var e = 1, t = this.filters.length; e < t; e++)
                      this.filters[e - 1].disconnect(this.filters[e]);
                    this.filters[this.filters.length - 1].disconnect(
                      this.getOutput()
                    );
                  } else this.source.disconnect(this.getOutput());
                  return (this._connected = !1), this;
                },
              },
              {
                key: "getFilters",
                value: function () {
                  return this.filters;
                },
              },
              {
                key: "setFilters",
                value: function (e) {
                  return (
                    e || (e = []),
                    !0 === this._connected
                      ? (this.disconnect(),
                        (this.filters = e.slice()),
                        this.connect())
                      : (this.filters = e.slice()),
                    this
                  );
                },
              },
              {
                key: "setDetune",
                value: function (e) {
                  if (((this.detune = e), void 0 !== this.source.detune))
                    return (
                      !0 === this.isPlaying &&
                        this.source.detune.setTargetAtTime(
                          this.detune,
                          this.context.currentTime,
                          0.01
                        ),
                      this
                    );
                },
              },
              {
                key: "getDetune",
                value: function () {
                  return this.detune;
                },
              },
              {
                key: "getFilter",
                value: function () {
                  return this.getFilters()[0];
                },
              },
              {
                key: "setFilter",
                value: function (e) {
                  return this.setFilters(e ? [e] : []);
                },
              },
              {
                key: "setPlaybackRate",
                value: function (e) {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      (this.playbackRate = e),
                      !0 === this.isPlaying &&
                        this.source.playbackRate.setTargetAtTime(
                          this.playbackRate,
                          this.context.currentTime,
                          0.01
                        ),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "getPlaybackRate",
                value: function () {
                  return this.playbackRate;
                },
              },
              {
                key: "onEnded",
                value: function () {
                  this.isPlaying = !1;
                },
              },
              {
                key: "getLoop",
                value: function () {
                  return !1 === this.hasPlaybackControl
                    ? (console.warn(
                        "THREE.Audio: this Audio has no playback control."
                      ),
                      !1)
                    : this.loop;
                },
              },
              {
                key: "setLoop",
                value: function (e) {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      (this.loop = e),
                      !0 === this.isPlaying && (this.source.loop = this.loop),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "setLoopStart",
                value: function (e) {
                  return (this.loopStart = e), this;
                },
              },
              {
                key: "setLoopEnd",
                value: function (e) {
                  return (this.loopEnd = e), this;
                },
              },
              {
                key: "getVolume",
                value: function () {
                  return this.gain.gain.value;
                },
              },
              {
                key: "setVolume",
                value: function (e) {
                  return (
                    this.gain.gain.setTargetAtTime(
                      e,
                      this.context.currentTime,
                      0.01
                    ),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(xu),
        Pg = new yl(),
        Lg = new gl(),
        Rg = new yl(),
        Og = new yl(),
        zg = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return (
              Kr(this, n),
              ((r = t.call(this, e)).panner = r.context.createPanner()),
              (r.panner.panningModel = "HRTF"),
              r.panner.connect(r.gain),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "disconnect",
                value: function () {
                  fi(ri(n.prototype), "disconnect", this).call(this),
                    this.panner.disconnect(this.gain);
                },
              },
              {
                key: "getOutput",
                value: function () {
                  return this.panner;
                },
              },
              {
                key: "getRefDistance",
                value: function () {
                  return this.panner.refDistance;
                },
              },
              {
                key: "setRefDistance",
                value: function (e) {
                  return (this.panner.refDistance = e), this;
                },
              },
              {
                key: "getRolloffFactor",
                value: function () {
                  return this.panner.rolloffFactor;
                },
              },
              {
                key: "setRolloffFactor",
                value: function (e) {
                  return (this.panner.rolloffFactor = e), this;
                },
              },
              {
                key: "getDistanceModel",
                value: function () {
                  return this.panner.distanceModel;
                },
              },
              {
                key: "setDistanceModel",
                value: function (e) {
                  return (this.panner.distanceModel = e), this;
                },
              },
              {
                key: "getMaxDistance",
                value: function () {
                  return this.panner.maxDistance;
                },
              },
              {
                key: "setMaxDistance",
                value: function (e) {
                  return (this.panner.maxDistance = e), this;
                },
              },
              {
                key: "setDirectionalCone",
                value: function (e, t, n) {
                  return (
                    (this.panner.coneInnerAngle = e),
                    (this.panner.coneOuterAngle = t),
                    (this.panner.coneOuterGain = n),
                    this
                  );
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  if (
                    (fi(ri(n.prototype), "updateMatrixWorld", this).call(
                      this,
                      e
                    ),
                    !0 !== this.hasPlaybackControl || !1 !== this.isPlaying)
                  ) {
                    this.matrixWorld.decompose(Pg, Lg, Rg),
                      Og.set(0, 0, 1).applyQuaternion(Lg);
                    var t = this.panner;
                    if (t.positionX) {
                      var r =
                        this.context.currentTime + this.listener.timeDelta;
                      t.positionX.linearRampToValueAtTime(Pg.x, r),
                        t.positionY.linearRampToValueAtTime(Pg.y, r),
                        t.positionZ.linearRampToValueAtTime(Pg.z, r),
                        t.orientationX.linearRampToValueAtTime(Og.x, r),
                        t.orientationY.linearRampToValueAtTime(Og.y, r),
                        t.orientationZ.linearRampToValueAtTime(Og.z, r);
                    } else
                      t.setPosition(Pg.x, Pg.y, Pg.z),
                        t.setOrientation(Og.x, Og.y, Og.z);
                  }
                },
              },
            ]),
            n
          );
        })(Ag),
        Dg = (function () {
          function e(t) {
            var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 2048;
            Kr(this, e),
              (this.analyser = t.context.createAnalyser()),
              (this.analyser.fftSize = n),
              (this.data = new Uint8Array(this.analyser.frequencyBinCount)),
              t.getOutput().connect(this.analyser);
          }
          return (
            ti(e, [
              {
                key: "getFrequencyData",
                value: function () {
                  return (
                    this.analyser.getByteFrequencyData(this.data), this.data
                  );
                },
              },
              {
                key: "getAverageFrequency",
                value: function () {
                  for (
                    var e = 0, t = this.getFrequencyData(), n = 0;
                    n < t.length;
                    n++
                  )
                    e += t[n];
                  return e / t.length;
                },
              },
            ]),
            e
          );
        })(),
        Ig = (function () {
          function e(t, n, r) {
            var i, a, o;
            switch (
              (Kr(this, e), (this.binding = t), (this.valueSize = r), n)
            ) {
              case "quaternion":
                (i = this._slerp),
                  (a = this._slerpAdditive),
                  (o = this._setAdditiveIdentityQuaternion),
                  (this.buffer = new Float64Array(6 * r)),
                  (this._workIndex = 5);
                break;
              case "string":
              case "bool":
                (i = this._select),
                  (a = this._select),
                  (o = this._setAdditiveIdentityOther),
                  (this.buffer = new Array(5 * r));
                break;
              default:
                (i = this._lerp),
                  (a = this._lerpAdditive),
                  (o = this._setAdditiveIdentityNumeric),
                  (this.buffer = new Float64Array(5 * r));
            }
            (this._mixBufferRegion = i),
              (this._mixBufferRegionAdditive = a),
              (this._setIdentity = o),
              (this._origIndex = 3),
              (this._addIndex = 4),
              (this.cumulativeWeight = 0),
              (this.cumulativeWeightAdditive = 0),
              (this.useCount = 0),
              (this.referenceCount = 0);
          }
          return (
            ti(e, [
              {
                key: "accumulate",
                value: function (e, t) {
                  var n = this.buffer,
                    r = this.valueSize,
                    i = e * r + r,
                    a = this.cumulativeWeight;
                  if (0 === a) {
                    for (var o = 0; o !== r; ++o) n[i + o] = n[o];
                    a = t;
                  } else {
                    var s = t / (a += t);
                    this._mixBufferRegion(n, i, 0, s, r);
                  }
                  this.cumulativeWeight = a;
                },
              },
              {
                key: "accumulateAdditive",
                value: function (e) {
                  var t = this.buffer,
                    n = this.valueSize,
                    r = n * this._addIndex;
                  0 === this.cumulativeWeightAdditive && this._setIdentity(),
                    this._mixBufferRegionAdditive(t, r, 0, e, n),
                    (this.cumulativeWeightAdditive += e);
                },
              },
              {
                key: "apply",
                value: function (e) {
                  var t = this.valueSize,
                    n = this.buffer,
                    r = e * t + t,
                    i = this.cumulativeWeight,
                    a = this.cumulativeWeightAdditive,
                    o = this.binding;
                  if (
                    ((this.cumulativeWeight = 0),
                    (this.cumulativeWeightAdditive = 0),
                    i < 1)
                  ) {
                    var s = t * this._origIndex;
                    this._mixBufferRegion(n, r, s, 1 - i, t);
                  }
                  a > 0 &&
                    this._mixBufferRegionAdditive(
                      n,
                      r,
                      this._addIndex * t,
                      1,
                      t
                    );
                  for (var l = t, u = t + t; l !== u; ++l)
                    if (n[l] !== n[l + t]) {
                      o.setValue(n, r);
                      break;
                    }
                },
              },
              {
                key: "saveOriginalState",
                value: function () {
                  var e = this.binding,
                    t = this.buffer,
                    n = this.valueSize,
                    r = n * this._origIndex;
                  e.getValue(t, r);
                  for (var i = n, a = r; i !== a; ++i) t[i] = t[r + (i % n)];
                  this._setIdentity(),
                    (this.cumulativeWeight = 0),
                    (this.cumulativeWeightAdditive = 0);
                },
              },
              {
                key: "restoreOriginalState",
                value: function () {
                  var e = 3 * this.valueSize;
                  this.binding.setValue(this.buffer, e);
                },
              },
              {
                key: "_setAdditiveIdentityNumeric",
                value: function () {
                  for (
                    var e = this._addIndex * this.valueSize,
                      t = e + this.valueSize,
                      n = e;
                    n < t;
                    n++
                  )
                    this.buffer[n] = 0;
                },
              },
              {
                key: "_setAdditiveIdentityQuaternion",
                value: function () {
                  this._setAdditiveIdentityNumeric(),
                    (this.buffer[this._addIndex * this.valueSize + 3] = 1);
                },
              },
              {
                key: "_setAdditiveIdentityOther",
                value: function () {
                  for (
                    var e = this._origIndex * this.valueSize,
                      t = this._addIndex * this.valueSize,
                      n = 0;
                    n < this.valueSize;
                    n++
                  )
                    this.buffer[t + n] = this.buffer[e + n];
                },
              },
              {
                key: "_select",
                value: function (e, t, n, r, i) {
                  if (r >= 0.5)
                    for (var a = 0; a !== i; ++a) e[t + a] = e[n + a];
                },
              },
              {
                key: "_slerp",
                value: function (e, t, n, r) {
                  gl.slerpFlat(e, t, e, t, e, n, r);
                },
              },
              {
                key: "_slerpAdditive",
                value: function (e, t, n, r, i) {
                  var a = this._workIndex * i;
                  gl.multiplyQuaternionsFlat(e, a, e, t, e, n),
                    gl.slerpFlat(e, t, e, t, e, a, r);
                },
              },
              {
                key: "_lerp",
                value: function (e, t, n, r, i) {
                  for (var a = 1 - r, o = 0; o !== i; ++o) {
                    var s = t + o;
                    e[s] = e[s] * a + e[n + o] * r;
                  }
                },
              },
              {
                key: "_lerpAdditive",
                value: function (e, t, n, r, i) {
                  for (var a = 0; a !== i; ++a) {
                    var o = t + a;
                    e[o] = e[o] + e[n + a] * r;
                  }
                },
              },
            ]),
            e
          );
        })(),
        Ng = "\\[\\]\\.:\\/",
        Fg = new RegExp("[\\[\\]\\.:\\/]", "g"),
        Bg = "[^\\[\\]\\.:\\/]",
        Hg = "[^" + Ng.replace("\\.", "") + "]",
        Ug = /((?:WC+[\/:])*)/.source.replace("WC", Bg),
        jg = /(WCOD+)?/.source.replace("WCOD", Hg),
        Gg = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Bg),
        Wg = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Bg),
        Vg = new RegExp("^" + Ug + jg + Gg + Wg + "$"),
        qg = ["material", "materials", "bones"],
        Xg = (function () {
          function e(t, n, r) {
            Kr(this, e);
            var i = r || Yg.parseTrackName(n);
            (this._targetGroup = t), (this._bindings = t.subscribe_(n, i));
          }
          return (
            ti(e, [
              {
                key: "getValue",
                value: function (e, t) {
                  this.bind();
                  var n = this._targetGroup.nCachedObjects_,
                    r = this._bindings[n];
                  void 0 !== r && r.getValue(e, t);
                },
              },
              {
                key: "setValue",
                value: function (e, t) {
                  for (
                    var n = this._bindings,
                      r = this._targetGroup.nCachedObjects_,
                      i = n.length;
                    r !== i;
                    ++r
                  )
                    n[r].setValue(e, t);
                },
              },
              {
                key: "bind",
                value: function () {
                  for (
                    var e = this._bindings,
                      t = this._targetGroup.nCachedObjects_,
                      n = e.length;
                    t !== n;
                    ++t
                  )
                    e[t].bind();
                },
              },
              {
                key: "unbind",
                value: function () {
                  for (
                    var e = this._bindings,
                      t = this._targetGroup.nCachedObjects_,
                      n = e.length;
                    t !== n;
                    ++t
                  )
                    e[t].unbind();
                },
              },
            ]),
            e
          );
        })(),
        Yg = (function () {
          function e(t, n, r) {
            Kr(this, e),
              (this.path = n),
              (this.parsedPath = r || e.parseTrackName(n)),
              (this.node = e.findNode(t, this.parsedPath.nodeName) || t),
              (this.rootNode = t),
              (this.getValue = this._getValue_unbound),
              (this.setValue = this._setValue_unbound);
          }
          return (
            ti(
              e,
              [
                { key: "_getValue_unavailable", value: function () {} },
                { key: "_setValue_unavailable", value: function () {} },
                {
                  key: "_getValue_direct",
                  value: function (e, t) {
                    e[t] = this.targetObject[this.propertyName];
                  },
                },
                {
                  key: "_getValue_array",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      e[t++] = n[r];
                  },
                },
                {
                  key: "_getValue_arrayElement",
                  value: function (e, t) {
                    e[t] = this.resolvedProperty[this.propertyIndex];
                  },
                },
                {
                  key: "_getValue_toArray",
                  value: function (e, t) {
                    this.resolvedProperty.toArray(e, t);
                  },
                },
                {
                  key: "_setValue_direct",
                  value: function (e, t) {
                    this.targetObject[this.propertyName] = e[t];
                  },
                },
                {
                  key: "_setValue_direct_setNeedsUpdate",
                  value: function (e, t) {
                    (this.targetObject[this.propertyName] = e[t]),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_direct_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    (this.targetObject[this.propertyName] = e[t]),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_array",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      n[r] = e[t++];
                  },
                },
                {
                  key: "_setValue_array_setNeedsUpdate",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      n[r] = e[t++];
                    this.targetObject.needsUpdate = !0;
                  },
                },
                {
                  key: "_setValue_array_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      n[r] = e[t++];
                    this.targetObject.matrixWorldNeedsUpdate = !0;
                  },
                },
                {
                  key: "_setValue_arrayElement",
                  value: function (e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t];
                  },
                },
                {
                  key: "_setValue_arrayElement_setNeedsUpdate",
                  value: function (e, t) {
                    (this.resolvedProperty[this.propertyIndex] = e[t]),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_arrayElement_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    (this.resolvedProperty[this.propertyIndex] = e[t]),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_fromArray",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t);
                  },
                },
                {
                  key: "_setValue_fromArray_setNeedsUpdate",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_fromArray_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_getValue_unbound",
                  value: function (e, t) {
                    this.bind(), this.getValue(e, t);
                  },
                },
                {
                  key: "_setValue_unbound",
                  value: function (e, t) {
                    this.bind(), this.setValue(e, t);
                  },
                },
                {
                  key: "bind",
                  value: function () {
                    var t = this.node,
                      n = this.parsedPath,
                      r = n.objectName,
                      i = n.propertyName,
                      a = n.propertyIndex;
                    if (
                      (t ||
                        ((t =
                          e.findNode(this.rootNode, n.nodeName) ||
                          this.rootNode),
                        (this.node = t)),
                      (this.getValue = this._getValue_unavailable),
                      (this.setValue = this._setValue_unavailable),
                      t)
                    ) {
                      if (r) {
                        var o = n.objectIndex;
                        switch (r) {
                          case "materials":
                            if (!t.material)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                                this
                              );
                            if (!t.material.materials)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
                                this
                              );
                            t = t.material.materials;
                            break;
                          case "bones":
                            if (!t.skeleton)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",
                                this
                              );
                            t = t.skeleton.bones;
                            for (var s = 0; s < t.length; s++)
                              if (t[s].name === o) {
                                o = s;
                                break;
                              }
                            break;
                          default:
                            if (void 0 === t[r])
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to objectName of node undefined.",
                                this
                              );
                            t = t[r];
                        }
                        if (void 0 !== o) {
                          if (void 0 === t[o])
                            return void console.error(
                              "THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",
                              this,
                              t
                            );
                          t = t[o];
                        }
                      }
                      var l = t[i];
                      if (void 0 !== l) {
                        var u = this.Versioning.None;
                        (this.targetObject = t),
                          void 0 !== t.needsUpdate
                            ? (u = this.Versioning.NeedsUpdate)
                            : void 0 !== t.matrixWorldNeedsUpdate &&
                              (u = this.Versioning.MatrixWorldNeedsUpdate);
                        var c = this.BindingType.Direct;
                        if (void 0 !== a) {
                          if ("morphTargetInfluences" === i) {
                            if (!t.geometry)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",
                                this
                              );
                            if (!t.geometry.isBufferGeometry)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",
                                this
                              );
                            if (!t.geometry.morphAttributes)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
                                this
                              );
                            void 0 !== t.morphTargetDictionary[a] &&
                              (a = t.morphTargetDictionary[a]);
                          }
                          (c = this.BindingType.ArrayElement),
                            (this.resolvedProperty = l),
                            (this.propertyIndex = a);
                        } else
                          void 0 !== l.fromArray && void 0 !== l.toArray
                            ? ((c = this.BindingType.HasFromToArray),
                              (this.resolvedProperty = l))
                            : Array.isArray(l)
                            ? ((c = this.BindingType.EntireArray),
                              (this.resolvedProperty = l))
                            : (this.propertyName = i);
                        (this.getValue = this.GetterByBindingType[c]),
                          (this.setValue =
                            this.SetterByBindingTypeAndVersioning[c][u]);
                      } else {
                        var f = n.nodeName;
                        console.error(
                          "THREE.PropertyBinding: Trying to update property for track: " +
                            f +
                            "." +
                            i +
                            " but it wasn't found.",
                          t
                        );
                      }
                    } else
                      console.error(
                        "THREE.PropertyBinding: Trying to update node for track: " +
                          this.path +
                          " but it wasn't found."
                      );
                  },
                },
                {
                  key: "unbind",
                  value: function () {
                    (this.node = null),
                      (this.getValue = this._getValue_unbound),
                      (this.setValue = this._setValue_unbound);
                  },
                },
              ],
              [
                {
                  key: "create",
                  value: function (t, n, r) {
                    return t && t.isAnimationObjectGroup
                      ? new e.Composite(t, n, r)
                      : new e(t, n, r);
                  },
                },
                {
                  key: "sanitizeNodeName",
                  value: function (e) {
                    return e.replace(/\s/g, "_").replace(Fg, "");
                  },
                },
                {
                  key: "parseTrackName",
                  value: function (e) {
                    var t = Vg.exec(e);
                    if (null === t)
                      throw new Error(
                        "PropertyBinding: Cannot parse trackName: " + e
                      );
                    var n = {
                        nodeName: t[2],
                        objectName: t[3],
                        objectIndex: t[4],
                        propertyName: t[5],
                        propertyIndex: t[6],
                      },
                      r = n.nodeName && n.nodeName.lastIndexOf(".");
                    if (void 0 !== r && -1 !== r) {
                      var i = n.nodeName.substring(r + 1);
                      -1 !== qg.indexOf(i) &&
                        ((n.nodeName = n.nodeName.substring(0, r)),
                        (n.objectName = i));
                    }
                    if (null === n.propertyName || 0 === n.propertyName.length)
                      throw new Error(
                        "PropertyBinding: can not parse propertyName from trackName: " +
                          e
                      );
                    return n;
                  },
                },
                {
                  key: "findNode",
                  value: function (e, t) {
                    if (
                      void 0 === t ||
                      "" === t ||
                      "." === t ||
                      -1 === t ||
                      t === e.name ||
                      t === e.uuid
                    )
                      return e;
                    if (e.skeleton) {
                      var n = e.skeleton.getBoneByName(t);
                      if (void 0 !== n) return n;
                    }
                    if (e.children) {
                      var r = (function e(n) {
                        for (var r = 0; r < n.length; r++) {
                          var i = n[r];
                          if (i.name === t || i.uuid === t) return i;
                          var a = e(i.children);
                          if (a) return a;
                        }
                        return null;
                      })(e.children);
                      if (r) return r;
                    }
                    return null;
                  },
                },
              ]
            ),
            e
          );
        })();
      (Yg.Composite = Xg),
        (Yg.prototype.BindingType = {
          Direct: 0,
          EntireArray: 1,
          ArrayElement: 2,
          HasFromToArray: 3,
        }),
        (Yg.prototype.Versioning = {
          None: 0,
          NeedsUpdate: 1,
          MatrixWorldNeedsUpdate: 2,
        }),
        (Yg.prototype.GetterByBindingType = [
          Yg.prototype._getValue_direct,
          Yg.prototype._getValue_array,
          Yg.prototype._getValue_arrayElement,
          Yg.prototype._getValue_toArray,
        ]),
        (Yg.prototype.SetterByBindingTypeAndVersioning = [
          [
            Yg.prototype._setValue_direct,
            Yg.prototype._setValue_direct_setNeedsUpdate,
            Yg.prototype._setValue_direct_setMatrixWorldNeedsUpdate,
          ],
          [
            Yg.prototype._setValue_array,
            Yg.prototype._setValue_array_setNeedsUpdate,
            Yg.prototype._setValue_array_setMatrixWorldNeedsUpdate,
          ],
          [
            Yg.prototype._setValue_arrayElement,
            Yg.prototype._setValue_arrayElement_setNeedsUpdate,
            Yg.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,
          ],
          [
            Yg.prototype._setValue_fromArray,
            Yg.prototype._setValue_fromArray_setNeedsUpdate,
            Yg.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,
          ],
        ]);
      var Jg = (function () {
        function e() {
          Kr(this, e),
            (this.uuid = Os()),
            (this._objects = Array.prototype.slice.call(arguments)),
            (this.nCachedObjects_ = 0);
          var t = {};
          this._indicesByUUID = t;
          for (var n = 0, r = arguments.length; n !== r; ++n)
            t[arguments[n].uuid] = n;
          (this._paths = []),
            (this._parsedPaths = []),
            (this._bindings = []),
            (this._bindingsIndicesByPath = {});
          var i = this;
          this.stats = {
            objects: {
              get total() {
                return i._objects.length;
              },
              get inUse() {
                return this.total - i.nCachedObjects_;
              },
            },
            get bindingsPerObject() {
              return i._bindings.length;
            },
          };
        }
        return (
          ti(e, [
            {
              key: "add",
              value: function () {
                for (
                  var e = this._objects,
                    t = this._indicesByUUID,
                    n = this._paths,
                    r = this._parsedPaths,
                    i = this._bindings,
                    a = i.length,
                    o = void 0,
                    s = e.length,
                    l = this.nCachedObjects_,
                    u = 0,
                    c = arguments.length;
                  u !== c;
                  ++u
                ) {
                  var f = arguments[u],
                    d = f.uuid,
                    h = t[d];
                  if (void 0 === h) {
                    (h = s++), (t[d] = h), e.push(f);
                    for (var p = 0, v = a; p !== v; ++p)
                      i[p].push(new Yg(f, n[p], r[p]));
                  } else if (h < l) {
                    o = e[h];
                    var m = --l,
                      g = e[m];
                    (t[g.uuid] = h), (e[h] = g), (t[d] = m), (e[m] = f);
                    for (var y = 0, b = a; y !== b; ++y) {
                      var x = i[y],
                        w = x[m],
                        _ = x[h];
                      (x[h] = w),
                        void 0 === _ && (_ = new Yg(f, n[y], r[y])),
                        (x[m] = _);
                    }
                  } else
                    e[h] !== o &&
                      console.error(
                        "THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes."
                      );
                }
                this.nCachedObjects_ = l;
              },
            },
            {
              key: "remove",
              value: function () {
                for (
                  var e = this._objects,
                    t = this._indicesByUUID,
                    n = this._bindings,
                    r = n.length,
                    i = this.nCachedObjects_,
                    a = 0,
                    o = arguments.length;
                  a !== o;
                  ++a
                ) {
                  var s = arguments[a],
                    l = s.uuid,
                    u = t[l];
                  if (void 0 !== u && u >= i) {
                    var c = i++,
                      f = e[c];
                    (t[f.uuid] = u), (e[u] = f), (t[l] = c), (e[c] = s);
                    for (var d = 0, h = r; d !== h; ++d) {
                      var p = n[d],
                        v = p[c],
                        m = p[u];
                      (p[u] = v), (p[c] = m);
                    }
                  }
                }
                this.nCachedObjects_ = i;
              },
            },
            {
              key: "uncache",
              value: function () {
                for (
                  var e = this._objects,
                    t = this._indicesByUUID,
                    n = this._bindings,
                    r = n.length,
                    i = this.nCachedObjects_,
                    a = e.length,
                    o = 0,
                    s = arguments.length;
                  o !== s;
                  ++o
                ) {
                  var l = arguments[o],
                    u = l.uuid,
                    c = t[u];
                  if (void 0 !== c)
                    if ((delete t[u], c < i)) {
                      var f = --i,
                        d = e[f],
                        h = --a,
                        p = e[h];
                      (t[d.uuid] = c),
                        (e[c] = d),
                        (t[p.uuid] = f),
                        (e[f] = p),
                        e.pop();
                      for (var v = 0, m = r; v !== m; ++v) {
                        var g = n[v],
                          y = g[f],
                          b = g[h];
                        (g[c] = y), (g[f] = b), g.pop();
                      }
                    } else {
                      var x = --a,
                        w = e[x];
                      x > 0 && (t[w.uuid] = c), (e[c] = w), e.pop();
                      for (var _ = 0, S = r; _ !== S; ++_) {
                        var M = n[_];
                        (M[c] = M[x]), M.pop();
                      }
                    }
                }
                this.nCachedObjects_ = i;
              },
            },
            {
              key: "subscribe_",
              value: function (e, t) {
                var n = this._bindingsIndicesByPath,
                  r = n[e],
                  i = this._bindings;
                if (void 0 !== r) return i[r];
                var a = this._paths,
                  o = this._parsedPaths,
                  s = this._objects,
                  l = s.length,
                  u = this.nCachedObjects_,
                  c = new Array(l);
                (r = i.length), (n[e] = r), a.push(e), o.push(t), i.push(c);
                for (var f = u, d = s.length; f !== d; ++f) {
                  var h = s[f];
                  c[f] = new Yg(h, e, t);
                }
                return c;
              },
            },
            {
              key: "unsubscribe_",
              value: function (e) {
                var t = this._bindingsIndicesByPath,
                  n = t[e];
                if (void 0 !== n) {
                  var r = this._paths,
                    i = this._parsedPaths,
                    a = this._bindings,
                    o = a.length - 1,
                    s = a[o];
                  (t[e[o]] = n),
                    (a[n] = s),
                    a.pop(),
                    (i[n] = i[o]),
                    i.pop(),
                    (r[n] = r[o]),
                    r.pop();
                }
              },
            },
          ]),
          e
        );
      })();
      Jg.prototype.isAnimationObjectGroup = !0;
      var $g = (function () {
          function e(t, n) {
            var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : null,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : n.blendMode;
            Kr(this, e),
              (this._mixer = t),
              (this._clip = n),
              (this._localRoot = r),
              (this.blendMode = i);
            for (
              var a = n.tracks,
                o = a.length,
                s = new Array(o),
                l = { endingStart: Io, endingEnd: Io },
                u = 0;
              u !== o;
              ++u
            ) {
              var c = a[u].createInterpolant(null);
              (s[u] = c), (c.settings = l);
            }
            (this._interpolantSettings = l),
              (this._interpolants = s),
              (this._propertyBindings = new Array(o)),
              (this._cacheIndex = null),
              (this._byClipCacheIndex = null),
              (this._timeScaleInterpolant = null),
              (this._weightInterpolant = null),
              (this.loop = Lo),
              (this._loopCount = -1),
              (this._startTime = null),
              (this.time = 0),
              (this.timeScale = 1),
              (this._effectiveTimeScale = 1),
              (this.weight = 1),
              (this._effectiveWeight = 1),
              (this.repetitions = 1 / 0),
              (this.paused = !1),
              (this.enabled = !0),
              (this.clampWhenFinished = !1),
              (this.zeroSlopeAtStart = !0),
              (this.zeroSlopeAtEnd = !0);
          }
          return (
            ti(e, [
              {
                key: "play",
                value: function () {
                  return this._mixer._activateAction(this), this;
                },
              },
              {
                key: "stop",
                value: function () {
                  return this._mixer._deactivateAction(this), this.reset();
                },
              },
              {
                key: "reset",
                value: function () {
                  return (
                    (this.paused = !1),
                    (this.enabled = !0),
                    (this.time = 0),
                    (this._loopCount = -1),
                    (this._startTime = null),
                    this.stopFading().stopWarping()
                  );
                },
              },
              {
                key: "isRunning",
                value: function () {
                  return (
                    this.enabled &&
                    !this.paused &&
                    0 !== this.timeScale &&
                    null === this._startTime &&
                    this._mixer._isActiveAction(this)
                  );
                },
              },
              {
                key: "isScheduled",
                value: function () {
                  return this._mixer._isActiveAction(this);
                },
              },
              {
                key: "startAt",
                value: function (e) {
                  return (this._startTime = e), this;
                },
              },
              {
                key: "setLoop",
                value: function (e, t) {
                  return (this.loop = e), (this.repetitions = t), this;
                },
              },
              {
                key: "setEffectiveWeight",
                value: function (e) {
                  return (
                    (this.weight = e),
                    (this._effectiveWeight = this.enabled ? e : 0),
                    this.stopFading()
                  );
                },
              },
              {
                key: "getEffectiveWeight",
                value: function () {
                  return this._effectiveWeight;
                },
              },
              {
                key: "fadeIn",
                value: function (e) {
                  return this._scheduleFading(e, 0, 1);
                },
              },
              {
                key: "fadeOut",
                value: function (e) {
                  return this._scheduleFading(e, 1, 0);
                },
              },
              {
                key: "crossFadeFrom",
                value: function (e, t, n) {
                  if ((e.fadeOut(t), this.fadeIn(t), n)) {
                    var r = this._clip.duration,
                      i = e._clip.duration,
                      a = i / r,
                      o = r / i;
                    e.warp(1, a, t), this.warp(o, 1, t);
                  }
                  return this;
                },
              },
              {
                key: "crossFadeTo",
                value: function (e, t, n) {
                  return e.crossFadeFrom(this, t, n);
                },
              },
              {
                key: "stopFading",
                value: function () {
                  var e = this._weightInterpolant;
                  return (
                    null !== e &&
                      ((this._weightInterpolant = null),
                      this._mixer._takeBackControlInterpolant(e)),
                    this
                  );
                },
              },
              {
                key: "setEffectiveTimeScale",
                value: function (e) {
                  return (
                    (this.timeScale = e),
                    (this._effectiveTimeScale = this.paused ? 0 : e),
                    this.stopWarping()
                  );
                },
              },
              {
                key: "getEffectiveTimeScale",
                value: function () {
                  return this._effectiveTimeScale;
                },
              },
              {
                key: "setDuration",
                value: function (e) {
                  return (
                    (this.timeScale = this._clip.duration / e),
                    this.stopWarping()
                  );
                },
              },
              {
                key: "syncWith",
                value: function (e) {
                  return (
                    (this.time = e.time),
                    (this.timeScale = e.timeScale),
                    this.stopWarping()
                  );
                },
              },
              {
                key: "halt",
                value: function (e) {
                  return this.warp(this._effectiveTimeScale, 0, e);
                },
              },
              {
                key: "warp",
                value: function (e, t, n) {
                  var r = this._mixer,
                    i = r.time,
                    a = this.timeScale,
                    o = this._timeScaleInterpolant;
                  null === o &&
                    ((o = r._lendControlInterpolant()),
                    (this._timeScaleInterpolant = o));
                  var s = o.parameterPositions,
                    l = o.sampleValues;
                  return (
                    (s[0] = i),
                    (s[1] = i + n),
                    (l[0] = e / a),
                    (l[1] = t / a),
                    this
                  );
                },
              },
              {
                key: "stopWarping",
                value: function () {
                  var e = this._timeScaleInterpolant;
                  return (
                    null !== e &&
                      ((this._timeScaleInterpolant = null),
                      this._mixer._takeBackControlInterpolant(e)),
                    this
                  );
                },
              },
              {
                key: "getMixer",
                value: function () {
                  return this._mixer;
                },
              },
              {
                key: "getClip",
                value: function () {
                  return this._clip;
                },
              },
              {
                key: "getRoot",
                value: function () {
                  return this._localRoot || this._mixer._root;
                },
              },
              {
                key: "_update",
                value: function (e, t, n, r) {
                  if (this.enabled) {
                    var i = this._startTime;
                    if (null !== i) {
                      var a = (e - i) * n;
                      if (a < 0 || 0 === n) return;
                      (this._startTime = null), (t = n * a);
                    }
                    t *= this._updateTimeScale(e);
                    var o = this._updateTime(t),
                      s = this._updateWeight(e);
                    if (s > 0) {
                      var l = this._interpolants,
                        u = this._propertyBindings;
                      if (this.blendMode === Ho)
                        for (var c = 0, f = l.length; c !== f; ++c)
                          l[c].evaluate(o), u[c].accumulateAdditive(s);
                      else
                        for (var d = 0, h = l.length; d !== h; ++d)
                          l[d].evaluate(o), u[d].accumulate(r, s);
                    }
                  } else this._updateWeight(e);
                },
              },
              {
                key: "_updateWeight",
                value: function (e) {
                  var t = 0;
                  if (this.enabled) {
                    t = this.weight;
                    var n = this._weightInterpolant;
                    if (null !== n) {
                      var r = n.evaluate(e)[0];
                      (t *= r),
                        e > n.parameterPositions[1] &&
                          (this.stopFading(), 0 === r && (this.enabled = !1));
                    }
                  }
                  return (this._effectiveWeight = t), t;
                },
              },
              {
                key: "_updateTimeScale",
                value: function (e) {
                  var t = 0;
                  if (!this.paused) {
                    t = this.timeScale;
                    var n = this._timeScaleInterpolant;
                    if (null !== n)
                      (t *= n.evaluate(e)[0]),
                        e > n.parameterPositions[1] &&
                          (this.stopWarping(),
                          0 === t ? (this.paused = !0) : (this.timeScale = t));
                  }
                  return (this._effectiveTimeScale = t), t;
                },
              },
              {
                key: "_updateTime",
                value: function (e) {
                  var t = this._clip.duration,
                    n = this.loop,
                    r = this.time + e,
                    i = this._loopCount,
                    a = n === Ro;
                  if (0 === e)
                    return -1 === i ? r : a && 1 === (1 & i) ? t - r : r;
                  if (n === Po) {
                    -1 === i &&
                      ((this._loopCount = 0), this._setEndings(!0, !0, !1));
                    e: {
                      if (r >= t) r = t;
                      else {
                        if (!(r < 0)) {
                          this.time = r;
                          break e;
                        }
                        r = 0;
                      }
                      this.clampWhenFinished
                        ? (this.paused = !0)
                        : (this.enabled = !1),
                        (this.time = r),
                        this._mixer.dispatchEvent({
                          type: "finished",
                          action: this,
                          direction: e < 0 ? -1 : 1,
                        });
                    }
                  } else {
                    if (
                      (-1 === i &&
                        (e >= 0
                          ? ((i = 0),
                            this._setEndings(!0, 0 === this.repetitions, a))
                          : this._setEndings(0 === this.repetitions, !0, a)),
                      r >= t || r < 0)
                    ) {
                      var o = Math.floor(r / t);
                      (r -= t * o), (i += Math.abs(o));
                      var s = this.repetitions - i;
                      if (s <= 0)
                        this.clampWhenFinished
                          ? (this.paused = !0)
                          : (this.enabled = !1),
                          (r = e > 0 ? t : 0),
                          (this.time = r),
                          this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: e > 0 ? 1 : -1,
                          });
                      else {
                        if (1 === s) {
                          var l = e < 0;
                          this._setEndings(l, !l, a);
                        } else this._setEndings(!1, !1, a);
                        (this._loopCount = i),
                          (this.time = r),
                          this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: o,
                          });
                      }
                    } else this.time = r;
                    if (a && 1 === (1 & i)) return t - r;
                  }
                  return r;
                },
              },
              {
                key: "_setEndings",
                value: function (e, t, n) {
                  var r = this._interpolantSettings;
                  n
                    ? ((r.endingStart = No), (r.endingEnd = No))
                    : ((r.endingStart = e
                        ? this.zeroSlopeAtStart
                          ? No
                          : Io
                        : Fo),
                      (r.endingEnd = t ? (this.zeroSlopeAtEnd ? No : Io) : Fo));
                },
              },
              {
                key: "_scheduleFading",
                value: function (e, t, n) {
                  var r = this._mixer,
                    i = r.time,
                    a = this._weightInterpolant;
                  null === a &&
                    ((a = r._lendControlInterpolant()),
                    (this._weightInterpolant = a));
                  var o = a.parameterPositions,
                    s = a.sampleValues;
                  return (
                    (o[0] = i), (s[0] = t), (o[1] = i + e), (s[1] = n), this
                  );
                },
              },
            ]),
            e
          );
        })(),
        Qg = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            return (
              Kr(this, n),
              ((r = t.call(this))._root = e),
              r._initMemoryManager(),
              (r._accuIndex = 0),
              (r.time = 0),
              (r.timeScale = 1),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "_bindAction",
                value: function (e, t) {
                  var n = e._localRoot || this._root,
                    r = e._clip.tracks,
                    i = r.length,
                    a = e._propertyBindings,
                    o = e._interpolants,
                    s = n.uuid,
                    l = this._bindingsByRootAndName,
                    u = l[s];
                  void 0 === u && ((u = {}), (l[s] = u));
                  for (var c = 0; c !== i; ++c) {
                    var f = r[c],
                      d = f.name,
                      h = u[d];
                    if (void 0 !== h) ++h.referenceCount, (a[c] = h);
                    else {
                      if (void 0 !== (h = a[c])) {
                        null === h._cacheIndex &&
                          (++h.referenceCount,
                          this._addInactiveBinding(h, s, d));
                        continue;
                      }
                      var p = t && t._propertyBindings[c].binding.parsedPath;
                      ++(h = new Ig(
                        Yg.create(n, d, p),
                        f.ValueTypeName,
                        f.getValueSize()
                      )).referenceCount,
                        this._addInactiveBinding(h, s, d),
                        (a[c] = h);
                    }
                    o[c].resultBuffer = h.buffer;
                  }
                },
              },
              {
                key: "_activateAction",
                value: function (e) {
                  if (!this._isActiveAction(e)) {
                    if (null === e._cacheIndex) {
                      var t = (e._localRoot || this._root).uuid,
                        n = e._clip.uuid,
                        r = this._actionsByClip[n];
                      this._bindAction(e, r && r.knownActions[0]),
                        this._addInactiveAction(e, n, t);
                    }
                    for (
                      var i = e._propertyBindings, a = 0, o = i.length;
                      a !== o;
                      ++a
                    ) {
                      var s = i[a];
                      0 === s.useCount++ &&
                        (this._lendBinding(s), s.saveOriginalState());
                    }
                    this._lendAction(e);
                  }
                },
              },
              {
                key: "_deactivateAction",
                value: function (e) {
                  if (this._isActiveAction(e)) {
                    for (
                      var t = e._propertyBindings, n = 0, r = t.length;
                      n !== r;
                      ++n
                    ) {
                      var i = t[n];
                      0 === --i.useCount &&
                        (i.restoreOriginalState(), this._takeBackBinding(i));
                    }
                    this._takeBackAction(e);
                  }
                },
              },
              {
                key: "_initMemoryManager",
                value: function () {
                  (this._actions = []),
                    (this._nActiveActions = 0),
                    (this._actionsByClip = {}),
                    (this._bindings = []),
                    (this._nActiveBindings = 0),
                    (this._bindingsByRootAndName = {}),
                    (this._controlInterpolants = []),
                    (this._nActiveControlInterpolants = 0);
                  var e = this;
                  this.stats = {
                    actions: {
                      get total() {
                        return e._actions.length;
                      },
                      get inUse() {
                        return e._nActiveActions;
                      },
                    },
                    bindings: {
                      get total() {
                        return e._bindings.length;
                      },
                      get inUse() {
                        return e._nActiveBindings;
                      },
                    },
                    controlInterpolants: {
                      get total() {
                        return e._controlInterpolants.length;
                      },
                      get inUse() {
                        return e._nActiveControlInterpolants;
                      },
                    },
                  };
                },
              },
              {
                key: "_isActiveAction",
                value: function (e) {
                  var t = e._cacheIndex;
                  return null !== t && t < this._nActiveActions;
                },
              },
              {
                key: "_addInactiveAction",
                value: function (e, t, n) {
                  var r = this._actions,
                    i = this._actionsByClip,
                    a = i[t];
                  if (void 0 === a)
                    (a = { knownActions: [e], actionByRoot: {} }),
                      (e._byClipCacheIndex = 0),
                      (i[t] = a);
                  else {
                    var o = a.knownActions;
                    (e._byClipCacheIndex = o.length), o.push(e);
                  }
                  (e._cacheIndex = r.length),
                    r.push(e),
                    (a.actionByRoot[n] = e);
                },
              },
              {
                key: "_removeInactiveAction",
                value: function (e) {
                  var t = this._actions,
                    n = t[t.length - 1],
                    r = e._cacheIndex;
                  (n._cacheIndex = r),
                    (t[r] = n),
                    t.pop(),
                    (e._cacheIndex = null);
                  var i = e._clip.uuid,
                    a = this._actionsByClip,
                    o = a[i],
                    s = o.knownActions,
                    l = s[s.length - 1],
                    u = e._byClipCacheIndex;
                  (l._byClipCacheIndex = u),
                    (s[u] = l),
                    s.pop(),
                    (e._byClipCacheIndex = null),
                    delete o.actionByRoot[(e._localRoot || this._root).uuid],
                    0 === s.length && delete a[i],
                    this._removeInactiveBindingsForAction(e);
                },
              },
              {
                key: "_removeInactiveBindingsForAction",
                value: function (e) {
                  for (
                    var t = e._propertyBindings, n = 0, r = t.length;
                    n !== r;
                    ++n
                  ) {
                    var i = t[n];
                    0 === --i.referenceCount && this._removeInactiveBinding(i);
                  }
                },
              },
              {
                key: "_lendAction",
                value: function (e) {
                  var t = this._actions,
                    n = e._cacheIndex,
                    r = this._nActiveActions++,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_takeBackAction",
                value: function (e) {
                  var t = this._actions,
                    n = e._cacheIndex,
                    r = --this._nActiveActions,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_addInactiveBinding",
                value: function (e, t, n) {
                  var r = this._bindingsByRootAndName,
                    i = this._bindings,
                    a = r[t];
                  void 0 === a && ((a = {}), (r[t] = a)),
                    (a[n] = e),
                    (e._cacheIndex = i.length),
                    i.push(e);
                },
              },
              {
                key: "_removeInactiveBinding",
                value: function (e) {
                  var t = this._bindings,
                    n = e.binding,
                    r = n.rootNode.uuid,
                    i = n.path,
                    a = this._bindingsByRootAndName,
                    o = a[r],
                    s = t[t.length - 1],
                    l = e._cacheIndex;
                  (s._cacheIndex = l),
                    (t[l] = s),
                    t.pop(),
                    delete o[i],
                    0 === Object.keys(o).length && delete a[r];
                },
              },
              {
                key: "_lendBinding",
                value: function (e) {
                  var t = this._bindings,
                    n = e._cacheIndex,
                    r = this._nActiveBindings++,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_takeBackBinding",
                value: function (e) {
                  var t = this._bindings,
                    n = e._cacheIndex,
                    r = --this._nActiveBindings,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_lendControlInterpolant",
                value: function () {
                  var e = this._controlInterpolants,
                    t = this._nActiveControlInterpolants++,
                    n = e[t];
                  return (
                    void 0 === n &&
                      (((n = new vm(
                        new Float32Array(2),
                        new Float32Array(2),
                        1,
                        this._controlInterpolantsResultBuffer
                      )).__cacheIndex = t),
                      (e[t] = n)),
                    n
                  );
                },
              },
              {
                key: "_takeBackControlInterpolant",
                value: function (e) {
                  var t = this._controlInterpolants,
                    n = e.__cacheIndex,
                    r = --this._nActiveControlInterpolants,
                    i = t[r];
                  (e.__cacheIndex = r),
                    (t[r] = e),
                    (i.__cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "clipAction",
                value: function (e, t, n) {
                  var r = t || this._root,
                    i = r.uuid,
                    a = "string" === typeof e ? Em.findByName(r, e) : e,
                    o = null !== a ? a.uuid : e,
                    s = this._actionsByClip[o],
                    l = null;
                  if (
                    (void 0 === n && (n = null !== a ? a.blendMode : Bo),
                    void 0 !== s)
                  ) {
                    var u = s.actionByRoot[i];
                    if (void 0 !== u && u.blendMode === n) return u;
                    (l = s.knownActions[0]), null === a && (a = l._clip);
                  }
                  if (null === a) return null;
                  var c = new $g(this, a, t, n);
                  return (
                    this._bindAction(c, l), this._addInactiveAction(c, o, i), c
                  );
                },
              },
              {
                key: "existingAction",
                value: function (e, t) {
                  var n = t || this._root,
                    r = n.uuid,
                    i = "string" === typeof e ? Em.findByName(n, e) : e,
                    a = i ? i.uuid : e,
                    o = this._actionsByClip[a];
                  return (void 0 !== o && o.actionByRoot[r]) || null;
                },
              },
              {
                key: "stopAllAction",
                value: function () {
                  for (
                    var e = this._actions, t = this._nActiveActions - 1;
                    t >= 0;
                    --t
                  )
                    e[t].stop();
                  return this;
                },
              },
              {
                key: "update",
                value: function (e) {
                  e *= this.timeScale;
                  for (
                    var t = this._actions,
                      n = this._nActiveActions,
                      r = (this.time += e),
                      i = Math.sign(e),
                      a = (this._accuIndex ^= 1),
                      o = 0;
                    o !== n;
                    ++o
                  ) {
                    t[o]._update(r, e, i, a);
                  }
                  for (
                    var s = this._bindings, l = this._nActiveBindings, u = 0;
                    u !== l;
                    ++u
                  )
                    s[u].apply(a);
                  return this;
                },
              },
              {
                key: "setTime",
                value: function (e) {
                  this.time = 0;
                  for (var t = 0; t < this._actions.length; t++)
                    this._actions[t].time = 0;
                  return this.update(e);
                },
              },
              {
                key: "getRoot",
                value: function () {
                  return this._root;
                },
              },
              {
                key: "uncacheClip",
                value: function (e) {
                  var t = this._actions,
                    n = e.uuid,
                    r = this._actionsByClip,
                    i = r[n];
                  if (void 0 !== i) {
                    for (
                      var a = i.knownActions, o = 0, s = a.length;
                      o !== s;
                      ++o
                    ) {
                      var l = a[o];
                      this._deactivateAction(l);
                      var u = l._cacheIndex,
                        c = t[t.length - 1];
                      (l._cacheIndex = null),
                        (l._byClipCacheIndex = null),
                        (c._cacheIndex = u),
                        (t[u] = c),
                        t.pop(),
                        this._removeInactiveBindingsForAction(l);
                    }
                    delete r[n];
                  }
                },
              },
              {
                key: "uncacheRoot",
                value: function (e) {
                  var t = e.uuid,
                    n = this._actionsByClip;
                  for (var r in n) {
                    var i = n[r].actionByRoot[t];
                    void 0 !== i &&
                      (this._deactivateAction(i),
                      this._removeInactiveAction(i));
                  }
                  var a = this._bindingsByRootAndName[t];
                  if (void 0 !== a)
                    for (var o in a) {
                      var s = a[o];
                      s.restoreOriginalState(), this._removeInactiveBinding(s);
                    }
                },
              },
              {
                key: "uncacheAction",
                value: function (e, t) {
                  var n = this.existingAction(e, t);
                  null !== n &&
                    (this._deactivateAction(n), this._removeInactiveAction(n));
                },
              },
            ]),
            n
          );
        })(Ts);
      Qg.prototype._controlInterpolantsResultBuffer = new Float32Array(1);
      var Zg = (function () {
          function e(t) {
            Kr(this, e),
              "string" === typeof t &&
                (console.warn(
                  "THREE.Uniform: Type parameter is no longer needed."
                ),
                (t = arguments[1])),
              (this.value = t);
          }
          return (
            ti(e, [
              {
                key: "clone",
                value: function () {
                  return new e(
                    void 0 === this.value.clone
                      ? this.value
                      : this.value.clone()
                  );
                },
              },
            ]),
            e
          );
        })(),
        Kg = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1;
            return (
              Kr(this, n), ((i = t.call(this, e, r)).meshPerAttribute = a), i
            );
          }
          return (
            ti(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    fi(ri(n.prototype), "copy", this).call(this, e),
                    (this.meshPerAttribute = e.meshPerAttribute),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function (e) {
                  var t = fi(ri(n.prototype), "clone", this).call(this, e);
                  return (t.meshPerAttribute = this.meshPerAttribute), t;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = fi(ri(n.prototype), "toJSON", this).call(this, e);
                  return (
                    (t.isInstancedInterleavedBuffer = !0),
                    (t.meshPerAttribute = this.meshPerAttribute),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(Mh);
      Kg.prototype.isInstancedInterleavedBuffer = !0;
      var ey = (function () {
        function e(t, n, r, i, a) {
          Kr(this, e),
            (this.buffer = t),
            (this.type = n),
            (this.itemSize = r),
            (this.elementSize = i),
            (this.count = a),
            (this.version = 0);
        }
        return (
          ti(e, [
            {
              key: "needsUpdate",
              set: function (e) {
                !0 === e && this.version++;
              },
            },
            {
              key: "setBuffer",
              value: function (e) {
                return (this.buffer = e), this;
              },
            },
            {
              key: "setType",
              value: function (e, t) {
                return (this.type = e), (this.elementSize = t), this;
              },
            },
            {
              key: "setItemSize",
              value: function (e) {
                return (this.itemSize = e), this;
              },
            },
            {
              key: "setCount",
              value: function (e) {
                return (this.count = e), this;
              },
            },
          ]),
          e
        );
      })();
      ey.prototype.isGLBufferAttribute = !0;
      var ty = (function () {
        function e(t, n) {
          var r =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            i =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1 / 0;
          Kr(this, e),
            (this.ray = new Yl(t, n)),
            (this.near = r),
            (this.far = i),
            (this.camera = null),
            (this.layers = new ou()),
            (this.params = {
              Mesh: {},
              Line: { threshold: 1 },
              LOD: {},
              Points: { threshold: 1 },
              Sprite: {},
            });
        }
        return (
          ti(e, [
            {
              key: "set",
              value: function (e, t) {
                this.ray.set(e, t);
              },
            },
            {
              key: "setFromCamera",
              value: function (e, t) {
                t.isPerspectiveCamera
                  ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
                    this.ray.direction
                      .set(e.x, e.y, 0.5)
                      .unproject(t)
                      .sub(this.ray.origin)
                      .normalize(),
                    (this.camera = t))
                  : t.isOrthographicCamera
                  ? (this.ray.origin
                      .set(e.x, e.y, (t.near + t.far) / (t.near - t.far))
                      .unproject(t),
                    this.ray.direction
                      .set(0, 0, -1)
                      .transformDirection(t.matrixWorld),
                    (this.camera = t))
                  : console.error(
                      "THREE.Raycaster: Unsupported camera type: " + t.type
                    );
              },
            },
            {
              key: "intersectObject",
              value: function (e) {
                var t =
                    !(arguments.length > 1 && void 0 !== arguments[1]) ||
                    arguments[1],
                  n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : [];
                return ry(e, this, n, t), n.sort(ny), n;
              },
            },
            {
              key: "intersectObjects",
              value: function (e) {
                for (
                  var t =
                      !(arguments.length > 1 && void 0 !== arguments[1]) ||
                      arguments[1],
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : [],
                    r = 0,
                    i = e.length;
                  r < i;
                  r++
                )
                  ry(e[r], this, n, t);
                return n.sort(ny), n;
              },
            },
          ]),
          e
        );
      })();
      function ny(e, t) {
        return e.distance - t.distance;
      }
      function ry(e, t, n, r) {
        if ((e.layers.test(t.layers) && e.raycast(t, n), !0 === r))
          for (var i = e.children, a = 0, o = i.length; a < o; a++)
            ry(i[a], t, n, !0);
      }
      var iy = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            return (
              Kr(this, e),
              (this.radius = t),
              (this.phi = n),
              (this.theta = r),
              this
            );
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e, t, n) {
                  return (
                    (this.radius = e), (this.phi = t), (this.theta = n), this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.radius = e.radius),
                    (this.phi = e.phi),
                    (this.theta = e.theta),
                    this
                  );
                },
              },
              {
                key: "makeSafe",
                value: function () {
                  var e = 1e-6;
                  return (
                    (this.phi = Math.max(e, Math.min(Math.PI - e, this.phi))),
                    this
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  return this.setFromCartesianCoords(e.x, e.y, e.z);
                },
              },
              {
                key: "setFromCartesianCoords",
                value: function (e, t, n) {
                  return (
                    (this.radius = Math.sqrt(e * e + t * t + n * n)),
                    0 === this.radius
                      ? ((this.theta = 0), (this.phi = 0))
                      : ((this.theta = Math.atan2(e, n)),
                        (this.phi = Math.acos(zs(t / this.radius, -1, 1)))),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        ay = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            return (
              Kr(this, e),
              (this.radius = t),
              (this.theta = n),
              (this.y = r),
              this
            );
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e, t, n) {
                  return (
                    (this.radius = e), (this.theta = t), (this.y = n), this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.radius = e.radius),
                    (this.theta = e.theta),
                    (this.y = e.y),
                    this
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  return this.setFromCartesianCoords(e.x, e.y, e.z);
                },
              },
              {
                key: "setFromCartesianCoords",
                value: function (e, t, n) {
                  return (
                    (this.radius = Math.sqrt(e * e + n * n)),
                    (this.theta = Math.atan2(e, n)),
                    (this.y = t),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        oy = new Us(),
        sy = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Us(1 / 0, 1 / 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Us(-1 / 0, -1 / 0);
            Kr(this, e), (this.min = t), (this.max = n);
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.min.copy(e), this.max.copy(t), this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.length; t < n; t++)
                    this.expandByPoint(e[t]);
                  return this;
                },
              },
              {
                key: "setFromCenterAndSize",
                value: function (e, t) {
                  var n = oy.copy(t).multiplyScalar(0.5);
                  return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.min.copy(e.min), this.max.copy(e.max), this;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return (
                    (this.min.x = this.min.y = 1 / 0),
                    (this.max.x = this.max.y = -1 / 0),
                    this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return this.max.x < this.min.x || this.max.y < this.min.y;
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0)
                    : e.addVectors(this.min, this.max).multiplyScalar(0.5);
                },
              },
              {
                key: "getSize",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0)
                    : e.subVectors(this.max, this.min);
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  return this.min.min(e), this.max.max(e), this;
                },
              },
              {
                key: "expandByVector",
                value: function (e) {
                  return this.min.sub(e), this.max.add(e), this;
                },
              },
              {
                key: "expandByScalar",
                value: function (e) {
                  return this.min.addScalar(-e), this.max.addScalar(e), this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return !(
                    e.x < this.min.x ||
                    e.x > this.max.x ||
                    e.y < this.min.y ||
                    e.y > this.max.y
                  );
                },
              },
              {
                key: "containsBox",
                value: function (e) {
                  return (
                    this.min.x <= e.min.x &&
                    e.max.x <= this.max.x &&
                    this.min.y <= e.min.y &&
                    e.max.y <= this.max.y
                  );
                },
              },
              {
                key: "getParameter",
                value: function (e, t) {
                  return t.set(
                    (e.x - this.min.x) / (this.max.x - this.min.x),
                    (e.y - this.min.y) / (this.max.y - this.min.y)
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return !(
                    e.max.x < this.min.x ||
                    e.min.x > this.max.x ||
                    e.max.y < this.min.y ||
                    e.min.y > this.max.y
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  return t.copy(e).clamp(this.min, this.max);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return oy.copy(e).clamp(this.min, this.max).sub(e).length();
                },
              },
              {
                key: "intersect",
                value: function (e) {
                  return this.min.max(e.min), this.max.min(e.max), this;
                },
              },
              {
                key: "union",
                value: function (e) {
                  return this.min.min(e.min), this.max.max(e.max), this;
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.min.add(e), this.max.add(e), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.min.equals(this.min) && e.max.equals(this.max);
                },
              },
            ]),
            e
          );
        })();
      sy.prototype.isBox2 = !0;
      var ly = new yl(),
        uy = new yl(),
        cy = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new yl(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new yl();
            Kr(this, e), (this.start = t), (this.end = n);
          }
          return (
            ti(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.start.copy(e), this.end.copy(t), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.start.copy(e.start), this.end.copy(e.end), this;
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return e.addVectors(this.start, this.end).multiplyScalar(0.5);
                },
              },
              {
                key: "delta",
                value: function (e) {
                  return e.subVectors(this.end, this.start);
                },
              },
              {
                key: "distanceSq",
                value: function () {
                  return this.start.distanceToSquared(this.end);
                },
              },
              {
                key: "distance",
                value: function () {
                  return this.start.distanceTo(this.end);
                },
              },
              {
                key: "at",
                value: function (e, t) {
                  return this.delta(t).multiplyScalar(e).add(this.start);
                },
              },
              {
                key: "closestPointToPointParameter",
                value: function (e, t) {
                  ly.subVectors(e, this.start),
                    uy.subVectors(this.end, this.start);
                  var n = uy.dot(uy),
                    r = uy.dot(ly) / n;
                  return t && (r = zs(r, 0, 1)), r;
                },
              },
              {
                key: "closestPointToPoint",
                value: function (e, t, n) {
                  var r = this.closestPointToPointParameter(e, t);
                  return this.delta(n).multiplyScalar(r).add(this.start);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.start.equals(this.start) && e.end.equals(this.end);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        fy = new yl(),
        dy = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            var i;
            Kr(this, n),
              ((i = t.call(this)).light = e),
              i.light.updateMatrixWorld(),
              (i.matrix = e.matrixWorld),
              (i.matrixAutoUpdate = !1),
              (i.color = r);
            for (
              var a = new tc(),
                o = [
                  0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0,
                  0, 0, 1, 1, 0, 0, 0, 0, -1, 1,
                ],
                s = 0,
                l = 1;
              s < 32;
              s++, l++
            ) {
              var u = (s / 32) * Math.PI * 2,
                c = (l / 32) * Math.PI * 2;
              o.push(Math.cos(u), Math.sin(u), 1, Math.cos(c), Math.sin(c), 1);
            }
            a.setAttribute("position", new qu(o, 3));
            var f = new up({ fog: !1, toneMapped: !1 });
            return (i.cone = new yp(a, f)), i.add(i.cone), i.update(), i;
          }
          return (
            ti(n, [
              {
                key: "dispose",
                value: function () {
                  this.cone.geometry.dispose(), this.cone.material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  this.light.updateMatrixWorld();
                  var e = this.light.distance ? this.light.distance : 1e3,
                    t = e * Math.tan(this.light.angle);
                  this.cone.scale.set(t, t, e),
                    fy.setFromMatrixPosition(this.light.target.matrixWorld),
                    this.cone.lookAt(fy),
                    void 0 !== this.color
                      ? this.cone.material.color.set(this.color)
                      : this.cone.material.color.copy(this.light.color);
                },
              },
            ]),
            n
          );
        })(xu),
        hy = new yl(),
        py = new Jl(),
        vy = new Jl(),
        my = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            Kr(this, n);
            for (
              var i = gy(e),
                a = new tc(),
                o = [],
                s = [],
                l = new il(0, 0, 1),
                u = new il(0, 1, 0),
                c = 0;
              c < i.length;
              c++
            ) {
              var f = i[c];
              f.parent &&
                f.parent.isBone &&
                (o.push(0, 0, 0),
                o.push(0, 0, 0),
                s.push(l.r, l.g, l.b),
                s.push(u.r, u.g, u.b));
            }
            a.setAttribute("position", new qu(o, 3)),
              a.setAttribute("color", new qu(s, 3));
            var d = new up({
              vertexColors: !0,
              depthTest: !1,
              depthWrite: !1,
              toneMapped: !1,
              transparent: !0,
            });
            return (
              ((r = t.call(this, a, d)).type = "SkeletonHelper"),
              (r.isSkeletonHelper = !0),
              (r.root = e),
              (r.bones = i),
              (r.matrix = e.matrixWorld),
              (r.matrixAutoUpdate = !1),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  var t = this.bones,
                    r = this.geometry,
                    i = r.getAttribute("position");
                  vy.copy(this.root.matrixWorld).invert();
                  for (var a = 0, o = 0; a < t.length; a++) {
                    var s = t[a];
                    s.parent &&
                      s.parent.isBone &&
                      (py.multiplyMatrices(vy, s.matrixWorld),
                      hy.setFromMatrixPosition(py),
                      i.setXYZ(o, hy.x, hy.y, hy.z),
                      py.multiplyMatrices(vy, s.parent.matrixWorld),
                      hy.setFromMatrixPosition(py),
                      i.setXYZ(o + 1, hy.x, hy.y, hy.z),
                      (o += 2));
                  }
                  (r.getAttribute("position").needsUpdate = !0),
                    fi(ri(n.prototype), "updateMatrixWorld", this).call(
                      this,
                      e
                    );
                },
              },
            ]),
            n
          );
        })(yp);
      function gy(e) {
        var t = [];
        !0 === e.isBone && t.push(e);
        for (var n = 0; n < e.children.length; n++)
          t.push.apply(t, gy(e.children[n]));
        return t;
      }
      var yy = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            var a;
            Kr(this, n);
            var o = new Xv(r, 4, 2),
              s = new zu({ wireframe: !0, fog: !1, toneMapped: !1 });
            return (
              ((a = t.call(this, o, s)).light = e),
              a.light.updateMatrixWorld(),
              (a.color = i),
              (a.type = "PointLightHelper"),
              (a.matrix = a.light.matrixWorld),
              (a.matrixAutoUpdate = !1),
              a.update(),
              a
            );
          }
          return (
            ti(n, [
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  void 0 !== this.color
                    ? this.material.color.set(this.color)
                    : this.material.color.copy(this.light.color);
                },
              },
            ]),
            n
          );
        })(bc),
        by = new yl(),
        xy = new il(),
        wy = new il(),
        _y = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            var a;
            Kr(this, n),
              ((a = t.call(this)).light = e),
              a.light.updateMatrixWorld(),
              (a.matrix = e.matrixWorld),
              (a.matrixAutoUpdate = !1),
              (a.color = i);
            var o = new Wv(r);
            o.rotateY(0.5 * Math.PI),
              (a.material = new zu({ wireframe: !0, fog: !1, toneMapped: !1 })),
              void 0 === a.color && (a.material.vertexColors = !0);
            var s = o.getAttribute("position"),
              l = new Float32Array(3 * s.count);
            return (
              o.setAttribute("color", new Nu(l, 3)),
              a.add(new bc(o, a.material)),
              a.update(),
              a
            );
          }
          return (
            ti(n, [
              {
                key: "dispose",
                value: function () {
                  this.children[0].geometry.dispose(),
                    this.children[0].material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  var e = this.children[0];
                  if (void 0 !== this.color)
                    this.material.color.set(this.color);
                  else {
                    var t = e.geometry.getAttribute("color");
                    xy.copy(this.light.color), wy.copy(this.light.groundColor);
                    for (var n = 0, r = t.count; n < r; n++) {
                      var i = n < r / 2 ? xy : wy;
                      t.setXYZ(n, i.r, i.g, i.b);
                    }
                    t.needsUpdate = !0;
                  }
                  e.lookAt(
                    by.setFromMatrixPosition(this.light.matrixWorld).negate()
                  );
                },
              },
            ]),
            n
          );
        })(xu),
        Sy = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 10,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 10,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 4473924,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8947848;
            Kr(this, n), (a = new il(a)), (o = new il(o));
            for (
              var s = i / 2,
                l = r / i,
                u = r / 2,
                c = [],
                f = [],
                d = 0,
                h = 0,
                p = -u;
              d <= i;
              d++, p += l
            ) {
              c.push(-u, 0, p, u, 0, p), c.push(p, 0, -u, p, 0, u);
              var v = d === s ? a : o;
              v.toArray(f, h),
                (h += 3),
                v.toArray(f, h),
                (h += 3),
                v.toArray(f, h),
                (h += 3),
                v.toArray(f, h),
                (h += 3);
            }
            var m = new tc();
            m.setAttribute("position", new qu(c, 3)),
              m.setAttribute("color", new qu(f, 3));
            var g = new up({ vertexColors: !0, toneMapped: !1 });
            return ((e = t.call(this, m, g)).type = "GridHelper"), e;
          }
          return ti(n);
        })(yp),
        My = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 10,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 16,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 8,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 64,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 4473924,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 8947848;
            Kr(this, n), (s = new il(s)), (l = new il(l));
            for (var u = [], c = [], f = 0; f <= i; f++) {
              var d = (f / i) * (2 * Math.PI),
                h = Math.sin(d) * r,
                p = Math.cos(d) * r;
              u.push(0, 0, 0), u.push(h, 0, p);
              var v = 1 & f ? s : l;
              c.push(v.r, v.g, v.b), c.push(v.r, v.g, v.b);
            }
            for (var m = 0; m <= a; m++)
              for (
                var g = 1 & m ? s : l, y = r - (r / a) * m, b = 0;
                b < o;
                b++
              ) {
                var x = (b / o) * (2 * Math.PI),
                  w = Math.sin(x) * y,
                  _ = Math.cos(x) * y;
                u.push(w, 0, _),
                  c.push(g.r, g.g, g.b),
                  (x = ((b + 1) / o) * (2 * Math.PI)),
                  (w = Math.sin(x) * y),
                  (_ = Math.cos(x) * y),
                  u.push(w, 0, _),
                  c.push(g.r, g.g, g.b);
              }
            var S = new tc();
            S.setAttribute("position", new qu(u, 3)),
              S.setAttribute("color", new qu(c, 3));
            var M = new up({ vertexColors: !0, toneMapped: !1 });
            return ((e = t.call(this, S, M)).type = "PolarGridHelper"), e;
          }
          return ti(n);
        })(yp),
        Ey = new yl(),
        ky = new yl(),
        Ty = new yl(),
        Cy = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            var a;
            Kr(this, n),
              ((a = t.call(this)).light = e),
              a.light.updateMatrixWorld(),
              (a.matrix = e.matrixWorld),
              (a.matrixAutoUpdate = !1),
              (a.color = i),
              void 0 === r && (r = 1);
            var o = new tc();
            o.setAttribute(
              "position",
              new qu([-r, r, 0, r, r, 0, r, -r, 0, -r, -r, 0, -r, r, 0], 3)
            );
            var s = new up({ fog: !1, toneMapped: !1 });
            return (
              (a.lightPlane = new vp(o, s)),
              a.add(a.lightPlane),
              (o = new tc()).setAttribute(
                "position",
                new qu([0, 0, 0, 0, 0, 1], 3)
              ),
              (a.targetLine = new vp(o, s)),
              a.add(a.targetLine),
              a.update(),
              a
            );
          }
          return (
            ti(n, [
              {
                key: "dispose",
                value: function () {
                  this.lightPlane.geometry.dispose(),
                    this.lightPlane.material.dispose(),
                    this.targetLine.geometry.dispose(),
                    this.targetLine.material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  Ey.setFromMatrixPosition(this.light.matrixWorld),
                    ky.setFromMatrixPosition(this.light.target.matrixWorld),
                    Ty.subVectors(ky, Ey),
                    this.lightPlane.lookAt(ky),
                    void 0 !== this.color
                      ? (this.lightPlane.material.color.set(this.color),
                        this.targetLine.material.color.set(this.color))
                      : (this.lightPlane.material.color.copy(this.light.color),
                        this.targetLine.material.color.copy(this.light.color)),
                    this.targetLine.lookAt(ky),
                    (this.targetLine.scale.z = Ty.length());
                },
              },
            ]),
            n
          );
        })(xu),
        Ay = new yl(),
        Py = new kc(),
        Ly = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            var r;
            Kr(this, n);
            var i = new tc(),
              a = new up({ color: 16777215, vertexColors: !0, toneMapped: !1 }),
              o = [],
              s = [],
              l = {},
              u = new il(16755200),
              c = new il(16711680),
              f = new il(43775),
              d = new il(16777215),
              h = new il(3355443);
            function p(e, t, n) {
              v(e, n), v(t, n);
            }
            function v(e, t) {
              o.push(0, 0, 0),
                s.push(t.r, t.g, t.b),
                void 0 === l[e] && (l[e] = []),
                l[e].push(o.length / 3 - 1);
            }
            return (
              p("n1", "n2", u),
              p("n2", "n4", u),
              p("n4", "n3", u),
              p("n3", "n1", u),
              p("f1", "f2", u),
              p("f2", "f4", u),
              p("f4", "f3", u),
              p("f3", "f1", u),
              p("n1", "f1", u),
              p("n2", "f2", u),
              p("n3", "f3", u),
              p("n4", "f4", u),
              p("p", "n1", c),
              p("p", "n2", c),
              p("p", "n3", c),
              p("p", "n4", c),
              p("u1", "u2", f),
              p("u2", "u3", f),
              p("u3", "u1", f),
              p("c", "t", d),
              p("p", "c", h),
              p("cn1", "cn2", h),
              p("cn3", "cn4", h),
              p("cf1", "cf2", h),
              p("cf3", "cf4", h),
              i.setAttribute("position", new qu(o, 3)),
              i.setAttribute("color", new qu(s, 3)),
              ((r = t.call(this, i, a)).type = "CameraHelper"),
              (r.camera = e),
              r.camera.updateProjectionMatrix &&
                r.camera.updateProjectionMatrix(),
              (r.matrix = e.matrixWorld),
              (r.matrixAutoUpdate = !1),
              (r.pointMap = l),
              r.update(),
              r
            );
          }
          return (
            ti(n, [
              {
                key: "update",
                value: function () {
                  var e = this.geometry,
                    t = this.pointMap;
                  Py.projectionMatrixInverse.copy(
                    this.camera.projectionMatrixInverse
                  ),
                    Ry("c", t, e, Py, 0, 0, -1),
                    Ry("t", t, e, Py, 0, 0, 1),
                    Ry("n1", t, e, Py, -1, -1, -1),
                    Ry("n2", t, e, Py, 1, -1, -1),
                    Ry("n3", t, e, Py, -1, 1, -1),
                    Ry("n4", t, e, Py, 1, 1, -1),
                    Ry("f1", t, e, Py, -1, -1, 1),
                    Ry("f2", t, e, Py, 1, -1, 1),
                    Ry("f3", t, e, Py, -1, 1, 1),
                    Ry("f4", t, e, Py, 1, 1, 1),
                    Ry("u1", t, e, Py, 0.7, 1.1, -1),
                    Ry("u2", t, e, Py, -0.7, 1.1, -1),
                    Ry("u3", t, e, Py, 0, 2, -1),
                    Ry("cf1", t, e, Py, -1, 0, 1),
                    Ry("cf2", t, e, Py, 1, 0, 1),
                    Ry("cf3", t, e, Py, 0, -1, 1),
                    Ry("cf4", t, e, Py, 0, 1, 1),
                    Ry("cn1", t, e, Py, -1, 0, -1),
                    Ry("cn2", t, e, Py, 1, 0, -1),
                    Ry("cn3", t, e, Py, 0, -1, -1),
                    Ry("cn4", t, e, Py, 0, 1, -1),
                    (e.getAttribute("position").needsUpdate = !0);
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            n
          );
        })(yp);
      function Ry(e, t, n, r, i, a, o) {
        Ay.set(i, a, o).unproject(r);
        var s = t[e];
        if (void 0 !== s)
          for (
            var l = n.getAttribute("position"), u = 0, c = s.length;
            u < c;
            u++
          )
            l.setXYZ(s[u], Ay.x, Ay.y, Ay.z);
      }
      for (
        var Oy,
          zy,
          Dy = new wl(),
          Iy = (function (e) {
            ni(n, e);
            var t = si(n);
            function n(e) {
              var r,
                i =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 16776960;
              Kr(this, n);
              var a = new Uint16Array([
                  0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2,
                  6, 3, 7,
                ]),
                o = new Float32Array(24),
                s = new tc();
              return (
                s.setIndex(new Nu(a, 1)),
                s.setAttribute("position", new Nu(o, 3)),
                ((r = t.call(
                  this,
                  s,
                  new up({ color: i, toneMapped: !1 })
                )).object = e),
                (r.type = "BoxHelper"),
                (r.matrixAutoUpdate = !1),
                r.update(),
                r
              );
            }
            return (
              ti(n, [
                {
                  key: "update",
                  value: function (e) {
                    if (
                      (void 0 !== e &&
                        console.warn(
                          "THREE.BoxHelper: .update() has no longer arguments."
                        ),
                      void 0 !== this.object && Dy.setFromObject(this.object),
                      !Dy.isEmpty())
                    ) {
                      var t = Dy.min,
                        n = Dy.max,
                        r = this.geometry.attributes.position,
                        i = r.array;
                      (i[0] = n.x),
                        (i[1] = n.y),
                        (i[2] = n.z),
                        (i[3] = t.x),
                        (i[4] = n.y),
                        (i[5] = n.z),
                        (i[6] = t.x),
                        (i[7] = t.y),
                        (i[8] = n.z),
                        (i[9] = n.x),
                        (i[10] = t.y),
                        (i[11] = n.z),
                        (i[12] = n.x),
                        (i[13] = n.y),
                        (i[14] = t.z),
                        (i[15] = t.x),
                        (i[16] = n.y),
                        (i[17] = t.z),
                        (i[18] = t.x),
                        (i[19] = t.y),
                        (i[20] = t.z),
                        (i[21] = n.x),
                        (i[22] = t.y),
                        (i[23] = t.z),
                        (r.needsUpdate = !0),
                        this.geometry.computeBoundingSphere();
                    }
                  },
                },
                {
                  key: "setFromObject",
                  value: function (e) {
                    return (this.object = e), this.update(), this;
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      yp.prototype.copy.call(this, e),
                      (this.object = e.object),
                      this
                    );
                  },
                },
              ]),
              n
            );
          })(yp),
          Ny = (function (e) {
            ni(n, e);
            var t = si(n);
            function n(e) {
              var r,
                i =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 16776960;
              Kr(this, n);
              var a = new Uint16Array([
                  0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2,
                  6, 3, 7,
                ]),
                o = [
                  1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1,
                  -1, -1, -1, 1, -1, -1,
                ],
                s = new tc();
              return (
                s.setIndex(new Nu(a, 1)),
                s.setAttribute("position", new qu(o, 3)),
                ((r = t.call(
                  this,
                  s,
                  new up({ color: i, toneMapped: !1 })
                )).box = e),
                (r.type = "Box3Helper"),
                r.geometry.computeBoundingSphere(),
                r
              );
            }
            return (
              ti(n, [
                {
                  key: "updateMatrixWorld",
                  value: function (e) {
                    var t = this.box;
                    t.isEmpty() ||
                      (t.getCenter(this.position),
                      t.getSize(this.scale),
                      this.scale.multiplyScalar(0.5),
                      fi(ri(n.prototype), "updateMatrixWorld", this).call(
                        this,
                        e
                      ));
                  },
                },
              ]),
              n
            );
          })(yp),
          Fy = (function (e) {
            ni(n, e);
            var t = si(n);
            function n(e) {
              var r,
                i =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 1,
                a =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 16776960;
              Kr(this, n);
              var o = a,
                s = [
                  1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1,
                  1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0,
                ],
                l = new tc();
              l.setAttribute("position", new qu(s, 3)),
                l.computeBoundingSphere(),
                ((r = t.call(
                  this,
                  l,
                  new up({ color: o, toneMapped: !1 })
                )).type = "PlaneHelper"),
                (r.plane = e),
                (r.size = i);
              var u = [
                  1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1,
                ],
                c = new tc();
              return (
                c.setAttribute("position", new qu(u, 3)),
                c.computeBoundingSphere(),
                r.add(
                  new bc(
                    c,
                    new zu({
                      color: o,
                      opacity: 0.2,
                      transparent: !0,
                      depthWrite: !1,
                      toneMapped: !1,
                    })
                  )
                ),
                r
              );
            }
            return (
              ti(n, [
                {
                  key: "updateMatrixWorld",
                  value: function (e) {
                    var t = -this.plane.constant;
                    Math.abs(t) < 1e-8 && (t = 1e-8),
                      this.scale.set(0.5 * this.size, 0.5 * this.size, t),
                      (this.children[0].material.side = t < 0 ? ki : Ei),
                      this.lookAt(this.plane.normal),
                      fi(ri(n.prototype), "updateMatrixWorld", this).call(
                        this,
                        e
                      );
                  },
                },
              ]),
              n
            );
          })(vp),
          By = new yl(),
          Hy = (function (e) {
            ni(n, e);
            var t = si(n);
            function n() {
              var e,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : new yl(0, 0, 1),
                i =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : new yl(0, 0, 0),
                a =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 1,
                o =
                  arguments.length > 3 && void 0 !== arguments[3]
                    ? arguments[3]
                    : 16776960,
                s =
                  arguments.length > 4 && void 0 !== arguments[4]
                    ? arguments[4]
                    : 0.2 * a,
                l =
                  arguments.length > 5 && void 0 !== arguments[5]
                    ? arguments[5]
                    : 0.2 * s;
              return (
                Kr(this, n),
                ((e = t.call(this)).type = "ArrowHelper"),
                void 0 === Oy &&
                  ((Oy = new tc()).setAttribute(
                    "position",
                    new qu([0, 0, 0, 0, 1, 0], 3)
                  ),
                  (zy = new nv(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)),
                e.position.copy(i),
                (e.line = new vp(Oy, new up({ color: o, toneMapped: !1 }))),
                (e.line.matrixAutoUpdate = !1),
                e.add(e.line),
                (e.cone = new bc(zy, new zu({ color: o, toneMapped: !1 }))),
                (e.cone.matrixAutoUpdate = !1),
                e.add(e.cone),
                e.setDirection(r),
                e.setLength(a, s, l),
                e
              );
            }
            return (
              ti(n, [
                {
                  key: "setDirection",
                  value: function (e) {
                    if (e.y > 0.99999) this.quaternion.set(0, 0, 0, 1);
                    else if (e.y < -0.99999) this.quaternion.set(1, 0, 0, 0);
                    else {
                      By.set(e.z, 0, -e.x).normalize();
                      var t = Math.acos(e.y);
                      this.quaternion.setFromAxisAngle(By, t);
                    }
                  },
                },
                {
                  key: "setLength",
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0.2 * e,
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : 0.2 * t;
                    this.line.scale.set(1, Math.max(1e-4, e - t), 1),
                      this.line.updateMatrix(),
                      this.cone.scale.set(n, t, n),
                      (this.cone.position.y = e),
                      this.cone.updateMatrix();
                  },
                },
                {
                  key: "setColor",
                  value: function (e) {
                    this.line.material.color.set(e),
                      this.cone.material.color.set(e);
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      fi(ri(n.prototype), "copy", this).call(this, e, !1),
                      this.line.copy(e.line),
                      this.cone.copy(e.cone),
                      this
                    );
                  },
                },
              ]),
              n
            );
          })(xu),
          Uy = (function (e) {
            ni(n, e);
            var t = si(n);
            function n() {
              var e,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 1;
              Kr(this, n);
              var i = [0, 0, 0, r, 0, 0, 0, 0, 0, 0, r, 0, 0, 0, 0, 0, 0, r],
                a = [
                  1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1,
                ],
                o = new tc();
              o.setAttribute("position", new qu(i, 3)),
                o.setAttribute("color", new qu(a, 3));
              var s = new up({ vertexColors: !0, toneMapped: !1 });
              return ((e = t.call(this, o, s)).type = "AxesHelper"), e;
            }
            return (
              ti(n, [
                {
                  key: "setColors",
                  value: function (e, t, n) {
                    var r = new il(),
                      i = this.geometry.attributes.color.array;
                    return (
                      r.set(e),
                      r.toArray(i, 0),
                      r.toArray(i, 3),
                      r.set(t),
                      r.toArray(i, 6),
                      r.toArray(i, 9),
                      r.set(n),
                      r.toArray(i, 12),
                      r.toArray(i, 15),
                      (this.geometry.attributes.color.needsUpdate = !0),
                      this
                    );
                  },
                },
                {
                  key: "dispose",
                  value: function () {
                    this.geometry.dispose(), this.material.dispose();
                  },
                },
              ]),
              n
            );
          })(yp),
          jy = (function () {
            function e() {
              Kr(this, e),
                (this.type = "ShapePath"),
                (this.color = new il()),
                (this.subPaths = []),
                (this.currentPath = null);
            }
            return (
              ti(e, [
                {
                  key: "moveTo",
                  value: function (e, t) {
                    return (
                      (this.currentPath = new Zp()),
                      this.subPaths.push(this.currentPath),
                      this.currentPath.moveTo(e, t),
                      this
                    );
                  },
                },
                {
                  key: "lineTo",
                  value: function (e, t) {
                    return this.currentPath.lineTo(e, t), this;
                  },
                },
                {
                  key: "quadraticCurveTo",
                  value: function (e, t, n, r) {
                    return this.currentPath.quadraticCurveTo(e, t, n, r), this;
                  },
                },
                {
                  key: "bezierCurveTo",
                  value: function (e, t, n, r, i, a) {
                    return (
                      this.currentPath.bezierCurveTo(e, t, n, r, i, a), this
                    );
                  },
                },
                {
                  key: "splineThru",
                  value: function (e) {
                    return this.currentPath.splineThru(e), this;
                  },
                },
                {
                  key: "toShapes",
                  value: function (e, t) {
                    function n(e) {
                      for (var t = [], n = 0, r = e.length; n < r; n++) {
                        var i = e[n],
                          a = new fv();
                        (a.curves = i.curves), t.push(a);
                      }
                      return t;
                    }
                    function r(e, t) {
                      for (
                        var n = t.length, r = !1, i = n - 1, a = 0;
                        a < n;
                        i = a++
                      ) {
                        var o = t[i],
                          s = t[a],
                          l = s.x - o.x,
                          u = s.y - o.y;
                        if (Math.abs(u) > Number.EPSILON) {
                          if (
                            (u < 0 &&
                              ((o = t[a]), (l = -l), (s = t[i]), (u = -u)),
                            e.y < o.y || e.y > s.y)
                          )
                            continue;
                          if (e.y === o.y) {
                            if (e.x === o.x) return !0;
                          } else {
                            var c = u * (e.x - o.x) - l * (e.y - o.y);
                            if (0 === c) return !0;
                            if (c < 0) continue;
                            r = !r;
                          }
                        } else {
                          if (e.y !== o.y) continue;
                          if (
                            (s.x <= e.x && e.x <= o.x) ||
                            (o.x <= e.x && e.x <= s.x)
                          )
                            return !0;
                        }
                      }
                      return r;
                    }
                    var i,
                      a,
                      o,
                      s = Fv.isClockWise,
                      l = this.subPaths;
                    if (0 === l.length) return [];
                    if (!0 === t) return n(l);
                    var u = [];
                    if (1 === l.length)
                      return (
                        (a = l[0]),
                        ((o = new fv()).curves = a.curves),
                        u.push(o),
                        u
                      );
                    var c = !s(l[0].getPoints());
                    c = e ? !c : c;
                    var f,
                      d,
                      h = [],
                      p = [],
                      v = [],
                      m = 0;
                    (p[m] = void 0), (v[m] = []);
                    for (var g = 0, y = l.length; g < y; g++)
                      (i = s((f = (a = l[g]).getPoints()))),
                        (i = e ? !i : i)
                          ? (!c && p[m] && m++,
                            (p[m] = { s: new fv(), p: f }),
                            (p[m].s.curves = a.curves),
                            c && m++,
                            (v[m] = []))
                          : v[m].push({ h: a, p: f[0] });
                    if (!p[0]) return n(l);
                    if (p.length > 1) {
                      for (var b = !1, x = 0, w = 0, _ = p.length; w < _; w++)
                        h[w] = [];
                      for (var S = 0, M = p.length; S < M; S++)
                        for (var E = v[S], k = 0; k < E.length; k++) {
                          for (var T = E[k], C = !0, A = 0; A < p.length; A++)
                            r(T.p, p[A].p) &&
                              (S !== A && x++,
                              C ? ((C = !1), h[A].push(T)) : (b = !0));
                          C && h[S].push(T);
                        }
                      x > 0 && !1 === b && (v = h);
                    }
                    for (var P = 0, L = p.length; P < L; P++) {
                      (o = p[P].s), u.push(o);
                      for (var R = 0, O = (d = v[P]).length; R < O; R++)
                        o.holes.push(d[R].h);
                    }
                    return u;
                  },
                },
              ]),
              e
            );
          })(),
          Gy = (function () {
            function e() {
              Kr(this, e);
            }
            return (
              ti(e, null, [
                {
                  key: "toHalfFloat",
                  value: function (e) {
                    Math.abs(e) > 65504 &&
                      console.warn(
                        "THREE.DataUtils.toHalfFloat(): Value out of range."
                      ),
                      (e = zs(e, -65504, 65504)),
                      (Vy[0] = e);
                    var t = qy[0],
                      n = (t >> 23) & 511;
                    return Xy[n] + ((8388607 & t) >> Yy[n]);
                  },
                },
                {
                  key: "fromHalfFloat",
                  value: function (e) {
                    var t = e >> 10;
                    return (qy[0] = Qy[Ky[t] + (1023 & e)] + Zy[t]), Vy[0];
                  },
                },
              ]),
              e
            );
          })(),
          Wy = new ArrayBuffer(4),
          Vy = new Float32Array(Wy),
          qy = new Uint32Array(Wy),
          Xy = new Uint32Array(512),
          Yy = new Uint32Array(512),
          Jy = 0;
        Jy < 256;
        ++Jy
      ) {
        var $y = Jy - 127;
        $y < -27
          ? ((Xy[Jy] = 0),
            (Xy[256 | Jy] = 32768),
            (Yy[Jy] = 24),
            (Yy[256 | Jy] = 24))
          : $y < -14
          ? ((Xy[Jy] = 1024 >> (-$y - 14)),
            (Xy[256 | Jy] = (1024 >> (-$y - 14)) | 32768),
            (Yy[Jy] = -$y - 1),
            (Yy[256 | Jy] = -$y - 1))
          : $y <= 15
          ? ((Xy[Jy] = ($y + 15) << 10),
            (Xy[256 | Jy] = (($y + 15) << 10) | 32768),
            (Yy[Jy] = 13),
            (Yy[256 | Jy] = 13))
          : $y < 128
          ? ((Xy[Jy] = 31744),
            (Xy[256 | Jy] = 64512),
            (Yy[Jy] = 24),
            (Yy[256 | Jy] = 24))
          : ((Xy[Jy] = 31744),
            (Xy[256 | Jy] = 64512),
            (Yy[Jy] = 13),
            (Yy[256 | Jy] = 13));
      }
      for (
        var Qy = new Uint32Array(2048),
          Zy = new Uint32Array(64),
          Ky = new Uint32Array(64),
          eb = 1;
        eb < 1024;
        ++eb
      ) {
        for (var tb = eb << 13, nb = 0; 0 === (8388608 & tb); )
          (tb <<= 1), (nb -= 8388608);
        (tb &= -8388609), (nb += 947912704), (Qy[eb] = tb | nb);
      }
      for (var rb = 1024; rb < 2048; ++rb)
        Qy[rb] = 939524096 + ((rb - 1024) << 13);
      for (var ib = 1; ib < 31; ++ib) Zy[ib] = ib << 23;
      (Zy[31] = 1199570944), (Zy[32] = 2147483648);
      for (var ab = 33; ab < 63; ++ab) Zy[ab] = 2147483648 + ((ab - 32) << 23);
      Zy[63] = 3347054592;
      for (var ob = 1; ob < 64; ++ob) 32 !== ob && (Ky[ob] = 1024);
      var sb = 0,
        lb = 1,
        ub = 0,
        cb = 1,
        fb = 2;
      function db(e) {
        return (
          console.warn(
            "THREE.MeshFaceMaterial has been removed. Use an Array instead."
          ),
          e
        );
      }
      function hb() {
        var e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
        return (
          console.warn(
            "THREE.MultiMaterial has been removed. Use an Array instead."
          ),
          (e.isMultiMaterial = !0),
          (e.materials = e),
          (e.clone = function () {
            return e.slice();
          }),
          e
        );
      }
      var pb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.PointCloud has been renamed to THREE.Points."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Ep),
        vb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return (
              Kr(this, n),
              console.warn("THREE.Particle has been renamed to THREE.Sprite."),
              t.call(this, e)
            );
          }
          return ti(n);
        })(Uh),
        mb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.ParticleSystem has been renamed to THREE.Points."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Ep),
        gb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."
              ),
              t.call(this, e)
            );
          }
          return ti(n);
        })(xp),
        yb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."
              ),
              t.call(this, e)
            );
          }
          return ti(n);
        })(xp),
        bb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."
              ),
              t.call(this, e)
            );
          }
          return ti(n);
        })(xp),
        xb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Vertex has been removed. Use THREE.Vector3 instead."
              ),
              t.call(this, e, r, i)
            );
          }
          return ti(n);
        })(yl),
        wb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            var i;
            return (
              Kr(this, n),
              console.warn(
                "THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."
              ),
              (i = t.call(this, e, r)).setUsage(ms),
              i
            );
          }
          return ti(n);
        })(Nu),
        _b = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Fu),
        Sb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Bu),
        Mb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Hu),
        Eb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Uu),
        kb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(ju),
        Tb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Gu),
        Cb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Wu),
        Ab = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(qu),
        Pb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Xu);
      (Lp.create = function (e, t) {
        return (
          console.log("THREE.Curve.create() has been deprecated"),
          (e.prototype = Object.create(Lp.prototype)),
          (e.prototype.constructor = e),
          (e.prototype.getPoint = t),
          e
        );
      }),
        (Zp.prototype.fromPoints = function (e) {
          return (
            console.warn(
              "THREE.Path: .fromPoints() has been renamed to .setFromPoints()."
            ),
            this.setFromPoints(e)
          );
        });
      var Lb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.AxisHelper has been renamed to THREE.AxesHelper."
              ),
              t.call(this, e)
            );
          }
          return ti(n);
        })(Uy),
        Rb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."
              ),
              t.call(this, e, r)
            );
          }
          return ti(n);
        })(Iy),
        Ob = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."
              ),
              t.call(
                this,
                new cv(e.geometry),
                new up({ color: void 0 !== r ? r : 16777215 })
              )
            );
          }
          return ti(n);
        })(yp);
      (Sy.prototype.setColors = function () {
        console.error(
          "THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead."
        );
      }),
        (my.prototype.update = function () {
          console.error(
            "THREE.SkeletonHelper: update() no longer needs to be called."
          );
        });
      var zb = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r) {
          return (
            Kr(this, n),
            console.warn(
              "THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."
            ),
            t.call(
              this,
              new Zv(e.geometry),
              new up({ color: void 0 !== r ? r : 16777215 })
            )
          );
        }
        return ti(n);
      })(yp);
      (Pm.prototype.extractUrlBase = function (e) {
        return (
          console.warn(
            "THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."
          ),
          ag.extractUrlBase(e)
        );
      }),
        (Pm.Handlers = {
          add: function () {
            console.error(
              "THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead."
            );
          },
          get: function () {
            console.error(
              "THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead."
            );
          },
        });
      var Db = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.XHRLoader has been renamed to THREE.FileLoader."
              ),
              t.call(this, e)
            );
          }
          return ti(n);
        })(Rm),
        Ib = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."
              ),
              t.call(this, e)
            );
          }
          return ti(n);
        })(Nm);
      (sy.prototype.center = function (e) {
        return (
          console.warn(
            "THREE.Box2: .center() has been renamed to .getCenter()."
          ),
          this.getCenter(e)
        );
      }),
        (sy.prototype.empty = function () {
          return (
            console.warn(
              "THREE.Box2: .empty() has been renamed to .isEmpty()."
            ),
            this.isEmpty()
          );
        }),
        (sy.prototype.isIntersectionBox = function (e) {
          return (
            console.warn(
              "THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."
            ),
            this.intersectsBox(e)
          );
        }),
        (sy.prototype.size = function (e) {
          return (
            console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
            this.getSize(e)
          );
        }),
        (wl.prototype.center = function (e) {
          return (
            console.warn(
              "THREE.Box3: .center() has been renamed to .getCenter()."
            ),
            this.getCenter(e)
          );
        }),
        (wl.prototype.empty = function () {
          return (
            console.warn(
              "THREE.Box3: .empty() has been renamed to .isEmpty()."
            ),
            this.isEmpty()
          );
        }),
        (wl.prototype.isIntersectionBox = function (e) {
          return (
            console.warn(
              "THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."
            ),
            this.intersectsBox(e)
          );
        }),
        (wl.prototype.isIntersectionSphere = function (e) {
          return (
            console.warn(
              "THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."
            ),
            this.intersectsSphere(e)
          );
        }),
        (wl.prototype.size = function (e) {
          return (
            console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
            this.getSize(e)
          );
        }),
        (au.prototype.toVector3 = function () {
          console.error(
            "THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead"
          );
        }),
        (Hl.prototype.empty = function () {
          return (
            console.warn(
              "THREE.Sphere: .empty() has been renamed to .isEmpty()."
            ),
            this.isEmpty()
          );
        }),
        (Fc.prototype.setFromMatrix = function (e) {
          return (
            console.warn(
              "THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."
            ),
            this.setFromProjectionMatrix(e)
          );
        }),
        (cy.prototype.center = function (e) {
          return (
            console.warn(
              "THREE.Line3: .center() has been renamed to .getCenter()."
            ),
            this.getCenter(e)
          );
        }),
        (js.prototype.flattenToArrayOffset = function (e, t) {
          return (
            console.warn(
              "THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."
            ),
            this.toArray(e, t)
          );
        }),
        (js.prototype.multiplyVector3 = function (e) {
          return (
            console.warn(
              "THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."
            ),
            e.applyMatrix3(this)
          );
        }),
        (js.prototype.multiplyVector3Array = function () {
          console.error(
            "THREE.Matrix3: .multiplyVector3Array() has been removed."
          );
        }),
        (js.prototype.applyToBufferAttribute = function (e) {
          return (
            console.warn(
              "THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."
            ),
            e.applyMatrix3(this)
          );
        }),
        (js.prototype.applyToVector3Array = function () {
          console.error(
            "THREE.Matrix3: .applyToVector3Array() has been removed."
          );
        }),
        (js.prototype.getInverse = function (e) {
          return (
            console.warn(
              "THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."
            ),
            this.copy(e).invert()
          );
        }),
        (Jl.prototype.extractPosition = function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."
            ),
            this.copyPosition(e)
          );
        }),
        (Jl.prototype.flattenToArrayOffset = function (e, t) {
          return (
            console.warn(
              "THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."
            ),
            this.toArray(e, t)
          );
        }),
        (Jl.prototype.getPosition = function () {
          return (
            console.warn(
              "THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."
            ),
            new yl().setFromMatrixColumn(this, 3)
          );
        }),
        (Jl.prototype.setRotationFromQuaternion = function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."
            ),
            this.makeRotationFromQuaternion(e)
          );
        }),
        (Jl.prototype.multiplyToArray = function () {
          console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
        }),
        (Jl.prototype.multiplyVector3 = function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."
            ),
            e.applyMatrix4(this)
          );
        }),
        (Jl.prototype.multiplyVector4 = function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."
            ),
            e.applyMatrix4(this)
          );
        }),
        (Jl.prototype.multiplyVector3Array = function () {
          console.error(
            "THREE.Matrix4: .multiplyVector3Array() has been removed."
          );
        }),
        (Jl.prototype.rotateAxis = function (e) {
          console.warn(
            "THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."
          ),
            e.transformDirection(this);
        }),
        (Jl.prototype.crossVector = function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."
            ),
            e.applyMatrix4(this)
          );
        }),
        (Jl.prototype.translate = function () {
          console.error("THREE.Matrix4: .translate() has been removed.");
        }),
        (Jl.prototype.rotateX = function () {
          console.error("THREE.Matrix4: .rotateX() has been removed.");
        }),
        (Jl.prototype.rotateY = function () {
          console.error("THREE.Matrix4: .rotateY() has been removed.");
        }),
        (Jl.prototype.rotateZ = function () {
          console.error("THREE.Matrix4: .rotateZ() has been removed.");
        }),
        (Jl.prototype.rotateByAxis = function () {
          console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
        }),
        (Jl.prototype.applyToBufferAttribute = function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."
            ),
            e.applyMatrix4(this)
          );
        }),
        (Jl.prototype.applyToVector3Array = function () {
          console.error(
            "THREE.Matrix4: .applyToVector3Array() has been removed."
          );
        }),
        (Jl.prototype.makeFrustum = function (e, t, n, r, i, a) {
          return (
            console.warn(
              "THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."
            ),
            this.makePerspective(e, t, r, n, i, a)
          );
        }),
        (Jl.prototype.getInverse = function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."
            ),
            this.copy(e).invert()
          );
        }),
        (Dc.prototype.isIntersectionLine = function (e) {
          return (
            console.warn(
              "THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."
            ),
            this.intersectsLine(e)
          );
        }),
        (gl.prototype.multiplyVector3 = function (e) {
          return (
            console.warn(
              "THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."
            ),
            e.applyQuaternion(this)
          );
        }),
        (gl.prototype.inverse = function () {
          return (
            console.warn(
              "THREE.Quaternion: .inverse() has been renamed to invert()."
            ),
            this.invert()
          );
        }),
        (Yl.prototype.isIntersectionBox = function (e) {
          return (
            console.warn(
              "THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."
            ),
            this.intersectsBox(e)
          );
        }),
        (Yl.prototype.isIntersectionPlane = function (e) {
          return (
            console.warn(
              "THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."
            ),
            this.intersectsPlane(e)
          );
        }),
        (Yl.prototype.isIntersectionSphere = function (e) {
          return (
            console.warn(
              "THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."
            ),
            this.intersectsSphere(e)
          );
        }),
        (Lu.prototype.area = function () {
          return (
            console.warn(
              "THREE.Triangle: .area() has been renamed to .getArea()."
            ),
            this.getArea()
          );
        }),
        (Lu.prototype.barycoordFromPoint = function (e, t) {
          return (
            console.warn(
              "THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."
            ),
            this.getBarycoord(e, t)
          );
        }),
        (Lu.prototype.midpoint = function (e) {
          return (
            console.warn(
              "THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."
            ),
            this.getMidpoint(e)
          );
        }),
        (Lu.prototypenormal = function (e) {
          return (
            console.warn(
              "THREE.Triangle: .normal() has been renamed to .getNormal()."
            ),
            this.getNormal(e)
          );
        }),
        (Lu.prototype.plane = function (e) {
          return (
            console.warn(
              "THREE.Triangle: .plane() has been renamed to .getPlane()."
            ),
            this.getPlane(e)
          );
        }),
        (Lu.barycoordFromPoint = function (e, t, n, r, i) {
          return (
            console.warn(
              "THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."
            ),
            Lu.getBarycoord(e, t, n, r, i)
          );
        }),
        (Lu.normal = function (e, t, n, r) {
          return (
            console.warn(
              "THREE.Triangle: .normal() has been renamed to .getNormal()."
            ),
            Lu.getNormal(e, t, n, r)
          );
        }),
        (fv.prototype.extractAllPoints = function (e) {
          return (
            console.warn(
              "THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."
            ),
            this.extractPoints(e)
          );
        }),
        (fv.prototype.extrude = function (e) {
          return (
            console.warn(
              "THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."
            ),
            new Uv(this, e)
          );
        }),
        (fv.prototype.makeGeometry = function (e) {
          return (
            console.warn(
              "THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."
            ),
            new qv(this, e)
          );
        }),
        (Us.prototype.fromAttribute = function (e, t, n) {
          return (
            console.warn(
              "THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."
            ),
            this.fromBufferAttribute(e, t, n)
          );
        }),
        (Us.prototype.distanceToManhattan = function (e) {
          return (
            console.warn(
              "THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."
            ),
            this.manhattanDistanceTo(e)
          );
        }),
        (Us.prototype.lengthManhattan = function () {
          return (
            console.warn(
              "THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."
            ),
            this.manhattanLength()
          );
        }),
        (yl.prototype.setEulerFromRotationMatrix = function () {
          console.error(
            "THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead."
          );
        }),
        (yl.prototype.setEulerFromQuaternion = function () {
          console.error(
            "THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead."
          );
        }),
        (yl.prototype.getPositionFromMatrix = function (e) {
          return (
            console.warn(
              "THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."
            ),
            this.setFromMatrixPosition(e)
          );
        }),
        (yl.prototype.getScaleFromMatrix = function (e) {
          return (
            console.warn(
              "THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."
            ),
            this.setFromMatrixScale(e)
          );
        }),
        (yl.prototype.getColumnFromMatrix = function (e, t) {
          return (
            console.warn(
              "THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."
            ),
            this.setFromMatrixColumn(t, e)
          );
        }),
        (yl.prototype.applyProjection = function (e) {
          return (
            console.warn(
              "THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."
            ),
            this.applyMatrix4(e)
          );
        }),
        (yl.prototype.fromAttribute = function (e, t, n) {
          return (
            console.warn(
              "THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."
            ),
            this.fromBufferAttribute(e, t, n)
          );
        }),
        (yl.prototype.distanceToManhattan = function (e) {
          return (
            console.warn(
              "THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."
            ),
            this.manhattanDistanceTo(e)
          );
        }),
        (yl.prototype.lengthManhattan = function () {
          return (
            console.warn(
              "THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."
            ),
            this.manhattanLength()
          );
        }),
        (cl.prototype.fromAttribute = function (e, t, n) {
          return (
            console.warn(
              "THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."
            ),
            this.fromBufferAttribute(e, t, n)
          );
        }),
        (cl.prototype.lengthManhattan = function () {
          return (
            console.warn(
              "THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."
            ),
            this.manhattanLength()
          );
        }),
        (xu.prototype.getChildByName = function (e) {
          return (
            console.warn(
              "THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."
            ),
            this.getObjectByName(e)
          );
        }),
        (xu.prototype.renderDepth = function () {
          console.warn(
            "THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead."
          );
        }),
        (xu.prototype.translate = function (e, t) {
          return (
            console.warn(
              "THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."
            ),
            this.translateOnAxis(t, e)
          );
        }),
        (xu.prototype.getWorldRotation = function () {
          console.error(
            "THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead."
          );
        }),
        (xu.prototype.applyMatrix = function (e) {
          return (
            console.warn(
              "THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."
            ),
            this.applyMatrix4(e)
          );
        }),
        Object.defineProperties(xu.prototype, {
          eulerOrder: {
            get: function () {
              return (
                console.warn(
                  "THREE.Object3D: .eulerOrder is now .rotation.order."
                ),
                this.rotation.order
              );
            },
            set: function (e) {
              console.warn(
                "THREE.Object3D: .eulerOrder is now .rotation.order."
              ),
                (this.rotation.order = e);
            },
          },
          useQuaternion: {
            get: function () {
              console.warn(
                "THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default."
              );
            },
            set: function () {
              console.warn(
                "THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default."
              );
            },
          },
        }),
        (bc.prototype.setDrawMode = function () {
          console.error(
            "THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary."
          );
        }),
        Object.defineProperties(bc.prototype, {
          drawMode: {
            get: function () {
              return (
                console.error(
                  "THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."
                ),
                Uo
              );
            },
            set: function () {
              console.error(
                "THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary."
              );
            },
          },
        }),
        (Qh.prototype.initBones = function () {
          console.error("THREE.SkinnedMesh: initBones() has been removed.");
        }),
        (Tc.prototype.setLens = function (e, t) {
          console.warn(
            "THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."
          ),
            void 0 !== t && (this.filmGauge = t),
            this.setFocalLength(e);
        }),
        Object.defineProperties(Bm.prototype, {
          onlyShadow: {
            set: function () {
              console.warn("THREE.Light: .onlyShadow has been removed.");
            },
          },
          shadowCameraFov: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraFov is now .shadow.camera.fov."
              ),
                (this.shadow.camera.fov = e);
            },
          },
          shadowCameraLeft: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraLeft is now .shadow.camera.left."
              ),
                (this.shadow.camera.left = e);
            },
          },
          shadowCameraRight: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraRight is now .shadow.camera.right."
              ),
                (this.shadow.camera.right = e);
            },
          },
          shadowCameraTop: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraTop is now .shadow.camera.top."
              ),
                (this.shadow.camera.top = e);
            },
          },
          shadowCameraBottom: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."
              ),
                (this.shadow.camera.bottom = e);
            },
          },
          shadowCameraNear: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraNear is now .shadow.camera.near."
              ),
                (this.shadow.camera.near = e);
            },
          },
          shadowCameraFar: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraFar is now .shadow.camera.far."
              ),
                (this.shadow.camera.far = e);
            },
          },
          shadowCameraVisible: {
            set: function () {
              console.warn(
                "THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead."
              );
            },
          },
          shadowBias: {
            set: function (e) {
              console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                (this.shadow.bias = e);
            },
          },
          shadowDarkness: {
            set: function () {
              console.warn("THREE.Light: .shadowDarkness has been removed.");
            },
          },
          shadowMapWidth: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."
              ),
                (this.shadow.mapSize.width = e);
            },
          },
          shadowMapHeight: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."
              ),
                (this.shadow.mapSize.height = e);
            },
          },
        }),
        Object.defineProperties(Nu.prototype, {
          length: {
            get: function () {
              return (
                console.warn(
                  "THREE.BufferAttribute: .length has been deprecated. Use .count instead."
                ),
                this.array.length
              );
            },
          },
          dynamic: {
            get: function () {
              return (
                console.warn(
                  "THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."
                ),
                this.usage === ms
              );
            },
            set: function () {
              console.warn(
                "THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."
              ),
                this.setUsage(ms);
            },
          },
        }),
        (Nu.prototype.setDynamic = function (e) {
          return (
            console.warn(
              "THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."
            ),
            this.setUsage(!0 === e ? ms : vs),
            this
          );
        }),
        (Nu.prototype.copyIndicesArray = function () {
          console.error(
            "THREE.BufferAttribute: .copyIndicesArray() has been removed."
          );
        }),
        (Nu.prototype.setArray = function () {
          console.error(
            "THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers"
          );
        }),
        (tc.prototype.addIndex = function (e) {
          console.warn(
            "THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."
          ),
            this.setIndex(e);
        }),
        (tc.prototype.addAttribute = function (e, t) {
          return (
            console.warn(
              "THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."
            ),
            (t && t.isBufferAttribute) || (t && t.isInterleavedBufferAttribute)
              ? "index" === e
                ? (console.warn(
                    "THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."
                  ),
                  this.setIndex(t),
                  this)
                : this.setAttribute(e, t)
              : (console.warn(
                  "THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."
                ),
                this.setAttribute(e, new Nu(arguments[1], arguments[2])))
          );
        }),
        (tc.prototype.addDrawCall = function (e, t, n) {
          void 0 !== n &&
            console.warn(
              "THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."
            ),
            console.warn(
              "THREE.BufferGeometry: .addDrawCall() is now .addGroup()."
            ),
            this.addGroup(e, t);
        }),
        (tc.prototype.clearDrawCalls = function () {
          console.warn(
            "THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."
          ),
            this.clearGroups();
        }),
        (tc.prototype.computeOffsets = function () {
          console.warn(
            "THREE.BufferGeometry: .computeOffsets() has been removed."
          );
        }),
        (tc.prototype.removeAttribute = function (e) {
          return (
            console.warn(
              "THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."
            ),
            this.deleteAttribute(e)
          );
        }),
        (tc.prototype.applyMatrix = function (e) {
          return (
            console.warn(
              "THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."
            ),
            this.applyMatrix4(e)
          );
        }),
        Object.defineProperties(tc.prototype, {
          drawcalls: {
            get: function () {
              return (
                console.error(
                  "THREE.BufferGeometry: .drawcalls has been renamed to .groups."
                ),
                this.groups
              );
            },
          },
          offsets: {
            get: function () {
              return (
                console.warn(
                  "THREE.BufferGeometry: .offsets has been renamed to .groups."
                ),
                this.groups
              );
            },
          },
        }),
        (Mh.prototype.setDynamic = function (e) {
          return (
            console.warn(
              "THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."
            ),
            this.setUsage(!0 === e ? ms : vs),
            this
          );
        }),
        (Mh.prototype.setArray = function () {
          console.error(
            "THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers"
          );
        }),
        (Uv.prototype.getArrays = function () {
          console.error(
            "THREE.ExtrudeGeometry: .getArrays() has been removed."
          );
        }),
        (Uv.prototype.addShapeList = function () {
          console.error(
            "THREE.ExtrudeGeometry: .addShapeList() has been removed."
          );
        }),
        (Uv.prototype.addShape = function () {
          console.error("THREE.ExtrudeGeometry: .addShape() has been removed.");
        }),
        (Sh.prototype.dispose = function () {
          console.error("THREE.Scene: .dispose() has been removed.");
        }),
        (Zg.prototype.onUpdate = function () {
          return (
            console.warn(
              "THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."
            ),
            this
          );
        }),
        Object.defineProperties(Ou.prototype, {
          wrapAround: {
            get: function () {
              console.warn("THREE.Material: .wrapAround has been removed.");
            },
            set: function () {
              console.warn("THREE.Material: .wrapAround has been removed.");
            },
          },
          overdraw: {
            get: function () {
              console.warn("THREE.Material: .overdraw has been removed.");
            },
            set: function () {
              console.warn("THREE.Material: .overdraw has been removed.");
            },
          },
          wrapRGB: {
            get: function () {
              return (
                console.warn("THREE.Material: .wrapRGB has been removed."),
                new il()
              );
            },
          },
          shading: {
            get: function () {
              console.error(
                "THREE." +
                  this.type +
                  ": .shading has been removed. Use the boolean .flatShading instead."
              );
            },
            set: function (e) {
              console.warn(
                "THREE." +
                  this.type +
                  ": .shading has been removed. Use the boolean .flatShading instead."
              ),
                (this.flatShading = e === Ci);
            },
          },
          stencilMask: {
            get: function () {
              return (
                console.warn(
                  "THREE." +
                    this.type +
                    ": .stencilMask has been removed. Use .stencilFuncMask instead."
                ),
                this.stencilFuncMask
              );
            },
            set: function (e) {
              console.warn(
                "THREE." +
                  this.type +
                  ": .stencilMask has been removed. Use .stencilFuncMask instead."
              ),
                (this.stencilFuncMask = e);
            },
          },
          vertexTangents: {
            get: function () {
              console.warn(
                "THREE." + this.type + ": .vertexTangents has been removed."
              );
            },
            set: function () {
              console.warn(
                "THREE." + this.type + ": .vertexTangents has been removed."
              );
            },
          },
        }),
        Object.defineProperties(Ec.prototype, {
          derivatives: {
            get: function () {
              return (
                console.warn(
                  "THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."
                ),
                this.extensions.derivatives
              );
            },
            set: function (e) {
              console.warn(
                "THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."
              ),
                (this.extensions.derivatives = e);
            },
          },
        }),
        (bh.prototype.clearTarget = function (e, t, n, r) {
          console.warn(
            "THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."
          ),
            this.setRenderTarget(e),
            this.clear(t, n, r);
        }),
        (bh.prototype.animate = function (e) {
          console.warn(
            "THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."
          ),
            this.setAnimationLoop(e);
        }),
        (bh.prototype.getCurrentRenderTarget = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."
            ),
            this.getRenderTarget()
          );
        }),
        (bh.prototype.getMaxAnisotropy = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."
            ),
            this.capabilities.getMaxAnisotropy()
          );
        }),
        (bh.prototype.getPrecision = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."
            ),
            this.capabilities.precision
          );
        }),
        (bh.prototype.resetGLState = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .resetGLState() is now .state.reset()."
            ),
            this.state.reset()
          );
        }),
        (bh.prototype.supportsFloatTextures = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."
            ),
            this.extensions.get("OES_texture_float")
          );
        }),
        (bh.prototype.supportsHalfFloatTextures = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."
            ),
            this.extensions.get("OES_texture_half_float")
          );
        }),
        (bh.prototype.supportsStandardDerivatives = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."
            ),
            this.extensions.get("OES_standard_derivatives")
          );
        }),
        (bh.prototype.supportsCompressedTextureS3TC = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."
            ),
            this.extensions.get("WEBGL_compressed_texture_s3tc")
          );
        }),
        (bh.prototype.supportsCompressedTexturePVRTC = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."
            ),
            this.extensions.get("WEBGL_compressed_texture_pvrtc")
          );
        }),
        (bh.prototype.supportsBlendMinMax = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."
            ),
            this.extensions.get("EXT_blend_minmax")
          );
        }),
        (bh.prototype.supportsVertexTextures = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."
            ),
            this.capabilities.vertexTextures
          );
        }),
        (bh.prototype.supportsInstancedArrays = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."
            ),
            this.extensions.get("ANGLE_instanced_arrays")
          );
        }),
        (bh.prototype.enableScissorTest = function (e) {
          console.warn(
            "THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."
          ),
            this.setScissorTest(e);
        }),
        (bh.prototype.initMaterial = function () {
          console.warn(
            "THREE.WebGLRenderer: .initMaterial() has been removed."
          );
        }),
        (bh.prototype.addPrePlugin = function () {
          console.warn(
            "THREE.WebGLRenderer: .addPrePlugin() has been removed."
          );
        }),
        (bh.prototype.addPostPlugin = function () {
          console.warn(
            "THREE.WebGLRenderer: .addPostPlugin() has been removed."
          );
        }),
        (bh.prototype.updateShadowMap = function () {
          console.warn(
            "THREE.WebGLRenderer: .updateShadowMap() has been removed."
          );
        }),
        (bh.prototype.setFaceCulling = function () {
          console.warn(
            "THREE.WebGLRenderer: .setFaceCulling() has been removed."
          );
        }),
        (bh.prototype.allocTextureUnit = function () {
          console.warn(
            "THREE.WebGLRenderer: .allocTextureUnit() has been removed."
          );
        }),
        (bh.prototype.setTexture = function () {
          console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");
        }),
        (bh.prototype.setTexture2D = function () {
          console.warn(
            "THREE.WebGLRenderer: .setTexture2D() has been removed."
          );
        }),
        (bh.prototype.setTextureCube = function () {
          console.warn(
            "THREE.WebGLRenderer: .setTextureCube() has been removed."
          );
        }),
        (bh.prototype.getActiveMipMapLevel = function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."
            ),
            this.getActiveMipmapLevel()
          );
        }),
        Object.defineProperties(bh.prototype, {
          shadowMapEnabled: {
            get: function () {
              return this.shadowMap.enabled;
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."
              ),
                (this.shadowMap.enabled = e);
            },
          },
          shadowMapType: {
            get: function () {
              return this.shadowMap.type;
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."
              ),
                (this.shadowMap.type = e);
            },
          },
          shadowMapCullFace: {
            get: function () {
              console.warn(
                "THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead."
              );
            },
            set: function () {
              console.warn(
                "THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead."
              );
            },
          },
          context: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."
                ),
                this.getContext()
              );
            },
          },
          vr: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderer: .vr has been renamed to .xr"
                ),
                this.xr
              );
            },
          },
          gammaInput: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."
                ),
                !1
              );
            },
            set: function () {
              console.warn(
                "THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."
              );
            },
          },
          gammaOutput: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."
                ),
                !1
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."
              ),
                (this.outputEncoding = !0 === e ? Vo : Wo);
            },
          },
          toneMappingWhitePoint: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."
                ),
                1
              );
            },
            set: function () {
              console.warn(
                "THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."
              );
            },
          },
          gammaFactor: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderer: .gammaFactor has been removed."
                ),
                2
              );
            },
            set: function () {
              console.warn(
                "THREE.WebGLRenderer: .gammaFactor has been removed."
              );
            },
          },
        }),
        Object.defineProperties(sh.prototype, {
          cullFace: {
            get: function () {
              console.warn(
                "THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead."
              );
            },
            set: function () {
              console.warn(
                "THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead."
              );
            },
          },
          renderReverseSided: {
            get: function () {
              console.warn(
                "THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead."
              );
            },
            set: function () {
              console.warn(
                "THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead."
              );
            },
          },
          renderSingleSided: {
            get: function () {
              console.warn(
                "THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead."
              );
            },
            set: function () {
              console.warn(
                "THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead."
              );
            },
          },
        });
      var Nb = (function (e) {
        ni(n, e);
        var t = si(n);
        function n(e, r, i) {
          return (
            Kr(this, n),
            console.warn(
              "THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."
            ),
            t.call(this, e, i)
          );
        }
        return ti(n);
      })(Lc);
      function Fb() {
        console.error("THREE.CanvasRenderer has been removed");
      }
      function Bb() {
        console.error("THREE.JSONLoader has been removed.");
      }
      Object.defineProperties(fl.prototype, {
        wrapS: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."
              ),
              this.texture.wrapS
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."
            ),
              (this.texture.wrapS = e);
          },
        },
        wrapT: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."
              ),
              this.texture.wrapT
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."
            ),
              (this.texture.wrapT = e);
          },
        },
        magFilter: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."
              ),
              this.texture.magFilter
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."
            ),
              (this.texture.magFilter = e);
          },
        },
        minFilter: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."
              ),
              this.texture.minFilter
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."
            ),
              (this.texture.minFilter = e);
          },
        },
        anisotropy: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."
              ),
              this.texture.anisotropy
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."
            ),
              (this.texture.anisotropy = e);
          },
        },
        offset: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .offset is now .texture.offset."
              ),
              this.texture.offset
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .offset is now .texture.offset."
            ),
              (this.texture.offset = e);
          },
        },
        repeat: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .repeat is now .texture.repeat."
              ),
              this.texture.repeat
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .repeat is now .texture.repeat."
            ),
              (this.texture.repeat = e);
          },
        },
        format: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .format is now .texture.format."
              ),
              this.texture.format
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .format is now .texture.format."
            ),
              (this.texture.format = e);
          },
        },
        type: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .type is now .texture.type."
              ),
              this.texture.type
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .type is now .texture.type."
            ),
              (this.texture.type = e);
          },
        },
        generateMipmaps: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."
              ),
              this.texture.generateMipmaps
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."
            ),
              (this.texture.generateMipmaps = e);
          },
        },
      }),
        (Ag.prototype.load = function (e) {
          console.warn(
            "THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead."
          );
          var t = this;
          return (
            new vg().load(e, function (e) {
              t.setBuffer(e);
            }),
            this
          );
        }),
        (Dg.prototype.getData = function () {
          return (
            console.warn(
              "THREE.AudioAnalyser: .getData() is now .getFrequencyData()."
            ),
            this.getFrequencyData()
          );
        }),
        (Ac.prototype.updateCubeMap = function (e, t) {
          return (
            console.warn(
              "THREE.CubeCamera: .updateCubeMap() is now .update()."
            ),
            this.update(e, t)
          );
        }),
        (Ac.prototype.clear = function (e, t, n, r) {
          return (
            console.warn(
              "THREE.CubeCamera: .clear() is now .renderTarget.clear()."
            ),
            this.renderTarget.clear(e, t, n, r)
          );
        }),
        (al.crossOrigin = void 0),
        (al.loadTexture = function (e, t, n, r) {
          console.warn(
            "THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead."
          );
          var i = new Fm();
          i.setCrossOrigin(this.crossOrigin);
          var a = i.load(e, n, void 0, r);
          return t && (a.mapping = t), a;
        }),
        (al.loadTextureCube = function (e, t, n, r) {
          console.warn(
            "THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead."
          );
          var i = new Im();
          i.setCrossOrigin(this.crossOrigin);
          var a = i.load(e, n, void 0, r);
          return t && (a.mapping = t), a;
        }),
        (al.loadCompressedTexture = function () {
          console.error(
            "THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead."
          );
        }),
        (al.loadCompressedTextureCube = function () {
          console.error(
            "THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead."
          );
        });
      var Hb = {
        createMultiMaterialObject: function () {
          console.error(
            "THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js"
          );
        },
        detach: function () {
          console.error(
            "THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js"
          );
        },
        attach: function () {
          console.error(
            "THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js"
          );
        },
      };
      function Ub() {
        console.error(
          "THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js"
        );
      }
      var jb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            return (
              Kr(this, n),
              console.error(
                "THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"
              ),
              t.call(this)
            );
          }
          return ti(n);
        })(tc),
        Gb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n() {
            return (
              Kr(this, n),
              console.error(
                "THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"
              ),
              t.call(this)
            );
          }
          return ti(n);
        })(tc);
      function Wb() {
        console.error(
          "THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js"
        );
      }
      function Vb() {
        console.error(
          "THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js"
        );
      }
      function qb() {
        console.error("THREE.ImmediateRenderObject has been removed.");
      }
      var Xb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i) {
            var a;
            return (
              Kr(this, n),
              console.error(
                'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'
              ),
              ((a = t.call(this, e, r, i)).samples = 4),
              a
            );
          }
          return ti(n);
        })(fl),
        Yb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i, a) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.DataTexture2DArray has been renamed to DataArrayTexture."
              ),
              t.call(this, e, r, i, a)
            );
          }
          return ti(n);
        })(dl),
        Jb = (function (e) {
          ni(n, e);
          var t = si(n);
          function n(e, r, i, a) {
            return (
              Kr(this, n),
              console.warn(
                "THREE.DataTexture3D has been renamed to Data3DTexture."
              ),
              t.call(this, e, r, i, a)
            );
          }
          return ti(n);
        })(pl);
      "undefined" !== typeof __THREE_DEVTOOLS__ &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("register", { detail: { revision: pi } })
        ),
        "undefined" !== typeof window &&
          (window.__THREE__
            ? console.warn(
                "WARNING: Multiple instances of Three.js being imported."
              )
            : (window.__THREE__ = pi));
      var $b = n(4585);
      function Qb(e) {
        var t,
          n = new Set(),
          r = function (e, r) {
            var i = "function" === typeof e ? e(t) : e;
            if (i !== t) {
              var a = t;
              (t = r ? i : Object.assign({}, t, i)),
                n.forEach(function (e) {
                  return e(t, a);
                });
            }
          },
          i = function () {
            return t;
          },
          a = {
            setState: r,
            getState: i,
            subscribe: function (e, r, a) {
              return r || a
                ? (function (e) {
                    var r =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : i,
                      a =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : Object.is;
                    console.warn(
                      "[DEPRECATED] Please use `subscribeWithSelector` middleware"
                    );
                    var o = r(t);
                    function s() {
                      var n = r(t);
                      if (!a(o, n)) {
                        var i = o;
                        e((o = n), i);
                      }
                    }
                    return (
                      n.add(s),
                      function () {
                        return n.delete(s);
                      }
                    );
                  })(e, r, a)
                : (n.add(e),
                  function () {
                    return n.delete(e);
                  });
            },
            destroy: function () {
              return n.clear();
            },
          };
        return (t = e(r, i, a)), a;
      }
      var Zb =
        "undefined" === typeof window ||
        !window.navigator ||
        /ServerSideRendering|^Deno\//.test(window.navigator.userAgent)
          ? t.useEffect
          : t.useLayoutEffect;
      var Kb = n(258),
        ex = n.n(Kb),
        tx = n(5296);
      function nx(e, t) {
        var n =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : function (e, t) {
                return e === t;
              };
        if (e === t) return !0;
        if (!e || !t) return !1;
        var r = e.length;
        if (t.length !== r) return !1;
        for (var i = 0; i < r; i++) if (!n(e[i], t[i])) return !1;
        return !0;
      }
      var rx = [];
      function ix(e, t) {
        var n,
          r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          i =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
          a = Xr(rx);
        try {
          for (a.s(); !(n = a.n()).done; ) {
            var o = n.value;
            if (nx(t, o.keys, o.equal)) {
              if (r) return;
              if (Object.prototype.hasOwnProperty.call(o, "error"))
                throw o.error;
              if (Object.prototype.hasOwnProperty.call(o, "response"))
                return o.response;
              if (!r) throw o.promise;
            }
          }
        } catch (l) {
          a.e(l);
        } finally {
          a.f();
        }
        var s = {
          keys: t,
          equal: i.equal,
          promise: e
            .apply(void 0, Zr(t))
            .then(function (e) {
              return (s.response = e);
            })
            .then(function () {
              i.lifespan &&
                i.lifespan > 0 &&
                setTimeout(function () {
                  var e = rx.indexOf(s);
                  -1 !== e && rx.splice(e, 1);
                }, i.lifespan);
            })
            .catch(function (e) {
              return (s.error = e);
            }),
        };
        if ((rx.push(s), !r)) throw s.promise;
      }
      var ax = ["children", "key", "ref"],
        ox = ["children", "key", "ref"],
        sx = ["args", "attach"],
        lx = ["args", "children"],
        ux = ["args", "children"],
        cx = ["params"],
        fx = function (e) {
          return e && e.isOrthographicCamera;
        },
        dx =
          "undefined" === typeof window ||
          !window.navigator ||
          /ServerSideRendering|^Deno\//.test(window.navigator.userAgent)
            ? t.useEffect
            : t.useLayoutEffect;
      function hx(e) {
        var n = t.useRef(e);
        return (
          dx(
            function () {
              n.current = e;
            },
            [e]
          ),
          n
        );
      }
      function px(e) {
        var t = e.set;
        return (
          dx(
            function () {
              return (
                t(
                  new Promise(function () {
                    return null;
                  })
                ),
                function () {
                  return t(!1);
                }
              );
            },
            [t]
          ),
          null
        );
      }
      var vx = (function (e) {
        ni(n, e);
        var t = si(n);
        function n() {
          var e;
          Kr(this, n);
          for (var r = arguments.length, i = new Array(r), a = 0; a < r; a++)
            i[a] = arguments[a];
          return (
            ((e = t.call.apply(t, [this].concat(i))).state = { error: !1 }), e
          );
        }
        return (
          ti(n, [
            {
              key: "componentDidCatch",
              value: function (e) {
                this.props.set(e);
              },
            },
            {
              key: "render",
              value: function () {
                return this.state.error ? null : this.props.children;
              },
            },
          ]),
          n
        );
      })(t.Component);
      vx.getDerivedStateFromError = function () {
        return { error: !0 };
      };
      var mx = "__default";
      function gx(e) {
        return Array.isArray(e)
          ? Math.min(Math.max(e[0], window.devicePixelRatio), e[1])
          : e;
      }
      var yx = function (e) {
          var t;
          return null == (t = e.__r3f) ? void 0 : t.root.getState();
        },
        bx = {
          obj: function (e) {
            return e === Object(e) && !bx.arr(e) && "function" !== typeof e;
          },
          fun: function (e) {
            return "function" === typeof e;
          },
          str: function (e) {
            return "string" === typeof e;
          },
          num: function (e) {
            return "number" === typeof e;
          },
          boo: function (e) {
            return "boolean" === typeof e;
          },
          und: function (e) {
            return void 0 === e;
          },
          arr: function (e) {
            return Array.isArray(e);
          },
          equ: function (e, t) {
            var n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {},
              r = n.arrays,
              i = void 0 === r ? "shallow" : r,
              a = n.objects,
              o = void 0 === a ? "reference" : a,
              s = n.strict,
              l = void 0 === s || s;
            if (typeof e !== typeof t || !!e !== !!t) return !1;
            if (bx.str(e) || bx.num(e)) return e === t;
            var u = bx.obj(e);
            if (u && "reference" === o) return e === t;
            var c,
              f = bx.arr(e);
            if (f && "reference" === i) return e === t;
            if ((f || u) && e === t) return !0;
            for (c in e) if (!(c in t)) return !1;
            for (c in l ? t : e) if (e[c] !== t[c]) return !1;
            if (bx.und(c)) {
              if (f && 0 === e.length && 0 === t.length) return !0;
              if (
                u &&
                0 === Object.keys(e).length &&
                0 === Object.keys(t).length
              )
                return !0;
              if (e !== t) return !1;
            }
            return !0;
          },
        };
      function xx(e) {
        var t = { nodes: {}, materials: {} };
        return (
          e &&
            e.traverse(function (e) {
              e.name && (t.nodes[e.name] = e),
                e.material &&
                  !t.materials[e.material.name] &&
                  (t.materials[e.material.name] = e.material);
            }),
          t
        );
      }
      function wx(e, t) {
        var n = e;
        return (
          ((null != t && t.primitive) || !n.__r3f) &&
            (n.__r3f = Cr(
              {
                type: "",
                root: null,
                previousAttach: null,
                memoizedProps: {},
                eventCount: 0,
                handlers: {},
                objects: [],
                parent: null,
              },
              t
            )),
          e
        );
      }
      function _x(e, t) {
        var n = e;
        if (t.includes("-")) {
          var r = t.split("-"),
            i = r.pop();
          return (
            (n = r.reduce(function (e, t) {
              return e[t];
            }, e)),
            { target: n, key: i }
          );
        }
        return { target: n, key: t };
      }
      var Sx = /-\d+$/;
      function Mx(e, t, n) {
        if (bx.str(n)) {
          if (Sx.test(n)) {
            var r = _x(e, n.replace(Sx, "")),
              i = r.target,
              a = r.key;
            Array.isArray(i[a]) || (i[a] = []);
          }
          var o = _x(e, n),
            s = o.target,
            l = o.key;
          (t.__r3f.previousAttach = s[l]), (s[l] = t);
        } else t.__r3f.previousAttach = n(e, t);
      }
      function Ex(e, t, n) {
        var r, i;
        if (bx.str(n)) {
          var a = _x(e, n);
          a.target[a.key] = t.__r3f.previousAttach;
        } else
          null == (r = t.__r3f) ||
            null == r.previousAttach ||
            r.previousAttach(e, t);
        null == (i = t.__r3f) || delete i.previousAttach;
      }
      function kx(e, t) {
        t.children, t.key, t.ref;
        var n,
          r = qr(t, ax),
          i =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
          a = (i.children, i.key, i.ref, qr(i, ox)),
          o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
          s = null != (n = null == e ? void 0 : e.__r3f) ? n : {},
          l = Object.entries(r),
          c = [];
        if (o)
          for (var f = Object.keys(a), d = 0; d < f.length; d++)
            r.hasOwnProperty(f[d]) || l.unshift([f[d], mx + "remove"]);
        l.forEach(function (t) {
          var n,
            r = u(t, 2),
            i = r[0],
            o = r[1];
          if (
            (null == (n = e.__r3f) || !n.primitive || "object" !== i) &&
            !bx.equ(o, a[i])
          ) {
            if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(i))
              return c.push([i, o, !0, []]);
            var s = [];
            i.includes("-") && (s = i.split("-")), c.push([i, o, !1, s]);
          }
        });
        var h = Cr({}, r);
        return (
          s.memoizedProps &&
            s.memoizedProps.args &&
            (h.args = s.memoizedProps.args),
          s.memoizedProps &&
            s.memoizedProps.attach &&
            (h.attach = s.memoizedProps.attach),
          { memoized: h, changes: c }
        );
      }
      function Tx(e, t) {
        var n,
          r,
          i,
          o = null != (n = null == e ? void 0 : e.__r3f) ? n : {},
          c = o.root,
          f =
            null !=
            (r = null == c || null == c.getState ? void 0 : c.getState())
              ? r
              : {},
          d = (i = t) && i.memoized && i.changes ? t : kx(e, t),
          h = d.memoized,
          p = d.changes,
          v = o.eventCount;
        if (
          (e.__r3f && (e.__r3f.memoizedProps = h),
          p.forEach(function (t) {
            var n,
              r,
              i = u(t, 4),
              c = i[0],
              d = i[1],
              p = i[2],
              v = i[3],
              m = e,
              g = m[c];
            if (
              v.length &&
              ((g = v.reduce(function (e, t) {
                return e[t];
              }, e)),
              !g || !g.set)
            ) {
              var y = v.reverse(),
                b = a((n = y)) || Qr(n) || s(n) || l(),
                x = b[0];
              (m = b
                .slice(1)
                .reverse()
                .reduce(function (e, t) {
                  return e[t];
                }, e)),
                (c = x);
            }
            if (d === mx + "remove")
              if (g && g.constructor)
                d = $r(g.constructor, Zr(null != (r = h.args) ? r : []));
              else if (m.constructor) {
                var w,
                  _ = $r(
                    m.constructor,
                    Zr(null != (w = m.__r3f.memoizedProps.args) ? w : [])
                  );
                (d = _[g]), _.dispose && _.dispose();
              } else d = 0;
            if (p)
              d ? (o.handlers[c] = d) : delete o.handlers[c],
                (o.eventCount = Object.keys(o.handlers).length);
            else if (g && g.set && (g.copy || g instanceof ou)) {
              var S;
              if (Array.isArray(d))
                g.fromArray ? g.fromArray(d) : (S = g).set.apply(S, Zr(d));
              else if (
                g.copy &&
                d &&
                d.constructor &&
                g.constructor.name === d.constructor.name
              )
                g.copy(d);
              else if (void 0 !== d) {
                var M = g instanceof il;
                !M && g.setScalar
                  ? g.setScalar(d)
                  : g instanceof ou && d instanceof ou
                  ? (g.mask = d.mask)
                  : g.set(d),
                  $s || f.linear || !M || g.convertSRGBToLinear();
              }
            } else
              (m[c] = d),
                !f.linear && m[c] instanceof ul && (m[c].encoding = Vo);
            Cx(e);
          }),
          o.parent && f.internal && e.raycast && v !== o.eventCount)
        ) {
          var m = f.internal.interaction.indexOf(e);
          m > -1 && f.internal.interaction.splice(m, 1),
            o.eventCount && f.internal.interaction.push(e);
        }
        return p.length && e.parent && Ax(e), e;
      }
      function Cx(e) {
        var t,
          n,
          r =
            null == (t = e.__r3f) || null == (n = t.root) || null == n.getState
              ? void 0
              : n.getState();
        r && 0 === r.internal.frames && r.invalidate();
      }
      function Ax(e) {
        null == e.onUpdate || e.onUpdate(e);
      }
      function Px(e, t) {
        e.manual ||
          (fx(e)
            ? ((e.left = t.width / -2),
              (e.right = t.width / 2),
              (e.top = t.height / 2),
              (e.bottom = t.height / -2))
            : (e.aspect = t.width / t.height),
          e.updateProjectionMatrix(),
          e.updateMatrixWorld());
      }
      function Lx(e) {
        return (e.eventObject || e.object).uuid + "/" + e.index + e.instanceId;
      }
      function Rx(e, t, n, r) {
        var i = n.get(t);
        i &&
          (n.delete(t),
          0 === n.size && (e.delete(r), i.target.releasePointerCapture(r)));
      }
      function Ox(e) {
        var t = new yl();
        function n(e) {
          return e.filter(function (e) {
            return ["Move", "Over", "Enter", "Out", "Leave"].some(function (t) {
              var n;
              return null == (n = e.__r3f)
                ? void 0
                : n.handlers["onPointer" + t];
            });
          });
        }
        function r(t) {
          var n = e.getState().internal;
          Array.from(n.hovered.values()).forEach(function (e) {
            if (
              !t.length ||
              !t.find(function (t) {
                return (
                  t.object === e.object &&
                  t.index === e.index &&
                  t.instanceId === e.instanceId
                );
              })
            ) {
              var r = e.eventObject.__r3f,
                i = null == r ? void 0 : r.handlers;
              if ((n.hovered.delete(Lx(e)), null != r && r.eventCount)) {
                var a = Cr(Cr({}, e), {}, { intersections: t || [] });
                null == i.onPointerOut || i.onPointerOut(a),
                  null == i.onPointerLeave || i.onPointerLeave(a);
              }
            }
          });
        }
        function i(e, t) {
          t.forEach(function (t) {
            var n;
            return null == (n = t.__r3f) || null == n.handlers.onPointerMissed
              ? void 0
              : n.handlers.onPointerMissed(e);
          });
        }
        return {
          handlePointer: function (a) {
            switch (a) {
              case "onPointerLeave":
              case "onPointerCancel":
                return function () {
                  return r([]);
                };
              case "onLostPointerCapture":
                return function (t) {
                  var n = e.getState().internal;
                  "pointerId" in t &&
                    !n.capturedMap.has(t.pointerId) &&
                    (n.capturedMap.delete(t.pointerId), r([]));
                };
            }
            return function (o) {
              var s = e.getState(),
                l = s.onPointerMissed,
                u = s.internal;
              u.lastEvent.current = o;
              var c = "onPointerMove" === a,
                f =
                  "onClick" === a ||
                  "onContextMenu" === a ||
                  "onDoubleClick" === a,
                d = (function (t, n) {
                  var r = e.getState(),
                    i = new Set(),
                    a = [],
                    o = n ? n(r.internal.interaction) : r.internal.interaction;
                  o.forEach(function (e) {
                    var t = yx(e);
                    t && (t.raycaster.camera = void 0);
                  }),
                    r.previousRoot ||
                      null == r.events.compute ||
                      r.events.compute(t, r);
                  var s = o
                    .flatMap(function (e) {
                      var n,
                        r = yx(e);
                      return r &&
                        r.events.enabled &&
                        null !== r.raycaster.camera
                        ? (void 0 === r.raycaster.camera &&
                            (null == r.events.compute ||
                              r.events.compute(
                                t,
                                r,
                                null == (n = r.previousRoot)
                                  ? void 0
                                  : n.getState()
                              ),
                            void 0 === r.raycaster.camera &&
                              (r.raycaster.camera = null)),
                          r.raycaster.camera
                            ? r.raycaster.intersectObject(e, !0)
                            : [])
                        : [];
                    })
                    .sort(function (e, t) {
                      var n = yx(e.object),
                        r = yx(t.object);
                      return n && r
                        ? r.events.priority - n.events.priority ||
                            e.distance - t.distance
                        : 0;
                    })
                    .filter(function (e) {
                      var t = Lx(e);
                      return !i.has(t) && (i.add(t), !0);
                    });
                  r.events.filter && (s = r.events.filter(s, r));
                  var l,
                    u = Xr(s);
                  try {
                    for (u.s(); !(l = u.n()).done; )
                      for (var c = l.value, f = c.object; f; ) {
                        var d;
                        null != (d = f.__r3f) &&
                          d.eventCount &&
                          a.push(Cr(Cr({}, c), {}, { eventObject: f })),
                          (f = f.parent);
                      }
                  } catch (m) {
                    u.e(m);
                  } finally {
                    u.f();
                  }
                  if (
                    "pointerId" in t &&
                    r.internal.capturedMap.has(t.pointerId)
                  ) {
                    var h,
                      p = Xr(r.internal.capturedMap.get(t.pointerId).values());
                    try {
                      for (p.s(); !(h = p.n()).done; ) {
                        var v = h.value;
                        a.push(v.intersection);
                      }
                    } catch (m) {
                      p.e(m);
                    } finally {
                      p.f();
                    }
                  }
                  return a;
                })(o, c ? n : void 0),
                h = f
                  ? (function (t) {
                      var n = e.getState().internal,
                        r = t.offsetX - n.initialClick[0],
                        i = t.offsetY - n.initialClick[1];
                      return Math.round(Math.sqrt(r * r + i * i));
                    })(o)
                  : 0;
              "onPointerDown" === a &&
                ((u.initialClick = [o.offsetX, o.offsetY]),
                (u.initialHits = d.map(function (e) {
                  return e.eventObject;
                }))),
                f && !d.length && h <= 2 && (i(o, u.interaction), l && l(o)),
                c && r(d),
                (function (n, i, a, o) {
                  var s = e.getState(),
                    l = s.raycaster,
                    u = s.pointer,
                    c = s.camera,
                    f = s.internal;
                  n.length &&
                    (function () {
                      var e,
                        s = t.set(u.x, u.y, 0).unproject(c),
                        d = { stopped: !1 },
                        h = Xr(n);
                      try {
                        var p = function () {
                          var t = e.value,
                            h = function (e) {
                              var n, r;
                              return (
                                null !=
                                  (n =
                                    null == (r = f.capturedMap.get(e))
                                      ? void 0
                                      : r.has(t.eventObject)) && n
                              );
                            },
                            p = function (e) {
                              var n = { intersection: t, target: i.target };
                              f.capturedMap.has(e)
                                ? f.capturedMap.get(e).set(t.eventObject, n)
                                : f.capturedMap.set(
                                    e,
                                    new Map([[t.eventObject, n]])
                                  ),
                                i.target.setPointerCapture(e);
                            },
                            v = function (e) {
                              var n = f.capturedMap.get(e);
                              n && Rx(f.capturedMap, t.eventObject, n, e);
                            },
                            m = {};
                          for (var g in i) {
                            var y = i[g];
                            "function" !== typeof y && (m[g] = y);
                          }
                          var b = Cr(
                            Cr(Cr({}, t), m),
                            {},
                            {
                              pointer: u,
                              intersections: n,
                              stopped: d.stopped,
                              delta: a,
                              unprojectedPoint: s,
                              ray: l.ray,
                              camera: c,
                              stopPropagation: function () {
                                var e =
                                  "pointerId" in i &&
                                  f.capturedMap.get(i.pointerId);
                                if (
                                  (!e || e.has(t.eventObject)) &&
                                  ((b.stopped = d.stopped = !0),
                                  f.hovered.size &&
                                    Array.from(f.hovered.values()).find(
                                      function (e) {
                                        return e.eventObject === t.eventObject;
                                      }
                                    ))
                                ) {
                                  var a = n.slice(0, n.indexOf(t));
                                  r([].concat(Zr(a), [t]));
                                }
                              },
                              target: {
                                hasPointerCapture: h,
                                setPointerCapture: p,
                                releasePointerCapture: v,
                              },
                              currentTarget: {
                                hasPointerCapture: h,
                                setPointerCapture: p,
                                releasePointerCapture: v,
                              },
                              nativeEvent: i,
                            }
                          );
                          if ((o(b), !0 === d.stopped)) return "break";
                        };
                        for (h.s(); !(e = h.n()).done && "break" !== p(); );
                      } catch (v) {
                        h.e(v);
                      } finally {
                        h.f();
                      }
                    })();
                })(d, o, h, function (e) {
                  var t = e.eventObject,
                    n = t.__r3f,
                    r = null == n ? void 0 : n.handlers;
                  if (null != n && n.eventCount)
                    if (c) {
                      if (
                        r.onPointerOver ||
                        r.onPointerEnter ||
                        r.onPointerOut ||
                        r.onPointerLeave
                      ) {
                        var s = Lx(e),
                          l = u.hovered.get(s);
                        l
                          ? l.stopped && e.stopPropagation()
                          : (u.hovered.set(s, e),
                            null == r.onPointerOver || r.onPointerOver(e),
                            null == r.onPointerEnter || r.onPointerEnter(e));
                      }
                      null == r.onPointerMove || r.onPointerMove(e);
                    } else {
                      var d = r[a];
                      d
                        ? (f && !u.initialHits.includes(t)) ||
                          (i(
                            o,
                            u.interaction.filter(function (e) {
                              return !u.initialHits.includes(e);
                            })
                          ),
                          d(e))
                        : f &&
                          u.initialHits.includes(t) &&
                          i(
                            o,
                            u.interaction.filter(function (e) {
                              return !u.initialHits.includes(e);
                            })
                          );
                    }
                });
            };
          },
        };
      }
      var zx = {};
      var Dx,
        Ix = function (e) {
          return !(null == e || !e.render);
        },
        Nx = t.createContext(null);
      var Fx,
        Bx,
        Hx = [],
        Ux = [],
        jx = [];
      function Gx(e, t) {
        for (Dx = 0; Dx < e.length; Dx++) e[Dx](t);
      }
      function Wx(e, t, n) {
        var r = t.clock.getDelta();
        for (
          "never" === t.frameloop &&
            "number" === typeof e &&
            ((r = e - t.clock.elapsedTime),
            (t.clock.oldTime = t.clock.elapsedTime),
            (t.clock.elapsedTime = e)),
            Fx = t.internal.subscribers,
            Dx = 0;
          Dx < Fx.length;
          Dx++
        )
          (Bx = Fx[Dx]).ref.current(Bx.store.getState(), r, n);
        return (
          !t.internal.priority && t.gl.render && t.gl.render(t.scene, t.camera),
          (t.internal.frames = Math.max(0, t.internal.frames - 1)),
          "always" === t.frameloop ? 1 : t.internal.frames
        );
      }
      function Vx() {
        var e = t.useContext(Nx);
        if (!e) throw "R3F hooks can only be used within the Canvas component!";
        return e;
      }
      function qx(e, t) {
        return function (n) {
          var r = new n();
          e && e(r);
          for (
            var i = arguments.length, a = new Array(i > 1 ? i - 1 : 0), o = 1;
            o < i;
            o++
          )
            a[o - 1] = arguments[o];
          return Promise.all(
            a.map(function (e) {
              return new Promise(function (n, i) {
                return r.load(
                  e,
                  function (e) {
                    e.scene && Object.assign(e, xx(e.scene)), n(e);
                  },
                  t,
                  function (t) {
                    return i(
                      "Could not load ".concat(e, ": ").concat(t.message)
                    );
                  }
                );
              });
            })
          );
        };
      }
      function Xx(e, t, n, r) {
        var i = Array.isArray(t) ? t : [t],
          a = (function (e, t, n) {
            return ix(e, t, !1, n);
          })(qx(n, r), [e].concat(Zr(i)), { equal: bx.equ });
        return Array.isArray(t) ? a : a[0];
      }
      (Xx.preload = function (e, t, n) {
        var r = Array.isArray(t) ? t : [t];
        return (function (e, t, n) {
          ix(e, t, !0, n);
        })(qx(n), [e].concat(Zr(r)));
      }),
        (Xx.clear = function (e, t) {
          var n = Array.isArray(t) ? t : [t];
          return (function (e) {
            if (void 0 === e || 0 === e.length) rx.splice(0, rx.length);
            else {
              var t = rx.find(function (t) {
                return nx(e, t.keys, t.equal);
              });
              if (t) {
                var n = rx.indexOf(t);
                -1 !== n && rx.splice(n, 1);
              }
            }
          })([e].concat(Zr(n)));
        });
      var Yx = new Map(),
        Jx = (function (e) {
          var t,
            n,
            r,
            i = !1;
          function a(o) {
            if (
              ((n = requestAnimationFrame(a)),
              (i = !0),
              (t = 0),
              Hx.length && Gx(Hx, o),
              e.forEach(function (e) {
                var n;
                !(r = e.store.getState()).internal.active ||
                  !("always" === r.frameloop || r.internal.frames > 0) ||
                  (null != (n = r.gl.xr) && n.isPresenting) ||
                  (t += Wx(o, r));
              }),
              Ux.length && Gx(Ux, o),
              0 === t)
            )
              return jx.length && Gx(jx, o), (i = !1), cancelAnimationFrame(n);
          }
          return {
            loop: a,
            invalidate: function t(n) {
              var r;
              if (!n)
                return e.forEach(function (e) {
                  return t(e.store.getState());
                });
              (null != (r = n.gl.xr) && r.isPresenting) ||
                !n.internal.active ||
                "never" === n.frameloop ||
                ((n.internal.frames = Math.min(60, n.internal.frames + 1)),
                i || ((i = !0), requestAnimationFrame(a)));
            },
            advance: function (t) {
              var n =
                  !(arguments.length > 1 && void 0 !== arguments[1]) ||
                  arguments[1],
                r = arguments.length > 2 ? arguments[2] : void 0,
                i = arguments.length > 3 ? arguments[3] : void 0;
              n && Gx(Hx, t),
                r
                  ? Wx(t, r, i)
                  : e.forEach(function (e) {
                      return Wx(t, e.store.getState());
                    }),
                n && Gx(Ux, t);
            },
          };
        })(Yx),
        $x = Jx.invalidate,
        Qx = Jx.advance,
        Zx = (function (e, t) {
          function n(e, t, n) {
            var r,
              i = t.args,
              a = void 0 === i ? [] : i,
              o = t.attach,
              s = qr(t, sx),
              l = "".concat(e[0].toUpperCase()).concat(e.slice(1));
            if (
              (void 0 === o &&
                (l.endsWith("Geometry")
                  ? (o = "geometry")
                  : l.endsWith("Material") && (o = "material")),
              "primitive" === e)
            ) {
              if (void 0 === s.object)
                throw "Primitives without 'object' are invalid!";
              r = wx(s.object, { type: e, root: n, attach: o, primitive: !0 });
            } else {
              var u = zx[l];
              if (!u)
                throw "".concat(
                  l,
                  " is not part of the THREE namespace! Did you forget to extend? See: https://github.com/pmndrs/react-three-fiber/blob/master/markdown/api.md#using-3rd-party-objects-declaratively"
                );
              if (!Array.isArray(a)) throw "The args prop must be an array!";
              r = wx($r(u, Zr(a)), {
                type: e,
                root: n,
                attach: o,
                memoizedProps: { args: a },
              });
            }
            return "inject" !== l && Tx(r, s), r;
          }
          function r(e, t) {
            var n,
              r,
              i = !1;
            t &&
              (null != (n = t.__r3f) && n.attach
                ? Mx(e, t, t.__r3f.attach)
                : t.isObject3D && e.isObject3D && (e.add(t), (i = !0)),
              i || null == (r = e.__r3f) || r.objects.push(t),
              t.__r3f || wx(t, {}),
              (t.__r3f.parent = e),
              Ax(t),
              Cx(t));
          }
          function i(e, t, n) {
            var r = !1;
            if (t) {
              var i, a;
              if (null != (i = t.__r3f) && i.attach) Mx(e, t, t.__r3f.attach);
              else if (t.isObject3D && e.isObject3D) {
                (t.parent = e), t.dispatchEvent({ type: "added" });
                var o = e.children.filter(function (e) {
                    return e !== t;
                  }),
                  s = o.indexOf(n);
                (e.children = [].concat(
                  Zr(o.slice(0, s)),
                  [t],
                  Zr(o.slice(s))
                )),
                  (r = !0);
              }
              r || null == (a = e.__r3f) || a.objects.push(t),
                t.__r3f || wx(t, {}),
                (t.__r3f.parent = e),
                Ax(t),
                Cx(t);
            }
          }
          function a(e, t) {
            var n =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            e &&
              Zr(e).forEach(function (e) {
                return o(t, e, n);
              });
          }
          function o(e, t, n) {
            if (t) {
              var r, i, o;
              if (
                (t.__r3f && (t.__r3f.parent = null),
                null != (r = e.__r3f) &&
                  r.objects &&
                  (e.__r3f.objects = e.__r3f.objects.filter(function (e) {
                    return e !== t;
                  })),
                null != (i = t.__r3f) && i.attach)
              )
                Ex(e, t, t.__r3f.attach);
              else if (t.isObject3D && e.isObject3D) {
                var s;
                e.remove(t),
                  null != (s = t.__r3f) &&
                    s.root &&
                    (function (e, t) {
                      var n = e.getState(),
                        r = (n.events, n.internal);
                      (r.interaction = r.interaction.filter(function (e) {
                        return e !== t;
                      })),
                        (r.initialHits = r.initialHits.filter(function (e) {
                          return e !== t;
                        })),
                        r.hovered.forEach(function (e, n) {
                          (e.eventObject !== t && e.object !== t) ||
                            r.hovered.delete(n);
                        }),
                        r.capturedMap.forEach(function (e, n) {
                          Rx(r.capturedMap, t, e, n);
                        });
                    })(t.__r3f.root, t);
              }
              var l,
                u = null == (o = t.__r3f) ? void 0 : o.primitive,
                c = void 0 === n ? null !== t.dispose && !u : n;
              if (!u)
                a(null == (l = t.__r3f) ? void 0 : l.objects, t, c),
                  a(t.children, t, c);
              t.__r3f &&
                (delete t.__r3f.root,
                delete t.__r3f.objects,
                delete t.__r3f.handlers,
                delete t.__r3f.memoizedProps,
                u || delete t.__r3f),
                c &&
                  t.dispose &&
                  "Scene" !== t.type &&
                  (0, tx.unstable_scheduleCallback)(
                    tx.unstable_IdlePriority,
                    function () {
                      try {
                        t.dispose();
                      } catch ($y) {}
                    }
                  ),
                Cx(e);
            }
          }
          return {
            reconciler: ex()({
              createInstance: n,
              removeChild: o,
              appendChild: r,
              appendInitialChild: r,
              insertBefore: i,
              supportsMicrotask: !0,
              warnsIfNotActing: !0,
              supportsMutation: !0,
              isPrimaryRenderer: !1,
              noTimeout: -1,
              appendChildToContainer: function (e, t) {
                var n = e.getState().scene;
                (n.__r3f.root = e), r(n, t);
              },
              removeChildFromContainer: function (e, t) {
                return o(e.getState().scene, t);
              },
              insertInContainerBefore: function (e, t, n) {
                return i(e.getState().scene, t, n);
              },
              getRootHostContext: function () {
                return null;
              },
              getChildHostContext: function (e) {
                return e;
              },
              finalizeInitialChildren: function (e) {
                var t;
                return !!(null != (t = null == e ? void 0 : e.__r3f) ? t : {})
                  .handlers;
              },
              prepareUpdate: function (e, t, n, r) {
                if (e.__r3f.primitive && r.object && r.object !== e)
                  return [!0];
                var i = r.args,
                  a = void 0 === i ? [] : i,
                  o = (r.children, qr(r, lx)),
                  s = n.args,
                  l = void 0 === s ? [] : s,
                  u = (n.children, qr(n, ux));
                if (!Array.isArray(a)) throw "The args prop must be an array!";
                if (
                  a.some(function (e, t) {
                    return e !== l[t];
                  })
                )
                  return [!0];
                var c = kx(e, o, u, !0);
                return c.changes.length ? [!1, c] : null;
              },
              commitUpdate: function (e, t, i, a, s, l) {
                var c = u(t, 2),
                  f = c[0],
                  d = c[1];
                f
                  ? (function (e, t, i, a) {
                      var s,
                        l,
                        u = null == (s = e.__r3f) ? void 0 : s.parent;
                      if (u) {
                        var c = n(
                          t,
                          i,
                          null == (l = e.__r3f) ? void 0 : l.root
                        );
                        "primitive" !== t &&
                          e.children &&
                          (e.children.forEach(function (e) {
                            return r(c, e);
                          }),
                          (e.children = [])),
                          e.__r3f.objects.forEach(function (e) {
                            return r(c, e);
                          }),
                          (e.__r3f.objects = []),
                          o(u, e),
                          r(u, c),
                          c.raycast &&
                            c.__r3f.eventCount &&
                            c.__r3f.root
                              .getState()
                              .internal.interaction.push(c),
                          [a, a.alternate].forEach(function (e) {
                            null !== e &&
                              ((e.stateNode = c),
                              e.ref &&
                                ("function" === typeof e.ref
                                  ? e.ref(c)
                                  : (e.ref.current = c)));
                          });
                      }
                    })(e, i, s, l)
                  : Tx(e, d);
              },
              commitMount: function (e, t, n, r) {
                var i,
                  a = null != (i = null == e ? void 0 : e.__r3f) ? i : {};
                e.raycast &&
                  a.handlers &&
                  a.eventCount &&
                  e.__r3f.root.getState().internal.interaction.push(e);
              },
              getPublicInstance: function (e) {
                return e;
              },
              shouldDeprioritizeSubtree: function () {
                return !1;
              },
              prepareForCommit: function () {
                return null;
              },
              preparePortalMount: function (e) {
                return wx(e.getState().scene);
              },
              resetAfterCommit: function () {},
              shouldSetTextContent: function () {
                return !1;
              },
              clearContainer: function () {
                return !1;
              },
              detachDeletedInstance: function () {},
              createTextInstance: function () {},
              hideInstance: function (e) {
                var t,
                  n = null != (t = null == e ? void 0 : e.__r3f) ? t : {},
                  r = n.attach,
                  i = n.parent;
                r && i && Ex(i, e, r), e.isObject3D && (e.visible = !1), Cx(e);
              },
              unhideInstance: function (e, t) {
                var n,
                  r = null != (n = null == e ? void 0 : e.__r3f) ? n : {},
                  i = r.attach,
                  a = r.parent;
                i && a && Mx(a, e, i),
                  ((e.isObject3D && null == t.visible) || t.visible) &&
                    (e.visible = !0),
                  Cx(e);
              },
              hideTextInstance: function () {
                throw new Error("Text is not allowed in the R3F tree.");
              },
              getCurrentEventPriority: function () {
                return t ? t() : $b.DefaultEventPriority;
              },
              now:
                "undefined" !== typeof performance && bx.fun(performance.now)
                  ? performance.now
                  : bx.fun(Date.now)
                  ? Date.now
                  : void 0,
              scheduleTimeout: bx.fun(setTimeout) ? setTimeout : void 0,
              cancelTimeout: bx.fun(clearTimeout) ? clearTimeout : void 0,
              setTimeout: bx.fun(setTimeout) ? setTimeout : void 0,
              clearTimeout: bx.fun(clearTimeout) ? clearTimeout : void 0,
            }),
            applyProps: Tx,
          };
        })(0, function () {
          var e, t;
          switch (
            null == (e = window) || null == (t = e.event) ? void 0 : t.type
          ) {
            case "click":
            case "contextmenu":
            case "dblclick":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
              return $b.DiscreteEventPriority;
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerenter":
            case "pointerleave":
            case "wheel":
              return $b.ContinuousEventPriority;
            default:
              return $b.DefaultEventPriority;
          }
        }),
        Kx = Zx.reconciler,
        ew = Zx.applyProps,
        tw = { objects: "shallow", strict: !1 },
        nw = function (e, t) {
          var n = "function" === typeof e ? e(t) : e;
          return Ix(n)
            ? n
            : new bh(
                Cr(
                  {
                    powerPreference: "high-performance",
                    canvas: t,
                    antialias: !0,
                    alpha: !0,
                  },
                  e
                )
              );
        };
      function rw(e) {
        var n = Yx.get(e),
          r = null == n ? void 0 : n.fiber,
          i = null == n ? void 0 : n.store;
        n && console.warn("R3F.createRoot should only be called once!");
        var a,
          o =
            i ||
            (function (e, n) {
              var r = (function (e) {
                  var n = "function" === typeof e ? Qb(e) : e,
                    r = function () {
                      var e,
                        r =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : n.getState,
                        i =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : Object.is,
                        a = u(
                          (0, t.useReducer)(function (e) {
                            return e + 1;
                          }, 0),
                          2
                        )[1],
                        o = n.getState(),
                        s = (0, t.useRef)(o),
                        l = (0, t.useRef)(r),
                        c = (0, t.useRef)(i),
                        f = (0, t.useRef)(!1),
                        d = (0, t.useRef)();
                      void 0 === d.current && (d.current = r(o));
                      var h = !1;
                      (s.current !== o ||
                        l.current !== r ||
                        c.current !== i ||
                        f.current) &&
                        ((e = r(o)), (h = !i(d.current, e))),
                        Zb(function () {
                          h && (d.current = e),
                            (s.current = o),
                            (l.current = r),
                            (c.current = i),
                            (f.current = !1);
                        });
                      var p = (0, t.useRef)(o);
                      Zb(function () {
                        var e = function () {
                            try {
                              var e = n.getState(),
                                t = l.current(e);
                              c.current(d.current, t) ||
                                ((s.current = e), (d.current = t), a());
                            } catch (r) {
                              (f.current = !0), a();
                            }
                          },
                          t = n.subscribe(e);
                        return n.getState() !== p.current && e(), t;
                      }, []);
                      var v = h ? e : d.current;
                      return (0, t.useDebugValue)(v), v;
                    };
                  return (
                    Object.assign(r, n),
                    (r[Symbol.iterator] = function () {
                      console.warn(
                        "[useStore, api] = create() is deprecated and will be removed in v4"
                      );
                      var e = [r, n];
                      return {
                        next: function () {
                          var t = e.length <= 0;
                          return { value: e.shift(), done: t };
                        },
                      };
                    }),
                    r
                  );
                })(function (r, i) {
                  var a = new yl(),
                    o = new yl(),
                    s = new yl();
                  function l() {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : i().camera,
                      t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : o,
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : i().size,
                      r = n.width,
                      l = n.height,
                      u = r / l;
                    t instanceof yl ? s.copy(t) : s.set.apply(s, Zr(t));
                    var c = e.getWorldPosition(a).distanceTo(s);
                    if (fx(e))
                      return {
                        width: r / e.zoom,
                        height: l / e.zoom,
                        factor: 1,
                        distance: c,
                        aspect: u,
                      };
                    var f = (e.fov * Math.PI) / 180,
                      d = 2 * Math.tan(f / 2) * c,
                      h = d * (r / l);
                    return {
                      width: h,
                      height: d,
                      factor: r / h,
                      distance: c,
                      aspect: u,
                    };
                  }
                  var u = void 0,
                    c = function (e) {
                      return r(function (t) {
                        return {
                          performance: Cr(
                            Cr({}, t.performance),
                            {},
                            { current: e }
                          ),
                        };
                      });
                    },
                    f = new Us();
                  return {
                    set: r,
                    get: i,
                    gl: null,
                    camera: null,
                    raycaster: null,
                    events: { priority: 1, enabled: !0, connected: !1 },
                    xr: null,
                    invalidate: function () {
                      return e(i());
                    },
                    advance: function (e, t) {
                      return n(e, t, i());
                    },
                    legacy: !1,
                    linear: !1,
                    flat: !1,
                    scene: wx(new Sh()),
                    controls: null,
                    clock: new _g(),
                    pointer: f,
                    mouse: f,
                    frameloop: "always",
                    onPointerMissed: void 0,
                    performance: {
                      current: 1,
                      min: 0.5,
                      max: 1,
                      debounce: 200,
                      regress: function () {
                        var e = i();
                        u && clearTimeout(u),
                          e.performance.current !== e.performance.min &&
                            c(e.performance.min),
                          (u = setTimeout(function () {
                            return c(i().performance.max);
                          }, e.performance.debounce));
                      },
                    },
                    size: { width: 0, height: 0 },
                    viewport: {
                      initialDpr: 0,
                      dpr: 0,
                      width: 0,
                      height: 0,
                      aspect: 0,
                      distance: 0,
                      factor: 0,
                      getCurrentViewport: l,
                    },
                    setEvents: function (e) {
                      return r(function (t) {
                        return Cr(
                          Cr({}, t),
                          {},
                          { events: Cr(Cr({}, t.events), e) }
                        );
                      });
                    },
                    setSize: function (e, t) {
                      var n = i().camera,
                        a = { width: e, height: t };
                      r(function (e) {
                        return {
                          size: a,
                          viewport: Cr(Cr({}, e.viewport), l(n, o, a)),
                        };
                      });
                    },
                    setDpr: function (e) {
                      return r(function (t) {
                        var n = gx(e);
                        return {
                          viewport: Cr(
                            Cr({}, t.viewport),
                            {},
                            { dpr: n, initialDpr: t.viewport.initialDpr || n }
                          ),
                        };
                      });
                    },
                    setFrameloop: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : "always",
                        t = i().clock;
                      t.stop(),
                        (t.elapsedTime = 0),
                        "never" !== e && (t.start(), (t.elapsedTime = 0)),
                        r(function () {
                          return { frameloop: e };
                        });
                    },
                    previousRoot: void 0,
                    internal: {
                      active: !1,
                      priority: 0,
                      frames: 0,
                      lastEvent: t.createRef(),
                      interaction: [],
                      hovered: new Map(),
                      subscribers: [],
                      initialClick: [0, 0],
                      initialHits: [],
                      capturedMap: new Map(),
                      subscribe: function (e, t, n) {
                        return (
                          r(function (r) {
                            var i = r.internal;
                            return {
                              internal: Cr(
                                Cr({}, i),
                                {},
                                {
                                  priority: i.priority + (t > 0 ? 1 : 0),
                                  subscribers: []
                                    .concat(Zr(i.subscribers), [
                                      { ref: e, priority: t, store: n },
                                    ])
                                    .sort(function (e, t) {
                                      return e.priority - t.priority;
                                    }),
                                }
                              ),
                            };
                          }),
                          function () {
                            r(function (n) {
                              var r = n.internal;
                              return {
                                internal: Cr(
                                  Cr({}, r),
                                  {},
                                  {
                                    priority: r.priority - (t > 0 ? 1 : 0),
                                    subscribers: r.subscribers.filter(function (
                                      t
                                    ) {
                                      return t.ref !== e;
                                    }),
                                  }
                                ),
                              };
                            });
                          }
                        );
                      },
                    },
                  };
                }),
                i = r.getState(),
                a = i.size,
                o = i.viewport.dpr;
              return (
                r.subscribe(function () {
                  var e = r.getState(),
                    t = e.camera,
                    n = e.size,
                    i = e.viewport,
                    s = e.gl;
                  (n === a && i.dpr === o) ||
                    (Px(t, n),
                    s.setPixelRatio(i.dpr),
                    s.setSize(n.width, n.height),
                    (a = n),
                    (o = i.dpr));
                }),
                r.subscribe(function (t) {
                  return e(t);
                }),
                r
              );
            })($x, Qx),
          s = r || Kx.createContainer(o, $b.ConcurrentRoot, !1, null);
        n || Yx.set(e, { fiber: s, store: o });
        var l = !1;
        return {
          configure: function () {
            var t,
              n,
              r,
              i,
              s =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              u = s.gl,
              c = s.size,
              f = s.events,
              d = s.onCreated,
              h = s.shadows,
              p = void 0 !== h && h,
              v = s.linear,
              m = void 0 !== v && v,
              g = s.flat,
              y = void 0 !== g && g,
              b = s.legacy,
              x = void 0 !== b && b,
              w = s.orthographic,
              _ = void 0 !== w && w,
              S = s.frameloop,
              M = void 0 === S ? "always" : S,
              E = s.dpr,
              k = void 0 === E ? [1, 2] : E,
              T = s.performance,
              C = s.raycaster,
              A = s.camera,
              P = s.onPointerMissed,
              L = o.getState(),
              R = L.gl;
            L.gl || L.set({ gl: (R = nw(u, e)) });
            var O = L.raycaster;
            O || L.set({ raycaster: (O = new ty()) });
            var z = C || {},
              D = z.params,
              I = qr(z, cx);
            if (
              (bx.equ(I, O, tw) || ew(O, Cr({}, I)),
              bx.equ(D, O.params, tw) ||
                ew(O, { params: Cr(Cr({}, O.params), D) }),
              !L.camera)
            ) {
              var N = A instanceof kc,
                F = N
                  ? A
                  : _
                  ? new Qc(0, 0, 0, 0, 0.1, 1e3)
                  : new Tc(75, 0, 0.1, 1e3);
              N ||
                ((F.position.z = 5),
                A && ew(F, A),
                (null != A && A.rotation) || F.lookAt(0, 0, 0)),
                L.set({ camera: F });
            }
            if (!L.xr) {
              var B = function (e, t) {
                  var n = o.getState();
                  "never" !== n.frameloop && Qx(e, !0, n, t);
                },
                H = function () {
                  var e = o.getState().gl;
                  (e.xr.enabled = e.xr.isPresenting),
                    e.xr.setAnimationLoop(e.xr.isPresenting ? B : null);
                },
                U = {
                  connect: function () {
                    var e = o.getState().gl;
                    e.xr.addEventListener("sessionstart", H),
                      e.xr.addEventListener("sessionend", H);
                  },
                  disconnect: function () {
                    var e = o.getState().gl;
                    e.xr.removeEventListener("sessionstart", H),
                      e.xr.removeEventListener("sessionend", H);
                  },
                };
              R.xr && U.connect(), L.set({ xr: U });
            }
            if (R.shadowMap) {
              var j = bx.boo(p);
              if (
                (j && R.shadowMap.enabled !== p) ||
                !bx.equ(p, R.shadowMap, tw)
              ) {
                var G = R.shadowMap.enabled;
                (R.shadowMap.enabled = !!p),
                  j ? (R.shadowMap.type = Si) : Object.assign(R.shadowMap, p),
                  G !== R.shadowMap.enabled && (R.shadowMap.needsUpdate = !0);
              }
            }
            $s && ($s.legacyMode = x);
            var W = m ? Wo : Vo,
              V = y ? ua : ha;
            return (
              R.outputEncoding !== W && (R.outputEncoding = W),
              R.toneMapping !== V && (R.toneMapping = V),
              L.legacy !== x &&
                L.set(function () {
                  return { legacy: x };
                }),
              L.linear !== m &&
                L.set(function () {
                  return { linear: m };
                }),
              L.flat !== y &&
                L.set(function () {
                  return { flat: y };
                }),
              !u || bx.fun(u) || Ix(u) || bx.equ(u, R, tw) || ew(R, u),
              f && !L.events.handlers && L.set({ events: f(o) }),
              k && L.viewport.dpr !== gx(k) && L.setDpr(k),
              (c = c || {
                width:
                  null !=
                  (t = null == (n = e.parentElement) ? void 0 : n.clientWidth)
                    ? t
                    : 0,
                height:
                  null !=
                  (r = null == (i = e.parentElement) ? void 0 : i.clientHeight)
                    ? r
                    : 0,
              }),
              bx.equ(c, L.size, tw) || L.setSize(c.width, c.height),
              L.frameloop !== M && L.setFrameloop(M),
              L.onPointerMissed || L.set({ onPointerMissed: P }),
              T &&
                !bx.equ(T, L.performance, tw) &&
                L.set(function (e) {
                  return { performance: Cr(Cr({}, e.performance), T) };
                }),
              (a = d),
              (l = !0),
              this
            );
          },
          render: function (n) {
            return (
              l || this.configure(),
              Kx.updateContainer(
                t.createElement(iw, {
                  store: o,
                  children: n,
                  onCreated: a,
                  rootElement: e,
                }),
                s,
                null,
                function () {}
              ),
              o
            );
          },
          unmount: function () {
            aw(e);
          },
        };
      }
      function iw(e) {
        var n = e.store,
          r = e.children,
          i = e.onCreated,
          a = e.rootElement;
        return (
          dx(function () {
            var e = n.getState();
            e.set(function (e) {
              return { internal: Cr(Cr({}, e.internal), {}, { active: !0 }) };
            }),
              i && i(e),
              n.getState().events.connected ||
                null == e.events.connect ||
                e.events.connect(a);
          }, []),
          t.createElement(Nx.Provider, { value: n }, r)
        );
      }
      function aw(e, t) {
        var n = Yx.get(e),
          r = null == n ? void 0 : n.fiber;
        if (r) {
          var i = null == n ? void 0 : n.store.getState();
          i && (i.internal.active = !1),
            Kx.updateContainer(null, r, null, function () {
              i &&
                setTimeout(function () {
                  try {
                    var n, r, a, o;
                    null == i.events.disconnect || i.events.disconnect(),
                      null == (n = i.gl) ||
                        null == (r = n.renderLists) ||
                        null == r.dispose ||
                        r.dispose(),
                      null == (a = i.gl) ||
                        null == a.forceContextLoss ||
                        a.forceContextLoss(),
                      null != (o = i.gl) && o.xr && i.xr.disconnect(),
                      (function (e) {
                        for (var t in (e.dispose &&
                          "Scene" !== e.type &&
                          e.dispose(),
                        e))
                          null == t.dispose || t.dispose(), delete e[t];
                      })(i),
                      Yx.delete(e),
                      t && t(e);
                  } catch ($y) {}
                }, 500);
            });
        }
      }
      Kx.injectIntoDevTools({
        bundleType: 0,
        rendererPackageName: "@react-three/fiber",
        version: "18.0.0",
      });
      t.unstable_act;
      function ow() {
        return (
          (ow =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }),
          ow.apply(this, arguments)
        );
      }
      var sw = function (e) {
          return function (t) {
            e.forEach(function (e) {
              "function" === typeof e ? e(t) : null != e && (e.current = t);
            });
          };
        },
        lw = n(7494),
        uw = n.n(lw);
      function cw(e) {
        var n = void 0 === e ? { debounce: 0, scroll: !1, offsetSize: !1 } : e,
          r = n.debounce,
          i = n.scroll,
          a = n.polyfill,
          o = n.offsetSize,
          s =
            a ||
            ("undefined" === typeof window
              ? ti(function e() {
                  Kr(this, e);
                })
              : window.ResizeObserver);
        if (!s)
          throw new Error(
            "This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills"
          );
        var l = u(
            (0, t.useState)({
              left: 0,
              top: 0,
              width: 0,
              height: 0,
              bottom: 0,
              right: 0,
              x: 0,
              y: 0,
            }),
            2
          ),
          c = l[0],
          f = l[1],
          d = (0, t.useRef)({
            element: null,
            scrollContainers: null,
            resizeObserver: null,
            lastBounds: c,
          }),
          h = r ? ("number" === typeof r ? r : r.scroll) : null,
          p = r ? ("number" === typeof r ? r : r.resize) : null,
          v = (0, t.useRef)(!1);
        (0, t.useEffect)(function () {
          return (
            (v.current = !0),
            function () {
              v.current = !1;
            }
          );
        });
        var m = u(
            (0, t.useMemo)(
              function () {
                var e = function () {
                  if (d.current.element) {
                    var e = d.current.element.getBoundingClientRect(),
                      t = {
                        left: e.left,
                        top: e.top,
                        width: e.width,
                        height: e.height,
                        bottom: e.bottom,
                        right: e.right,
                        x: e.x,
                        y: e.y,
                      };
                    d.current.element instanceof HTMLElement &&
                      o &&
                      ((t.height = d.current.element.offsetHeight),
                      (t.width = d.current.element.offsetWidth)),
                      Object.freeze(t),
                      v.current &&
                        !hw(d.current.lastBounds, t) &&
                        f((d.current.lastBounds = t));
                  }
                };
                return [e, p ? uw()(e, p) : e, h ? uw()(e, h) : e];
              },
              [f, o, h, p]
            ),
            3
          ),
          g = m[0],
          y = m[1],
          b = m[2];
        function x() {
          d.current.scrollContainers &&
            (d.current.scrollContainers.forEach(function (e) {
              return e.removeEventListener("scroll", b, !0);
            }),
            (d.current.scrollContainers = null)),
            d.current.resizeObserver &&
              (d.current.resizeObserver.disconnect(),
              (d.current.resizeObserver = null));
        }
        function w() {
          d.current.element &&
            ((d.current.resizeObserver = new s(b)),
            d.current.resizeObserver.observe(d.current.element),
            i &&
              d.current.scrollContainers &&
              d.current.scrollContainers.forEach(function (e) {
                return e.addEventListener("scroll", b, {
                  capture: !0,
                  passive: !0,
                });
              }));
        }
        var _, S, M;
        return (
          (_ = b),
          (S = Boolean(i)),
          (0, t.useEffect)(
            function () {
              if (S) {
                var e = _;
                return (
                  window.addEventListener("scroll", e, {
                    capture: !0,
                    passive: !0,
                  }),
                  function () {
                    window.removeEventListener("scroll", e, !0);
                  }
                );
              }
            },
            [_, S]
          ),
          (M = y),
          (0, t.useEffect)(
            function () {
              var e = M;
              return (
                window.addEventListener("resize", e),
                function () {
                  window.removeEventListener("resize", e);
                }
              );
            },
            [M]
          ),
          (0, t.useEffect)(
            function () {
              x(), w();
            },
            [i, b, y]
          ),
          (0, t.useEffect)(function () {
            return x;
          }, []),
          [
            function (e) {
              e &&
                e !== d.current.element &&
                (x(),
                (d.current.element = e),
                (d.current.scrollContainers = fw(e)),
                w());
            },
            c,
            g,
          ]
        );
      }
      function fw(e) {
        var t = [];
        if (!e || e === document.body) return t;
        var n = window.getComputedStyle(e);
        return (
          [n.overflow, n.overflowX, n.overflowY].some(function (e) {
            return "auto" === e || "scroll" === e;
          }) && t.push(e),
          [].concat(t, Zr(fw(e.parentElement)))
        );
      }
      var dw = ["x", "y", "top", "bottom", "left", "right", "width", "height"],
        hw = function (e, t) {
          return dw.every(function (n) {
            return e[n] === t[n];
          });
        },
        pw = [
          "children",
          "fallback",
          "resize",
          "style",
          "gl",
          "events",
          "shadows",
          "linear",
          "flat",
          "legacy",
          "orthographic",
          "frameloop",
          "dpr",
          "performance",
          "raycaster",
          "camera",
          "onPointerMissed",
          "onCreated",
        ],
        vw = {
          onClick: ["click", !1],
          onContextMenu: ["contextmenu", !1],
          onDoubleClick: ["dblclick", !1],
          onWheel: ["wheel", !0],
          onPointerDown: ["pointerdown", !0],
          onPointerUp: ["pointerup", !0],
          onPointerLeave: ["pointerleave", !0],
          onPointerMove: ["pointermove", !0],
          onPointerCancel: ["pointercancel", !0],
          onLostPointerCapture: ["lostpointercapture", !0],
        };
      function mw(e) {
        var t = Ox(e).handlePointer;
        return {
          priority: 1,
          enabled: !0,
          compute: function (e, t, n) {
            t.pointer.set(
              (e.offsetX / t.size.width) * 2 - 1,
              (-e.offsetY / t.size.height) * 2 + 1
            ),
              t.raycaster.setFromCamera(t.pointer, t.camera);
          },
          connected: void 0,
          handlers: Object.keys(vw).reduce(function (e, n) {
            return Cr(Cr({}, e), {}, kr({}, n, t(n)));
          }, {}),
          connect: function (t) {
            var n,
              r = e.getState(),
              i = r.set,
              a = r.events;
            null == a.disconnect || a.disconnect(),
              i(function (e) {
                return { events: Cr(Cr({}, e.events), {}, { connected: t }) };
              }),
              Object.entries(
                null != (n = null == a ? void 0 : a.handlers) ? n : []
              ).forEach(function (e) {
                var n = u(e, 2),
                  r = n[0],
                  i = n[1],
                  a = u(vw[r], 2),
                  o = a[0],
                  s = a[1];
                t.addEventListener(o, i, { passive: s });
              });
          },
          disconnect: function () {
            var t,
              n = e.getState(),
              r = n.set,
              i = n.events;
            i.connected &&
              (Object.entries(null != (t = i.handlers) ? t : []).forEach(
                function (e) {
                  var t = u(e, 2),
                    n = t[0],
                    r = t[1];
                  if (i && i.connected instanceof HTMLElement) {
                    var a = u(vw[n], 1)[0];
                    i.connected.removeEventListener(a, r);
                  }
                }
              ),
              r(function (e) {
                return {
                  events: Cr(Cr({}, e.events), {}, { connected: void 0 }),
                };
              }));
          },
        };
      }
      var gw = t.forwardRef(function (n, r) {
        var i = n.children,
          a = n.fallback,
          o = n.resize,
          s = n.style,
          l = n.gl,
          c = n.events,
          f = void 0 === c ? mw : c,
          d = n.shadows,
          h = n.linear,
          p = n.flat,
          v = n.legacy,
          m = n.orthographic,
          g = n.frameloop,
          y = n.dpr,
          b = n.performance,
          x = n.raycaster,
          w = n.camera,
          _ = n.onPointerMissed,
          S = n.onCreated,
          M = qr(n, pw);
        t.useMemo(function () {
          return (t = e), void (zx = Cr(Cr({}, zx), t));
          var t;
        }, []);
        var E = u(
            cw(Cr({ scroll: !0, debounce: { scroll: 50, resize: 0 } }, o)),
            2
          ),
          k = E[0],
          T = E[1],
          C = T.width,
          A = T.height,
          P = t.useRef(null),
          L = t.useRef(null),
          R = u(t.useState(null), 2),
          O = R[0],
          z = R[1],
          D = hx(_),
          I = u(t.useState(!1), 2),
          N = I[0],
          F = I[1],
          B = u(t.useState(!1), 2),
          H = B[0],
          U = B[1];
        if (N) throw N;
        if (H) throw H;
        var j = t.useRef(null);
        return (
          C > 0 &&
            A > 0 &&
            O &&
            (j.current || (j.current = rw(O)),
            j.current.configure({
              gl: l,
              events: f,
              shadows: d,
              linear: h,
              flat: p,
              legacy: v,
              orthographic: m,
              frameloop: g,
              dpr: y,
              performance: b,
              raycaster: x,
              camera: w,
              size: { width: C, height: A },
              onPointerMissed: function () {
                return null == D.current
                  ? void 0
                  : D.current.apply(D, arguments);
              },
              onCreated: function (e) {
                null == e.events.connect || e.events.connect(L.current),
                  null == S || S(e);
              },
            }),
            j.current.render(
              t.createElement(
                vx,
                { set: U },
                t.createElement(
                  t.Suspense,
                  { fallback: t.createElement(px, { set: F }) },
                  i
                )
              )
            )),
          dx(function () {
            z(P.current);
          }, []),
          t.useEffect(
            function () {
              if (O)
                return function () {
                  return aw(O);
                };
            },
            [O]
          ),
          t.createElement(
            "div",
            ow(
              {
                ref: sw([L, k]),
                style: Cr(
                  {
                    position: "relative",
                    width: "100%",
                    height: "100%",
                    overflow: "hidden",
                  },
                  s
                ),
              },
              M
            ),
            t.createElement(
              "canvas",
              { ref: sw([P, r]), style: { display: "block" } },
              a
            )
          )
        );
      });
      function yw() {
        var e = (0, t.useRef)(),
          n = (0, t.useRef)(),
          r = new Us(),
          i = 0.01,
          a = 0.01;
        return (
          window.addEventListener("pointermove", function (e) {
            (r.x = (e.clientX / window.innerWidth) * 2 - 1),
              (r.y = (-e.clientY / window.innerHeight) * 2 + 1),
              (i = -(r.y - 0.4) / 30),
              (a = r.x / 30);
          }),
          (function (e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              n = Vx(),
              r = n.getState().internal.subscribe,
              i = hx(e);
            dx(
              function () {
                return r(i, t, n);
              },
              [t, r, n]
            );
          })(function (t) {
            var r = t.clock.getElapsedTime();
            (e.current.rotation.x += i),
              (e.current.rotation.y += a),
              r > 0.7 &&
                (n.current.color.r < 192 / 255 && (n.current.color.r += 0.0096),
                n.current.color.g < 1 && (n.current.color.g += 0.01275),
                n.current.color.b < 55 / 255 && (n.current.color.b += 0.00275),
                e.current.scale.x < 1 &&
                  ((e.current.scale.x += 0.04),
                  (e.current.scale.y += 0.04),
                  (e.current.scale.z += 0.04)));
          }),
          (0, c.jsxs)("mesh", {
            ref: e,
            position: [0, 1.5, 0],
            scale: 0,
            children: [
              (0, c.jsx)("boxBufferGeometry", {}),
              (0, c.jsx)("meshPhongMaterial", { color: "black", ref: n }),
            ],
          })
        );
      }
      var bw = function () {
          return (0, c.jsx)("div", {
            className: "ThreejsBG",
            children: (0, c.jsxs)(gw, {
              children: [
                (0, c.jsx)("pointLight", {
                  position: [10, 10, 10],
                  intensity: 0.1,
                }),
                (0, c.jsx)("ambientLight", {
                  intensity: 0.3,
                  color: [192 / 255, 1, 55 / 255],
                }),
                (0, c.jsx)(yw, {}),
              ],
            }),
          });
        },
        xw = function (e) {
          var n = e.homeActive,
            r = e.portfolioActive,
            i = e.aboutActive,
            a = e.contactActive,
            o = u((0, t.useState)(0), 2),
            s = o[0],
            l = o[1],
            f = u((0, t.useState)(!1), 2),
            d = f[0],
            h = f[1],
            p = function (e) {
              l(window.pageYOffset), h(s > 200);
            };
          return (
            (0, t.useEffect)(function () {
              return (
                window.addEventListener("scroll", p),
                function () {
                  window.removeEventListener("scroll", p);
                }
              );
            }),
            (0, c.jsxs)("div", {
              className: "Nav",
              children: [
                (0, c.jsx)(jr.rU, {
                  to: "1",
                  spy: !0,
                  smooth: !0,
                  children: (0, c.jsx)("a", {
                    className: d ? "visible" : "unvisible",
                    style: n
                      ? {
                          textDecoration: "underline",
                          color: "rgb(192, 255, 55)",
                        }
                      : {},
                    children: "HOME",
                  }),
                }),
                (0, c.jsx)(jr.rU, {
                  to: "2",
                  spy: !0,
                  smooth: !0,
                  children: (0, c.jsx)("a", {
                    className: d ? "visible" : "unvisible",
                    style:
                      !n && i
                        ? {
                            textDecoration: "underline",
                            color: "rgb(192, 255, 55)",
                          }
                        : {},
                    children: "ABOUT",
                  }),
                }),
                (0, c.jsx)(jr.rU, {
                  to: "3",
                  spy: !0,
                  smooth: !0,
                  children: (0, c.jsx)("a", {
                    className: d ? "visible" : "unvisible",
                    style:
                      n || i || a || !r
                        ? {}
                        : {
                            textDecoration: "underline",
                            color: "rgb(192, 255, 55)",
                          },
                    children: "PROJECTS",
                  }),
                }),
                (0, c.jsx)(jr.rU, {
                  to: "4",
                  spy: !0,
                  smooth: !0,
                  children: (0, c.jsx)("a", {
                    className: d ? "visible" : "unvisible",
                    style:
                      n || i || r || !a
                        ? {}
                        : {
                            textDecoration: "underline",
                            color: "rgb(192, 255, 55)",
                          },
                    children: "CONTACT",
                  }),
                }),
              ],
            })
          );
        };
      var ww = function () {
        (0, t.useEffect)(function () {
          window.scrollTo(0, 0);
        }, []);
        var e = u((0, t.useState)(!1), 2),
          n = e[0],
          r = e[1],
          i = u((0, t.useState)(!1), 2),
          a = i[0],
          o = i[1],
          s = u((0, t.useState)(!1), 2),
          l = s[0],
          h = s[1],
          p = u((0, t.useState)(!1), 2),
          v = p[0],
          m = p[1];
        return (0, c.jsxs)("div", {
          className: "App",
          children: [
            (0, c.jsx)(bw, {}),
            (0, c.jsx)(Vr, {}),
            (0, c.jsx)(xw, {
              portfolioActive: n,
              aboutActive: a,
              homeActive: l,
              contactActive: v,
            }),
            (0, c.jsx)(Wr, {}),
            (0, c.jsx)(f, { setHomeActive: h }),
            (0, c.jsx)(Er, { setAboutActive: o }),
            (0, c.jsx)(Pr, { setPortfolioActive: r }),
            (0, c.jsx)(Ur, { setContactActive: m }),
            (0, c.jsx)(d, {}),
          ],
        });
      };
      i.createRoot(document.getElementById("root")).render(
        (0, c.jsx)(t.StrictMode, { children: (0, c.jsx)(ww, {}) })
      );
    })();
})();
//# sourceMappingURL=main.23d98a76.js.map
